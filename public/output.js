!function (e, t) {
  "use strict";

  if (typeof module == "object" && typeof module.exports == "object") {
    module.exports = e.document ? t(e, true) : function (e) {
      if (!e.document) {
        throw new Error("jQuery requires a window with a document");
      }
      return t(e);
    };
  } else {
    t(e);
  }
}(typeof window != "undefined" ? window : this, function (e, t) {
  "use strict";

  var n = [];
  var i = Object.getPrototypeOf;
  var r = n.slice;
  var o = n.flat ? function (e) {
    return n.flat.call(e);
  } : function (e) {
    return n.concat.apply([], e);
  };
  var a = n.push;
  var s = n.indexOf;
  var l = {};
  var c = l.toString;
  var u = l.hasOwnProperty;
  var d = u.toString;
  var h = d.call(Object);
  var f = {};
  var p = function (e) {
    return typeof e == "function" && typeof e.nodeType != "number" && typeof e.item != "function";
  };
  var g = function (e) {
    return e != null && e === e.window;
  };
  var m = e.document;
  var v = {
    type: true,
    src: true,
    nonce: true,
    noModule: true
  };
  function y(e, t, n) {
    var i;
    var r;
    var o = (n = n || m).createElement("script");
    o.text = e;
    if (t) {
      for (i in v) {
        if (r = t[i] || t.getAttribute && t.getAttribute(i)) {
          o.setAttribute(i, r);
        }
      }
    }
    n.head.appendChild(o).parentNode.removeChild(o);
  }
  function b(e) {
    if (e == null) {
      return e + "";
    } else if (typeof e == "object" || typeof e == "function") {
      return l[c.call(e)] || "object";
    } else {
      return typeof e;
    }
  }
  var w = "3.6.1";
  var x = function (e, t) {
    return new x.fn.init(e, t);
  };
  function _(e) {
    var t = !!e && "length" in e && e.length;
    var n = b(e);
    return !p(e) && !g(e) && (n === "array" || t === 0 || typeof t == "number" && t > 0 && t - 1 in e);
  }
  x.fn = x.prototype = {
    jquery: w,
    constructor: x,
    length: 0,
    toArray: function () {
      return r.call(this);
    },
    get: function (e) {
      if (e == null) {
        return r.call(this);
      } else if (e < 0) {
        return this[e + this.length];
      } else {
        return this[e];
      }
    },
    pushStack: function (e) {
      var t = x.merge(this.constructor(), e);
      t.prevObject = this;
      return t;
    },
    each: function (e) {
      return x.each(this, e);
    },
    map: function (e) {
      return this.pushStack(x.map(this, function (t, n) {
        return e.call(t, n, t);
      }));
    },
    slice: function () {
      return this.pushStack(r.apply(this, arguments));
    },
    first: function () {
      return this.eq(0);
    },
    last: function () {
      return this.eq(-1);
    },
    even: function () {
      return this.pushStack(x.grep(this, function (e, t) {
        return (t + 1) % 2;
      }));
    },
    odd: function () {
      return this.pushStack(x.grep(this, function (e, t) {
        return t % 2;
      }));
    },
    eq: function (e) {
      var t = this.length;
      var n = +e + (e < 0 ? t : 0);
      return this.pushStack(n >= 0 && n < t ? [this[n]] : []);
    },
    end: function () {
      return this.prevObject || this.constructor();
    },
    push: a,
    sort: n.sort,
    splice: n.splice
  };
  x.extend = x.fn.extend = function () {
    var e;
    var t;
    var n;
    var i;
    var r;
    var o;
    var a = arguments[0] || {};
    var s = 1;
    var l = arguments.length;
    var c = false;
    if (typeof a == "boolean") {
      c = a;
      a = arguments[s] || {};
      s++;
    }
    if (!(typeof a == "object" || p(a))) {
      a = {};
    }
    if (s === l) {
      a = this;
      s--;
    }
    for (; s < l; s++) {
      if ((e = arguments[s]) != null) {
        for (t in e) {
          i = e[t];
          if (t !== "__proto__" && a !== i) {
            if (c && i && (x.isPlainObject(i) || (r = Array.isArray(i)))) {
              n = a[t];
              o = r && !Array.isArray(n) ? [] : r || x.isPlainObject(n) ? n : {};
              r = false;
              a[t] = x.extend(c, o, i);
            } else if (i !== undefined) {
              a[t] = i;
            }
          }
        }
      }
    }
    return a;
  };
  x.extend({
    expando: "jQuery" + (w + Math.random()).replace(/\D/g, ""),
    isReady: true,
    error: function (e) {
      throw new Error(e);
    },
    noop: function () {},
    isPlainObject: function (e) {
      var t;
      var n;
      return !(!e || c.call(e) !== "[object Object]" || (t = i(e)) && (typeof (n = u.call(t, "constructor") && t.constructor) != "function" || d.call(n) !== h));
    },
    isEmptyObject: function (e) {
      var t;
      for (t in e) {
        return false;
      }
      return true;
    },
    globalEval: function (e, t, n) {
      y(e, {
        nonce: t && t.nonce
      }, n);
    },
    each: function (e, t) {
      var n;
      var i = 0;
      if (_(e)) {
        for (n = e.length; i < n && t.call(e[i], i, e[i]) !== false; i++);
      } else {
        for (i in e) {
          if (t.call(e[i], i, e[i]) === false) {
            break;
          }
        }
      }
      return e;
    },
    makeArray: function (e, t) {
      var n = t || [];
      if (e != null) {
        if (_(Object(e))) {
          x.merge(n, typeof e == "string" ? [e] : e);
        } else {
          a.call(n, e);
        }
      }
      return n;
    },
    inArray: function (e, t, n) {
      if (t == null) {
        return -1;
      } else {
        return s.call(t, e, n);
      }
    },
    merge: function (e, t) {
      for (var n = +t.length, i = 0, r = e.length; i < n; i++) {
        e[r++] = t[i];
      }
      e.length = r;
      return e;
    },
    grep: function (e, t, n) {
      for (var i = [], r = 0, o = e.length, a = !n; r < o; r++) {
        if (!t(e[r], r) !== a) {
          i.push(e[r]);
        }
      }
      return i;
    },
    map: function (e, t, n) {
      var i;
      var r;
      var a = 0;
      var s = [];
      if (_(e)) {
        for (i = e.length; a < i; a++) {
          if ((r = t(e[a], a, n)) != null) {
            s.push(r);
          }
        }
      } else {
        for (a in e) {
          if ((r = t(e[a], a, n)) != null) {
            s.push(r);
          }
        }
      }
      return o(s);
    },
    guid: 1,
    support: f
  });
  if (typeof Symbol == "function") {
    x.fn[Symbol.iterator] = n[Symbol.iterator];
  }
  x.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) {
    l["[object " + t + "]"] = t.toLowerCase();
  });
  var C = function (e) {
    var t;
    var n;
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d;
    var h;
    var f;
    var p;
    var g;
    var m;
    var v;
    var y;
    var b;
    var w = "sizzle" + new Date() * 1;
    var x = e.document;
    var _ = 0;
    var C = 0;
    var S = le();
    var k = le();
    var T = le();
    var A = le();
    var D = function (e, t) {
      if (e === t) {
        d = true;
      }
      return 0;
    };
    var E = {}.hasOwnProperty;
    var O = [];
    var M = O.pop;
    var I = O.push;
    var P = O.push;
    var L = O.slice;
    var N = function (e, t) {
      for (var n = 0, i = e.length; n < i; n++) {
        if (e[n] === t) {
          return n;
        }
      }
      return -1;
    };
    var F = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped";
    var R = "[\\x20\\t\\r\\n\\f]";
    var j = "(?:\\\\[\\da-fA-F]{1,6}" + R + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+";
    var $ = "\\[" + R + "*(" + j + ")(?:" + R + "*([*^$|!~]?=)" + R + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + j + "))|)" + R + "*\\]";
    var z = ":(" + j + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + $ + ")*)|.*)\\)|)";
    var H = new RegExp(R + "+", "g");
    var B = new RegExp("^" + R + "+|((?:^|[^\\\\])(?:\\\\.)*)" + R + "+$", "g");
    var q = new RegExp("^" + R + "*," + R + "*");
    var W = new RegExp("^" + R + "*([>+~]|" + R + ")" + R + "*");
    var U = new RegExp(R + "|>");
    var V = new RegExp(z);
    var Y = new RegExp("^" + j + "$");
    var X = {
      ID: new RegExp("^#(" + j + ")"),
      CLASS: new RegExp("^\\.(" + j + ")"),
      TAG: new RegExp("^(" + j + "|[*])"),
      ATTR: new RegExp("^" + $),
      PSEUDO: new RegExp("^" + z),
      CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + R + "*(even|odd|(([+-]|)(\\d*)n|)" + R + "*(?:([+-]|)" + R + "*(\\d+)|))" + R + "*\\)|)", "i"),
      bool: new RegExp("^(?:" + F + ")$", "i"),
      needsContext: new RegExp("^" + R + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + R + "*((?:-\\d)?\\d*)" + R + "*\\)|)(?=[^-]|$)", "i")
    };
    var G = /HTML$/i;
    var K = /^(?:input|select|textarea|button)$/i;
    var Q = /^h\d$/i;
    var Z = /^[^{]+\{\s*\[native \w/;
    var J = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/;
    var ee = /[+~]/;
    var te = new RegExp("\\\\[\\da-fA-F]{1,6}" + R + "?|\\\\([^\\r\\n\\f])", "g");
    var ne = function (e, t) {
      var n = "0x" + e.slice(1) - 65536;
      return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, n & 1023 | 56320));
    };
    var ie = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g;
    var re = function (e, t) {
      if (t) {
        if (e === "\0") {
          return "ï¿½";
        } else {
          return e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " ";
        }
      } else {
        return "\\" + e;
      }
    };
    var oe = function () {
      h();
    };
    var ae = we(function (e) {
      return e.disabled === true && e.nodeName.toLowerCase() === "fieldset";
    }, {
      dir: "parentNode",
      next: "legend"
    });
    try {
      P.apply(O = L.call(x.childNodes), x.childNodes);
      O[x.childNodes.length].nodeType;
    } catch (t) {
      P = {
        apply: O.length ? function (e, t) {
          I.apply(e, L.call(t));
        } : function (e, t) {
          for (var n = e.length, i = 0; e[n++] = t[i++];);
          e.length = n - 1;
        }
      };
    }
    function se(e, t, i, r) {
      var o;
      var s;
      var c;
      var u;
      var d;
      var p;
      var v;
      var y = t && t.ownerDocument;
      var x = t ? t.nodeType : 9;
      i = i || [];
      if (typeof e != "string" || !e || x !== 1 && x !== 9 && x !== 11) {
        return i;
      }
      if (!r && (h(t), t = t || f, g)) {
        if (x !== 11 && (d = J.exec(e))) {
          if (o = d[1]) {
            if (x === 9) {
              if (!(c = t.getElementById(o))) {
                return i;
              }
              if (c.id === o) {
                i.push(c);
                return i;
              }
            } else if (y && (c = y.getElementById(o)) && b(t, c) && c.id === o) {
              i.push(c);
              return i;
            }
          } else {
            if (d[2]) {
              P.apply(i, t.getElementsByTagName(e));
              return i;
            }
            if ((o = d[3]) && n.getElementsByClassName && t.getElementsByClassName) {
              P.apply(i, t.getElementsByClassName(o));
              return i;
            }
          }
        }
        if (n.qsa && !A[e + " "] && (!m || !m.test(e)) && (x !== 1 || t.nodeName.toLowerCase() !== "object")) {
          v = e;
          y = t;
          if (x === 1 && (U.test(e) || W.test(e))) {
            if (!((y = ee.test(e) && ve(t.parentNode) || t) === t && n.scope)) {
              if (u = t.getAttribute("id")) {
                u = u.replace(ie, re);
              } else {
                t.setAttribute("id", u = w);
              }
            }
            s = (p = a(e)).length;
            for (; s--;) {
              p[s] = (u ? "#" + u : ":scope") + " " + be(p[s]);
            }
            v = p.join(",");
          }
          try {
            P.apply(i, y.querySelectorAll(v));
            return i;
          } catch (t) {
            A(e, true);
          } finally {
            if (u === w) {
              t.removeAttribute("id");
            }
          }
        }
      }
      return l(e.replace(B, "$1"), t, i, r);
    }
    function le() {
      var e = [];
      return function t(n, r) {
        if (e.push(n + " ") > i.cacheLength) {
          delete t[e.shift()];
        }
        return t[n + " "] = r;
      };
    }
    function ce(e) {
      e[w] = true;
      return e;
    }
    function ue(e) {
      var t = f.createElement("fieldset");
      try {
        return !!e(t);
      } catch (e) {
        return false;
      } finally {
        if (t.parentNode) {
          t.parentNode.removeChild(t);
        }
        t = null;
      }
    }
    function de(e, t) {
      for (var n = e.split("|"), r = n.length; r--;) {
        i.attrHandle[n[r]] = t;
      }
    }
    function he(e, t) {
      var n = t && e;
      var i = n && e.nodeType === 1 && t.nodeType === 1 && e.sourceIndex - t.sourceIndex;
      if (i) {
        return i;
      }
      if (n) {
        for (; n = n.nextSibling;) {
          if (n === t) {
            return -1;
          }
        }
      }
      if (e) {
        return 1;
      } else {
        return -1;
      }
    }
    function fe(e) {
      return function (t) {
        return t.nodeName.toLowerCase() === "input" && t.type === e;
      };
    }
    function pe(e) {
      return function (t) {
        var n = t.nodeName.toLowerCase();
        return (n === "input" || n === "button") && t.type === e;
      };
    }
    function ge(e) {
      return function (t) {
        if ("form" in t) {
          if (t.parentNode && t.disabled === false) {
            if ("label" in t) {
              if ("label" in t.parentNode) {
                return t.parentNode.disabled === e;
              } else {
                return t.disabled === e;
              }
            } else {
              return t.isDisabled === e || t.isDisabled !== !e && ae(t) === e;
            }
          } else {
            return t.disabled === e;
          }
        } else {
          return "label" in t && t.disabled === e;
        }
      };
    }
    function me(e) {
      return ce(function (t) {
        t = +t;
        return ce(function (n, i) {
          for (var r, o = e([], n.length, t), a = o.length; a--;) {
            if (n[r = o[a]]) {
              n[r] = !(i[r] = n[r]);
            }
          }
        });
      });
    }
    function ve(e) {
      return e && e.getElementsByTagName !== undefined && e;
    }
    n = se.support = {};
    o = se.isXML = function (e) {
      var t = e && e.namespaceURI;
      var n = e && (e.ownerDocument || e).documentElement;
      return !G.test(t || n && n.nodeName || "HTML");
    };
    h = se.setDocument = function (e) {
      var t;
      var r;
      var a = e ? e.ownerDocument || e : x;
      if (a != f && a.nodeType === 9 && a.documentElement) {
        p = (f = a).documentElement;
        g = !o(f);
        if (x != f && (r = f.defaultView) && r.top !== r) {
          if (r.addEventListener) {
            r.addEventListener("unload", oe, false);
          } else if (r.attachEvent) {
            r.attachEvent("onunload", oe);
          }
        }
        n.scope = ue(function (e) {
          p.appendChild(e).appendChild(f.createElement("div"));
          return e.querySelectorAll !== undefined && !e.querySelectorAll(":scope fieldset div").length;
        });
        n.attributes = ue(function (e) {
          e.className = "i";
          return !e.getAttribute("className");
        });
        n.getElementsByTagName = ue(function (e) {
          e.appendChild(f.createComment(""));
          return !e.getElementsByTagName("*").length;
        });
        n.getElementsByClassName = Z.test(f.getElementsByClassName);
        n.getById = ue(function (e) {
          p.appendChild(e).id = w;
          return !f.getElementsByName || !f.getElementsByName(w).length;
        });
        if (n.getById) {
          i.filter.ID = function (e) {
            var t = e.replace(te, ne);
            return function (e) {
              return e.getAttribute("id") === t;
            };
          };
          i.find.ID = function (e, t) {
            if (t.getElementById !== undefined && g) {
              var n = t.getElementById(e);
              if (n) {
                return [n];
              } else {
                return [];
              }
            }
          };
        } else {
          i.filter.ID = function (e) {
            var t = e.replace(te, ne);
            return function (e) {
              var n = e.getAttributeNode !== undefined && e.getAttributeNode("id");
              return n && n.value === t;
            };
          };
          i.find.ID = function (e, t) {
            if (t.getElementById !== undefined && g) {
              var n;
              var i;
              var r;
              var o = t.getElementById(e);
              if (o) {
                if ((n = o.getAttributeNode("id")) && n.value === e) {
                  return [o];
                }
                r = t.getElementsByName(e);
                i = 0;
                for (; o = r[i++];) {
                  if ((n = o.getAttributeNode("id")) && n.value === e) {
                    return [o];
                  }
                }
              }
              return [];
            }
          };
        }
        i.find.TAG = n.getElementsByTagName ? function (e, t) {
          if (t.getElementsByTagName !== undefined) {
            return t.getElementsByTagName(e);
          } else if (n.qsa) {
            return t.querySelectorAll(e);
          } else {
            return undefined;
          }
        } : function (e, t) {
          var n;
          var i = [];
          var r = 0;
          var o = t.getElementsByTagName(e);
          if (e === "*") {
            for (; n = o[r++];) {
              if (n.nodeType === 1) {
                i.push(n);
              }
            }
            return i;
          }
          return o;
        };
        i.find.CLASS = n.getElementsByClassName && function (e, t) {
          if (t.getElementsByClassName !== undefined && g) {
            return t.getElementsByClassName(e);
          }
        };
        v = [];
        m = [];
        if (n.qsa = Z.test(f.querySelectorAll)) {
          ue(function (e) {
            var t;
            p.appendChild(e).innerHTML = "<a id='" + w + "'></a><select id='" + w + "-\r\\' msallowcapture=''><option selected=''></option></select>";
            if (e.querySelectorAll("[msallowcapture^='']").length) {
              m.push("[*^$]=" + R + "*(?:''|\"\")");
            }
            if (!e.querySelectorAll("[selected]").length) {
              m.push("\\[" + R + "*(?:value|" + F + ")");
            }
            if (!e.querySelectorAll("[id~=" + w + "-]").length) {
              m.push("~=");
            }
            (t = f.createElement("input")).setAttribute("name", "");
            e.appendChild(t);
            if (!e.querySelectorAll("[name='']").length) {
              m.push("\\[" + R + "*name" + R + "*=" + R + "*(?:''|\"\")");
            }
            if (!e.querySelectorAll(":checked").length) {
              m.push(":checked");
            }
            if (!e.querySelectorAll("a#" + w + "+*").length) {
              m.push(".#.+[+~]");
            }
            e.querySelectorAll("\\\f");
            m.push("[\\r\\n\\f]");
          });
          ue(function (e) {
            e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
            var t = f.createElement("input");
            t.setAttribute("type", "hidden");
            e.appendChild(t).setAttribute("name", "D");
            if (e.querySelectorAll("[name=d]").length) {
              m.push("name" + R + "*[*^$|!~]?=");
            }
            if (e.querySelectorAll(":enabled").length !== 2) {
              m.push(":enabled", ":disabled");
            }
            p.appendChild(e).disabled = true;
            if (e.querySelectorAll(":disabled").length !== 2) {
              m.push(":enabled", ":disabled");
            }
            e.querySelectorAll("*,:x");
            m.push(",.*:");
          });
        }
        if (n.matchesSelector = Z.test(y = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.oMatchesSelector || p.msMatchesSelector)) {
          ue(function (e) {
            n.disconnectedMatch = y.call(e, "*");
            y.call(e, "[s!='']:x");
            v.push("!=", z);
          });
        }
        m = m.length && new RegExp(m.join("|"));
        v = v.length && new RegExp(v.join("|"));
        t = Z.test(p.compareDocumentPosition);
        b = t || Z.test(p.contains) ? function (e, t) {
          var n = e.nodeType === 9 ? e.documentElement : e;
          var i = t && t.parentNode;
          return e === i || !(!i || i.nodeType !== 1 || !(n.contains ? n.contains(i) : e.compareDocumentPosition && e.compareDocumentPosition(i) & 16));
        } : function (e, t) {
          if (t) {
            for (; t = t.parentNode;) {
              if (t === e) {
                return true;
              }
            }
          }
          return false;
        };
        D = t ? function (e, t) {
          if (e === t) {
            d = true;
            return 0;
          }
          var i = !e.compareDocumentPosition - !t.compareDocumentPosition;
          return i || ((i = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) & 1 || !n.sortDetached && t.compareDocumentPosition(e) === i ? e == f || e.ownerDocument == x && b(x, e) ? -1 : t == f || t.ownerDocument == x && b(x, t) ? 1 : u ? N(u, e) - N(u, t) : 0 : i & 4 ? -1 : 1);
        } : function (e, t) {
          if (e === t) {
            d = true;
            return 0;
          }
          var n;
          var i = 0;
          var r = e.parentNode;
          var o = t.parentNode;
          var a = [e];
          var s = [t];
          if (!r || !o) {
            if (e == f) {
              return -1;
            } else if (t == f) {
              return 1;
            } else if (r) {
              return -1;
            } else if (o) {
              return 1;
            } else if (u) {
              return N(u, e) - N(u, t);
            } else {
              return 0;
            }
          }
          if (r === o) {
            return he(e, t);
          }
          for (n = e; n = n.parentNode;) {
            a.unshift(n);
          }
          for (n = t; n = n.parentNode;) {
            s.unshift(n);
          }
          for (; a[i] === s[i];) {
            i++;
          }
          if (i) {
            return he(a[i], s[i]);
          } else if (a[i] == x) {
            return -1;
          } else if (s[i] == x) {
            return 1;
          } else {
            return 0;
          }
        };
      }
      return f;
    };
    se.matches = function (e, t) {
      return se(e, null, null, t);
    };
    se.matchesSelector = function (e, t) {
      h(e);
      if (n.matchesSelector && g && !A[t + " "] && (!v || !v.test(t)) && (!m || !m.test(t))) {
        try {
          var i = y.call(e, t);
          if (i || n.disconnectedMatch || e.document && e.document.nodeType !== 11) {
            return i;
          }
        } catch (e) {
          A(t, true);
        }
      }
      return se(t, f, null, [e]).length > 0;
    };
    se.contains = function (e, t) {
      if ((e.ownerDocument || e) != f) {
        h(e);
      }
      return b(e, t);
    };
    se.attr = function (e, t) {
      if ((e.ownerDocument || e) != f) {
        h(e);
      }
      var r = i.attrHandle[t.toLowerCase()];
      var o = r && E.call(i.attrHandle, t.toLowerCase()) ? r(e, t, !g) : undefined;
      if (o !== undefined) {
        return o;
      } else if (n.attributes || !g) {
        return e.getAttribute(t);
      } else if ((o = e.getAttributeNode(t)) && o.specified) {
        return o.value;
      } else {
        return null;
      }
    };
    se.escape = function (e) {
      return (e + "").replace(ie, re);
    };
    se.error = function (e) {
      throw new Error("Syntax error, unrecognized expression: " + e);
    };
    se.uniqueSort = function (e) {
      var t;
      var i = [];
      var r = 0;
      var o = 0;
      d = !n.detectDuplicates;
      u = !n.sortStable && e.slice(0);
      e.sort(D);
      if (d) {
        for (; t = e[o++];) {
          if (t === e[o]) {
            r = i.push(o);
          }
        }
        for (; r--;) {
          e.splice(i[r], 1);
        }
      }
      u = null;
      return e;
    };
    r = se.getText = function (e) {
      var t;
      var n = "";
      var i = 0;
      var o = e.nodeType;
      if (o) {
        if (o === 1 || o === 9 || o === 11) {
          if (typeof e.textContent == "string") {
            return e.textContent;
          }
          for (e = e.firstChild; e; e = e.nextSibling) {
            n += r(e);
          }
        } else if (o === 3 || o === 4) {
          return e.nodeValue;
        }
      } else {
        for (; t = e[i++];) {
          n += r(t);
        }
      }
      return n;
    };
    (i = se.selectors = {
      cacheLength: 50,
      createPseudo: ce,
      match: X,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: true
        },
        " ": {
          dir: "parentNode"
        },
        "+": {
          dir: "previousSibling",
          first: true
        },
        "~": {
          dir: "previousSibling"
        }
      },
      preFilter: {
        ATTR: function (e) {
          e[1] = e[1].replace(te, ne);
          e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne);
          if (e[2] === "~=") {
            e[3] = " " + e[3] + " ";
          }
          return e.slice(0, 4);
        },
        CHILD: function (e) {
          e[1] = e[1].toLowerCase();
          if (e[1].slice(0, 3) === "nth") {
            if (!e[3]) {
              se.error(e[0]);
            }
            e[4] = +(e[4] ? e[5] + (e[6] || 1) : (e[3] === "even" || e[3] === "odd") * 2);
            e[5] = +(e[7] + e[8] || e[3] === "odd");
          } else if (e[3]) {
            se.error(e[0]);
          }
          return e;
        },
        PSEUDO: function (e) {
          var t;
          var n = !e[6] && e[2];
          if (X.CHILD.test(e[0])) {
            return null;
          } else {
            if (e[3]) {
              e[2] = e[4] || e[5] || "";
            } else if (n && V.test(n) && (t = a(n, true)) && (t = n.indexOf(")", n.length - t) - n.length)) {
              e[0] = e[0].slice(0, t);
              e[2] = n.slice(0, t);
            }
            return e.slice(0, 3);
          }
        }
      },
      filter: {
        TAG: function (e) {
          var t = e.replace(te, ne).toLowerCase();
          if (e === "*") {
            return function () {
              return true;
            };
          } else {
            return function (e) {
              return e.nodeName && e.nodeName.toLowerCase() === t;
            };
          }
        },
        CLASS: function (e) {
          var t = S[e + " "];
          return t || (t = new RegExp("(^|" + R + ")" + e + "(" + R + "|$)")) && S(e, function (e) {
            return t.test(typeof e.className == "string" && e.className || e.getAttribute !== undefined && e.getAttribute("class") || "");
          });
        },
        ATTR: function (e, t, n) {
          return function (i) {
            var r = se.attr(i, e);
            if (r == null) {
              return t === "!=";
            } else {
              return !t || (r += "", t === "=" ? r === n : t === "!=" ? r !== n : t === "^=" ? n && r.indexOf(n) === 0 : t === "*=" ? n && r.indexOf(n) > -1 : t === "$=" ? n && r.slice(-n.length) === n : t === "~=" ? (" " + r.replace(H, " ") + " ").indexOf(n) > -1 : t === "|=" && (r === n || r.slice(0, n.length + 1) === n + "-"));
            }
          };
        },
        CHILD: function (e, t, n, i, r) {
          var o = e.slice(0, 3) !== "nth";
          var a = e.slice(-4) !== "last";
          var s = t === "of-type";
          if (i === 1 && r === 0) {
            return function (e) {
              return !!e.parentNode;
            };
          } else {
            return function (t, n, l) {
              var c;
              var u;
              var d;
              var h;
              var f;
              var p;
              var g = o !== a ? "nextSibling" : "previousSibling";
              var m = t.parentNode;
              var v = s && t.nodeName.toLowerCase();
              var y = !l && !s;
              var b = false;
              if (m) {
                if (o) {
                  for (; g;) {
                    for (h = t; h = h[g];) {
                      if (s ? h.nodeName.toLowerCase() === v : h.nodeType === 1) {
                        return false;
                      }
                    }
                    p = g = e === "only" && !p && "nextSibling";
                  }
                  return true;
                }
                p = [a ? m.firstChild : m.lastChild];
                if (a && y) {
                  b = (f = (c = (u = (d = (h = m)[w] || (h[w] = {}))[h.uniqueID] || (d[h.uniqueID] = {}))[e] || [])[0] === _ && c[1]) && c[2];
                  h = f && m.childNodes[f];
                  for (; h = ++f && h && h[g] || (b = f = 0) || p.pop();) {
                    if (h.nodeType === 1 && ++b && h === t) {
                      u[e] = [_, f, b];
                      break;
                    }
                  }
                } else {
                  if (y) {
                    b = f = (c = (u = (d = (h = t)[w] || (h[w] = {}))[h.uniqueID] || (d[h.uniqueID] = {}))[e] || [])[0] === _ && c[1];
                  }
                  if (b === false) {
                    for (; (h = ++f && h && h[g] || (b = f = 0) || p.pop()) && ((s ? h.nodeName.toLowerCase() !== v : h.nodeType !== 1) || !++b || (y && ((u = (d = h[w] || (h[w] = {}))[h.uniqueID] || (d[h.uniqueID] = {}))[e] = [_, b]), h !== t)););
                  }
                }
                return (b -= r) === i || b % i == 0 && b / i >= 0;
              }
            };
          }
        },
        PSEUDO: function (e, t) {
          var n;
          var r = i.pseudos[e] || i.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e);
          if (r[w]) {
            return r(t);
          } else if (r.length > 1) {
            n = [e, e, "", t];
            if (i.setFilters.hasOwnProperty(e.toLowerCase())) {
              return ce(function (e, n) {
                for (var i, o = r(e, t), a = o.length; a--;) {
                  e[i = N(e, o[a])] = !(n[i] = o[a]);
                }
              });
            } else {
              return function (e) {
                return r(e, 0, n);
              };
            }
          } else {
            return r;
          }
        }
      },
      pseudos: {
        not: ce(function (e) {
          var t = [];
          var n = [];
          var i = s(e.replace(B, "$1"));
          if (i[w]) {
            return ce(function (e, t, n, r) {
              for (var o, a = i(e, null, r, []), s = e.length; s--;) {
                if (o = a[s]) {
                  e[s] = !(t[s] = o);
                }
              }
            });
          } else {
            return function (e, r, o) {
              t[0] = e;
              i(t, null, o, n);
              t[0] = null;
              return !n.pop();
            };
          }
        }),
        has: ce(function (e) {
          return function (t) {
            return se(e, t).length > 0;
          };
        }),
        contains: ce(function (e) {
          e = e.replace(te, ne);
          return function (t) {
            return (t.textContent || r(t)).indexOf(e) > -1;
          };
        }),
        lang: ce(function (e) {
          if (!Y.test(e || "")) {
            se.error("unsupported lang: " + e);
          }
          e = e.replace(te, ne).toLowerCase();
          return function (t) {
            var n;
            do {
              if (n = g ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) {
                return (n = n.toLowerCase()) === e || n.indexOf(e + "-") === 0;
              }
            } while ((t = t.parentNode) && t.nodeType === 1);
            return false;
          };
        }),
        target: function (t) {
          var n = e.location && e.location.hash;
          return n && n.slice(1) === t.id;
        },
        root: function (e) {
          return e === p;
        },
        focus: function (e) {
          return e === f.activeElement && (!f.hasFocus || f.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
        },
        enabled: ge(false),
        disabled: ge(true),
        checked: function (e) {
          var t = e.nodeName.toLowerCase();
          return t === "input" && !!e.checked || t === "option" && !!e.selected;
        },
        selected: function (e) {
          if (e.parentNode) {
            e.parentNode.selectedIndex;
          }
          return e.selected === true;
        },
        empty: function (e) {
          for (e = e.firstChild; e; e = e.nextSibling) {
            if (e.nodeType < 6) {
              return false;
            }
          }
          return true;
        },
        parent: function (e) {
          return !i.pseudos.empty(e);
        },
        header: function (e) {
          return Q.test(e.nodeName);
        },
        input: function (e) {
          return K.test(e.nodeName);
        },
        button: function (e) {
          var t = e.nodeName.toLowerCase();
          return t === "input" && e.type === "button" || t === "button";
        },
        text: function (e) {
          var t;
          return e.nodeName.toLowerCase() === "input" && e.type === "text" && ((t = e.getAttribute("type")) == null || t.toLowerCase() === "text");
        },
        first: me(function () {
          return [0];
        }),
        last: me(function (e, t) {
          return [t - 1];
        }),
        eq: me(function (e, t, n) {
          return [n < 0 ? n + t : n];
        }),
        even: me(function (e, t) {
          for (var n = 0; n < t; n += 2) {
            e.push(n);
          }
          return e;
        }),
        odd: me(function (e, t) {
          for (var n = 1; n < t; n += 2) {
            e.push(n);
          }
          return e;
        }),
        lt: me(function (e, t, n) {
          for (var i = n < 0 ? n + t : t < n ? t : n; --i >= 0;) {
            e.push(i);
          }
          return e;
        }),
        gt: me(function (e, t, n) {
          for (var i = n < 0 ? n + t : n; ++i < t;) {
            e.push(i);
          }
          return e;
        })
      }
    }).pseudos.nth = i.pseudos.eq;
    for (t in {
      radio: true,
      checkbox: true,
      file: true,
      password: true,
      image: true
    }) {
      i.pseudos[t] = fe(t);
    }
    for (t in {
      submit: true,
      reset: true
    }) {
      i.pseudos[t] = pe(t);
    }
    function ye() {}
    function be(e) {
      for (var t = 0, n = e.length, i = ""; t < n; t++) {
        i += e[t].value;
      }
      return i;
    }
    function we(e, t, n) {
      var i = t.dir;
      var r = t.next;
      var o = r || i;
      var a = n && o === "parentNode";
      var s = C++;
      if (t.first) {
        return function (t, n, r) {
          for (; t = t[i];) {
            if (t.nodeType === 1 || a) {
              return e(t, n, r);
            }
          }
          return false;
        };
      } else {
        return function (t, n, l) {
          var c;
          var u;
          var d;
          var h = [_, s];
          if (l) {
            for (; t = t[i];) {
              if ((t.nodeType === 1 || a) && e(t, n, l)) {
                return true;
              }
            }
          } else {
            for (; t = t[i];) {
              if (t.nodeType === 1 || a) {
                u = (d = t[w] || (t[w] = {}))[t.uniqueID] || (d[t.uniqueID] = {});
                if (r && r === t.nodeName.toLowerCase()) {
                  t = t[i] || t;
                } else {
                  if ((c = u[o]) && c[0] === _ && c[1] === s) {
                    return h[2] = c[2];
                  }
                  if ((u[o] = h)[2] = e(t, n, l)) {
                    return true;
                  }
                }
              }
            }
          }
          return false;
        };
      }
    }
    function xe(e) {
      if (e.length > 1) {
        return function (t, n, i) {
          for (var r = e.length; r--;) {
            if (!e[r](t, n, i)) {
              return false;
            }
          }
          return true;
        };
      } else {
        return e[0];
      }
    }
    function _e(e, t, n, i, r) {
      for (var o, a = [], s = 0, l = e.length, c = t != null; s < l; s++) {
        if (o = e[s]) {
          if (!(n && !n(o, i, r))) {
            a.push(o);
            if (c) {
              t.push(s);
            }
          }
        }
      }
      return a;
    }
    function Ce(e, t, n, i, r, o) {
      if (i && !i[w]) {
        i = Ce(i);
      }
      if (r && !r[w]) {
        r = Ce(r, o);
      }
      return ce(function (o, a, s, l) {
        var c;
        var u;
        var d;
        var h = [];
        var f = [];
        var p = a.length;
        var g = o || function (e, t, n) {
          for (var i = 0, r = t.length; i < r; i++) {
            se(e, t[i], n);
          }
          return n;
        }(t || "*", s.nodeType ? [s] : s, []);
        var m = !e || !o && t ? g : _e(g, h, e, s, l);
        var v = n ? r || (o ? e : p || i) ? [] : a : m;
        if (n) {
          n(m, v, s, l);
        }
        if (i) {
          c = _e(v, f);
          i(c, [], s, l);
          u = c.length;
          c = _e(v, f);
          i(c, [], s, l);
          u = c.length;
          for (; u--;) {
            if (d = c[u]) {
              v[f[u]] = !(m[f[u]] = d);
            }
          }
        }
        if (o) {
          if (r || e) {
            if (r) {
              c = [];
              u = v.length;
              for (; u--;) {
                if (d = v[u]) {
                  c.push(m[u] = d);
                }
              }
              r(null, v = [], c, l);
            }
            for (u = v.length; u--;) {
              if ((d = v[u]) && (c = r ? N(o, d) : h[u]) > -1) {
                o[c] = !(a[c] = d);
              }
            }
          }
        } else {
          v = _e(v === a ? v.splice(p, v.length) : v);
          if (r) {
            r(null, a, v, l);
          } else {
            P.apply(a, v);
          }
        }
      });
    }
    function Se(e) {
      for (var t, n, r, o = e.length, a = i.relative[e[0].type], s = a || i.relative[" "], l = a ? 1 : 0, u = we(function (e) {
          return e === t;
        }, s, true), d = we(function (e) {
          return N(t, e) > -1;
        }, s, true), h = [function (e, n, i) {
          var r = !a && (i || n !== c) || ((t = n).nodeType ? u(e, n, i) : d(e, n, i));
          t = null;
          return r;
        }]; l < o; l++) {
        if (n = i.relative[e[l].type]) {
          h = [we(xe(h), n)];
        } else {
          if ((n = i.filter[e[l].type].apply(null, e[l].matches))[w]) {
            for (r = ++l; r < o && !i.relative[e[r].type]; r++);
            return Ce(l > 1 && xe(h), l > 1 && be(e.slice(0, l - 1).concat({
              value: e[l - 2].type === " " ? "*" : ""
            })).replace(B, "$1"), n, l < r && Se(e.slice(l, r)), r < o && Se(e = e.slice(r)), r < o && be(e));
          }
          h.push(n);
        }
      }
      return xe(h);
    }
    ye.prototype = i.filters = i.pseudos;
    i.setFilters = new ye();
    a = se.tokenize = function (e, t) {
      var n;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u = k[e + " "];
      if (u) {
        if (t) {
          return 0;
        } else {
          return u.slice(0);
        }
      }
      s = e;
      l = [];
      c = i.preFilter;
      for (; s;) {
        if (!(n && !(r = q.exec(s)))) {
          if (r) {
            s = s.slice(r[0].length) || s;
          }
          l.push(o = []);
        }
        n = false;
        if (r = W.exec(s)) {
          n = r.shift();
          o.push({
            value: n,
            type: r[0].replace(B, " ")
          });
          s = s.slice(n.length);
        }
        for (a in i.filter) {
          if (!(!(r = X[a].exec(s)) || c[a] && !(r = c[a](r)))) {
            n = r.shift();
            o.push({
              value: n,
              type: a,
              matches: r
            });
            s = s.slice(n.length);
          }
        }
        if (!n) {
          break;
        }
      }
      if (t) {
        return s.length;
      } else if (s) {
        return se.error(e);
      } else {
        return k(e, l).slice(0);
      }
    };
    s = se.compile = function (e, t) {
      var n;
      var r;
      var o;
      var s;
      var l;
      var u;
      var d = [];
      var p = [];
      var m = T[e + " "];
      if (!m) {
        if (!t) {
          t = a(e);
        }
        n = t.length;
        for (; n--;) {
          if ((m = Se(t[n]))[w]) {
            d.push(m);
          } else {
            p.push(m);
          }
        }
        (m = T(e, (r = p, s = (o = d).length > 0, l = r.length > 0, u = function (e, t, n, a, u) {
          var d;
          var p;
          var m;
          var v = 0;
          var y = "0";
          var b = e && [];
          var w = [];
          var x = c;
          var C = e || l && i.find.TAG("*", u);
          var S = _ += x == null ? 1 : Math.random() || 0.1;
          var k = C.length;
          for (u && (c = t == f || t || u); y !== k && (d = C[y]) != null; y++) {
            if (l && d) {
              p = 0;
              if (!(t || d.ownerDocument == f)) {
                h(d);
                n = !g;
              }
              for (; m = r[p++];) {
                if (m(d, t || f, n)) {
                  a.push(d);
                  break;
                }
              }
              if (u) {
                _ = S;
              }
            }
            if (s) {
              if (d = !m && d) {
                v--;
              }
              if (e) {
                b.push(d);
              }
            }
          }
          v += y;
          if (s && y !== v) {
            for (p = 0; m = o[p++];) {
              m(b, w, t, n);
            }
            if (e) {
              if (v > 0) {
                for (; y--;) {
                  if (!(b[y] || w[y])) {
                    w[y] = M.call(a);
                  }
                }
              }
              w = _e(w);
            }
            P.apply(a, w);
            if (u && !e && w.length > 0 && v + o.length > 1) {
              se.uniqueSort(a);
            }
          }
          if (u) {
            _ = S;
            c = x;
          }
          return b;
        }, s ? ce(u) : u))).selector = e;
      }
      return m;
    };
    l = se.select = function (e, t, n, r) {
      var o;
      var l;
      var c;
      var u;
      var d;
      var h = typeof e == "function" && e;
      var f = !r && a(e = h.selector || e);
      n = n || [];
      if (f.length === 1) {
        if ((l = f[0] = f[0].slice(0)).length > 2 && (c = l[0]).type === "ID" && t.nodeType === 9 && g && i.relative[l[1].type]) {
          if (!(t = (i.find.ID(c.matches[0].replace(te, ne), t) || [])[0])) {
            return n;
          }
          if (h) {
            t = t.parentNode;
          }
          e = e.slice(l.shift().value.length);
        }
        for (o = X.needsContext.test(e) ? 0 : l.length; o-- && (c = l[o], !i.relative[u = c.type]);) {
          if ((d = i.find[u]) && (r = d(c.matches[0].replace(te, ne), ee.test(l[0].type) && ve(t.parentNode) || t))) {
            l.splice(o, 1);
            if (!(e = r.length && be(l))) {
              P.apply(n, r);
              return n;
            }
            break;
          }
        }
      }
      (h || s(e, f))(r, t, !g, n, !t || ee.test(e) && ve(t.parentNode) || t);
      return n;
    };
    n.sortStable = w.split("").sort(D).join("") === w;
    n.detectDuplicates = !!d;
    h();
    n.sortDetached = ue(function (e) {
      return e.compareDocumentPosition(f.createElement("fieldset")) & 1;
    });
    if (!ue(function (e) {
      e.innerHTML = "<a href='#'></a>";
      return e.firstChild.getAttribute("href") === "#";
    })) {
      de("type|href|height|width", function (e, t, n) {
        if (!n) {
          return e.getAttribute(t, t.toLowerCase() === "type" ? 1 : 2);
        }
      });
    }
    if (!(n.attributes && ue(function (e) {
      e.innerHTML = "<input/>";
      e.firstChild.setAttribute("value", "");
      return e.firstChild.getAttribute("value") === "";
    }))) {
      de("value", function (e, t, n) {
        if (!n && e.nodeName.toLowerCase() === "input") {
          return e.defaultValue;
        }
      });
    }
    if (!ue(function (e) {
      return e.getAttribute("disabled") == null;
    })) {
      de(F, function (e, t, n) {
        var i;
        if (!n) {
          if (e[t] === true) {
            return t.toLowerCase();
          } else if ((i = e.getAttributeNode(t)) && i.specified) {
            return i.value;
          } else {
            return null;
          }
        }
      });
    }
    return se;
  }(e);
  x.find = C;
  x.expr = C.selectors;
  x.expr[":"] = x.expr.pseudos;
  x.uniqueSort = x.unique = C.uniqueSort;
  x.text = C.getText;
  x.isXMLDoc = C.isXML;
  x.contains = C.contains;
  x.escapeSelector = C.escape;
  var S = function (e, t, n) {
    for (var i = [], r = n !== undefined; (e = e[t]) && e.nodeType !== 9;) {
      if (e.nodeType === 1) {
        if (r && x(e).is(n)) {
          break;
        }
        i.push(e);
      }
    }
    return i;
  };
  var k = function (e, t) {
    for (var n = []; e; e = e.nextSibling) {
      if (e.nodeType === 1 && e !== t) {
        n.push(e);
      }
    }
    return n;
  };
  var T = x.expr.match.needsContext;
  function A(e, t) {
    return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
  }
  var D = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
  function E(e, t, n) {
    if (p(t)) {
      return x.grep(e, function (e, i) {
        return !!t.call(e, i, e) !== n;
      });
    } else if (t.nodeType) {
      return x.grep(e, function (e) {
        return e === t !== n;
      });
    } else if (typeof t != "string") {
      return x.grep(e, function (e) {
        return s.call(t, e) > -1 !== n;
      });
    } else {
      return x.filter(t, e, n);
    }
  }
  x.filter = function (e, t, n) {
    var i = t[0];
    if (n) {
      e = ":not(" + e + ")";
    }
    if (t.length === 1 && i.nodeType === 1) {
      if (x.find.matchesSelector(i, e)) {
        return [i];
      } else {
        return [];
      }
    } else {
      return x.find.matches(e, x.grep(t, function (e) {
        return e.nodeType === 1;
      }));
    }
  };
  x.fn.extend({
    find: function (e) {
      var t;
      var n;
      var i = this.length;
      var r = this;
      if (typeof e != "string") {
        return this.pushStack(x(e).filter(function () {
          for (t = 0; t < i; t++) {
            if (x.contains(r[t], this)) {
              return true;
            }
          }
        }));
      }
      n = this.pushStack([]);
      t = 0;
      for (; t < i; t++) {
        x.find(e, r[t], n);
      }
      if (i > 1) {
        return x.uniqueSort(n);
      } else {
        return n;
      }
    },
    filter: function (e) {
      return this.pushStack(E(this, e || [], false));
    },
    not: function (e) {
      return this.pushStack(E(this, e || [], true));
    },
    is: function (e) {
      return !!E(this, typeof e == "string" && T.test(e) ? x(e) : e || [], false).length;
    }
  });
  var O;
  var M = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
  (x.fn.init = function (e, t, n) {
    var i;
    var r;
    if (!e) {
      return this;
    }
    n = n || O;
    if (typeof e == "string") {
      if (!(i = e[0] === "<" && e[e.length - 1] === ">" && e.length >= 3 ? [null, e, null] : M.exec(e)) || !i[1] && t) {
        if (!t || t.jquery) {
          return (t || n).find(e);
        } else {
          return this.constructor(t).find(e);
        }
      }
      if (i[1]) {
        t = t instanceof x ? t[0] : t;
        x.merge(this, x.parseHTML(i[1], t && t.nodeType ? t.ownerDocument || t : m, true));
        if (D.test(i[1]) && x.isPlainObject(t)) {
          for (i in t) {
            if (p(this[i])) {
              this[i](t[i]);
            } else {
              this.attr(i, t[i]);
            }
          }
        }
        return this;
      }
      if (r = m.getElementById(i[2])) {
        this[0] = r;
        this.length = 1;
      }
      return this;
    }
    if (e.nodeType) {
      this[0] = e;
      this.length = 1;
      return this;
    } else if (p(e)) {
      if (n.ready !== undefined) {
        return n.ready(e);
      } else {
        return e(x);
      }
    } else {
      return x.makeArray(e, this);
    }
  }).prototype = x.fn;
  O = x(m);
  var I = /^(?:parents|prev(?:Until|All))/;
  var P = {
    children: true,
    contents: true,
    next: true,
    prev: true
  };
  function L(e, t) {
    for (; (e = e[t]) && e.nodeType !== 1;);
    return e;
  }
  x.fn.extend({
    has: function (e) {
      var t = x(e, this);
      var n = t.length;
      return this.filter(function () {
        for (var e = 0; e < n; e++) {
          if (x.contains(this, t[e])) {
            return true;
          }
        }
      });
    },
    closest: function (e, t) {
      var n;
      var i = 0;
      var r = this.length;
      var o = [];
      var a = typeof e != "string" && x(e);
      if (!T.test(e)) {
        for (; i < r; i++) {
          for (n = this[i]; n && n !== t; n = n.parentNode) {
            if (n.nodeType < 11 && (a ? a.index(n) > -1 : n.nodeType === 1 && x.find.matchesSelector(n, e))) {
              o.push(n);
              break;
            }
          }
        }
      }
      return this.pushStack(o.length > 1 ? x.uniqueSort(o) : o);
    },
    index: function (e) {
      if (e) {
        if (typeof e == "string") {
          return s.call(x(e), this[0]);
        } else {
          return s.call(this, e.jquery ? e[0] : e);
        }
      } else if (this[0] && this[0].parentNode) {
        return this.first().prevAll().length;
      } else {
        return -1;
      }
    },
    add: function (e, t) {
      return this.pushStack(x.uniqueSort(x.merge(this.get(), x(e, t))));
    },
    addBack: function (e) {
      return this.add(e == null ? this.prevObject : this.prevObject.filter(e));
    }
  });
  x.each({
    parent: function (e) {
      var t = e.parentNode;
      if (t && t.nodeType !== 11) {
        return t;
      } else {
        return null;
      }
    },
    parents: function (e) {
      return S(e, "parentNode");
    },
    parentsUntil: function (e, t, n) {
      return S(e, "parentNode", n);
    },
    next: function (e) {
      return L(e, "nextSibling");
    },
    prev: function (e) {
      return L(e, "previousSibling");
    },
    nextAll: function (e) {
      return S(e, "nextSibling");
    },
    prevAll: function (e) {
      return S(e, "previousSibling");
    },
    nextUntil: function (e, t, n) {
      return S(e, "nextSibling", n);
    },
    prevUntil: function (e, t, n) {
      return S(e, "previousSibling", n);
    },
    siblings: function (e) {
      return k((e.parentNode || {}).firstChild, e);
    },
    children: function (e) {
      return k(e.firstChild);
    },
    contents: function (e) {
      if (e.contentDocument != null && i(e.contentDocument)) {
        return e.contentDocument;
      } else {
        if (A(e, "template")) {
          e = e.content || e;
        }
        return x.merge([], e.childNodes);
      }
    }
  }, function (e, t) {
    x.fn[e] = function (n, i) {
      var r = x.map(this, t, n);
      if (e.slice(-5) !== "Until") {
        i = n;
      }
      if (i && typeof i == "string") {
        r = x.filter(i, r);
      }
      if (this.length > 1) {
        if (!P[e]) {
          x.uniqueSort(r);
        }
        if (I.test(e)) {
          r.reverse();
        }
      }
      return this.pushStack(r);
    };
  });
  var N = /[^\x20\t\r\n\f]+/g;
  function F(e) {
    return e;
  }
  function R(e) {
    throw e;
  }
  function j(e, t, n, i) {
    var r;
    try {
      if (e && p(r = e.promise)) {
        r.call(e).done(t).fail(n);
      } else if (e && p(r = e.then)) {
        r.call(e, t, n);
      } else {
        t.apply(undefined, [e].slice(i));
      }
    } catch (e) {
      n.apply(undefined, [e]);
    }
  }
  x.Callbacks = function (e) {
    var t;
    var n;
    e = typeof e == "string" ? (t = e, n = {}, x.each(t.match(N) || [], function (e, t) {
      n[t] = true;
    }), n) : x.extend({}, e);
    var i;
    var r;
    var o;
    var a;
    var s = [];
    var l = [];
    var c = -1;
    var u = function () {
      a = a || e.once;
      o = i = true;
      for (; l.length; c = -1) {
        for (r = l.shift(); ++c < s.length;) {
          if (s[c].apply(r[0], r[1]) === false && e.stopOnFalse) {
            c = s.length;
            r = false;
          }
        }
      }
      if (!e.memory) {
        r = false;
      }
      i = false;
      if (a) {
        s = r ? [] : "";
      }
    };
    var d = {
      add: function () {
        if (s) {
          if (r && !i) {
            c = s.length - 1;
            l.push(r);
          }
          (function t(n) {
            x.each(n, function (n, i) {
              if (p(i)) {
                if (!(e.unique && d.has(i))) {
                  s.push(i);
                }
              } else if (i && i.length && b(i) !== "string") {
                t(i);
              }
            });
          })(arguments);
          if (r && !i) {
            u();
          }
        }
        return this;
      },
      remove: function () {
        x.each(arguments, function (e, t) {
          for (var n; (n = x.inArray(t, s, n)) > -1;) {
            s.splice(n, 1);
            if (n <= c) {
              c--;
            }
          }
        });
        return this;
      },
      has: function (e) {
        if (e) {
          return x.inArray(e, s) > -1;
        } else {
          return s.length > 0;
        }
      },
      empty: function () {
        if (s) {
          s = [];
        }
        return this;
      },
      disable: function () {
        a = l = [];
        s = r = "";
        return this;
      },
      disabled: function () {
        return !s;
      },
      lock: function () {
        a = l = [];
        if (!(r || i)) {
          s = r = "";
        }
        return this;
      },
      locked: function () {
        return !!a;
      },
      fireWith: function (e, t) {
        if (!a) {
          t = [e, (t = t || []).slice ? t.slice() : t];
          l.push(t);
          if (!i) {
            u();
          }
        }
        return this;
      },
      fire: function () {
        d.fireWith(this, arguments);
        return this;
      },
      fired: function () {
        return !!o;
      }
    };
    return d;
  };
  x.extend({
    Deferred: function (t) {
      var n = [["notify", "progress", x.Callbacks("memory"), x.Callbacks("memory"), 2], ["resolve", "done", x.Callbacks("once memory"), x.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", x.Callbacks("once memory"), x.Callbacks("once memory"), 1, "rejected"]];
      var i = "pending";
      var r = {
        state: function () {
          return i;
        },
        always: function () {
          o.done(arguments).fail(arguments);
          return this;
        },
        catch: function (e) {
          return r.then(null, e);
        },
        pipe: function () {
          var e = arguments;
          return x.Deferred(function (t) {
            x.each(n, function (n, i) {
              var r = p(e[i[4]]) && e[i[4]];
              o[i[1]](function () {
                var e = r && r.apply(this, arguments);
                if (e && p(e.promise)) {
                  e.promise().progress(t.notify).done(t.resolve).fail(t.reject);
                } else {
                  t[i[0] + "With"](this, r ? [e] : arguments);
                }
              });
            });
            e = null;
          }).promise();
        },
        then: function (t, i, r) {
          var o = 0;
          function a(t, n, i, r) {
            return function () {
              var s = this;
              var l = arguments;
              var c = function () {
                var e;
                var c;
                if (!(t < o)) {
                  if ((e = i.apply(s, l)) === n.promise()) {
                    throw new TypeError("Thenable self-resolution");
                  }
                  c = e && (typeof e == "object" || typeof e == "function") && e.then;
                  if (p(c)) {
                    if (r) {
                      c.call(e, a(o, n, F, r), a(o, n, R, r));
                    } else {
                      o++;
                      c.call(e, a(o, n, F, r), a(o, n, R, r), a(o, n, F, n.notifyWith));
                    }
                  } else {
                    if (i !== F) {
                      s = undefined;
                      l = [e];
                    }
                    (r || n.resolveWith)(s, l);
                  }
                }
              };
              var u = r ? c : function () {
                try {
                  c();
                } catch (e) {
                  if (x.Deferred.exceptionHook) {
                    x.Deferred.exceptionHook(e, u.stackTrace);
                  }
                  if (o <= t + 1) {
                    if (i !== R) {
                      s = undefined;
                      l = [e];
                    }
                    n.rejectWith(s, l);
                  }
                }
              };
              if (t) {
                u();
              } else {
                if (x.Deferred.getStackHook) {
                  u.stackTrace = x.Deferred.getStackHook();
                }
                e.setTimeout(u);
              }
            };
          }
          return x.Deferred(function (e) {
            n[0][3].add(a(0, e, p(r) ? r : F, e.notifyWith));
            n[1][3].add(a(0, e, p(t) ? t : F));
            n[2][3].add(a(0, e, p(i) ? i : R));
          }).promise();
        },
        promise: function (e) {
          if (e != null) {
            return x.extend(e, r);
          } else {
            return r;
          }
        }
      };
      var o = {};
      x.each(n, function (e, t) {
        var a = t[2];
        var s = t[5];
        r[t[1]] = a.add;
        if (s) {
          a.add(function () {
            i = s;
          }, n[3 - e][2].disable, n[3 - e][3].disable, n[0][2].lock, n[0][3].lock);
        }
        a.add(t[3].fire);
        o[t[0]] = function () {
          o[t[0] + "With"](this === o ? undefined : this, arguments);
          return this;
        };
        o[t[0] + "With"] = a.fireWith;
      });
      r.promise(o);
      if (t) {
        t.call(o, o);
      }
      return o;
    },
    when: function (e) {
      var t = arguments.length;
      var n = t;
      var i = Array(n);
      var o = r.call(arguments);
      var a = x.Deferred();
      var s = function (e) {
        return function (n) {
          i[e] = this;
          o[e] = arguments.length > 1 ? r.call(arguments) : n;
          if (! --t) {
            a.resolveWith(i, o);
          }
        };
      };
      if (t <= 1 && (j(e, a.done(s(n)).resolve, a.reject, !t), a.state() === "pending" || p(o[n] && o[n].then))) {
        return a.then();
      }
      for (; n--;) {
        j(o[n], s(n), a.reject);
      }
      return a.promise();
    }
  });
  var $ = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
  x.Deferred.exceptionHook = function (t, n) {
    if (e.console && e.console.warn && t && $.test(t.name)) {
      e.console.warn("jQuery.Deferred exception: " + t.message, t.stack, n);
    }
  };
  x.readyException = function (t) {
    e.setTimeout(function () {
      throw t;
    });
  };
  var z = x.Deferred();
  function H() {
    m.removeEventListener("DOMContentLoaded", H);
    e.removeEventListener("load", H);
    x.ready();
  }
  x.fn.ready = function (e) {
    z.then(e).catch(function (e) {
      x.readyException(e);
    });
    return this;
  };
  x.extend({
    isReady: false,
    readyWait: 1,
    ready: function (e) {
      if (!((e === true ? --x.readyWait : x.isReady) || (x.isReady = true) !== e && --x.readyWait > 0)) {
        z.resolveWith(m, [x]);
      }
    }
  });
  x.ready.then = z.then;
  if (m.readyState === "complete" || m.readyState !== "loading" && !m.documentElement.doScroll) {
    e.setTimeout(x.ready);
  } else {
    m.addEventListener("DOMContentLoaded", H);
    e.addEventListener("load", H);
  }
  var B = function (e, t, n, i, r, o, a) {
    var s = 0;
    var l = e.length;
    var c = n == null;
    if (b(n) === "object") {
      r = true;
      for (s in n) {
        B(e, t, s, n[s], true, o, a);
      }
    } else if (i !== undefined && (r = true, p(i) || (a = true), c && (a ? (t.call(e, i), t = null) : (c = t, t = function (e, t, n) {
      return c.call(x(e), n);
    })), t)) {
      for (; s < l; s++) {
        t(e[s], n, a ? i : i.call(e[s], s, t(e[s], n)));
      }
    }
    if (r) {
      return e;
    } else if (c) {
      return t.call(e);
    } else if (l) {
      return t(e[0], n);
    } else {
      return o;
    }
  };
  var q = /^-ms-/;
  var W = /-([a-z])/g;
  function U(e, t) {
    return t.toUpperCase();
  }
  function V(e) {
    return e.replace(q, "ms-").replace(W, U);
  }
  var Y = function (e) {
    return e.nodeType === 1 || e.nodeType === 9 || !+e.nodeType;
  };
  function X() {
    this.expando = x.expando + X.uid++;
  }
  X.uid = 1;
  X.prototype = {
    cache: function (e) {
      var t = e[this.expando];
      if (!t) {
        t = {};
        if (Y(e)) {
          if (e.nodeType) {
            e[this.expando] = t;
          } else {
            Object.defineProperty(e, this.expando, {
              value: t,
              configurable: true
            });
          }
        }
      }
      return t;
    },
    set: function (e, t, n) {
      var i;
      var r = this.cache(e);
      if (typeof t == "string") {
        r[V(t)] = n;
      } else {
        for (i in t) {
          r[V(i)] = t[i];
        }
      }
      return r;
    },
    get: function (e, t) {
      if (t === undefined) {
        return this.cache(e);
      } else {
        return e[this.expando] && e[this.expando][V(t)];
      }
    },
    access: function (e, t, n) {
      if (t === undefined || t && typeof t == "string" && n === undefined) {
        return this.get(e, t);
      } else {
        this.set(e, t, n);
        if (n !== undefined) {
          return n;
        } else {
          return t;
        }
      }
    },
    remove: function (e, t) {
      var n;
      var i = e[this.expando];
      if (i !== undefined) {
        if (t !== undefined) {
          n = (t = Array.isArray(t) ? t.map(V) : (t = V(t)) in i ? [t] : t.match(N) || []).length;
          for (; n--;) {
            delete i[t[n]];
          }
        }
        if (t === undefined || x.isEmptyObject(i)) {
          if (e.nodeType) {
            e[this.expando] = undefined;
          } else {
            delete e[this.expando];
          }
        }
      }
    },
    hasData: function (e) {
      var t = e[this.expando];
      return t !== undefined && !x.isEmptyObject(t);
    }
  };
  var G = new X();
  var K = new X();
  var Q = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;
  var Z = /[A-Z]/g;
  function J(e, t, n) {
    var i;
    var r;
    if (n === undefined && e.nodeType === 1) {
      i = "data-" + t.replace(Z, "-$&").toLowerCase();
      if (typeof (n = e.getAttribute(i)) == "string") {
        try {
          n = (r = n) === "true" || r !== "false" && (r === "null" ? null : r === +r + "" ? +r : Q.test(r) ? JSON.parse(r) : r);
        } catch (e) {}
        K.set(e, t, n);
      } else {
        n = undefined;
      }
    }
    return n;
  }
  x.extend({
    hasData: function (e) {
      return K.hasData(e) || G.hasData(e);
    },
    data: function (e, t, n) {
      return K.access(e, t, n);
    },
    removeData: function (e, t) {
      K.remove(e, t);
    },
    _data: function (e, t, n) {
      return G.access(e, t, n);
    },
    _removeData: function (e, t) {
      G.remove(e, t);
    }
  });
  x.fn.extend({
    data: function (e, t) {
      var n;
      var i;
      var r;
      var o = this[0];
      var a = o && o.attributes;
      if (e === undefined) {
        if (this.length && (r = K.get(o), o.nodeType === 1 && !G.get(o, "hasDataAttrs"))) {
          for (n = a.length; n--;) {
            if (a[n] && (i = a[n].name).indexOf("data-") === 0) {
              i = V(i.slice(5));
              J(o, i, r[i]);
            }
          }
          G.set(o, "hasDataAttrs", true);
        }
        return r;
      }
      if (typeof e == "object") {
        return this.each(function () {
          K.set(this, e);
        });
      } else {
        return B(this, function (t) {
          var n;
          if (o && t === undefined) {
            if ((n = K.get(o, e)) !== undefined || (n = J(o, e)) !== undefined) {
              return n;
            } else {
              return undefined;
            }
          }
          this.each(function () {
            K.set(this, e, t);
          });
        }, null, t, arguments.length > 1, null, true);
      }
    },
    removeData: function (e) {
      return this.each(function () {
        K.remove(this, e);
      });
    }
  });
  x.extend({
    queue: function (e, t, n) {
      var i;
      if (e) {
        t = (t || "fx") + "queue";
        i = G.get(e, t);
        if (n) {
          if (!i || Array.isArray(n)) {
            i = G.access(e, t, x.makeArray(n));
          } else {
            i.push(n);
          }
        }
        return i || [];
      }
    },
    dequeue: function (e, t) {
      t = t || "fx";
      var n = x.queue(e, t);
      var i = n.length;
      var r = n.shift();
      var o = x._queueHooks(e, t);
      if (r === "inprogress") {
        r = n.shift();
        i--;
      }
      if (r) {
        if (t === "fx") {
          n.unshift("inprogress");
        }
        delete o.stop;
        r.call(e, function () {
          x.dequeue(e, t);
        }, o);
      }
      if (!i && o) {
        o.empty.fire();
      }
    },
    _queueHooks: function (e, t) {
      var n = t + "queueHooks";
      return G.get(e, n) || G.access(e, n, {
        empty: x.Callbacks("once memory").add(function () {
          G.remove(e, [t + "queue", n]);
        })
      });
    }
  });
  x.fn.extend({
    queue: function (e, t) {
      var n = 2;
      if (typeof e != "string") {
        t = e;
        e = "fx";
        n--;
      }
      if (arguments.length < n) {
        return x.queue(this[0], e);
      } else if (t === undefined) {
        return this;
      } else {
        return this.each(function () {
          var n = x.queue(this, e, t);
          x._queueHooks(this, e);
          if (e === "fx" && n[0] !== "inprogress") {
            x.dequeue(this, e);
          }
        });
      }
    },
    dequeue: function (e) {
      return this.each(function () {
        x.dequeue(this, e);
      });
    },
    clearQueue: function (e) {
      return this.queue(e || "fx", []);
    },
    promise: function (e, t) {
      var n;
      var i = 1;
      var r = x.Deferred();
      var o = this;
      var a = this.length;
      var s = function () {
        if (! --i) {
          r.resolveWith(o, [o]);
        }
      };
      if (typeof e != "string") {
        t = e;
        e = undefined;
      }
      e = e || "fx";
      for (; a--;) {
        if ((n = G.get(o[a], e + "queueHooks")) && n.empty) {
          i++;
          n.empty.add(s);
        }
      }
      s();
      return r.promise(t);
    }
  });
  var ee = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
  var te = new RegExp("^(?:([+-])=|)(" + ee + ")([a-z%]*)$", "i");
  var ne = ["Top", "Right", "Bottom", "Left"];
  var ie = m.documentElement;
  var re = function (e) {
    return x.contains(e.ownerDocument, e);
  };
  var oe = {
    composed: true
  };
  if (ie.getRootNode) {
    re = function (e) {
      return x.contains(e.ownerDocument, e) || e.getRootNode(oe) === e.ownerDocument;
    };
  }
  var ae = function (e, t) {
    return (e = t || e).style.display === "none" || e.style.display === "" && re(e) && x.css(e, "display") === "none";
  };
  function se(e, t, n, i) {
    var r;
    var o;
    var a = 20;
    var s = i ? function () {
      return i.cur();
    } : function () {
      return x.css(e, t, "");
    };
    var l = s();
    var c = n && n[3] || (x.cssNumber[t] ? "" : "px");
    var u = e.nodeType && (x.cssNumber[t] || c !== "px" && +l) && te.exec(x.css(e, t));
    if (u && u[3] !== c) {
      l /= 2;
      c = c || u[3];
      u = +l || 1;
      for (; a--;) {
        x.style(e, t, u + c);
        if ((1 - o) * (1 - (o = s() / l || 0.5)) <= 0) {
          a = 0;
        }
        u /= o;
      }
      u *= 2;
      x.style(e, t, u + c);
      n = n || [];
    }
    if (n) {
      u = +u || +l || 0;
      r = n[1] ? u + (n[1] + 1) * n[2] : +n[2];
      if (i) {
        i.unit = c;
        i.start = u;
        i.end = r;
      }
    }
    return r;
  }
  var le = {};
  function ce(e, t) {
    for (var n, i, r, o, a, s, l, c = [], u = 0, d = e.length; u < d; u++) {
      if ((i = e[u]).style) {
        n = i.style.display;
        if (t) {
          if (n === "none") {
            c[u] = G.get(i, "display") || null;
            if (!c[u]) {
              i.style.display = "";
            }
          }
          if (i.style.display === "" && ae(i)) {
            c[u] = (l = a = o = undefined, a = (r = i).ownerDocument, s = r.nodeName, (l = le[s]) || (o = a.body.appendChild(a.createElement(s)), l = x.css(o, "display"), o.parentNode.removeChild(o), l === "none" && (l = "block"), le[s] = l));
          }
        } else if (n !== "none") {
          c[u] = "none";
          G.set(i, "display", n);
        }
      }
    }
    for (u = 0; u < d; u++) {
      if (c[u] != null) {
        e[u].style.display = c[u];
      }
    }
    return e;
  }
  x.fn.extend({
    show: function () {
      return ce(this, true);
    },
    hide: function () {
      return ce(this);
    },
    toggle: function (e) {
      if (typeof e == "boolean") {
        if (e) {
          return this.show();
        } else {
          return this.hide();
        }
      } else {
        return this.each(function () {
          if (ae(this)) {
            x(this).show();
          } else {
            x(this).hide();
          }
        });
      }
    }
  });
  var ue;
  var de;
  var he = /^(?:checkbox|radio)$/i;
  var fe = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
  var pe = /^$|^module$|\/(?:java|ecma)script/i;
  ue = m.createDocumentFragment().appendChild(m.createElement("div"));
  (de = m.createElement("input")).setAttribute("type", "radio");
  de.setAttribute("checked", "checked");
  de.setAttribute("name", "t");
  ue.appendChild(de);
  f.checkClone = ue.cloneNode(true).cloneNode(true).lastChild.checked;
  ue.innerHTML = "<textarea>x</textarea>";
  f.noCloneChecked = !!ue.cloneNode(true).lastChild.defaultValue;
  ue.innerHTML = "<option></option>";
  f.option = !!ue.lastChild;
  var ge = {
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""]
  };
  function me(e, t) {
    var n;
    n = e.getElementsByTagName !== undefined ? e.getElementsByTagName(t || "*") : e.querySelectorAll !== undefined ? e.querySelectorAll(t || "*") : [];
    if (t === undefined || t && A(e, t)) {
      return x.merge([e], n);
    } else {
      return n;
    }
  }
  function ve(e, t) {
    for (var n = 0, i = e.length; n < i; n++) {
      G.set(e[n], "globalEval", !t || G.get(t[n], "globalEval"));
    }
  }
  ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead;
  ge.th = ge.td;
  if (!f.option) {
    ge.optgroup = ge.option = [1, "<select multiple='multiple'>", "</select>"];
  }
  var ye = /<|&#?\w+;/;
  function be(e, t, n, i, r) {
    for (var o, a, s, l, c, u, d = t.createDocumentFragment(), h = [], f = 0, p = e.length; f < p; f++) {
      if ((o = e[f]) || o === 0) {
        if (b(o) === "object") {
          x.merge(h, o.nodeType ? [o] : o);
        } else if (ye.test(o)) {
          a = a || d.appendChild(t.createElement("div"));
          s = (fe.exec(o) || ["", ""])[1].toLowerCase();
          l = ge[s] || ge._default;
          a.innerHTML = l[1] + x.htmlPrefilter(o) + l[2];
          u = l[0];
          for (; u--;) {
            a = a.lastChild;
          }
          x.merge(h, a.childNodes);
          (a = d.firstChild).textContent = "";
        } else {
          h.push(t.createTextNode(o));
        }
      }
    }
    d.textContent = "";
    f = 0;
    for (; o = h[f++];) {
      if (i && x.inArray(o, i) > -1) {
        if (r) {
          r.push(o);
        }
      } else {
        c = re(o);
        a = me(d.appendChild(o), "script");
        if (c) {
          ve(a);
        }
        if (n) {
          for (u = 0; o = a[u++];) {
            if (pe.test(o.type || "")) {
              n.push(o);
            }
          }
        }
      }
    }
    return d;
  }
  var we = /^([^.]*)(?:\.(.+)|)/;
  function xe() {
    return true;
  }
  function _e() {
    return false;
  }
  function Ce(e, t) {
    return e === function () {
      try {
        return m.activeElement;
      } catch (e) {}
    }() == (t === "focus");
  }
  function Se(e, t, n, i, r, o) {
    var a;
    var s;
    if (typeof t == "object") {
      if (typeof n != "string") {
        i = i || n;
        n = undefined;
      }
      for (s in t) {
        Se(e, s, n, i, t[s], o);
      }
      return e;
    }
    if (i == null && r == null) {
      r = n;
      i = n = undefined;
    } else if (r == null) {
      if (typeof n == "string") {
        r = i;
        i = undefined;
      } else {
        r = i;
        i = n;
        n = undefined;
      }
    }
    if (r === false) {
      r = _e;
    } else if (!r) {
      return e;
    }
    if (o === 1) {
      a = r;
      (r = function (e) {
        x().off(e);
        return a.apply(this, arguments);
      }).guid = a.guid || (a.guid = x.guid++);
    }
    return e.each(function () {
      x.event.add(this, t, r, i, n);
    });
  }
  function ke(e, t, n) {
    if (n) {
      G.set(e, t, false);
      x.event.add(e, t, {
        namespace: false,
        handler: function (e) {
          var i;
          var o;
          var a = G.get(this, t);
          if (e.isTrigger & 1 && this[t]) {
            if (a.length) {
              if ((x.event.special[t] || {}).delegateType) {
                e.stopPropagation();
              }
            } else {
              a = r.call(arguments);
              G.set(this, t, a);
              i = n(this, t);
              this[t]();
              if (a !== (o = G.get(this, t)) || i) {
                G.set(this, t, false);
              } else {
                o = {};
              }
              if (a !== o) {
                e.stopImmediatePropagation();
                e.preventDefault();
                return o && o.value;
              }
            }
          } else if (a.length) {
            G.set(this, t, {
              value: x.event.trigger(x.extend(a[0], x.Event.prototype), a.slice(1), this)
            });
            e.stopImmediatePropagation();
          }
        }
      });
    } else if (G.get(e, t) === undefined) {
      x.event.add(e, t, xe);
    }
  }
  x.event = {
    global: {},
    add: function (e, t, n, i, r) {
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var h;
      var f;
      var p;
      var g;
      var m = G.get(e);
      if (Y(e)) {
        if (n.handler) {
          n = (o = n).handler;
          r = o.selector;
        }
        if (r) {
          x.find.matchesSelector(ie, r);
        }
        if (!n.guid) {
          n.guid = x.guid++;
        }
        if (!(l = m.events)) {
          l = m.events = Object.create(null);
        }
        if (!(a = m.handle)) {
          a = m.handle = function (t) {
            if (x !== undefined && x.event.triggered !== t.type) {
              return x.event.dispatch.apply(e, arguments);
            } else {
              return undefined;
            }
          };
        }
        c = (t = (t || "").match(N) || [""]).length;
        if (n.handler) {
          n = (o = n).handler;
          r = o.selector;
        }
        if (r) {
          x.find.matchesSelector(ie, r);
        }
        if (!n.guid) {
          n.guid = x.guid++;
        }
        if (!(l = m.events)) {
          l = m.events = Object.create(null);
        }
        if (!(a = m.handle)) {
          a = m.handle = function (t) {
            if (x !== undefined && x.event.triggered !== t.type) {
              return x.event.dispatch.apply(e, arguments);
            } else {
              return undefined;
            }
          };
        }
        c = (t = (t || "").match(N) || [""]).length;
        for (; c--;) {
          f = g = (s = we.exec(t[c]) || [])[1];
          p = (s[2] || "").split(".").sort();
          if (f) {
            d = x.event.special[f] || {};
            f = (r ? d.delegateType : d.bindType) || f;
            d = x.event.special[f] || {};
            u = x.extend({
              type: f,
              origType: g,
              data: i,
              handler: n,
              guid: n.guid,
              selector: r,
              needsContext: r && x.expr.match.needsContext.test(r),
              namespace: p.join(".")
            }, o);
            if (!(h = l[f])) {
              (h = l[f] = []).delegateCount = 0;
              if (!(d.setup && d.setup.call(e, i, p, a) !== false)) {
                if (e.addEventListener) {
                  e.addEventListener(f, a);
                }
              }
            }
            if (d.add) {
              d.add.call(e, u);
              if (!u.handler.guid) {
                u.handler.guid = n.guid;
              }
            }
            if (r) {
              h.splice(h.delegateCount++, 0, u);
            } else {
              h.push(u);
            }
            x.event.global[f] = true;
          }
        }
      }
    },
    remove: function (e, t, n, i, r) {
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var h;
      var f;
      var p;
      var g;
      var m = G.hasData(e) && G.get(e);
      if (m && (l = m.events)) {
        for (c = (t = (t || "").match(N) || [""]).length; c--;) {
          f = g = (s = we.exec(t[c]) || [])[1];
          p = (s[2] || "").split(".").sort();
          if (f) {
            d = x.event.special[f] || {};
            h = l[f = (i ? d.delegateType : d.bindType) || f] || [];
            s = s[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)");
            a = o = h.length;
            for (; o--;) {
              u = h[o];
              if (!(!r && g !== u.origType || n && n.guid !== u.guid || s && !s.test(u.namespace) || i && i !== u.selector && (i !== "**" || !u.selector))) {
                h.splice(o, 1);
                if (u.selector) {
                  h.delegateCount--;
                }
                if (d.remove) {
                  d.remove.call(e, u);
                }
              }
            }
            if (a && !h.length) {
              if (!(d.teardown && d.teardown.call(e, p, m.handle) !== false)) {
                x.removeEvent(e, f, m.handle);
              }
              delete l[f];
            }
          } else {
            for (f in l) {
              x.event.remove(e, f + t[c], n, i, true);
            }
          }
        }
        if (x.isEmptyObject(l)) {
          G.remove(e, "handle events");
        }
      }
    },
    dispatch: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s = new Array(arguments.length);
      var l = x.event.fix(e);
      var c = (G.get(this, "events") || Object.create(null))[l.type] || [];
      var u = x.event.special[l.type] || {};
      s[0] = l;
      t = 1;
      for (; t < arguments.length; t++) {
        s[t] = arguments[t];
      }
      l.delegateTarget = this;
      if (!u.preDispatch || u.preDispatch.call(this, l) !== false) {
        a = x.event.handlers.call(this, l, c);
        t = 0;
        for (; (r = a[t++]) && !l.isPropagationStopped();) {
          l.currentTarget = r.elem;
          n = 0;
          l.currentTarget = r.elem;
          n = 0;
          for (; (o = r.handlers[n++]) && !l.isImmediatePropagationStopped();) {
            if (!(l.rnamespace && o.namespace !== false && !l.rnamespace.test(o.namespace))) {
              l.handleObj = o;
              l.data = o.data;
              if ((i = ((x.event.special[o.origType] || {}).handle || o.handler).apply(r.elem, s)) !== undefined && (l.result = i) === false) {
                l.preventDefault();
                l.stopPropagation();
              }
            }
          }
        }
        if (u.postDispatch) {
          u.postDispatch.call(this, l);
        }
        return l.result;
      }
    },
    handlers: function (e, t) {
      var n;
      var i;
      var r;
      var o;
      var a;
      var s = [];
      var l = t.delegateCount;
      var c = e.target;
      if (l && c.nodeType && !(e.type === "click" && e.button >= 1)) {
        for (; c !== this; c = c.parentNode || this) {
          if (c.nodeType === 1 && (e.type !== "click" || c.disabled !== true)) {
            o = [];
            a = {};
            n = 0;
            for (; n < l; n++) {
              if (a[r = (i = t[n]).selector + " "] === undefined) {
                a[r] = i.needsContext ? x(r, this).index(c) > -1 : x.find(r, this, null, [c]).length;
              }
              if (a[r]) {
                o.push(i);
              }
            }
            if (o.length) {
              s.push({
                elem: c,
                handlers: o
              });
            }
          }
        }
      }
      c = this;
      if (l < t.length) {
        s.push({
          elem: c,
          handlers: t.slice(l)
        });
      }
      return s;
    },
    addProp: function (e, t) {
      Object.defineProperty(x.Event.prototype, e, {
        enumerable: true,
        configurable: true,
        get: p(t) ? function () {
          if (this.originalEvent) {
            return t(this.originalEvent);
          }
        } : function () {
          if (this.originalEvent) {
            return this.originalEvent[e];
          }
        },
        set: function (t) {
          Object.defineProperty(this, e, {
            enumerable: true,
            configurable: true,
            writable: true,
            value: t
          });
        }
      });
    },
    fix: function (e) {
      if (e[x.expando]) {
        return e;
      } else {
        return new x.Event(e);
      }
    },
    special: {
      load: {
        noBubble: true
      },
      click: {
        setup: function (e) {
          var t = this || e;
          if (he.test(t.type) && t.click && A(t, "input")) {
            ke(t, "click", xe);
          }
          return false;
        },
        trigger: function (e) {
          var t = this || e;
          if (he.test(t.type) && t.click && A(t, "input")) {
            ke(t, "click");
          }
          return true;
        },
        _default: function (e) {
          var t = e.target;
          return he.test(t.type) && t.click && A(t, "input") && G.get(t, "click") || A(t, "a");
        }
      },
      beforeunload: {
        postDispatch: function (e) {
          if (e.result !== undefined && e.originalEvent) {
            e.originalEvent.returnValue = e.result;
          }
        }
      }
    }
  };
  x.removeEvent = function (e, t, n) {
    if (e.removeEventListener) {
      e.removeEventListener(t, n);
    }
  };
  x.Event = function (e, t) {
    if (!(this instanceof x.Event)) {
      return new x.Event(e, t);
    }
    if (e && e.type) {
      this.originalEvent = e;
      this.type = e.type;
      this.isDefaultPrevented = e.defaultPrevented || e.defaultPrevented === undefined && e.returnValue === false ? xe : _e;
      this.target = e.target && e.target.nodeType === 3 ? e.target.parentNode : e.target;
      this.currentTarget = e.currentTarget;
      this.relatedTarget = e.relatedTarget;
    } else {
      this.type = e;
    }
    if (t) {
      x.extend(this, t);
    }
    this.timeStamp = e && e.timeStamp || Date.now();
    this[x.expando] = true;
  };
  x.Event.prototype = {
    constructor: x.Event,
    isDefaultPrevented: _e,
    isPropagationStopped: _e,
    isImmediatePropagationStopped: _e,
    isSimulated: false,
    preventDefault: function () {
      var e = this.originalEvent;
      this.isDefaultPrevented = xe;
      if (e && !this.isSimulated) {
        e.preventDefault();
      }
    },
    stopPropagation: function () {
      var e = this.originalEvent;
      this.isPropagationStopped = xe;
      if (e && !this.isSimulated) {
        e.stopPropagation();
      }
    },
    stopImmediatePropagation: function () {
      var e = this.originalEvent;
      this.isImmediatePropagationStopped = xe;
      if (e && !this.isSimulated) {
        e.stopImmediatePropagation();
      }
      this.stopPropagation();
    }
  };
  x.each({
    altKey: true,
    bubbles: true,
    cancelable: true,
    changedTouches: true,
    ctrlKey: true,
    detail: true,
    eventPhase: true,
    metaKey: true,
    pageX: true,
    pageY: true,
    shiftKey: true,
    view: true,
    char: true,
    code: true,
    charCode: true,
    key: true,
    keyCode: true,
    button: true,
    buttons: true,
    clientX: true,
    clientY: true,
    offsetX: true,
    offsetY: true,
    pointerId: true,
    pointerType: true,
    screenX: true,
    screenY: true,
    targetTouches: true,
    toElement: true,
    touches: true,
    which: true
  }, x.event.addProp);
  x.each({
    focus: "focusin",
    blur: "focusout"
  }, function (e, t) {
    x.event.special[e] = {
      setup: function () {
        ke(this, e, Ce);
        return false;
      },
      trigger: function () {
        ke(this, e);
        return true;
      },
      _default: function (t) {
        return G.get(t.target, e);
      },
      delegateType: t
    };
  });
  x.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function (e, t) {
    x.event.special[e] = {
      delegateType: t,
      bindType: t,
      handle: function (e) {
        var n;
        var i = e.relatedTarget;
        var r = e.handleObj;
        if (!(i && (i === this || x.contains(this, i)))) {
          e.type = r.origType;
          n = r.handler.apply(this, arguments);
          e.type = t;
        }
        return n;
      }
    };
  });
  x.fn.extend({
    on: function (e, t, n, i) {
      return Se(this, e, t, n, i);
    },
    one: function (e, t, n, i) {
      return Se(this, e, t, n, i, 1);
    },
    off: function (e, t, n) {
      var i;
      var r;
      if (e && e.preventDefault && e.handleObj) {
        i = e.handleObj;
        x(e.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler);
        return this;
      }
      if (typeof e == "object") {
        for (r in e) {
          this.off(r, t, e[r]);
        }
        return this;
      }
      if (!(t !== false && typeof t != "function")) {
        n = t;
        t = undefined;
      }
      if (n === false) {
        n = _e;
      }
      return this.each(function () {
        x.event.remove(this, e, n, t);
      });
    }
  });
  var Te = /<script|<style|<link/i;
  var Ae = /checked\s*(?:[^=]|=\s*.checked.)/i;
  var De = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
  function Ee(e, t) {
    return A(e, "table") && A(t.nodeType !== 11 ? t : t.firstChild, "tr") && x(e).children("tbody")[0] || e;
  }
  function Oe(e) {
    e.type = (e.getAttribute("type") !== null) + "/" + e.type;
    return e;
  }
  function Me(e) {
    if ((e.type || "").slice(0, 5) === "true/") {
      e.type = e.type.slice(5);
    } else {
      e.removeAttribute("type");
    }
    return e;
  }
  function Ie(e, t) {
    var n;
    var i;
    var r;
    var o;
    var a;
    var s;
    if (t.nodeType === 1) {
      if (G.hasData(e) && (s = G.get(e).events)) {
        G.remove(t, "handle events");
        for (r in s) {
          n = 0;
          i = s[r].length;
          n = 0;
          i = s[r].length;
          for (; n < i; n++) {
            x.event.add(t, r, s[r][n]);
          }
        }
      }
      if (K.hasData(e)) {
        o = K.access(e);
        a = x.extend({}, o);
        K.set(t, a);
      }
    }
  }
  function Pe(e, t, n, i) {
    t = o(t);
    var r;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d = 0;
    var h = e.length;
    var g = h - 1;
    var m = t[0];
    var v = p(m);
    if (v || h > 1 && typeof m == "string" && !f.checkClone && Ae.test(m)) {
      return e.each(function (r) {
        var o = e.eq(r);
        if (v) {
          t[0] = m.call(this, r, o.html());
        }
        Pe(o, t, n, i);
      });
    }
    if (h && (a = (r = be(t, e[0].ownerDocument, false, e, i)).firstChild, r.childNodes.length === 1 && (r = a), a || i)) {
      for (l = (s = x.map(me(r, "script"), Oe)).length; d < h; d++) {
        c = r;
        if (d !== g) {
          c = x.clone(c, true, true);
          if (l) {
            x.merge(s, me(c, "script"));
          }
        }
        n.call(e[d], c, d);
      }
      if (l) {
        u = s[s.length - 1].ownerDocument;
        x.map(s, Me);
        d = 0;
        u = s[s.length - 1].ownerDocument;
        x.map(s, Me);
        d = 0;
        for (; d < l; d++) {
          c = s[d];
          if (pe.test(c.type || "") && !G.access(c, "globalEval") && x.contains(u, c)) {
            if (c.src && (c.type || "").toLowerCase() !== "module") {
              if (x._evalUrl && !c.noModule) {
                x._evalUrl(c.src, {
                  nonce: c.nonce || c.getAttribute("nonce")
                }, u);
              }
            } else {
              y(c.textContent.replace(De, ""), c, u);
            }
          }
        }
      }
    }
    return e;
  }
  function Le(e, t, n) {
    for (var i, r = t ? x.filter(t, e) : e, o = 0; (i = r[o]) != null; o++) {
      if (!(n || i.nodeType !== 1)) {
        x.cleanData(me(i));
      }
      if (i.parentNode) {
        if (n && re(i)) {
          ve(me(i, "script"));
        }
        i.parentNode.removeChild(i);
      }
    }
    return e;
  }
  x.extend({
    htmlPrefilter: function (e) {
      return e;
    },
    clone: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u = e.cloneNode(true);
      var d = re(e);
      if (!(f.noCloneChecked || e.nodeType !== 1 && e.nodeType !== 11 || x.isXMLDoc(e))) {
        a = me(u);
        i = 0;
        r = (o = me(e)).length;
        a = me(u);
        i = 0;
        r = (o = me(e)).length;
        for (; i < r; i++) {
          s = o[i];
          if ((c = (l = a[i]).nodeName.toLowerCase()) === "input" && he.test(s.type)) {
            l.checked = s.checked;
          } else if (!(c !== "input" && c !== "textarea")) {
            l.defaultValue = s.defaultValue;
          }
        }
      }
      if (t) {
        if (n) {
          o = o || me(e);
          a = a || me(u);
          i = 0;
          r = o.length;
          o = o || me(e);
          a = a || me(u);
          i = 0;
          r = o.length;
          for (; i < r; i++) {
            Ie(o[i], a[i]);
          }
        } else {
          Ie(e, u);
        }
      }
      if ((a = me(u, "script")).length > 0) {
        ve(a, !d && me(e, "script"));
      }
      return u;
    },
    cleanData: function (e) {
      for (var t, n, i, r = x.event.special, o = 0; (n = e[o]) !== undefined; o++) {
        if (Y(n)) {
          if (t = n[G.expando]) {
            if (t.events) {
              for (i in t.events) {
                if (r[i]) {
                  x.event.remove(n, i);
                } else {
                  x.removeEvent(n, i, t.handle);
                }
              }
            }
            n[G.expando] = undefined;
          }
          if (n[K.expando]) {
            n[K.expando] = undefined;
          }
        }
      }
    }
  });
  x.fn.extend({
    detach: function (e) {
      return Le(this, e, true);
    },
    remove: function (e) {
      return Le(this, e);
    },
    text: function (e) {
      return B(this, function (e) {
        if (e === undefined) {
          return x.text(this);
        } else {
          return this.empty().each(function () {
            if (!(this.nodeType !== 1 && this.nodeType !== 11 && this.nodeType !== 9)) {
              this.textContent = e;
            }
          });
        }
      }, null, e, arguments.length);
    },
    append: function () {
      return Pe(this, arguments, function (e) {
        if (!(this.nodeType !== 1 && this.nodeType !== 11 && this.nodeType !== 9)) {
          Ee(this, e).appendChild(e);
        }
      });
    },
    prepend: function () {
      return Pe(this, arguments, function (e) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var t = Ee(this, e);
          t.insertBefore(e, t.firstChild);
        }
      });
    },
    before: function () {
      return Pe(this, arguments, function (e) {
        if (this.parentNode) {
          this.parentNode.insertBefore(e, this);
        }
      });
    },
    after: function () {
      return Pe(this, arguments, function (e) {
        if (this.parentNode) {
          this.parentNode.insertBefore(e, this.nextSibling);
        }
      });
    },
    empty: function () {
      for (var e, t = 0; (e = this[t]) != null; t++) {
        if (e.nodeType === 1) {
          x.cleanData(me(e, false));
          e.textContent = "";
        }
      }
      return this;
    },
    clone: function (e, t) {
      e = e != null && e;
      t = t == null ? e : t;
      return this.map(function () {
        return x.clone(this, e, t);
      });
    },
    html: function (e) {
      return B(this, function (e) {
        var t = this[0] || {};
        var n = 0;
        var i = this.length;
        if (e === undefined && t.nodeType === 1) {
          return t.innerHTML;
        }
        if (typeof e == "string" && !Te.test(e) && !ge[(fe.exec(e) || ["", ""])[1].toLowerCase()]) {
          e = x.htmlPrefilter(e);
          try {
            for (; n < i; n++) {
              if ((t = this[n] || {}).nodeType === 1) {
                x.cleanData(me(t, false));
                t.innerHTML = e;
              }
            }
            t = 0;
          } catch (e) {}
        }
        if (t) {
          this.empty().append(e);
        }
      }, null, e, arguments.length);
    },
    replaceWith: function () {
      var e = [];
      return Pe(this, arguments, function (t) {
        var n = this.parentNode;
        if (x.inArray(this, e) < 0) {
          x.cleanData(me(this));
          if (n) {
            n.replaceChild(t, this);
          }
        }
      }, e);
    }
  });
  x.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function (e, t) {
    x.fn[e] = function (e) {
      for (var n, i = [], r = x(e), o = r.length - 1, s = 0; s <= o; s++) {
        n = s === o ? this : this.clone(true);
        x(r[s])[t](n);
        a.apply(i, n.get());
      }
      return this.pushStack(i);
    };
  });
  var Ne = new RegExp("^(" + ee + ")(?!px)[a-z%]+$", "i");
  var Fe = /^--/;
  var Re = function (t) {
    var n = t.ownerDocument.defaultView;
    if (!(n && n.opener)) {
      n = e;
    }
    return n.getComputedStyle(t);
  };
  var je = function (e, t, n) {
    var i;
    var r;
    var o = {};
    for (r in t) {
      o[r] = e.style[r];
      e.style[r] = t[r];
    }
    i = n.call(e);
    for (r in t) {
      e.style[r] = o[r];
    }
    return i;
  };
  var $e = new RegExp(ne.join("|"), "i");
  var ze = "[\\x20\\t\\r\\n\\f]";
  var He = new RegExp("^" + ze + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ze + "+$", "g");
  function Be(e, t, n) {
    var i;
    var r;
    var o;
    var a;
    var s = Fe.test(t);
    var l = e.style;
    if (n = n || Re(e)) {
      a = n.getPropertyValue(t) || n[t];
      if (s) {
        a = a.replace(He, "$1");
      }
      if (!(a !== "" || re(e))) {
        a = x.style(e, t);
      }
      if (!f.pixelBoxStyles() && Ne.test(a) && $e.test(t)) {
        i = l.width;
        r = l.minWidth;
        o = l.maxWidth;
        l.minWidth = l.maxWidth = l.width = a;
        a = n.width;
        l.width = i;
        l.minWidth = r;
        l.maxWidth = o;
      }
    }
    if (a !== undefined) {
      return a + "";
    } else {
      return a;
    }
  }
  function qe(e, t) {
    return {
      get: function () {
        if (!e()) {
          return (this.get = t).apply(this, arguments);
        }
        delete this.get;
      }
    };
  }
  !function () {
    function t() {
      if (u) {
        c.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
        u.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
        ie.appendChild(c).appendChild(u);
        var t = e.getComputedStyle(u);
        i = t.top !== "1%";
        l = n(t.marginLeft) === 12;
        u.style.right = "60%";
        a = n(t.right) === 36;
        r = n(t.width) === 36;
        u.style.position = "absolute";
        o = n(u.offsetWidth / 3) === 12;
        ie.removeChild(c);
        u = null;
      }
    }
    function n(e) {
      return Math.round(parseFloat(e));
    }
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c = m.createElement("div");
    var u = m.createElement("div");
    if (u.style) {
      u.style.backgroundClip = "content-box";
      u.cloneNode(true).style.backgroundClip = "";
      f.clearCloneStyle = u.style.backgroundClip === "content-box";
      x.extend(f, {
        boxSizingReliable: function () {
          t();
          return r;
        },
        pixelBoxStyles: function () {
          t();
          return a;
        },
        pixelPosition: function () {
          t();
          return i;
        },
        reliableMarginLeft: function () {
          t();
          return l;
        },
        scrollboxSize: function () {
          t();
          return o;
        },
        reliableTrDimensions: function () {
          var t;
          var n;
          var i;
          var r;
          if (s == null) {
            t = m.createElement("table");
            n = m.createElement("tr");
            i = m.createElement("div");
            t.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
            n.style.cssText = "border:1px solid";
            n.style.height = "1px";
            i.style.height = "9px";
            i.style.display = "block";
            ie.appendChild(t).appendChild(n).appendChild(i);
            r = e.getComputedStyle(n);
            s = parseInt(r.height, 10) + parseInt(r.borderTopWidth, 10) + parseInt(r.borderBottomWidth, 10) === n.offsetHeight;
            ie.removeChild(t);
          }
          return s;
        }
      });
    }
  }();
  var We = ["Webkit", "Moz", "ms"];
  var Ue = m.createElement("div").style;
  var Ve = {};
  function Ye(e) {
    return x.cssProps[e] || Ve[e] || (e in Ue ? e : Ve[e] = function (e) {
      for (var t = e[0].toUpperCase() + e.slice(1), n = We.length; n--;) {
        if ((e = We[n] + t) in Ue) {
          return e;
        }
      }
    }(e) || e);
  }
  var Xe = /^(none|table(?!-c[ea]).+)/;
  var Ge = {
    position: "absolute",
    visibility: "hidden",
    display: "block"
  };
  var Ke = {
    letterSpacing: "0",
    fontWeight: "400"
  };
  function Qe(e, t, n) {
    var i = te.exec(t);
    if (i) {
      return Math.max(0, i[2] - (n || 0)) + (i[3] || "px");
    } else {
      return t;
    }
  }
  function Ze(e, t, n, i, r, o) {
    var a = t === "width" ? 1 : 0;
    var s = 0;
    var l = 0;
    if (n === (i ? "border" : "content")) {
      return 0;
    }
    for (; a < 4; a += 2) {
      if (n === "margin") {
        l += x.css(e, n + ne[a], true, r);
      }
      if (i) {
        if (n === "content") {
          l -= x.css(e, "padding" + ne[a], true, r);
        }
        if (n !== "margin") {
          l -= x.css(e, "border" + ne[a] + "Width", true, r);
        }
      } else {
        l += x.css(e, "padding" + ne[a], true, r);
        if (n !== "padding") {
          l += x.css(e, "border" + ne[a] + "Width", true, r);
        } else {
          s += x.css(e, "border" + ne[a] + "Width", true, r);
        }
      }
    }
    if (!i && o >= 0) {
      l += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - l - s - 0.5)) || 0;
    }
    return l;
  }
  function Je(e, t, n) {
    var i = Re(e);
    var r = (!f.boxSizingReliable() || n) && x.css(e, "boxSizing", false, i) === "border-box";
    var o = r;
    var a = Be(e, t, i);
    var s = "offset" + t[0].toUpperCase() + t.slice(1);
    if (Ne.test(a)) {
      if (!n) {
        return a;
      }
      a = "auto";
    }
    if ((!f.boxSizingReliable() && r || !f.reliableTrDimensions() && A(e, "tr") || a === "auto" || !parseFloat(a) && x.css(e, "display", false, i) === "inline") && e.getClientRects().length) {
      r = x.css(e, "boxSizing", false, i) === "border-box";
      if (o = s in e) {
        a = e[s];
      }
    }
    return (a = parseFloat(a) || 0) + Ze(e, t, n || (r ? "border" : "content"), o, i, a) + "px";
  }
  function et(e, t, n, i, r) {
    return new et.prototype.init(e, t, n, i, r);
  }
  x.extend({
    cssHooks: {
      opacity: {
        get: function (e, t) {
          if (t) {
            var n = Be(e, "opacity");
            if (n === "") {
              return "1";
            } else {
              return n;
            }
          }
        }
      }
    },
    cssNumber: {
      animationIterationCount: true,
      columnCount: true,
      fillOpacity: true,
      flexGrow: true,
      flexShrink: true,
      fontWeight: true,
      gridArea: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnStart: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowStart: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      widows: true,
      zIndex: true,
      zoom: true
    },
    cssProps: {},
    style: function (e, t, n, i) {
      if (e && e.nodeType !== 3 && e.nodeType !== 8 && e.style) {
        var r;
        var o;
        var a;
        var s = V(t);
        var l = Fe.test(t);
        var c = e.style;
        if (!l) {
          t = Ye(s);
        }
        a = x.cssHooks[t] || x.cssHooks[s];
        if (n === undefined) {
          if (a && "get" in a && (r = a.get(e, false, i)) !== undefined) {
            return r;
          } else {
            return c[t];
          }
        }
        if ((o = typeof n) == "string" && (r = te.exec(n)) && r[1]) {
          n = se(e, t, r);
          o = "number";
        }
        if (n != null && n == n) {
          if (!(o !== "number" || l)) {
            n += r && r[3] || (x.cssNumber[s] ? "" : "px");
          }
          if (!(f.clearCloneStyle || n !== "" || t.indexOf("background") !== 0)) {
            c[t] = "inherit";
          }
          if (!(a && "set" in a && (n = a.set(e, n, i)) === undefined)) {
            if (l) {
              c.setProperty(t, n);
            } else {
              c[t] = n;
            }
          }
        }
      }
    },
    css: function (e, t, n, i) {
      var r;
      var o;
      var a;
      var s = V(t);
      if (!Fe.test(t)) {
        t = Ye(s);
      }
      if ((a = x.cssHooks[t] || x.cssHooks[s]) && "get" in a) {
        r = a.get(e, true, n);
      }
      if (r === undefined) {
        r = Be(e, t, i);
      }
      if (r === "normal" && t in Ke) {
        r = Ke[t];
      }
      if (n === "" || n) {
        o = parseFloat(r);
        if (n === true || isFinite(o)) {
          return o || 0;
        } else {
          return r;
        }
      } else {
        return r;
      }
    }
  });
  x.each(["height", "width"], function (e, t) {
    x.cssHooks[t] = {
      get: function (e, n, i) {
        if (n) {
          if (!Xe.test(x.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width) {
            return Je(e, t, i);
          } else {
            return je(e, Ge, function () {
              return Je(e, t, i);
            });
          }
        }
      },
      set: function (e, n, i) {
        var r;
        var o = Re(e);
        var a = !f.scrollboxSize() && o.position === "absolute";
        var s = (a || i) && x.css(e, "boxSizing", false, o) === "border-box";
        var l = i ? Ze(e, t, i, s, o) : 0;
        if (s && a) {
          l -= Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - parseFloat(o[t]) - Ze(e, t, "border", false, o) - 0.5);
        }
        if (l && (r = te.exec(n)) && (r[3] || "px") !== "px") {
          e.style[t] = n;
          n = x.css(e, t);
        }
        return Qe(0, n, l);
      }
    };
  });
  x.cssHooks.marginLeft = qe(f.reliableMarginLeft, function (e, t) {
    if (t) {
      return (parseFloat(Be(e, "marginLeft")) || e.getBoundingClientRect().left - je(e, {
        marginLeft: 0
      }, function () {
        return e.getBoundingClientRect().left;
      })) + "px";
    }
  });
  x.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function (e, t) {
    x.cssHooks[e + t] = {
      expand: function (n) {
        for (var i = 0, r = {}, o = typeof n == "string" ? n.split(" ") : [n]; i < 4; i++) {
          r[e + ne[i] + t] = o[i] || o[i - 2] || o[0];
        }
        return r;
      }
    };
    if (e !== "margin") {
      x.cssHooks[e + t].set = Qe;
    }
  });
  x.fn.extend({
    css: function (e, t) {
      return B(this, function (e, t, n) {
        var i;
        var r;
        var o = {};
        var a = 0;
        if (Array.isArray(t)) {
          i = Re(e);
          r = t.length;
          for (; a < r; a++) {
            o[t[a]] = x.css(e, t[a], false, i);
          }
          return o;
        }
        if (n !== undefined) {
          return x.style(e, t, n);
        } else {
          return x.css(e, t);
        }
      }, e, t, arguments.length > 1);
    }
  });
  ((x.Tween = et).prototype = {
    constructor: et,
    init: function (e, t, n, i, r, o) {
      this.elem = e;
      this.prop = n;
      this.easing = r || x.easing._default;
      this.options = t;
      this.start = this.now = this.cur();
      this.end = i;
      this.unit = o || (x.cssNumber[n] ? "" : "px");
    },
    cur: function () {
      var e = et.propHooks[this.prop];
      if (e && e.get) {
        return e.get(this);
      } else {
        return et.propHooks._default.get(this);
      }
    },
    run: function (e) {
      var t;
      var n = et.propHooks[this.prop];
      if (this.options.duration) {
        this.pos = t = x.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration);
      } else {
        this.pos = t = e;
      }
      this.now = (this.end - this.start) * t + this.start;
      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }
      if (n && n.set) {
        n.set(this);
      } else {
        et.propHooks._default.set(this);
      }
      return this;
    }
  }).init.prototype = et.prototype;
  (et.propHooks = {
    _default: {
      get: function (e) {
        var t;
        if (e.elem.nodeType !== 1 || e.elem[e.prop] != null && e.elem.style[e.prop] == null) {
          return e.elem[e.prop];
        } else if ((t = x.css(e.elem, e.prop, "")) && t !== "auto") {
          return t;
        } else {
          return 0;
        }
      },
      set: function (e) {
        if (x.fx.step[e.prop]) {
          x.fx.step[e.prop](e);
        } else if (e.elem.nodeType !== 1 || !x.cssHooks[e.prop] && e.elem.style[Ye(e.prop)] == null) {
          e.elem[e.prop] = e.now;
        } else {
          x.style(e.elem, e.prop, e.now + e.unit);
        }
      }
    }
  }).scrollTop = et.propHooks.scrollLeft = {
    set: function (e) {
      if (e.elem.nodeType && e.elem.parentNode) {
        e.elem[e.prop] = e.now;
      }
    }
  };
  x.easing = {
    linear: function (e) {
      return e;
    },
    swing: function (e) {
      return 0.5 - Math.cos(e * Math.PI) / 2;
    },
    _default: "swing"
  };
  x.fx = et.prototype.init;
  x.fx.step = {};
  var tt;
  var nt;
  var it;
  var rt;
  var ot = /^(?:toggle|show|hide)$/;
  var at = /queueHooks$/;
  function st() {
    if (nt) {
      if (m.hidden === false && e.requestAnimationFrame) {
        e.requestAnimationFrame(st);
      } else {
        e.setTimeout(st, x.fx.interval);
      }
      x.fx.tick();
    }
  }
  function lt() {
    e.setTimeout(function () {
      tt = undefined;
    });
    return tt = Date.now();
  }
  function ct(e, t) {
    var n;
    var i = 0;
    var r = {
      height: e
    };
    for (t = t ? 1 : 0; i < 4; i += 2 - t) {
      r["margin" + (n = ne[i])] = r["padding" + n] = e;
    }
    if (t) {
      r.opacity = r.width = e;
    }
    return r;
  }
  function ut(e, t, n) {
    for (var i, r = (dt.tweeners[t] || []).concat(dt.tweeners["*"]), o = 0, a = r.length; o < a; o++) {
      if (i = r[o].call(n, t, e)) {
        return i;
      }
    }
  }
  function dt(e, t, n) {
    var i;
    var r;
    var o = 0;
    var a = dt.prefilters.length;
    var s = x.Deferred().always(function () {
      delete l.elem;
    });
    var l = function () {
      if (r) {
        return false;
      }
      for (var t = tt || lt(), n = Math.max(0, c.startTime + c.duration - t), i = 1 - (n / c.duration || 0), o = 0, a = c.tweens.length; o < a; o++) {
        c.tweens[o].run(i);
      }
      s.notifyWith(e, [c, i, n]);
      if (i < 1 && a) {
        return n;
      } else {
        if (!a) {
          s.notifyWith(e, [c, 1, 0]);
        }
        s.resolveWith(e, [c]);
        return false;
      }
    };
    var c = s.promise({
      elem: e,
      props: x.extend({}, t),
      opts: x.extend(true, {
        specialEasing: {},
        easing: x.easing._default
      }, n),
      originalProperties: t,
      originalOptions: n,
      startTime: tt || lt(),
      duration: n.duration,
      tweens: [],
      createTween: function (t, n) {
        var i = x.Tween(e, c.opts, t, n, c.opts.specialEasing[t] || c.opts.easing);
        c.tweens.push(i);
        return i;
      },
      stop: function (t) {
        var n = 0;
        var i = t ? c.tweens.length : 0;
        if (r) {
          return this;
        }
        for (r = true; n < i; n++) {
          c.tweens[n].run(1);
        }
        if (t) {
          s.notifyWith(e, [c, 1, 0]);
          s.resolveWith(e, [c, t]);
        } else {
          s.rejectWith(e, [c, t]);
        }
        return this;
      }
    });
    var u = c.props;
    for (function (e, t) {
      var n;
      var i;
      var r;
      var o;
      var a;
      for (n in e) {
        r = t[i = V(n)];
        o = e[n];
        if (Array.isArray(o)) {
          r = o[1];
          o = e[n] = o[0];
        }
        if (n !== i) {
          e[i] = o;
          delete e[n];
        }
        if ((a = x.cssHooks[i]) && ("expand" in a)) {
          o = a.expand(o);
          delete e[i];
          for (n in o) {
            if (!(n in e)) {
              e[n] = o[n];
              t[n] = r;
            }
          }
        } else {
          t[i] = r;
        }
      }
    }(u, c.opts.specialEasing); o < a; o++) {
      if (i = dt.prefilters[o].call(c, e, u, c.opts)) {
        if (p(i.stop)) {
          x._queueHooks(c.elem, c.opts.queue).stop = i.stop.bind(i);
        }
        return i;
      }
    }
    x.map(u, ut, c);
    if (p(c.opts.start)) {
      c.opts.start.call(e, c);
    }
    c.progress(c.opts.progress).done(c.opts.done, c.opts.complete).fail(c.opts.fail).always(c.opts.always);
    x.fx.timer(x.extend(l, {
      elem: e,
      anim: c,
      queue: c.opts.queue
    }));
    return c;
  }
  x.Animation = x.extend(dt, {
    tweeners: {
      "*": [function (e, t) {
        var n = this.createTween(e, t);
        se(n.elem, e, te.exec(t), n);
        return n;
      }]
    },
    tweener: function (e, t) {
      if (p(e)) {
        t = e;
        e = ["*"];
      } else {
        e = e.match(N);
      }
      for (var n, i = 0, r = e.length; i < r; i++) {
        n = e[i];
        dt.tweeners[n] = dt.tweeners[n] || [];
        dt.tweeners[n].unshift(t);
      }
    },
    prefilters: [function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d = "width" in t || "height" in t;
      var h = this;
      var f = {};
      var p = e.style;
      var g = e.nodeType && ae(e);
      var m = G.get(e, "fxshow");
      if (!n.queue) {
        if ((a = x._queueHooks(e, "fx")).unqueued == null) {
          a.unqueued = 0;
          s = a.empty.fire;
          a.empty.fire = function () {
            if (!a.unqueued) {
              s();
            }
          };
        }
        a.unqueued++;
        h.always(function () {
          h.always(function () {
            a.unqueued--;
            if (!x.queue(e, "fx").length) {
              a.empty.fire();
            }
          });
        });
      }
      for (i in t) {
        r = t[i];
        if (ot.test(r)) {
          delete t[i];
          o = o || r === "toggle";
          if (r === (g ? "hide" : "show")) {
            if (r !== "show" || !m || m[i] === undefined) {
              continue;
            }
            g = true;
          }
          f[i] = m && m[i] || x.style(e, i);
        }
      }
      if ((l = !x.isEmptyObject(t)) || !x.isEmptyObject(f)) {
        if (d && e.nodeType === 1) {
          n.overflow = [p.overflow, p.overflowX, p.overflowY];
          if ((c = m && m.display) == null) {
            c = G.get(e, "display");
          }
          if ((u = x.css(e, "display")) === "none") {
            if (c) {
              u = c;
            } else {
              ce([e], true);
              c = e.style.display || c;
              u = x.css(e, "display");
              ce([e]);
            }
          }
          if ((u === "inline" || u === "inline-block" && c != null) && x.css(e, "float") === "none") {
            if (!l) {
              h.done(function () {
                p.display = c;
              });
              if (c == null) {
                u = p.display;
                c = u === "none" ? "" : u;
              }
            }
            p.display = "inline-block";
          }
        }
        if (n.overflow) {
          p.overflow = "hidden";
          h.always(function () {
            p.overflow = n.overflow[0];
            p.overflowX = n.overflow[1];
            p.overflowY = n.overflow[2];
          });
        }
        l = false;
        for (i in f) {
          if (!l) {
            if (m) {
              if ("hidden" in m) {
                g = m.hidden;
              }
            } else {
              m = G.access(e, "fxshow", {
                display: c
              });
            }
            if (o) {
              m.hidden = !g;
            }
            if (g) {
              ce([e], true);
            }
            h.done(function () {
              if (!g) {
                ce([e]);
              }
              G.remove(e, "fxshow");
              for (i in f) {
                x.style(e, i, f[i]);
              }
            });
          }
          l = ut(g ? m[i] : 0, i, h);
          if (!(i in m)) {
            m[i] = l.start;
            if (g) {
              l.end = l.start;
              l.start = 0;
            }
          }
        }
      }
    }],
    prefilter: function (e, t) {
      if (t) {
        dt.prefilters.unshift(e);
      } else {
        dt.prefilters.push(e);
      }
    }
  });
  x.speed = function (e, t, n) {
    var i = e && typeof e == "object" ? x.extend({}, e) : {
      complete: n || !n && t || p(e) && e,
      duration: e,
      easing: n && t || t && !p(t) && t
    };
    if (x.fx.off) {
      i.duration = 0;
    } else if (typeof i.duration != "number") {
      if (i.duration in x.fx.speeds) {
        i.duration = x.fx.speeds[i.duration];
      } else {
        i.duration = x.fx.speeds._default;
      }
    }
    if (!(i.queue != null && i.queue !== true)) {
      i.queue = "fx";
    }
    i.old = i.complete;
    i.complete = function () {
      if (p(i.old)) {
        i.old.call(this);
      }
      if (i.queue) {
        x.dequeue(this, i.queue);
      }
    };
    return i;
  };
  x.fn.extend({
    fadeTo: function (e, t, n, i) {
      return this.filter(ae).css("opacity", 0).show().end().animate({
        opacity: t
      }, e, n, i);
    },
    animate: function (e, t, n, i) {
      var r = x.isEmptyObject(e);
      var o = x.speed(t, n, i);
      var a = function () {
        var t = dt(this, x.extend({}, e), o);
        if (r || G.get(this, "finish")) {
          t.stop(true);
        }
      };
      a.finish = a;
      if (r || o.queue === false) {
        return this.each(a);
      } else {
        return this.queue(o.queue, a);
      }
    },
    stop: function (e, t, n) {
      var i = function (e) {
        var t = e.stop;
        delete e.stop;
        t(n);
      };
      if (typeof e != "string") {
        n = t;
        t = e;
        e = undefined;
      }
      if (t) {
        this.queue(e || "fx", []);
      }
      return this.each(function () {
        var t = true;
        var r = e != null && e + "queueHooks";
        var o = x.timers;
        var a = G.get(this);
        if (r) {
          if (a[r] && a[r].stop) {
            i(a[r]);
          }
        } else {
          for (r in a) {
            if (a[r] && a[r].stop && at.test(r)) {
              i(a[r]);
            }
          }
        }
        for (r = o.length; r--;) {
          if (!(o[r].elem !== this || e != null && o[r].queue !== e)) {
            o[r].anim.stop(n);
            t = false;
            o.splice(r, 1);
          }
        }
        if (!(!t && n)) {
          x.dequeue(this, e);
        }
      });
    },
    finish: function (e) {
      if (e !== false) {
        e = e || "fx";
      }
      return this.each(function () {
        var t;
        var n = G.get(this);
        var i = n[e + "queue"];
        var r = n[e + "queueHooks"];
        var o = x.timers;
        var a = i ? i.length : 0;
        n.finish = true;
        x.queue(this, e, []);
        if (r && r.stop) {
          r.stop.call(this, true);
        }
        t = o.length;
        for (; t--;) {
          if (o[t].elem === this && o[t].queue === e) {
            o[t].anim.stop(true);
            o.splice(t, 1);
          }
        }
        for (t = 0; t < a; t++) {
          if (i[t] && i[t].finish) {
            i[t].finish.call(this);
          }
        }
        delete n.finish;
      });
    }
  });
  x.each(["toggle", "show", "hide"], function (e, t) {
    var n = x.fn[t];
    x.fn[t] = function (e, i, r) {
      if (e == null || typeof e == "boolean") {
        return n.apply(this, arguments);
      } else {
        return this.animate(ct(t, true), e, i, r);
      }
    };
  });
  x.each({
    slideDown: ct("show"),
    slideUp: ct("hide"),
    slideToggle: ct("toggle"),
    fadeIn: {
      opacity: "show"
    },
    fadeOut: {
      opacity: "hide"
    },
    fadeToggle: {
      opacity: "toggle"
    }
  }, function (e, t) {
    x.fn[e] = function (e, n, i) {
      return this.animate(t, e, n, i);
    };
  });
  x.timers = [];
  x.fx.tick = function () {
    var e;
    var t = 0;
    var n = x.timers;
    for (tt = Date.now(); t < n.length; t++) {
      if (!((e = n[t])() || n[t] !== e)) {
        n.splice(t--, 1);
      }
    }
    if (!n.length) {
      x.fx.stop();
    }
    tt = undefined;
  };
  x.fx.timer = function (e) {
    x.timers.push(e);
    x.fx.start();
  };
  x.fx.interval = 13;
  x.fx.start = function () {
    if (!nt) {
      nt = true;
      st();
    }
  };
  x.fx.stop = function () {
    nt = null;
  };
  x.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
  };
  x.fn.delay = function (t, n) {
    t = x.fx && x.fx.speeds[t] || t;
    n = n || "fx";
    return this.queue(n, function (n, i) {
      var r = e.setTimeout(n, t);
      i.stop = function () {
        e.clearTimeout(r);
      };
    });
  };
  it = m.createElement("input");
  rt = m.createElement("select").appendChild(m.createElement("option"));
  it.type = "checkbox";
  f.checkOn = it.value !== "";
  f.optSelected = rt.selected;
  (it = m.createElement("input")).value = "t";
  it.type = "radio";
  f.radioValue = it.value === "t";
  var ht;
  var ft = x.expr.attrHandle;
  x.fn.extend({
    attr: function (e, t) {
      return B(this, x.attr, e, t, arguments.length > 1);
    },
    removeAttr: function (e) {
      return this.each(function () {
        x.removeAttr(this, e);
      });
    }
  });
  x.extend({
    attr: function (e, t, n) {
      var i;
      var r;
      var o = e.nodeType;
      if (o !== 3 && o !== 8 && o !== 2) {
        if (e.getAttribute === undefined) {
          return x.prop(e, t, n);
        } else {
          if (!(o === 1 && x.isXMLDoc(e))) {
            r = x.attrHooks[t.toLowerCase()] || (x.expr.match.bool.test(t) ? ht : undefined);
          }
          if (n !== undefined) {
            if (n === null) {
              return void x.removeAttr(e, t);
            } else if (r && "set" in r && (i = r.set(e, n, t)) !== undefined) {
              return i;
            } else {
              e.setAttribute(t, n + "");
              return n;
            }
          } else if (r && "get" in r && (i = r.get(e, t)) !== null) {
            return i;
          } else if ((i = x.find.attr(e, t)) == null) {
            return undefined;
          } else {
            return i;
          }
        }
      }
    },
    attrHooks: {
      type: {
        set: function (e, t) {
          if (!f.radioValue && t === "radio" && A(e, "input")) {
            var n = e.value;
            e.setAttribute("type", t);
            if (n) {
              e.value = n;
            }
            return t;
          }
        }
      }
    },
    removeAttr: function (e, t) {
      var n;
      var i = 0;
      var r = t && t.match(N);
      if (r && e.nodeType === 1) {
        for (; n = r[i++];) {
          e.removeAttribute(n);
        }
      }
    }
  });
  ht = {
    set: function (e, t, n) {
      if (t === false) {
        x.removeAttr(e, n);
      } else {
        e.setAttribute(n, n);
      }
      return n;
    }
  };
  x.each(x.expr.match.bool.source.match(/\w+/g), function (e, t) {
    var n = ft[t] || x.find.attr;
    ft[t] = function (e, t, i) {
      var r;
      var o;
      var a = t.toLowerCase();
      if (!i) {
        o = ft[a];
        ft[a] = r;
        r = n(e, t, i) != null ? a : null;
        ft[a] = o;
      }
      return r;
    };
  });
  var pt = /^(?:input|select|textarea|button)$/i;
  var gt = /^(?:a|area)$/i;
  function mt(e) {
    return (e.match(N) || []).join(" ");
  }
  function vt(e) {
    return e.getAttribute && e.getAttribute("class") || "";
  }
  function yt(e) {
    if (Array.isArray(e)) {
      return e;
    } else {
      return typeof e == "string" && e.match(N) || [];
    }
  }
  x.fn.extend({
    prop: function (e, t) {
      return B(this, x.prop, e, t, arguments.length > 1);
    },
    removeProp: function (e) {
      return this.each(function () {
        delete this[x.propFix[e] || e];
      });
    }
  });
  x.extend({
    prop: function (e, t, n) {
      var i;
      var r;
      var o = e.nodeType;
      if (o !== 3 && o !== 8 && o !== 2) {
        if (!(o === 1 && x.isXMLDoc(e))) {
          t = x.propFix[t] || t;
          r = x.propHooks[t];
        }
        if (n !== undefined) {
          if (r && "set" in r && (i = r.set(e, n, t)) !== undefined) {
            return i;
          } else {
            return e[t] = n;
          }
        } else if (r && "get" in r && (i = r.get(e, t)) !== null) {
          return i;
        } else {
          return e[t];
        }
      }
    },
    propHooks: {
      tabIndex: {
        get: function (e) {
          var t = x.find.attr(e, "tabindex");
          if (t) {
            return parseInt(t, 10);
          } else if (pt.test(e.nodeName) || gt.test(e.nodeName) && e.href) {
            return 0;
          } else {
            return -1;
          }
        }
      }
    },
    propFix: {
      for: "htmlFor",
      class: "className"
    }
  });
  if (!f.optSelected) {
    x.propHooks.selected = {
      get: function (e) {
        var t = e.parentNode;
        if (t && t.parentNode) {
          t.parentNode.selectedIndex;
        }
        return null;
      },
      set: function (e) {
        var t = e.parentNode;
        if (t) {
          t.selectedIndex;
          if (t.parentNode) {
            t.parentNode.selectedIndex;
          }
        }
      }
    };
  }
  x.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
    x.propFix[this.toLowerCase()] = this;
  });
  x.fn.extend({
    addClass: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      if (p(e)) {
        return this.each(function (t) {
          x(this).addClass(e.call(this, t, vt(this)));
        });
      } else if ((t = yt(e)).length) {
        return this.each(function () {
          i = vt(this);
          if (n = this.nodeType === 1 && " " + mt(i) + " ") {
            for (o = 0; o < t.length; o++) {
              r = t[o];
              if (n.indexOf(" " + r + " ") < 0) {
                n += r + " ";
              }
            }
            a = mt(n);
            if (i !== a) {
              this.setAttribute("class", a);
            }
          }
        });
      } else {
        return this;
      }
    },
    removeClass: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      if (p(e)) {
        return this.each(function (t) {
          x(this).removeClass(e.call(this, t, vt(this)));
        });
      } else if (arguments.length) {
        if ((t = yt(e)).length) {
          return this.each(function () {
            i = vt(this);
            if (n = this.nodeType === 1 && " " + mt(i) + " ") {
              for (o = 0; o < t.length; o++) {
                for (r = t[o]; n.indexOf(" " + r + " ") > -1;) {
                  n = n.replace(" " + r + " ", " ");
                }
              }
              a = mt(n);
              if (i !== a) {
                this.setAttribute("class", a);
              }
            }
          });
        } else {
          return this;
        }
      } else {
        return this.attr("class", "");
      }
    },
    toggleClass: function (e, t) {
      var n;
      var i;
      var r;
      var o;
      var a = typeof e;
      var s = a === "string" || Array.isArray(e);
      if (p(e)) {
        return this.each(function (n) {
          x(this).toggleClass(e.call(this, n, vt(this), t), t);
        });
      } else if (typeof t == "boolean" && s) {
        if (t) {
          return this.addClass(e);
        } else {
          return this.removeClass(e);
        }
      } else {
        n = yt(e);
        return this.each(function () {
          if (s) {
            o = x(this);
            r = 0;
            o = x(this);
            r = 0;
            for (; r < n.length; r++) {
              i = n[r];
              if (o.hasClass(i)) {
                o.removeClass(i);
              } else {
                o.addClass(i);
              }
            }
          } else if (!(e !== undefined && a !== "boolean")) {
            if (i = vt(this)) {
              G.set(this, "__className__", i);
            }
            if (this.setAttribute) {
              this.setAttribute("class", i || e === false ? "" : G.get(this, "__className__") || "");
            }
          }
        });
      }
    },
    hasClass: function (e) {
      var t;
      var n;
      var i = 0;
      for (t = " " + e + " "; n = this[i++];) {
        if (n.nodeType === 1 && (" " + mt(vt(n)) + " ").indexOf(t) > -1) {
          return true;
        }
      }
      return false;
    }
  });
  var bt = /\r/g;
  x.fn.extend({
    val: function (e) {
      var t;
      var n;
      var i;
      var r = this[0];
      if (arguments.length) {
        i = p(e);
        return this.each(function (n) {
          var r;
          if (this.nodeType === 1) {
            if ((r = i ? e.call(this, n, x(this).val()) : e) == null) {
              r = "";
            } else if (typeof r == "number") {
              r += "";
            } else if (Array.isArray(r)) {
              r = x.map(r, function (e) {
                if (e == null) {
                  return "";
                } else {
                  return e + "";
                }
              });
            }
            if (!((t = x.valHooks[this.type] || x.valHooks[this.nodeName.toLowerCase()]) && "set" in t && t.set(this, r, "value") !== undefined)) {
              this.value = r;
            }
          }
        });
      } else if (r) {
        if ((t = x.valHooks[r.type] || x.valHooks[r.nodeName.toLowerCase()]) && "get" in t && (n = t.get(r, "value")) !== undefined) {
          return n;
        } else if (typeof (n = r.value) == "string") {
          return n.replace(bt, "");
        } else if (n == null) {
          return "";
        } else {
          return n;
        }
      } else {
        return undefined;
      }
    }
  });
  x.extend({
    valHooks: {
      option: {
        get: function (e) {
          var t = x.find.attr(e, "value");
          if (t != null) {
            return t;
          } else {
            return mt(x.text(e));
          }
        }
      },
      select: {
        get: function (e) {
          var t;
          var n;
          var i;
          var r = e.options;
          var o = e.selectedIndex;
          var a = e.type === "select-one";
          var s = a ? null : [];
          var l = a ? o + 1 : r.length;
          for (i = o < 0 ? l : a ? o : 0; i < l; i++) {
            if (((n = r[i]).selected || i === o) && !n.disabled && (!n.parentNode.disabled || !A(n.parentNode, "optgroup"))) {
              t = x(n).val();
              if (a) {
                return t;
              }
              s.push(t);
            }
          }
          return s;
        },
        set: function (e, t) {
          for (var n, i, r = e.options, o = x.makeArray(t), a = r.length; a--;) {
            if ((i = r[a]).selected = x.inArray(x.valHooks.option.get(i), o) > -1) {
              n = true;
            }
          }
          if (!n) {
            e.selectedIndex = -1;
          }
          return o;
        }
      }
    }
  });
  x.each(["radio", "checkbox"], function () {
    x.valHooks[this] = {
      set: function (e, t) {
        if (Array.isArray(t)) {
          return e.checked = x.inArray(x(e).val(), t) > -1;
        }
      }
    };
    if (!f.checkOn) {
      x.valHooks[this].get = function (e) {
        if (e.getAttribute("value") === null) {
          return "on";
        } else {
          return e.value;
        }
      };
    }
  });
  f.focusin = "onfocusin" in e;
  var wt = /^(?:focusinfocus|focusoutblur)$/;
  var xt = function (e) {
    e.stopPropagation();
  };
  x.extend(x.event, {
    trigger: function (t, n, i, r) {
      var o;
      var a;
      var s;
      var l;
      var c;
      var d;
      var h;
      var f;
      var v = [i || m];
      var y = u.call(t, "type") ? t.type : t;
      var b = u.call(t, "namespace") ? t.namespace.split(".") : [];
      a = f = s = i = i || m;
      if (i.nodeType !== 3 && i.nodeType !== 8 && !wt.test(y + x.event.triggered) && (y.indexOf(".") > -1 && (y = (b = y.split(".")).shift(), b.sort()), c = y.indexOf(":") < 0 && "on" + y, (t = t[x.expando] ? t : new x.Event(y, typeof t == "object" && t)).isTrigger = r ? 2 : 3, t.namespace = b.join("."), t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + b.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, t.result = undefined, t.target || (t.target = i), n = n == null ? [t] : x.makeArray(n, [t]), h = x.event.special[y] || {}, r || !h.trigger || h.trigger.apply(i, n) !== false)) {
        if (!r && !h.noBubble && !g(i)) {
          l = h.delegateType || y;
          if (!wt.test(l + y)) {
            a = a.parentNode;
          }
          for (; a; a = a.parentNode) {
            v.push(a);
            s = a;
          }
          if (s === (i.ownerDocument || m)) {
            v.push(s.defaultView || s.parentWindow || e);
          }
        }
        for (o = 0; (a = v[o++]) && !t.isPropagationStopped();) {
          f = a;
          t.type = o > 1 ? l : h.bindType || y;
          if (d = (G.get(a, "events") || Object.create(null))[t.type] && G.get(a, "handle")) {
            d.apply(a, n);
          }
          if ((d = c && a[c]) && d.apply && Y(a)) {
            t.result = d.apply(a, n);
            if (t.result === false) {
              t.preventDefault();
            }
          }
        }
        t.type = y;
        if (!(r || t.isDefaultPrevented() || h._default && h._default.apply(v.pop(), n) !== false || !Y(i))) {
          if (c && p(i[y]) && !g(i)) {
            if (s = i[c]) {
              i[c] = null;
            }
            x.event.triggered = y;
            if (t.isPropagationStopped()) {
              f.addEventListener(y, xt);
            }
            i[y]();
            if (t.isPropagationStopped()) {
              f.removeEventListener(y, xt);
            }
            x.event.triggered = undefined;
            if (s) {
              i[c] = s;
            }
          }
        }
        return t.result;
      }
    },
    simulate: function (e, t, n) {
      var i = x.extend(new x.Event(), n, {
        type: e,
        isSimulated: true
      });
      x.event.trigger(i, null, t);
    }
  });
  x.fn.extend({
    trigger: function (e, t) {
      return this.each(function () {
        x.event.trigger(e, t, this);
      });
    },
    triggerHandler: function (e, t) {
      var n = this[0];
      if (n) {
        return x.event.trigger(e, t, n, true);
      }
    }
  });
  if (!f.focusin) {
    x.each({
      focus: "focusin",
      blur: "focusout"
    }, function (e, t) {
      var n = function (e) {
        x.event.simulate(t, e.target, x.event.fix(e));
      };
      x.event.special[t] = {
        setup: function () {
          var i = this.ownerDocument || this.document || this;
          var r = G.access(i, t);
          if (!r) {
            i.addEventListener(e, n, true);
          }
          G.access(i, t, (r || 0) + 1);
        },
        teardown: function () {
          var i = this.ownerDocument || this.document || this;
          var r = G.access(i, t) - 1;
          if (r) {
            G.access(i, t, r);
          } else {
            i.removeEventListener(e, n, true);
            G.remove(i, t);
          }
        }
      };
    });
  }
  var _t = e.location;
  var Ct = {
    guid: Date.now()
  };
  var St = /\?/;
  x.parseXML = function (t) {
    var n;
    var i;
    if (!t || typeof t != "string") {
      return null;
    }
    try {
      n = new e.DOMParser().parseFromString(t, "text/xml");
    } catch (t) {}
    i = n && n.getElementsByTagName("parsererror")[0];
    if (!(n && !i)) {
      x.error("Invalid XML: " + (i ? x.map(i.childNodes, function (e) {
        return e.textContent;
      }).join("\n") : t));
    }
    return n;
  };
  var kt = /\[\]$/;
  var Tt = /\r?\n/g;
  var At = /^(?:submit|button|image|reset|file)$/i;
  var Dt = /^(?:input|select|textarea|keygen)/i;
  function Et(e, t, n, i) {
    var r;
    if (Array.isArray(t)) {
      x.each(t, function (t, r) {
        if (n || kt.test(e)) {
          i(e, r);
        } else {
          Et(e + "[" + (typeof r == "object" && r != null ? t : "") + "]", r, n, i);
        }
      });
    } else if (n || b(t) !== "object") {
      i(e, t);
    } else {
      for (r in t) {
        Et(e + "[" + r + "]", t[r], n, i);
      }
    }
  }
  x.param = function (e, t) {
    var n;
    var i = [];
    var r = function (e, t) {
      var n = p(t) ? t() : t;
      i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(n == null ? "" : n);
    };
    if (e == null) {
      return "";
    }
    if (Array.isArray(e) || e.jquery && !x.isPlainObject(e)) {
      x.each(e, function () {
        r(this.name, this.value);
      });
    } else {
      for (n in e) {
        Et(n, e[n], t, r);
      }
    }
    return i.join("&");
  };
  x.fn.extend({
    serialize: function () {
      return x.param(this.serializeArray());
    },
    serializeArray: function () {
      return this.map(function () {
        var e = x.prop(this, "elements");
        if (e) {
          return x.makeArray(e);
        } else {
          return this;
        }
      }).filter(function () {
        var e = this.type;
        return this.name && !x(this).is(":disabled") && Dt.test(this.nodeName) && !At.test(e) && (this.checked || !he.test(e));
      }).map(function (e, t) {
        var n = x(this).val();
        if (n == null) {
          return null;
        } else if (Array.isArray(n)) {
          return x.map(n, function (e) {
            return {
              name: t.name,
              value: e.replace(Tt, "\r\n")
            };
          });
        } else {
          return {
            name: t.name,
            value: n.replace(Tt, "\r\n")
          };
        }
      }).get();
    }
  });
  var Ot = /%20/g;
  var Mt = /#.*$/;
  var It = /([?&])_=[^&]*/;
  var Pt = /^(.*?):[ \t]*([^\r\n]*)$/gm;
  var Lt = /^(?:GET|HEAD)$/;
  var Nt = /^\/\//;
  var Ft = {};
  var Rt = {};
  var jt = "*/".concat("*");
  var $t = m.createElement("a");
  function zt(e) {
    return function (t, n) {
      if (typeof t != "string") {
        n = t;
        t = "*";
      }
      var i;
      var r = 0;
      var o = t.toLowerCase().match(N) || [];
      if (p(n)) {
        for (; i = o[r++];) {
          if (i[0] === "+") {
            i = i.slice(1) || "*";
            (e[i] = e[i] || []).unshift(n);
          } else {
            (e[i] = e[i] || []).push(n);
          }
        }
      }
    };
  }
  function Ht(e, t, n, i) {
    var r = {};
    var o = e === Rt;
    function a(s) {
      var l;
      r[s] = true;
      x.each(e[s] || [], function (e, s) {
        var c = s(t, n, i);
        if (typeof c != "string" || o || r[c]) {
          if (o) {
            return !(l = c);
          } else {
            return undefined;
          }
        } else {
          t.dataTypes.unshift(c);
          a(c);
          return false;
        }
      });
      return l;
    }
    return a(t.dataTypes[0]) || !r["*"] && a("*");
  }
  function Bt(e, t) {
    var n;
    var i;
    var r = x.ajaxSettings.flatOptions || {};
    for (n in t) {
      if (t[n] !== undefined) {
        (r[n] ? e : i || (i = {}))[n] = t[n];
      }
    }
    if (i) {
      x.extend(true, e, i);
    }
    return e;
  }
  $t.href = _t.href;
  x.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: _t.href,
      type: "GET",
      isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(_t.protocol),
      global: true,
      processData: true,
      async: true,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": jt,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /\bxml\b/,
        html: /\bhtml/,
        json: /\bjson\b/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      converters: {
        "* text": String,
        "text html": true,
        "text json": JSON.parse,
        "text xml": x.parseXML
      },
      flatOptions: {
        url: true,
        context: true
      }
    },
    ajaxSetup: function (e, t) {
      if (t) {
        return Bt(Bt(e, x.ajaxSettings), t);
      } else {
        return Bt(x.ajaxSettings, e);
      }
    },
    ajaxPrefilter: zt(Ft),
    ajaxTransport: zt(Rt),
    ajax: function (t, n) {
      if (typeof t == "object") {
        n = t;
        t = undefined;
      }
      n = n || {};
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var h;
      var f = x.ajaxSetup({}, n);
      var p = f.context || f;
      var g = f.context && (p.nodeType || p.jquery) ? x(p) : x.event;
      var v = x.Deferred();
      var y = x.Callbacks("once memory");
      var b = f.statusCode || {};
      var w = {};
      var _ = {};
      var C = "canceled";
      var S = {
        readyState: 0,
        getResponseHeader: function (e) {
          var t;
          if (c) {
            if (!a) {
              for (a = {}; t = Pt.exec(o);) {
                a[t[1].toLowerCase() + " "] = (a[t[1].toLowerCase() + " "] || []).concat(t[2]);
              }
            }
            t = a[e.toLowerCase() + " "];
          }
          if (t == null) {
            return null;
          } else {
            return t.join(", ");
          }
        },
        getAllResponseHeaders: function () {
          if (c) {
            return o;
          } else {
            return null;
          }
        },
        setRequestHeader: function (e, t) {
          if (c == null) {
            e = _[e.toLowerCase()] = _[e.toLowerCase()] || e;
            w[e] = t;
          }
          return this;
        },
        overrideMimeType: function (e) {
          if (c == null) {
            f.mimeType = e;
          }
          return this;
        },
        statusCode: function (e) {
          var t;
          if (e) {
            if (c) {
              S.always(e[S.status]);
            } else {
              for (t in e) {
                b[t] = [b[t], e[t]];
              }
            }
          }
          return this;
        },
        abort: function (e) {
          var t = e || C;
          if (i) {
            i.abort(t);
          }
          k(0, t);
          return this;
        }
      };
      v.promise(S);
      f.url = ((t || f.url || _t.href) + "").replace(Nt, _t.protocol + "//");
      f.type = n.method || n.type || f.method || f.type;
      f.dataTypes = (f.dataType || "*").toLowerCase().match(N) || [""];
      if (f.crossDomain == null) {
        l = m.createElement("a");
        try {
          l.href = f.url;
          l.href = l.href;
          f.crossDomain = $t.protocol + "//" + $t.host != l.protocol + "//" + l.host;
        } catch (t) {
          f.crossDomain = true;
        }
      }
      if (f.data && f.processData && typeof f.data != "string") {
        f.data = x.param(f.data, f.traditional);
      }
      Ht(Ft, f, n, S);
      if (c) {
        return S;
      }
      if ((u = x.event && f.global) && x.active++ == 0) {
        x.event.trigger("ajaxStart");
      }
      f.type = f.type.toUpperCase();
      f.hasContent = !Lt.test(f.type);
      r = f.url.replace(Mt, "");
      if (f.hasContent) {
        if (f.data && f.processData && (f.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
          f.data = f.data.replace(Ot, "+");
        }
      } else {
        h = f.url.slice(r.length);
        if (f.data && (f.processData || typeof f.data == "string")) {
          r += (St.test(r) ? "&" : "?") + f.data;
          delete f.data;
        }
        if (f.cache === false) {
          r = r.replace(It, "$1");
          h = (St.test(r) ? "&" : "?") + "_=" + Ct.guid++ + h;
        }
        f.url = r + h;
      }
      if (f.ifModified) {
        if (x.lastModified[r]) {
          S.setRequestHeader("If-Modified-Since", x.lastModified[r]);
        }
        if (x.etag[r]) {
          S.setRequestHeader("If-None-Match", x.etag[r]);
        }
      }
      if (f.data && f.hasContent && f.contentType !== false || n.contentType) {
        S.setRequestHeader("Content-Type", f.contentType);
      }
      S.setRequestHeader("Accept", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + (f.dataTypes[0] !== "*" ? ", " + jt + "; q=0.01" : "") : f.accepts["*"]);
      for (d in f.headers) {
        S.setRequestHeader(d, f.headers[d]);
      }
      if (f.beforeSend && (f.beforeSend.call(p, S, f) === false || c)) {
        return S.abort();
      }
      C = "abort";
      y.add(f.complete);
      S.done(f.success);
      S.fail(f.error);
      if (i = Ht(Rt, f, n, S)) {
        S.readyState = 1;
        if (u) {
          g.trigger("ajaxSend", [S, f]);
        }
        if (c) {
          return S;
        }
        if (f.async && f.timeout > 0) {
          s = e.setTimeout(function () {
            S.abort("timeout");
          }, f.timeout);
        }
        try {
          c = false;
          i.send(w, k);
        } catch (t) {
          if (c) {
            throw t;
          }
          k(-1, t);
        }
      } else {
        k(-1, "No Transport");
      }
      function k(t, n, a, l) {
        var d;
        var h;
        var m;
        var w;
        var _;
        var C = n;
        if (!c) {
          c = true;
          if (s) {
            e.clearTimeout(s);
          }
          i = undefined;
          o = l || "";
          S.readyState = t > 0 ? 4 : 0;
          d = t >= 200 && t < 300 || t === 304;
          if (a) {
            w = function (e, t, n) {
              for (var i, r, o, a, s = e.contents, l = e.dataTypes; l[0] === "*";) {
                l.shift();
                if (i === undefined) {
                  i = e.mimeType || t.getResponseHeader("Content-Type");
                }
              }
              if (i) {
                for (r in s) {
                  if (s[r] && s[r].test(i)) {
                    l.unshift(r);
                    break;
                  }
                }
              }
              if (l[0] in n) {
                o = l[0];
              } else {
                for (r in n) {
                  if (!l[0] || e.converters[r + " " + l[0]]) {
                    o = r;
                    break;
                  }
                  if (!a) {
                    a = r;
                  }
                }
                o = o || a;
              }
              if (o) {
                if (o !== l[0]) {
                  l.unshift(o);
                }
                return n[o];
              }
            }(f, S, a);
          }
          if (!d && x.inArray("script", f.dataTypes) > -1 && x.inArray("json", f.dataTypes) < 0) {
            f.converters["text script"] = function () {};
          }
          w = function (e, t, n, i) {
            var r;
            var o;
            var a;
            var s;
            var l;
            var c = {};
            var u = e.dataTypes.slice();
            if (u[1]) {
              for (a in e.converters) {
                c[a.toLowerCase()] = e.converters[a];
              }
            }
            for (o = u.shift(); o;) {
              if (e.responseFields[o]) {
                n[e.responseFields[o]] = t;
              }
              if (!l && i && e.dataFilter) {
                t = e.dataFilter(t, e.dataType);
              }
              l = o;
              if (o = u.shift()) {
                if (o === "*") {
                  o = l;
                } else if (l !== "*" && l !== o) {
                  if (!(a = c[l + " " + o] || c["* " + o])) {
                    for (r in c) {
                      if ((s = r.split(" "))[1] === o && (a = c[l + " " + s[0]] || c["* " + s[0]])) {
                        if (a === true) {
                          a = c[r];
                        } else if (c[r] !== true) {
                          o = s[0];
                          u.unshift(s[1]);
                        }
                        break;
                      }
                    }
                  }
                  if (a !== true) {
                    if (a && e.throws) {
                      t = a(t);
                    } else {
                      try {
                        t = a(t);
                      } catch (e) {
                        return {
                          state: "parsererror",
                          error: a ? e : "No conversion from " + l + " to " + o
                        };
                      }
                    }
                  }
                }
              }
            }
            return {
              state: "success",
              data: t
            };
          }(f, w, S, d);
          if (d) {
            if (f.ifModified) {
              if (_ = S.getResponseHeader("Last-Modified")) {
                x.lastModified[r] = _;
              }
              if (_ = S.getResponseHeader("etag")) {
                x.etag[r] = _;
              }
            }
            if (t === 204 || f.type === "HEAD") {
              C = "nocontent";
            } else if (t === 304) {
              C = "notmodified";
            } else {
              C = w.state;
              h = w.data;
              d = !(m = w.error);
            }
          } else {
            m = C;
            if (!(!t && C)) {
              C = "error";
              if (t < 0) {
                t = 0;
              }
            }
          }
          S.status = t;
          S.statusText = (n || C) + "";
          if (d) {
            v.resolveWith(p, [h, C, S]);
          } else {
            v.rejectWith(p, [S, C, m]);
          }
          S.statusCode(b);
          b = undefined;
          if (u) {
            g.trigger(d ? "ajaxSuccess" : "ajaxError", [S, f, d ? h : m]);
          }
          y.fireWith(p, [S, C]);
          if (u) {
            g.trigger("ajaxComplete", [S, f]);
            if (! --x.active) {
              x.event.trigger("ajaxStop");
            }
          }
        }
      }
      return S;
    },
    getJSON: function (e, t, n) {
      return x.get(e, t, n, "json");
    },
    getScript: function (e, t) {
      return x.get(e, undefined, t, "script");
    }
  });
  x.each(["get", "post"], function (e, t) {
    x[t] = function (e, n, i, r) {
      if (p(n)) {
        r = r || i;
        i = n;
        n = undefined;
      }
      return x.ajax(x.extend({
        url: e,
        type: t,
        dataType: r,
        data: n,
        success: i
      }, x.isPlainObject(e) && e));
    };
  });
  x.ajaxPrefilter(function (e) {
    var t;
    for (t in e.headers) {
      if (t.toLowerCase() === "content-type") {
        e.contentType = e.headers[t] || "";
      }
    }
  });
  x._evalUrl = function (e, t, n) {
    return x.ajax({
      url: e,
      type: "GET",
      dataType: "script",
      cache: true,
      async: false,
      global: false,
      converters: {
        "text script": function () {}
      },
      dataFilter: function (e) {
        x.globalEval(e, t, n);
      }
    });
  };
  x.fn.extend({
    wrapAll: function (e) {
      var t;
      if (this[0]) {
        if (p(e)) {
          e = e.call(this[0]);
        }
        t = x(e, this[0].ownerDocument).eq(0).clone(true);
        if (this[0].parentNode) {
          t.insertBefore(this[0]);
        }
        t.map(function () {
          for (var e = this; e.firstElementChild;) {
            e = e.firstElementChild;
          }
          return e;
        }).append(this);
      }
      return this;
    },
    wrapInner: function (e) {
      if (p(e)) {
        return this.each(function (t) {
          x(this).wrapInner(e.call(this, t));
        });
      } else {
        return this.each(function () {
          var t = x(this);
          var n = t.contents();
          if (n.length) {
            n.wrapAll(e);
          } else {
            t.append(e);
          }
        });
      }
    },
    wrap: function (e) {
      var t = p(e);
      return this.each(function (n) {
        x(this).wrapAll(t ? e.call(this, n) : e);
      });
    },
    unwrap: function (e) {
      this.parent(e).not("body").each(function () {
        x(this).replaceWith(this.childNodes);
      });
      return this;
    }
  });
  x.expr.pseudos.hidden = function (e) {
    return !x.expr.pseudos.visible(e);
  };
  x.expr.pseudos.visible = function (e) {
    return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
  };
  x.ajaxSettings.xhr = function () {
    try {
      return new e.XMLHttpRequest();
    } catch (e) {}
  };
  var qt = {
    0: 200,
    1223: 204
  };
  var Wt = x.ajaxSettings.xhr();
  f.cors = !!Wt && "withCredentials" in Wt;
  f.ajax = Wt = !!Wt;
  x.ajaxTransport(function (t) {
    var n;
    var i;
    if (f.cors || Wt && !t.crossDomain) {
      return {
        send: function (r, o) {
          var a;
          var s = t.xhr();
          s.open(t.type, t.url, t.async, t.username, t.password);
          if (t.xhrFields) {
            for (a in t.xhrFields) {
              s[a] = t.xhrFields[a];
            }
          }
          if (t.mimeType && s.overrideMimeType) {
            s.overrideMimeType(t.mimeType);
          }
          if (!(t.crossDomain || r["X-Requested-With"])) {
            r["X-Requested-With"] = "XMLHttpRequest";
          }
          for (a in r) {
            s.setRequestHeader(a, r[a]);
          }
          n = function (e) {
            return function () {
              if (n) {
                n = i = s.onload = s.onerror = s.onabort = s.ontimeout = s.onreadystatechange = null;
                if (e === "abort") {
                  s.abort();
                } else if (e === "error") {
                  if (typeof s.status != "number") {
                    o(0, "error");
                  } else {
                    o(s.status, s.statusText);
                  }
                } else {
                  o(qt[s.status] || s.status, s.statusText, (s.responseType || "text") !== "text" || typeof s.responseText != "string" ? {
                    binary: s.response
                  } : {
                    text: s.responseText
                  }, s.getAllResponseHeaders());
                }
              }
            };
          };
          s.onload = n();
          i = s.onerror = s.ontimeout = n("error");
          if (s.onabort !== undefined) {
            s.onabort = i;
          } else {
            s.onreadystatechange = function () {
              if (s.readyState === 4) {
                e.setTimeout(function () {
                  if (n) {
                    i();
                  }
                });
              }
            };
          }
          n = n("abort");
          try {
            s.send(t.hasContent && t.data || null);
          } catch (r) {
            if (n) {
              throw r;
            }
          }
        },
        abort: function () {
          if (n) {
            n();
          }
        }
      };
    }
  });
  x.ajaxPrefilter(function (e) {
    if (e.crossDomain) {
      e.contents.script = false;
    }
  });
  x.ajaxSetup({
    accepts: {
      script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
    },
    contents: {
      script: /\b(?:java|ecma)script\b/
    },
    converters: {
      "text script": function (e) {
        x.globalEval(e);
        return e;
      }
    }
  });
  x.ajaxPrefilter("script", function (e) {
    if (e.cache === undefined) {
      e.cache = false;
    }
    if (e.crossDomain) {
      e.type = "GET";
    }
  });
  x.ajaxTransport("script", function (e) {
    var t;
    var n;
    if (e.crossDomain || e.scriptAttrs) {
      return {
        send: function (i, r) {
          t = x("<script>").attr(e.scriptAttrs || {}).prop({
            charset: e.scriptCharset,
            src: e.url
          }).on("load error", n = function (e) {
            t.remove();
            n = null;
            if (e) {
              r(e.type === "error" ? 404 : 200, e.type);
            }
          });
          m.head.appendChild(t[0]);
        },
        abort: function () {
          if (n) {
            n();
          }
        }
      };
    }
  });
  var Ut;
  var Vt = [];
  var Yt = /(=)\?(?=&|$)|\?\?/;
  x.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function () {
      var e = Vt.pop() || x.expando + "_" + Ct.guid++;
      this[e] = true;
      return e;
    }
  });
  x.ajaxPrefilter("json jsonp", function (t, n, i) {
    var r;
    var o;
    var a;
    var s = t.jsonp !== false && (Yt.test(t.url) ? "url" : typeof t.data == "string" && (t.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && Yt.test(t.data) && "data");
    if (s || t.dataTypes[0] === "jsonp") {
      r = t.jsonpCallback = p(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback;
      if (s) {
        t[s] = t[s].replace(Yt, "$1" + r);
      } else if (t.jsonp !== false) {
        t.url += (St.test(t.url) ? "&" : "?") + t.jsonp + "=" + r;
      }
      t.converters["script json"] = function () {
        if (!a) {
          x.error(r + " was not called");
        }
        return a[0];
      };
      t.dataTypes[0] = "json";
      o = e[r];
      e[r] = function () {
        a = arguments;
      };
      i.always(function () {
        if (o === undefined) {
          x(e).removeProp(r);
        } else {
          e[r] = o;
        }
        if (t[r]) {
          t.jsonpCallback = n.jsonpCallback;
          Vt.push(r);
        }
        if (a && p(o)) {
          o(a[0]);
        }
        a = o = undefined;
      });
      return "script";
    }
  });
  f.createHTMLDocument = ((Ut = m.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", Ut.childNodes.length === 2);
  x.parseHTML = function (e, t, n) {
    if (typeof e != "string") {
      return [];
    } else {
      if (typeof t == "boolean") {
        n = t;
        t = false;
      }
      if (!t) {
        if (f.createHTMLDocument) {
          (i = (t = m.implementation.createHTMLDocument("")).createElement("base")).href = m.location.href;
          t.head.appendChild(i);
        } else {
          t = m;
        }
      }
      o = !n && [];
      if (r = D.exec(e)) {
        return [t.createElement(r[1])];
      } else {
        r = be([e], t, o);
        if (o && o.length) {
          x(o).remove();
        }
        return x.merge([], r.childNodes);
      }
    }
    var i;
    var r;
    var o;
  };
  x.fn.load = function (e, t, n) {
    var i;
    var r;
    var o;
    var a = this;
    var s = e.indexOf(" ");
    if (s > -1) {
      i = mt(e.slice(s));
      e = e.slice(0, s);
    }
    if (p(t)) {
      n = t;
      t = undefined;
    } else if (t && typeof t == "object") {
      r = "POST";
    }
    if (a.length > 0) {
      x.ajax({
        url: e,
        type: r || "GET",
        dataType: "html",
        data: t
      }).done(function (e) {
        o = arguments;
        a.html(i ? x("<div>").append(x.parseHTML(e)).find(i) : e);
      }).always(n && function (e, t) {
        a.each(function () {
          n.apply(this, o || [e.responseText, t, e]);
        });
      });
    }
    return this;
  };
  x.expr.pseudos.animated = function (e) {
    return x.grep(x.timers, function (t) {
      return e === t.elem;
    }).length;
  };
  x.offset = {
    setOffset: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c = x.css(e, "position");
      var u = x(e);
      var d = {};
      if (c === "static") {
        e.style.position = "relative";
      }
      s = u.offset();
      o = x.css(e, "top");
      l = x.css(e, "left");
      if ((c === "absolute" || c === "fixed") && (o + l).indexOf("auto") > -1) {
        a = (i = u.position()).top;
        r = i.left;
      } else {
        a = parseFloat(o) || 0;
        r = parseFloat(l) || 0;
      }
      if (p(t)) {
        t = t.call(e, n, x.extend({}, s));
      }
      if (t.top != null) {
        d.top = t.top - s.top + a;
      }
      if (t.left != null) {
        d.left = t.left - s.left + r;
      }
      if ("using" in t) {
        t.using.call(e, d);
      } else {
        u.css(d);
      }
    }
  };
  x.fn.extend({
    offset: function (e) {
      if (arguments.length) {
        if (e === undefined) {
          return this;
        } else {
          return this.each(function (t) {
            x.offset.setOffset(this, e, t);
          });
        }
      }
      var t;
      var n;
      var i = this[0];
      if (i) {
        if (i.getClientRects().length) {
          t = i.getBoundingClientRect();
          n = i.ownerDocument.defaultView;
          return {
            top: t.top + n.pageYOffset,
            left: t.left + n.pageXOffset
          };
        } else {
          return {
            top: 0,
            left: 0
          };
        }
      } else {
        return undefined;
      }
    },
    position: function () {
      if (this[0]) {
        var e;
        var t;
        var n;
        var i = this[0];
        var r = {
          top: 0,
          left: 0
        };
        if (x.css(i, "position") === "fixed") {
          t = i.getBoundingClientRect();
        } else {
          t = this.offset();
          n = i.ownerDocument;
          e = i.offsetParent || n.documentElement;
          for (; e && (e === n.body || e === n.documentElement) && x.css(e, "position") === "static";) {
            e = e.parentNode;
          }
          if (e && e !== i && e.nodeType === 1) {
            (r = x(e).offset()).top += x.css(e, "borderTopWidth", true);
            r.left += x.css(e, "borderLeftWidth", true);
          }
        }
        return {
          top: t.top - r.top - x.css(i, "marginTop", true),
          left: t.left - r.left - x.css(i, "marginLeft", true)
        };
      }
    },
    offsetParent: function () {
      return this.map(function () {
        for (var e = this.offsetParent; e && x.css(e, "position") === "static";) {
          e = e.offsetParent;
        }
        return e || ie;
      });
    }
  });
  x.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function (e, t) {
    var n = t === "pageYOffset";
    x.fn[e] = function (i) {
      return B(this, function (e, i, r) {
        var o;
        if (g(e)) {
          o = e;
        } else if (e.nodeType === 9) {
          o = e.defaultView;
        }
        if (r === undefined) {
          if (o) {
            return o[t];
          } else {
            return e[i];
          }
        }
        if (o) {
          o.scrollTo(n ? o.pageXOffset : r, n ? r : o.pageYOffset);
        } else {
          e[i] = r;
        }
      }, e, i, arguments.length);
    };
  });
  x.each(["top", "left"], function (e, t) {
    x.cssHooks[t] = qe(f.pixelPosition, function (e, n) {
      if (n) {
        n = Be(e, t);
        if (Ne.test(n)) {
          return x(e).position()[t] + "px";
        } else {
          return n;
        }
      }
    });
  });
  x.each({
    Height: "height",
    Width: "width"
  }, function (e, t) {
    x.each({
      padding: "inner" + e,
      content: t,
      "": "outer" + e
    }, function (n, i) {
      x.fn[i] = function (r, o) {
        var a = arguments.length && (n || typeof r != "boolean");
        var s = n || (r === true || o === true ? "margin" : "border");
        return B(this, function (t, n, r) {
          var o;
          if (g(t)) {
            if (i.indexOf("outer") === 0) {
              return t["inner" + e];
            } else {
              return t.document.documentElement["client" + e];
            }
          } else if (t.nodeType === 9) {
            o = t.documentElement;
            return Math.max(t.body["scroll" + e], o["scroll" + e], t.body["offset" + e], o["offset" + e], o["client" + e]);
          } else if (r === undefined) {
            return x.css(t, n, s);
          } else {
            return x.style(t, n, r, s);
          }
        }, t, a ? r : undefined, a);
      };
    });
  });
  x.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
    x.fn[t] = function (e) {
      return this.on(t, e);
    };
  });
  x.fn.extend({
    bind: function (e, t, n) {
      return this.on(e, null, t, n);
    },
    unbind: function (e, t) {
      return this.off(e, null, t);
    },
    delegate: function (e, t, n, i) {
      return this.on(t, e, n, i);
    },
    undelegate: function (e, t, n) {
      if (arguments.length === 1) {
        return this.off(e, "**");
      } else {
        return this.off(t, e || "**", n);
      }
    },
    hover: function (e, t) {
      return this.mouseenter(e).mouseleave(t || e);
    }
  });
  x.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (e, t) {
    x.fn[t] = function (e, n) {
      if (arguments.length > 0) {
        return this.on(t, null, e, n);
      } else {
        return this.trigger(t);
      }
    };
  });
  var Xt = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
  x.proxy = function (e, t) {
    var n;
    var i;
    var o;
    if (typeof t == "string") {
      n = e[t];
      t = e;
      e = n;
    }
    if (p(e)) {
      i = r.call(arguments, 2);
      (o = function () {
        return e.apply(t || this, i.concat(r.call(arguments)));
      }).guid = e.guid = e.guid || x.guid++;
      return o;
    }
  };
  x.holdReady = function (e) {
    if (e) {
      x.readyWait++;
    } else {
      x.ready(true);
    }
  };
  x.isArray = Array.isArray;
  x.parseJSON = JSON.parse;
  x.nodeName = A;
  x.isFunction = p;
  x.isWindow = g;
  x.camelCase = V;
  x.type = b;
  x.now = Date.now;
  x.isNumeric = function (e) {
    var t = x.type(e);
    return (t === "number" || t === "string") && !isNaN(e - parseFloat(e));
  };
  x.trim = function (e) {
    if (e == null) {
      return "";
    } else {
      return (e + "").replace(Xt, "$1");
    }
  };
  if (typeof define == "function" && define.amd) {
    define("jquery", [], function () {
      return x;
    });
  }
  var Gt = e.jQuery;
  var Kt = e.$;
  x.noConflict = function (t) {
    if (e.$ === x) {
      e.$ = Kt;
    }
    if (t && e.jQuery === x) {
      e.jQuery = Gt;
    }
    return x;
  };
  if (t === undefined) {
    e.jQuery = e.$ = x;
  }
  return x;
});
(function (e, t) {
  if (typeof exports == "object" && typeof module != "undefined") {
    module.exports = t();
  } else if (typeof define == "function" && define.amd) {
    define(t);
  } else {
    (e = typeof globalThis != "undefined" ? globalThis : e || self).bootstrap = t();
  }
})(this, function () {
  "use strict";

  const e = "transitionend";
  const t = e => {
    let t = e.getAttribute("data-bs-target");
    if (!t || t === "#") {
      let n = e.getAttribute("href");
      if (!n || !n.includes("#") && !n.startsWith(".")) {
        return null;
      }
      if (n.includes("#") && !n.startsWith("#")) {
        n = "#" + n.split("#")[1];
      }
      t = n && n !== "#" ? n.trim() : null;
    }
    return t;
  };
  const n = e => {
    const n = t(e);
    if (n && document.querySelector(n)) {
      return n;
    } else {
      return null;
    }
  };
  const i = e => {
    const n = t(e);
    if (n) {
      return document.querySelector(n);
    } else {
      return null;
    }
  };
  const r = t => {
    t.dispatchEvent(new Event(e));
  };
  const o = e => !(!e || typeof e != "object") && (e.jquery !== undefined && (e = e[0]), e.nodeType !== undefined);
  const a = e => o(e) ? e.jquery ? e[0] : e : typeof e == "string" && e.length > 0 ? document.querySelector(e) : null;
  const s = e => {
    if (!o(e) || e.getClientRects().length === 0) {
      return false;
    }
    const t = getComputedStyle(e).getPropertyValue("visibility") === "visible";
    const n = e.closest("details:not([open])");
    if (!n) {
      return t;
    }
    if (n !== e) {
      const t = e.closest("summary");
      if (t && t.parentNode !== n) {
        return false;
      }
      if (t === null) {
        return false;
      }
    }
    return t;
  };
  const l = e => !e || e.nodeType !== Node.ELEMENT_NODE || !!e.classList.contains("disabled") || (e.disabled !== undefined ? e.disabled : e.hasAttribute("disabled") && e.getAttribute("disabled") !== "false");
  const c = e => {
    if (!document.documentElement.attachShadow) {
      return null;
    }
    if (typeof e.getRootNode == "function") {
      const t = e.getRootNode();
      if (t instanceof ShadowRoot) {
        return t;
      } else {
        return null;
      }
    }
    if (e instanceof ShadowRoot) {
      return e;
    } else if (e.parentNode) {
      return c(e.parentNode);
    } else {
      return null;
    }
  };
  const u = () => {};
  const d = e => {
    e.offsetHeight;
  };
  const h = () => window.jQuery && !document.body.hasAttribute("data-bs-no-jquery") ? window.jQuery : null;
  const f = [];
  const p = () => document.documentElement.dir === "rtl";
  const g = e => {
    var t;
    t = () => {
      const t = h();
      if (t) {
        const n = e.NAME;
        const i = t.fn[n];
        t.fn[n] = e.jQueryInterface;
        t.fn[n].Constructor = e;
        t.fn[n].noConflict = () => {
          t.fn[n] = i;
          return e.jQueryInterface;
        };
      }
    };
    if (document.readyState === "loading") {
      if (!f.length) {
        document.addEventListener("DOMContentLoaded", () => {
          for (const e of f) {
            e();
          }
        });
      }
      f.push(t);
    } else {
      t();
    }
  };
  const m = e => {
    if (typeof e == "function") {
      e();
    }
  };
  const v = (t, n, i = true) => {
    if (!i) {
      return void m(t);
    }
    const o = (e => {
      if (!e) {
        return 0;
      }
      let {
        transitionDuration: t,
        transitionDelay: n
      } = window.getComputedStyle(e);
      const i = Number.parseFloat(t);
      const r = Number.parseFloat(n);
      if (i || r) {
        t = t.split(",")[0];
        n = n.split(",")[0];
        return (Number.parseFloat(t) + Number.parseFloat(n)) * 1000;
      } else {
        return 0;
      }
    })(n) + 5;
    let a = false;
    const s = ({
      target: i
    }) => {
      if (i === n) {
        a = true;
        n.removeEventListener(e, s);
        m(t);
      }
    };
    n.addEventListener(e, s);
    setTimeout(() => {
      if (!a) {
        r(n);
      }
    }, o);
  };
  const y = (e, t, n, i) => {
    const r = e.length;
    let o = e.indexOf(t);
    if (o === -1) {
      if (!n && i) {
        return e[r - 1];
      } else {
        return e[0];
      }
    } else {
      o += n ? 1 : -1;
      if (i) {
        o = (o + r) % r;
      }
      return e[Math.max(0, Math.min(o, r - 1))];
    }
  };
  const b = /[^.]*(?=\..*)\.|.*/;
  const w = /\..*/;
  const x = /::\d+$/;
  const _ = {};
  let C = 1;
  const S = {
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  };
  const k = new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]);
  function T(e, t) {
    return t && `${t}::${C++}` || e.uidEvent || C++;
  }
  function A(e) {
    const t = T(e);
    e.uidEvent = t;
    _[t] = _[t] || {};
    return _[t];
  }
  function D(e, t, n = null) {
    return Object.values(e).find(e => e.callable === t && e.delegationSelector === n);
  }
  function E(e, t, n) {
    const i = typeof t == "string";
    const r = i ? n : t || n;
    let o = P(e);
    if (!k.has(o)) {
      o = e;
    }
    return [i, r, o];
  }
  function O(e, t, n, i, r) {
    if (typeof t != "string" || !e) {
      return;
    }
    let [o, a, s] = E(t, n, i);
    if (t in S) {
      a = (e => function (t) {
        if (!t.relatedTarget || t.relatedTarget !== t.delegateTarget && !t.delegateTarget.contains(t.relatedTarget)) {
          return e.call(this, t);
        }
      })(a);
    }
    const l = A(e);
    const c = l[s] || (l[s] = {});
    const u = D(c, a, o ? n : null);
    if (u) {
      return void (u.oneOff = u.oneOff && r);
    }
    const d = T(a, t.replace(b, ""));
    const h = o ? function (e, t, n) {
      return function i(r) {
        const o = e.querySelectorAll(t);
        for (let {
          target: a
        } = r; a && a !== this; a = a.parentNode) {
          for (const s of o) {
            if (s === a) {
              N(r, {
                delegateTarget: a
              });
              if (i.oneOff) {
                L.off(e, r.type, t, n);
              }
              return n.apply(a, [r]);
            }
          }
        }
      };
    }(e, n, a) : function (e, t) {
      return function n(i) {
        N(i, {
          delegateTarget: e
        });
        if (n.oneOff) {
          L.off(e, i.type, t);
        }
        return t.apply(e, [i]);
      };
    }(e, a);
    h.delegationSelector = o ? n : null;
    h.callable = a;
    h.oneOff = r;
    h.uidEvent = d;
    c[d] = h;
    e.addEventListener(s, h, o);
  }
  function M(e, t, n, i, r) {
    const o = D(t[n], i, r);
    if (o) {
      e.removeEventListener(n, o, Boolean(r));
      delete t[n][o.uidEvent];
    }
  }
  function I(e, t, n, i) {
    const r = t[n] || {};
    for (const o of Object.keys(r)) {
      if (o.includes(i)) {
        const i = r[o];
        M(e, t, n, i.callable, i.delegationSelector);
      }
    }
  }
  function P(e) {
    e = e.replace(w, "");
    return S[e] || e;
  }
  const L = {
    on(e, t, n, i) {
      O(e, t, n, i, false);
    },
    one(e, t, n, i) {
      O(e, t, n, i, true);
    },
    off(e, t, n, i) {
      if (typeof t != "string" || !e) {
        return;
      }
      const [r, o, a] = E(t, n, i);
      const s = a !== t;
      const l = A(e);
      const c = l[a] || {};
      const u = t.startsWith(".");
      if (o === undefined) {
        if (u) {
          for (const n of Object.keys(l)) {
            I(e, l, n, t.slice(1));
          }
        }
        for (const n of Object.keys(c)) {
          const i = n.replace(x, "");
          if (!s || t.includes(i)) {
            const t = c[n];
            M(e, l, a, t.callable, t.delegationSelector);
          }
        }
      } else {
        if (!Object.keys(c).length) {
          return;
        }
        M(e, l, a, o, r ? n : null);
      }
    },
    trigger(e, t, n) {
      if (typeof t != "string" || !e) {
        return null;
      }
      const i = h();
      let r = null;
      let o = true;
      let a = true;
      let s = false;
      if (t !== P(t) && i) {
        r = i.Event(t, n);
        i(e).trigger(r);
        o = !r.isPropagationStopped();
        a = !r.isImmediatePropagationStopped();
        s = r.isDefaultPrevented();
      }
      let l = new Event(t, {
        bubbles: o,
        cancelable: true
      });
      l = N(l, n);
      if (s) {
        l.preventDefault();
      }
      if (a) {
        e.dispatchEvent(l);
      }
      if (l.defaultPrevented && r) {
        r.preventDefault();
      }
      return l;
    }
  };
  function N(e, t) {
    for (const [n, i] of Object.entries(t || {})) {
      try {
        e[n] = i;
      } catch (t) {
        Object.defineProperty(e, n, {
          configurable: true,
          get: () => i
        });
      }
    }
    return e;
  }
  const F = new Map();
  const R = {
    set(e, t, n) {
      if (!F.has(e)) {
        F.set(e, new Map());
      }
      const i = F.get(e);
      if (i.has(t) || i.size === 0) {
        i.set(t, n);
      } else {
        console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(i.keys())[0]}.`);
      }
    },
    get: (e, t) => F.has(e) && F.get(e).get(t) || null,
    remove(e, t) {
      if (!F.has(e)) {
        return;
      }
      const n = F.get(e);
      n.delete(t);
      if (n.size === 0) {
        F.delete(e);
      }
    }
  };
  function j(e) {
    if (e === "true") {
      return true;
    }
    if (e === "false") {
      return false;
    }
    if (e === Number(e).toString()) {
      return Number(e);
    }
    if (e === "" || e === "null") {
      return null;
    }
    if (typeof e != "string") {
      return e;
    }
    try {
      return JSON.parse(decodeURIComponent(e));
    } catch (t) {
      return e;
    }
  }
  function $(e) {
    return e.replace(/[A-Z]/g, e => "-" + e.toLowerCase());
  }
  const z = {
    setDataAttribute(e, t, n) {
      e.setAttribute("data-bs-" + $(t), n);
    },
    removeDataAttribute(e, t) {
      e.removeAttribute("data-bs-" + $(t));
    },
    getDataAttributes(e) {
      if (!e) {
        return {};
      }
      const t = {};
      const n = Object.keys(e.dataset).filter(e => e.startsWith("bs") && !e.startsWith("bsConfig"));
      for (const i of n) {
        let n = i.replace(/^bs/, "");
        n = n.charAt(0).toLowerCase() + n.slice(1, n.length);
        t[n] = j(e.dataset[i]);
      }
      return t;
    },
    getDataAttribute: (e, t) => j(e.getAttribute("data-bs-" + $(t)))
  };
  class H {
    static get Default() {
      return {};
    }
    static get DefaultType() {
      return {};
    }
    static get NAME() {
      throw new Error("You have to implement the static method \"NAME\", for each component!");
    }
    _getConfig(e) {
      e = this._mergeConfigObj(e);
      e = this._configAfterMerge(e);
      this._typeCheckConfig(e);
      return e;
    }
    _configAfterMerge(e) {
      return e;
    }
    _mergeConfigObj(e, t) {
      const n = o(t) ? z.getDataAttribute(t, "config") : {};
      return {
        ...this.constructor.Default,
        ...(typeof n == "object" ? n : {}),
        ...(o(t) ? z.getDataAttributes(t) : {}),
        ...(typeof e == "object" ? e : {})
      };
    }
    _typeCheckConfig(e, t = this.constructor.DefaultType) {
      for (const i of Object.keys(t)) {
        const r = t[i];
        const a = e[i];
        const s = o(a) ? "element" : (n = a) == null ? "" + n : Object.prototype.toString.call(n).match(/\s([a-z]+)/i)[1].toLowerCase();
        if (!new RegExp(r).test(s)) {
          throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${i}" provided type "${s}" but expected type "${r}".`);
        }
      }
      var n;
    }
  }
  class B extends H {
    constructor(e, t) {
      super();
      if (e = a(e)) {
        this._element = e;
        this._config = this._getConfig(t);
        R.set(this._element, this.constructor.DATA_KEY, this);
      }
    }
    dispose() {
      R.remove(this._element, this.constructor.DATA_KEY);
      L.off(this._element, this.constructor.EVENT_KEY);
      for (const e of Object.getOwnPropertyNames(this)) {
        this[e] = null;
      }
    }
    _queueCallback(e, t, n = true) {
      v(e, t, n);
    }
    _getConfig(e) {
      e = this._mergeConfigObj(e, this._element);
      e = this._configAfterMerge(e);
      this._typeCheckConfig(e);
      return e;
    }
    static getInstance(e) {
      return R.get(a(e), this.DATA_KEY);
    }
    static getOrCreateInstance(e, t = {}) {
      return this.getInstance(e) || new this(e, typeof t == "object" ? t : null);
    }
    static get VERSION() {
      return "5.2.3";
    }
    static get DATA_KEY() {
      return "bs." + this.NAME;
    }
    static get EVENT_KEY() {
      return "." + this.DATA_KEY;
    }
    static eventName(e) {
      return `${e}${this.EVENT_KEY}`;
    }
  }
  const q = (e, t = "hide") => {
    const n = "click.dismiss" + e.EVENT_KEY;
    const r = e.NAME;
    L.on(document, n, `[data-bs-dismiss="${r}"]`, function (n) {
      if (["A", "AREA"].includes(this.tagName)) {
        n.preventDefault();
      }
      if (l(this)) {
        return;
      }
      const o = i(this) || this.closest("." + r);
      e.getOrCreateInstance(o)[t]();
    });
  };
  class W extends B {
    static get NAME() {
      return "alert";
    }
    close() {
      if (L.trigger(this._element, "close.bs.alert").defaultPrevented) {
        return;
      }
      this._element.classList.remove("show");
      const e = this._element.classList.contains("fade");
      this._queueCallback(() => this._destroyElement(), this._element, e);
    }
    _destroyElement() {
      this._element.remove();
      L.trigger(this._element, "closed.bs.alert");
      this.dispose();
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = W.getOrCreateInstance(this);
        if (typeof e == "string") {
          if (t[e] === undefined || e.startsWith("_") || e === "constructor") {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e](this);
        }
      });
    }
  }
  q(W, "close");
  g(W);
  const U = "[data-bs-toggle=\"button\"]";
  class V extends B {
    static get NAME() {
      return "button";
    }
    toggle() {
      this._element.setAttribute("aria-pressed", this._element.classList.toggle("active"));
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = V.getOrCreateInstance(this);
        if (e === "toggle") {
          t[e]();
        }
      });
    }
  }
  L.on(document, "click.bs.button.data-api", U, e => {
    e.preventDefault();
    const t = e.target.closest(U);
    V.getOrCreateInstance(t).toggle();
  });
  g(V);
  const Y = {
    find: (e, t = document.documentElement) => [].concat(...Element.prototype.querySelectorAll.call(t, e)),
    findOne: (e, t = document.documentElement) => Element.prototype.querySelector.call(t, e),
    children: (e, t) => [].concat(...e.children).filter(e => e.matches(t)),
    parents(e, t) {
      const n = [];
      let i = e.parentNode.closest(t);
      for (; i;) {
        n.push(i);
        i = i.parentNode.closest(t);
      }
      return n;
    },
    prev(e, t) {
      let n = e.previousElementSibling;
      for (; n;) {
        if (n.matches(t)) {
          return [n];
        }
        n = n.previousElementSibling;
      }
      return [];
    },
    next(e, t) {
      let n = e.nextElementSibling;
      for (; n;) {
        if (n.matches(t)) {
          return [n];
        }
        n = n.nextElementSibling;
      }
      return [];
    },
    focusableChildren(e) {
      const t = ["a", "button", "input", "textarea", "select", "details", "[tabindex]", "[contenteditable=\"true\"]"].map(e => e + ":not([tabindex^=\"-\"])").join(",");
      return this.find(t, e).filter(e => !l(e) && s(e));
    }
  };
  const X = {
    endCallback: null,
    leftCallback: null,
    rightCallback: null
  };
  const G = {
    endCallback: "(function|null)",
    leftCallback: "(function|null)",
    rightCallback: "(function|null)"
  };
  class K extends H {
    constructor(e, t) {
      super();
      this._element = e;
      if (e && K.isSupported()) {
        this._config = this._getConfig(t);
        this._deltaX = 0;
        this._supportPointerEvents = Boolean(window.PointerEvent);
        this._initEvents();
      }
    }
    static get Default() {
      return X;
    }
    static get DefaultType() {
      return G;
    }
    static get NAME() {
      return "swipe";
    }
    dispose() {
      L.off(this._element, ".bs.swipe");
    }
    _start(e) {
      if (this._supportPointerEvents) {
        if (this._eventIsPointerPenTouch(e)) {
          this._deltaX = e.clientX;
        }
      } else {
        this._deltaX = e.touches[0].clientX;
      }
    }
    _end(e) {
      if (this._eventIsPointerPenTouch(e)) {
        this._deltaX = e.clientX - this._deltaX;
      }
      this._handleSwipe();
      m(this._config.endCallback);
    }
    _move(e) {
      this._deltaX = e.touches && e.touches.length > 1 ? 0 : e.touches[0].clientX - this._deltaX;
    }
    _handleSwipe() {
      const e = Math.abs(this._deltaX);
      if (e <= 40) {
        return;
      }
      const t = e / this._deltaX;
      this._deltaX = 0;
      if (t) {
        m(t > 0 ? this._config.rightCallback : this._config.leftCallback);
      }
    }
    _initEvents() {
      if (this._supportPointerEvents) {
        L.on(this._element, "pointerdown.bs.swipe", e => this._start(e));
        L.on(this._element, "pointerup.bs.swipe", e => this._end(e));
        this._element.classList.add("pointer-event");
      } else {
        L.on(this._element, "touchstart.bs.swipe", e => this._start(e));
        L.on(this._element, "touchmove.bs.swipe", e => this._move(e));
        L.on(this._element, "touchend.bs.swipe", e => this._end(e));
      }
    }
    _eventIsPointerPenTouch(e) {
      return this._supportPointerEvents && (e.pointerType === "pen" || e.pointerType === "touch");
    }
    static isSupported() {
      return "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0;
    }
  }
  const Q = "next";
  const Z = "prev";
  const J = "left";
  const ee = "right";
  const te = "slid.bs.carousel";
  const ne = "carousel";
  const ie = "active";
  const re = {
    ArrowLeft: ee,
    ArrowRight: J
  };
  const oe = {
    interval: 5000,
    keyboard: true,
    pause: "hover",
    ride: false,
    touch: true,
    wrap: true
  };
  const ae = {
    interval: "(number|boolean)",
    keyboard: "boolean",
    pause: "(string|boolean)",
    ride: "(boolean|string)",
    touch: "boolean",
    wrap: "boolean"
  };
  class se extends B {
    constructor(e, t) {
      super(e, t);
      this._interval = null;
      this._activeElement = null;
      this._isSliding = false;
      this.touchTimeout = null;
      this._swipeHelper = null;
      this._indicatorsElement = Y.findOne(".carousel-indicators", this._element);
      this._addEventListeners();
      if (this._config.ride === ne) {
        this.cycle();
      }
    }
    static get Default() {
      return oe;
    }
    static get DefaultType() {
      return ae;
    }
    static get NAME() {
      return "carousel";
    }
    next() {
      this._slide(Q);
    }
    nextWhenVisible() {
      if (!document.hidden && s(this._element)) {
        this.next();
      }
    }
    prev() {
      this._slide(Z);
    }
    pause() {
      if (this._isSliding) {
        r(this._element);
      }
      this._clearInterval();
    }
    cycle() {
      this._clearInterval();
      this._updateInterval();
      this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval);
    }
    _maybeEnableCycle() {
      if (this._config.ride) {
        if (this._isSliding) {
          L.one(this._element, te, () => this.cycle());
        } else {
          this.cycle();
        }
      }
    }
    to(e) {
      const t = this._getItems();
      if (e > t.length - 1 || e < 0) {
        return;
      }
      if (this._isSliding) {
        return void L.one(this._element, te, () => this.to(e));
      }
      const n = this._getItemIndex(this._getActive());
      if (n === e) {
        return;
      }
      const i = e > n ? Q : Z;
      this._slide(i, t[e]);
    }
    dispose() {
      if (this._swipeHelper) {
        this._swipeHelper.dispose();
      }
      super.dispose();
    }
    _configAfterMerge(e) {
      e.defaultInterval = e.interval;
      return e;
    }
    _addEventListeners() {
      if (this._config.keyboard) {
        L.on(this._element, "keydown.bs.carousel", e => this._keydown(e));
      }
      if (this._config.pause === "hover") {
        L.on(this._element, "mouseenter.bs.carousel", () => this.pause());
        L.on(this._element, "mouseleave.bs.carousel", () => this._maybeEnableCycle());
      }
      if (this._config.touch && K.isSupported()) {
        this._addTouchEventListeners();
      }
    }
    _addTouchEventListeners() {
      for (const e of Y.find(".carousel-item img", this._element)) {
        L.on(e, "dragstart.bs.carousel", e => e.preventDefault());
      }
      const e = {
        leftCallback: () => this._slide(this._directionToOrder(J)),
        rightCallback: () => this._slide(this._directionToOrder(ee)),
        endCallback: () => {
          if (this._config.pause === "hover") {
            this.pause();
            if (this.touchTimeout) {
              clearTimeout(this.touchTimeout);
            }
            this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), 500 + this._config.interval);
          }
        }
      };
      this._swipeHelper = new K(this._element, e);
    }
    _keydown(e) {
      if (/input|textarea/i.test(e.target.tagName)) {
        return;
      }
      const t = re[e.key];
      if (t) {
        e.preventDefault();
        this._slide(this._directionToOrder(t));
      }
    }
    _getItemIndex(e) {
      return this._getItems().indexOf(e);
    }
    _setActiveIndicatorElement(e) {
      if (!this._indicatorsElement) {
        return;
      }
      const t = Y.findOne(".active", this._indicatorsElement);
      t.classList.remove(ie);
      t.removeAttribute("aria-current");
      const n = Y.findOne(`[data-bs-slide-to="${e}"]`, this._indicatorsElement);
      if (n) {
        n.classList.add(ie);
        n.setAttribute("aria-current", "true");
      }
    }
    _updateInterval() {
      const e = this._activeElement || this._getActive();
      if (!e) {
        return;
      }
      const t = Number.parseInt(e.getAttribute("data-bs-interval"), 10);
      this._config.interval = t || this._config.defaultInterval;
    }
    _slide(e, t = null) {
      if (this._isSliding) {
        return;
      }
      const n = this._getActive();
      const i = e === Q;
      const r = t || y(this._getItems(), n, i, this._config.wrap);
      if (r === n) {
        return;
      }
      const o = this._getItemIndex(r);
      const a = t => L.trigger(this._element, t, {
        relatedTarget: r,
        direction: this._orderToDirection(e),
        from: this._getItemIndex(n),
        to: o
      });
      if (a("slide.bs.carousel").defaultPrevented) {
        return;
      }
      if (!n || !r) {
        return;
      }
      const s = Boolean(this._interval);
      this.pause();
      this._isSliding = true;
      this._setActiveIndicatorElement(o);
      this._activeElement = r;
      const l = i ? "carousel-item-start" : "carousel-item-end";
      const c = i ? "carousel-item-next" : "carousel-item-prev";
      r.classList.add(c);
      d(r);
      n.classList.add(l);
      r.classList.add(l);
      this._queueCallback(() => {
        r.classList.remove(l, c);
        r.classList.add(ie);
        n.classList.remove(ie, c, l);
        this._isSliding = false;
        a(te);
      }, n, this._isAnimated());
      if (s) {
        this.cycle();
      }
    }
    _isAnimated() {
      return this._element.classList.contains("slide");
    }
    _getActive() {
      return Y.findOne(".active.carousel-item", this._element);
    }
    _getItems() {
      return Y.find(".carousel-item", this._element);
    }
    _clearInterval() {
      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }
    }
    _directionToOrder(e) {
      if (p()) {
        if (e === J) {
          return Z;
        } else {
          return Q;
        }
      } else if (e === J) {
        return Q;
      } else {
        return Z;
      }
    }
    _orderToDirection(e) {
      if (p()) {
        if (e === Z) {
          return J;
        } else {
          return ee;
        }
      } else if (e === Z) {
        return ee;
      } else {
        return J;
      }
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = se.getOrCreateInstance(this, e);
        if (typeof e != "number") {
          if (typeof e == "string") {
            if (t[e] === undefined || e.startsWith("_") || e === "constructor") {
              throw new TypeError(`No method named "${e}"`);
            }
            t[e]();
          }
        } else {
          t.to(e);
        }
      });
    }
  }
  L.on(document, "click.bs.carousel.data-api", "[data-bs-slide], [data-bs-slide-to]", function (e) {
    const t = i(this);
    if (!t || !t.classList.contains(ne)) {
      return;
    }
    e.preventDefault();
    const n = se.getOrCreateInstance(t);
    const r = this.getAttribute("data-bs-slide-to");
    if (r) {
      n.to(r);
      return void n._maybeEnableCycle();
    } else if (z.getDataAttribute(this, "slide") === "next") {
      n.next();
      return void n._maybeEnableCycle();
    } else {
      n.prev();
      return void n._maybeEnableCycle();
    }
  });
  L.on(window, "load.bs.carousel.data-api", () => {
    const e = Y.find("[data-bs-ride=\"carousel\"]");
    for (const t of e) {
      se.getOrCreateInstance(t);
    }
  });
  g(se);
  const le = "show";
  const ce = "collapse";
  const ue = "collapsing";
  const de = "[data-bs-toggle=\"collapse\"]";
  const he = {
    parent: null,
    toggle: true
  };
  const fe = {
    parent: "(null|element)",
    toggle: "boolean"
  };
  class pe extends B {
    constructor(e, t) {
      super(e, t);
      this._isTransitioning = false;
      this._triggerArray = [];
      const i = Y.find(de);
      for (const e of i) {
        const t = n(e);
        const i = Y.find(t).filter(e => e === this._element);
        if (t !== null && i.length) {
          this._triggerArray.push(e);
        }
      }
      this._initializeChildren();
      if (!this._config.parent) {
        this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());
      }
      if (this._config.toggle) {
        this.toggle();
      }
    }
    static get Default() {
      return he;
    }
    static get DefaultType() {
      return fe;
    }
    static get NAME() {
      return "collapse";
    }
    toggle() {
      if (this._isShown()) {
        this.hide();
      } else {
        this.show();
      }
    }
    show() {
      if (this._isTransitioning || this._isShown()) {
        return;
      }
      let e = [];
      if (this._config.parent) {
        e = this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter(e => e !== this._element).map(e => pe.getOrCreateInstance(e, {
          toggle: false
        }));
      }
      if (e.length && e[0]._isTransitioning) {
        return;
      }
      if (L.trigger(this._element, "show.bs.collapse").defaultPrevented) {
        return;
      }
      for (const t of e) {
        t.hide();
      }
      const t = this._getDimension();
      this._element.classList.remove(ce);
      this._element.classList.add(ue);
      this._element.style[t] = 0;
      this._addAriaAndCollapsedClass(this._triggerArray, true);
      this._isTransitioning = true;
      const n = "scroll" + (t[0].toUpperCase() + t.slice(1));
      this._queueCallback(() => {
        this._isTransitioning = false;
        this._element.classList.remove(ue);
        this._element.classList.add(ce, le);
        this._element.style[t] = "";
        L.trigger(this._element, "shown.bs.collapse");
      }, this._element, true);
      this._element.style[t] = this._element[n] + "px";
    }
    hide() {
      if (this._isTransitioning || !this._isShown()) {
        return;
      }
      if (L.trigger(this._element, "hide.bs.collapse").defaultPrevented) {
        return;
      }
      const e = this._getDimension();
      this._element.style[e] = this._element.getBoundingClientRect()[e] + "px";
      d(this._element);
      this._element.classList.add(ue);
      this._element.classList.remove(ce, le);
      for (const e of this._triggerArray) {
        const t = i(e);
        if (t && !this._isShown(t)) {
          this._addAriaAndCollapsedClass([e], false);
        }
      }
      this._isTransitioning = true;
      this._element.style[e] = "";
      this._queueCallback(() => {
        this._isTransitioning = false;
        this._element.classList.remove(ue);
        this._element.classList.add(ce);
        L.trigger(this._element, "hidden.bs.collapse");
      }, this._element, true);
    }
    _isShown(e = this._element) {
      return e.classList.contains(le);
    }
    _configAfterMerge(e) {
      e.toggle = Boolean(e.toggle);
      e.parent = a(e.parent);
      return e;
    }
    _getDimension() {
      if (this._element.classList.contains("collapse-horizontal")) {
        return "width";
      } else {
        return "height";
      }
    }
    _initializeChildren() {
      if (!this._config.parent) {
        return;
      }
      const e = this._getFirstLevelChildren(de);
      for (const t of e) {
        const e = i(t);
        if (e) {
          this._addAriaAndCollapsedClass([t], this._isShown(e));
        }
      }
    }
    _getFirstLevelChildren(e) {
      const t = Y.find(":scope .collapse .collapse", this._config.parent);
      return Y.find(e, this._config.parent).filter(e => !t.includes(e));
    }
    _addAriaAndCollapsedClass(e, t) {
      if (e.length) {
        for (const n of e) {
          n.classList.toggle("collapsed", !t);
          n.setAttribute("aria-expanded", t);
        }
      }
    }
    static jQueryInterface(e) {
      const t = {};
      if (typeof e == "string" && /show|hide/.test(e)) {
        t.toggle = false;
      }
      return this.each(function () {
        const n = pe.getOrCreateInstance(this, t);
        if (typeof e == "string") {
          if (n[e] === undefined) {
            throw new TypeError(`No method named "${e}"`);
          }
          n[e]();
        }
      });
    }
  }
  L.on(document, "click.bs.collapse.data-api", de, function (e) {
    if (e.target.tagName === "A" || e.delegateTarget && e.delegateTarget.tagName === "A") {
      e.preventDefault();
    }
    const t = n(this);
    const i = Y.find(t);
    for (const e of i) {
      pe.getOrCreateInstance(e, {
        toggle: false
      }).toggle();
    }
  });
  g(pe);
  var ge = "top";
  var me = "bottom";
  var ve = "right";
  var ye = "left";
  var be = "auto";
  var we = [ge, me, ve, ye];
  var xe = "start";
  var _e = "end";
  var Ce = "clippingParents";
  var Se = "viewport";
  var ke = "popper";
  var Te = "reference";
  var Ae = we.reduce(function (e, t) {
    return e.concat([t + "-" + xe, t + "-" + _e]);
  }, []);
  var De = [].concat(we, [be]).reduce(function (e, t) {
    return e.concat([t, t + "-" + xe, t + "-" + _e]);
  }, []);
  var Ee = "beforeRead";
  var Oe = "afterRead";
  var Me = "beforeMain";
  var Ie = "afterMain";
  var Pe = "beforeWrite";
  var Le = "afterWrite";
  var Ne = [Ee, "read", Oe, Me, "main", Ie, Pe, "write", Le];
  function Fe(e) {
    if (e) {
      return (e.nodeName || "").toLowerCase();
    } else {
      return null;
    }
  }
  function Re(e) {
    if (e == null) {
      return window;
    }
    if (e.toString() !== "[object Window]") {
      var t = e.ownerDocument;
      return t && t.defaultView || window;
    }
    return e;
  }
  function je(e) {
    return e instanceof Re(e).Element || e instanceof Element;
  }
  function $e(e) {
    return e instanceof Re(e).HTMLElement || e instanceof HTMLElement;
  }
  function ze(e) {
    return typeof ShadowRoot != "undefined" && (e instanceof Re(e).ShadowRoot || e instanceof ShadowRoot);
  }
  const He = {
    name: "applyStyles",
    enabled: true,
    phase: "write",
    fn: function (e) {
      var t = e.state;
      Object.keys(t.elements).forEach(function (e) {
        var n = t.styles[e] || {};
        var i = t.attributes[e] || {};
        var r = t.elements[e];
        if ($e(r) && Fe(r)) {
          Object.assign(r.style, n);
          Object.keys(i).forEach(function (e) {
            var t = i[e];
            if (t === false) {
              r.removeAttribute(e);
            } else {
              r.setAttribute(e, t === true ? "" : t);
            }
          });
        }
      });
    },
    effect: function (e) {
      var t = e.state;
      var n = {
        popper: {
          position: t.options.strategy,
          left: "0",
          top: "0",
          margin: "0"
        },
        arrow: {
          position: "absolute"
        },
        reference: {}
      };
      Object.assign(t.elements.popper.style, n.popper);
      t.styles = n;
      if (t.elements.arrow) {
        Object.assign(t.elements.arrow.style, n.arrow);
      }
      return function () {
        Object.keys(t.elements).forEach(function (e) {
          var i = t.elements[e];
          var r = t.attributes[e] || {};
          var o = Object.keys(t.styles.hasOwnProperty(e) ? t.styles[e] : n[e]).reduce(function (e, t) {
            e[t] = "";
            return e;
          }, {});
          if ($e(i) && Fe(i)) {
            Object.assign(i.style, o);
            Object.keys(r).forEach(function (e) {
              i.removeAttribute(e);
            });
          }
        });
      };
    },
    requires: ["computeStyles"]
  };
  function Be(e) {
    return e.split("-")[0];
  }
  var qe = Math.max;
  var We = Math.min;
  var Ue = Math.round;
  function Ve() {
    var e = navigator.userAgentData;
    if (e != null && e.brands) {
      return e.brands.map(function (e) {
        return e.brand + "/" + e.version;
      }).join(" ");
    } else {
      return navigator.userAgent;
    }
  }
  function Ye() {
    return !/^((?!chrome|android).)*safari/i.test(Ve());
  }
  function Xe(e, t, n) {
    if (t === undefined) {
      t = false;
    }
    if (n === undefined) {
      n = false;
    }
    var i = e.getBoundingClientRect();
    var r = 1;
    var o = 1;
    if (t && $e(e)) {
      r = e.offsetWidth > 0 && Ue(i.width) / e.offsetWidth || 1;
      o = e.offsetHeight > 0 && Ue(i.height) / e.offsetHeight || 1;
    }
    var a = (je(e) ? Re(e) : window).visualViewport;
    var s = !Ye() && n;
    var l = (i.left + (s && a ? a.offsetLeft : 0)) / r;
    var c = (i.top + (s && a ? a.offsetTop : 0)) / o;
    var u = i.width / r;
    var d = i.height / o;
    return {
      width: u,
      height: d,
      top: c,
      right: l + u,
      bottom: c + d,
      left: l,
      x: l,
      y: c
    };
  }
  function Ge(e) {
    var t = Xe(e);
    var n = e.offsetWidth;
    var i = e.offsetHeight;
    if (Math.abs(t.width - n) <= 1) {
      n = t.width;
    }
    if (Math.abs(t.height - i) <= 1) {
      i = t.height;
    }
    return {
      x: e.offsetLeft,
      y: e.offsetTop,
      width: n,
      height: i
    };
  }
  function Ke(e, t) {
    var n = t.getRootNode && t.getRootNode();
    if (e.contains(t)) {
      return true;
    }
    if (n && ze(n)) {
      var i = t;
      do {
        if (i && e.isSameNode(i)) {
          return true;
        }
        i = i.parentNode || i.host;
      } while (i);
    }
    return false;
  }
  function Qe(e) {
    return Re(e).getComputedStyle(e);
  }
  function Ze(e) {
    return ["table", "td", "th"].indexOf(Fe(e)) >= 0;
  }
  function Je(e) {
    return ((je(e) ? e.ownerDocument : e.document) || window.document).documentElement;
  }
  function et(e) {
    if (Fe(e) === "html") {
      return e;
    } else {
      return e.assignedSlot || e.parentNode || (ze(e) ? e.host : null) || Je(e);
    }
  }
  function tt(e) {
    if ($e(e) && Qe(e).position !== "fixed") {
      return e.offsetParent;
    } else {
      return null;
    }
  }
  function nt(e) {
    for (var t = Re(e), n = tt(e); n && Ze(n) && Qe(n).position === "static";) {
      n = tt(n);
    }
    if (n && (Fe(n) === "html" || Fe(n) === "body" && Qe(n).position === "static")) {
      return t;
    } else {
      return n || function (e) {
        var t = /firefox/i.test(Ve());
        if (/Trident/i.test(Ve()) && $e(e) && Qe(e).position === "fixed") {
          return null;
        }
        var n = et(e);
        for (ze(n) && (n = n.host); $e(n) && ["html", "body"].indexOf(Fe(n)) < 0;) {
          var i = Qe(n);
          if (i.transform !== "none" || i.perspective !== "none" || i.contain === "paint" || ["transform", "perspective"].indexOf(i.willChange) !== -1 || t && i.willChange === "filter" || t && i.filter && i.filter !== "none") {
            return n;
          }
          n = n.parentNode;
        }
        return null;
      }(e) || t;
    }
  }
  function it(e) {
    if (["top", "bottom"].indexOf(e) >= 0) {
      return "x";
    } else {
      return "y";
    }
  }
  function rt(e, t, n) {
    return qe(e, We(t, n));
  }
  function ot(e) {
    return Object.assign({}, {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }, e);
  }
  function at(e, t) {
    return t.reduce(function (t, n) {
      t[n] = e;
      return t;
    }, {});
  }
  const st = {
    name: "arrow",
    enabled: true,
    phase: "main",
    fn: function (e) {
      var t;
      var n = e.state;
      var i = e.name;
      var r = e.options;
      var o = n.elements.arrow;
      var a = n.modifiersData.popperOffsets;
      var s = Be(n.placement);
      var l = it(s);
      var c = [ye, ve].indexOf(s) >= 0 ? "height" : "width";
      if (o && a) {
        var u = function (e, t) {
          return ot(typeof (e = typeof e == "function" ? e(Object.assign({}, t.rects, {
            placement: t.placement
          })) : e) != "number" ? e : at(e, we));
        }(r.padding, n);
        var d = Ge(o);
        var h = l === "y" ? ge : ye;
        var f = l === "y" ? me : ve;
        var p = n.rects.reference[c] + n.rects.reference[l] - a[l] - n.rects.popper[c];
        var g = a[l] - n.rects.reference[l];
        var m = nt(o);
        var v = m ? l === "y" ? m.clientHeight || 0 : m.clientWidth || 0 : 0;
        var y = p / 2 - g / 2;
        var b = u[h];
        var w = v - d[c] - u[f];
        var x = v / 2 - d[c] / 2 + y;
        var _ = rt(b, x, w);
        var C = l;
        n.modifiersData[i] = ((t = {})[C] = _, t.centerOffset = _ - x, t);
      }
    },
    effect: function (e) {
      var t = e.state;
      var n = e.options.element;
      var i = n === undefined ? "[data-popper-arrow]" : n;
      if (i != null && (typeof i != "string" || (i = t.elements.popper.querySelector(i))) && Ke(t.elements.popper, i)) {
        t.elements.arrow = i;
      }
    },
    requires: ["popperOffsets"],
    requiresIfExists: ["preventOverflow"]
  };
  function lt(e) {
    return e.split("-")[1];
  }
  var ct = {
    top: "auto",
    right: "auto",
    bottom: "auto",
    left: "auto"
  };
  function ut(e) {
    var t;
    var n = e.popper;
    var i = e.popperRect;
    var r = e.placement;
    var o = e.variation;
    var a = e.offsets;
    var s = e.position;
    var l = e.gpuAcceleration;
    var c = e.adaptive;
    var u = e.roundOffsets;
    var d = e.isFixed;
    var h = a.x;
    var f = h === undefined ? 0 : h;
    var p = a.y;
    var g = p === undefined ? 0 : p;
    var m = typeof u == "function" ? u({
      x: f,
      y: g
    }) : {
      x: f,
      y: g
    };
    f = m.x;
    g = m.y;
    var v = a.hasOwnProperty("x");
    var y = a.hasOwnProperty("y");
    var b = ye;
    var w = ge;
    var x = window;
    if (c) {
      var _ = nt(n);
      var C = "clientHeight";
      var S = "clientWidth";
      if (_ === Re(n) && Qe(_ = Je(n)).position !== "static" && s === "absolute") {
        C = "scrollHeight";
        S = "scrollWidth";
      }
      if (r === ge || (r === ye || r === ve) && o === _e) {
        w = me;
        g -= (d && _ === x && x.visualViewport ? x.visualViewport.height : _[C]) - i.height;
        g *= l ? 1 : -1;
      }
      if (!(r !== ye && (r !== ge && r !== me || o !== _e))) {
        b = ve;
        f -= (d && _ === x && x.visualViewport ? x.visualViewport.width : _[S]) - i.width;
        f *= l ? 1 : -1;
      }
    }
    var k;
    var T = Object.assign({
      position: s
    }, c && ct);
    var A = u === true ? function (e) {
      var t = e.x;
      var n = e.y;
      var i = window.devicePixelRatio || 1;
      return {
        x: Ue(t * i) / i || 0,
        y: Ue(n * i) / i || 0
      };
    }({
      x: f,
      y: g
    }) : {
      x: f,
      y: g
    };
    f = A.x;
    g = A.y;
    if (l) {
      return Object.assign({}, T, ((k = {})[w] = y ? "0" : "", k[b] = v ? "0" : "", k.transform = (x.devicePixelRatio || 1) <= 1 ? "translate(" + f + "px, " + g + "px)" : "translate3d(" + f + "px, " + g + "px, 0)", k));
    } else {
      return Object.assign({}, T, ((t = {})[w] = y ? g + "px" : "", t[b] = v ? f + "px" : "", t.transform = "", t));
    }
  }
  const dt = {
    name: "computeStyles",
    enabled: true,
    phase: "beforeWrite",
    fn: function (e) {
      var t = e.state;
      var n = e.options;
      var i = n.gpuAcceleration;
      var r = i === undefined || i;
      var o = n.adaptive;
      var a = o === undefined || o;
      var s = n.roundOffsets;
      var l = s === undefined || s;
      var c = {
        placement: Be(t.placement),
        variation: lt(t.placement),
        popper: t.elements.popper,
        popperRect: t.rects.popper,
        gpuAcceleration: r,
        isFixed: t.options.strategy === "fixed"
      };
      if (t.modifiersData.popperOffsets != null) {
        t.styles.popper = Object.assign({}, t.styles.popper, ut(Object.assign({}, c, {
          offsets: t.modifiersData.popperOffsets,
          position: t.options.strategy,
          adaptive: a,
          roundOffsets: l
        })));
      }
      if (t.modifiersData.arrow != null) {
        t.styles.arrow = Object.assign({}, t.styles.arrow, ut(Object.assign({}, c, {
          offsets: t.modifiersData.arrow,
          position: "absolute",
          adaptive: false,
          roundOffsets: l
        })));
      }
      t.attributes.popper = Object.assign({}, t.attributes.popper, {
        "data-popper-placement": t.placement
      });
    },
    data: {}
  };
  var ht = {
    passive: true
  };
  const ft = {
    name: "eventListeners",
    enabled: true,
    phase: "write",
    fn: function () {},
    effect: function (e) {
      var t = e.state;
      var n = e.instance;
      var i = e.options;
      var r = i.scroll;
      var o = r === undefined || r;
      var a = i.resize;
      var s = a === undefined || a;
      var l = Re(t.elements.popper);
      var c = [].concat(t.scrollParents.reference, t.scrollParents.popper);
      if (o) {
        c.forEach(function (e) {
          e.addEventListener("scroll", n.update, ht);
        });
      }
      if (s) {
        l.addEventListener("resize", n.update, ht);
      }
      return function () {
        if (o) {
          c.forEach(function (e) {
            e.removeEventListener("scroll", n.update, ht);
          });
        }
        if (s) {
          l.removeEventListener("resize", n.update, ht);
        }
      };
    },
    data: {}
  };
  var pt = {
    left: "right",
    right: "left",
    bottom: "top",
    top: "bottom"
  };
  function gt(e) {
    return e.replace(/left|right|bottom|top/g, function (e) {
      return pt[e];
    });
  }
  var mt = {
    start: "end",
    end: "start"
  };
  function vt(e) {
    return e.replace(/start|end/g, function (e) {
      return mt[e];
    });
  }
  function yt(e) {
    var t = Re(e);
    return {
      scrollLeft: t.pageXOffset,
      scrollTop: t.pageYOffset
    };
  }
  function bt(e) {
    return Xe(Je(e)).left + yt(e).scrollLeft;
  }
  function wt(e) {
    var t = Qe(e);
    var n = t.overflow;
    var i = t.overflowX;
    var r = t.overflowY;
    return /auto|scroll|overlay|hidden/.test(n + r + i);
  }
  function xt(e, t) {
    var n;
    if (t === undefined) {
      t = [];
    }
    var i = function e(t) {
      if (["html", "body", "#document"].indexOf(Fe(t)) >= 0) {
        return t.ownerDocument.body;
      } else if ($e(t) && wt(t)) {
        return t;
      } else {
        return e(et(t));
      }
    }(e);
    var r = i === ((n = e.ownerDocument) == null ? undefined : n.body);
    var o = Re(i);
    var a = r ? [o].concat(o.visualViewport || [], wt(i) ? i : []) : i;
    var s = t.concat(a);
    if (r) {
      return s;
    } else {
      return s.concat(xt(et(a)));
    }
  }
  function _t(e) {
    return Object.assign({}, e, {
      left: e.x,
      top: e.y,
      right: e.x + e.width,
      bottom: e.y + e.height
    });
  }
  function Ct(e, t, n) {
    if (t === Se) {
      return _t(function (e, t) {
        var n = Re(e);
        var i = Je(e);
        var r = n.visualViewport;
        var o = i.clientWidth;
        var a = i.clientHeight;
        var s = 0;
        var l = 0;
        if (r) {
          o = r.width;
          a = r.height;
          var c = Ye();
          if (c || !c && t === "fixed") {
            s = r.offsetLeft;
            l = r.offsetTop;
          }
        }
        return {
          width: o,
          height: a,
          x: s + bt(e),
          y: l
        };
      }(e, n));
    } else if (je(t)) {
      return function (e, t) {
        var n = Xe(e, false, t === "fixed");
        n.top = n.top + e.clientTop;
        n.left = n.left + e.clientLeft;
        n.bottom = n.top + e.clientHeight;
        n.right = n.left + e.clientWidth;
        n.width = e.clientWidth;
        n.height = e.clientHeight;
        n.x = n.left;
        n.y = n.top;
        return n;
      }(t, n);
    } else {
      return _t(function (e) {
        var t;
        var n = Je(e);
        var i = yt(e);
        var r = (t = e.ownerDocument) == null ? undefined : t.body;
        var o = qe(n.scrollWidth, n.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0);
        var a = qe(n.scrollHeight, n.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0);
        var s = -i.scrollLeft + bt(e);
        var l = -i.scrollTop;
        if (Qe(r || n).direction === "rtl") {
          s += qe(n.clientWidth, r ? r.clientWidth : 0) - o;
        }
        return {
          width: o,
          height: a,
          x: s,
          y: l
        };
      }(Je(e)));
    }
  }
  function St(e) {
    var t;
    var n = e.reference;
    var i = e.element;
    var r = e.placement;
    var o = r ? Be(r) : null;
    var a = r ? lt(r) : null;
    var s = n.x + n.width / 2 - i.width / 2;
    var l = n.y + n.height / 2 - i.height / 2;
    switch (o) {
      case ge:
        t = {
          x: s,
          y: n.y - i.height
        };
        break;
      case me:
        t = {
          x: s,
          y: n.y + n.height
        };
        break;
      case ve:
        t = {
          x: n.x + n.width,
          y: l
        };
        break;
      case ye:
        t = {
          x: n.x - i.width,
          y: l
        };
        break;
      default:
        t = {
          x: n.x,
          y: n.y
        };
    }
    var c = o ? it(o) : null;
    if (c != null) {
      var u = c === "y" ? "height" : "width";
      switch (a) {
        case xe:
          t[c] = t[c] - (n[u] / 2 - i[u] / 2);
          break;
        case _e:
          t[c] = t[c] + (n[u] / 2 - i[u] / 2);
      }
    }
    return t;
  }
  function kt(e, t) {
    if (t === undefined) {
      t = {};
    }
    var n = t;
    var i = n.placement;
    var r = i === undefined ? e.placement : i;
    var o = n.strategy;
    var a = o === undefined ? e.strategy : o;
    var s = n.boundary;
    var l = s === undefined ? Ce : s;
    var c = n.rootBoundary;
    var u = c === undefined ? Se : c;
    var d = n.elementContext;
    var h = d === undefined ? ke : d;
    var f = n.altBoundary;
    var p = f !== undefined && f;
    var g = n.padding;
    var m = g === undefined ? 0 : g;
    var v = ot(typeof m != "number" ? m : at(m, we));
    var y = h === ke ? Te : ke;
    var b = e.rects.popper;
    var w = e.elements[p ? y : h];
    var x = function (e, t, n, i) {
      var r = t === "clippingParents" ? function (e) {
        var t = xt(et(e));
        var n = ["absolute", "fixed"].indexOf(Qe(e).position) >= 0 && $e(e) ? nt(e) : e;
        if (je(n)) {
          return t.filter(function (e) {
            return je(e) && Ke(e, n) && Fe(e) !== "body";
          });
        } else {
          return [];
        }
      }(e) : [].concat(t);
      var o = [].concat(r, [n]);
      var a = o[0];
      var s = o.reduce(function (t, n) {
        var r = Ct(e, n, i);
        t.top = qe(r.top, t.top);
        t.right = We(r.right, t.right);
        t.bottom = We(r.bottom, t.bottom);
        t.left = qe(r.left, t.left);
        return t;
      }, Ct(e, a, i));
      s.width = s.right - s.left;
      s.height = s.bottom - s.top;
      s.x = s.left;
      s.y = s.top;
      return s;
    }(je(w) ? w : w.contextElement || Je(e.elements.popper), l, u, a);
    var _ = Xe(e.elements.reference);
    var C = St({
      reference: _,
      element: b,
      strategy: "absolute",
      placement: r
    });
    var S = _t(Object.assign({}, b, C));
    var k = h === ke ? S : _;
    var T = {
      top: x.top - k.top + v.top,
      bottom: k.bottom - x.bottom + v.bottom,
      left: x.left - k.left + v.left,
      right: k.right - x.right + v.right
    };
    var A = e.modifiersData.offset;
    if (h === ke && A) {
      var D = A[r];
      Object.keys(T).forEach(function (e) {
        var t = [ve, me].indexOf(e) >= 0 ? 1 : -1;
        var n = [ge, me].indexOf(e) >= 0 ? "y" : "x";
        T[e] += D[n] * t;
      });
    }
    return T;
  }
  const Tt = {
    name: "flip",
    enabled: true,
    phase: "main",
    fn: function (e) {
      var t = e.state;
      var n = e.options;
      var i = e.name;
      if (!t.modifiersData[i]._skip) {
        for (var r = n.mainAxis, o = r === undefined || r, a = n.altAxis, s = a === undefined || a, l = n.fallbackPlacements, c = n.padding, u = n.boundary, d = n.rootBoundary, h = n.altBoundary, f = n.flipVariations, p = f === undefined || f, g = n.allowedAutoPlacements, m = t.options.placement, v = Be(m), y = l || (v !== m && p ? function (e) {
            if (Be(e) === be) {
              return [];
            }
            var t = gt(e);
            return [vt(e), t, vt(t)];
          }(m) : [gt(m)]), b = [m].concat(y).reduce(function (e, n) {
            return e.concat(Be(n) === be ? function (e, t) {
              if (t === undefined) {
                t = {};
              }
              var n = t;
              var i = n.placement;
              var r = n.boundary;
              var o = n.rootBoundary;
              var a = n.padding;
              var s = n.flipVariations;
              var l = n.allowedAutoPlacements;
              var c = l === undefined ? De : l;
              var u = lt(i);
              var d = u ? s ? Ae : Ae.filter(function (e) {
                return lt(e) === u;
              }) : we;
              var h = d.filter(function (e) {
                return c.indexOf(e) >= 0;
              });
              if (h.length === 0) {
                h = d;
              }
              var f = h.reduce(function (t, n) {
                t[n] = kt(e, {
                  placement: n,
                  boundary: r,
                  rootBoundary: o,
                  padding: a
                })[Be(n)];
                return t;
              }, {});
              return Object.keys(f).sort(function (e, t) {
                return f[e] - f[t];
              });
            }(t, {
              placement: n,
              boundary: u,
              rootBoundary: d,
              padding: c,
              flipVariations: p,
              allowedAutoPlacements: g
            }) : n);
          }, []), w = t.rects.reference, x = t.rects.popper, _ = new Map(), C = true, S = b[0], k = 0; k < b.length; k++) {
          var T = b[k];
          var A = Be(T);
          var D = lt(T) === xe;
          var E = [ge, me].indexOf(A) >= 0;
          var O = E ? "width" : "height";
          var M = kt(t, {
            placement: T,
            boundary: u,
            rootBoundary: d,
            altBoundary: h,
            padding: c
          });
          var I = E ? D ? ve : ye : D ? me : ge;
          if (w[O] > x[O]) {
            I = gt(I);
          }
          var P = gt(I);
          var L = [];
          if (o) {
            L.push(M[A] <= 0);
          }
          if (s) {
            L.push(M[I] <= 0, M[P] <= 0);
          }
          if (L.every(function (e) {
            return e;
          })) {
            S = T;
            C = false;
            break;
          }
          _.set(T, L);
        }
        if (C) {
          for (var N = function (e) {
              var t = b.find(function (t) {
                var n = _.get(t);
                if (n) {
                  return n.slice(0, e).every(function (e) {
                    return e;
                  });
                }
              });
              if (t) {
                S = t;
                return "break";
              }
            }, F = p ? 3 : 1; F > 0 && N(F) !== "break"; F--);
        }
        if (t.placement !== S) {
          t.modifiersData[i]._skip = true;
          t.placement = S;
          t.reset = true;
        }
      }
    },
    requiresIfExists: ["offset"],
    data: {
      _skip: false
    }
  };
  function At(e, t, n) {
    if (n === undefined) {
      n = {
        x: 0,
        y: 0
      };
    }
    return {
      top: e.top - t.height - n.y,
      right: e.right - t.width + n.x,
      bottom: e.bottom - t.height + n.y,
      left: e.left - t.width - n.x
    };
  }
  function Dt(e) {
    return [ge, ve, me, ye].some(function (t) {
      return e[t] >= 0;
    });
  }
  const Et = {
    name: "hide",
    enabled: true,
    phase: "main",
    requiresIfExists: ["preventOverflow"],
    fn: function (e) {
      var t = e.state;
      var n = e.name;
      var i = t.rects.reference;
      var r = t.rects.popper;
      var o = t.modifiersData.preventOverflow;
      var a = kt(t, {
        elementContext: "reference"
      });
      var s = kt(t, {
        altBoundary: true
      });
      var l = At(a, i);
      var c = At(s, r, o);
      var u = Dt(l);
      var d = Dt(c);
      t.modifiersData[n] = {
        referenceClippingOffsets: l,
        popperEscapeOffsets: c,
        isReferenceHidden: u,
        hasPopperEscaped: d
      };
      t.attributes.popper = Object.assign({}, t.attributes.popper, {
        "data-popper-reference-hidden": u,
        "data-popper-escaped": d
      });
    }
  };
  const Ot = {
    name: "offset",
    enabled: true,
    phase: "main",
    requires: ["popperOffsets"],
    fn: function (e) {
      var t = e.state;
      var n = e.options;
      var i = e.name;
      var r = n.offset;
      var o = r === undefined ? [0, 0] : r;
      var a = De.reduce(function (e, n) {
        e[n] = function (e, t, n) {
          var i = Be(e);
          var r = [ye, ge].indexOf(i) >= 0 ? -1 : 1;
          var o = typeof n == "function" ? n(Object.assign({}, t, {
            placement: e
          })) : n;
          var a = o[0];
          var s = o[1];
          a = a || 0;
          s = (s || 0) * r;
          if ([ye, ve].indexOf(i) >= 0) {
            return {
              x: s,
              y: a
            };
          } else {
            return {
              x: a,
              y: s
            };
          }
        }(n, t.rects, o);
        return e;
      }, {});
      var s = a[t.placement];
      var l = s.x;
      var c = s.y;
      if (t.modifiersData.popperOffsets != null) {
        t.modifiersData.popperOffsets.x += l;
        t.modifiersData.popperOffsets.y += c;
      }
      t.modifiersData[i] = a;
    }
  };
  const Mt = {
    name: "popperOffsets",
    enabled: true,
    phase: "read",
    fn: function (e) {
      var t = e.state;
      var n = e.name;
      t.modifiersData[n] = St({
        reference: t.rects.reference,
        element: t.rects.popper,
        strategy: "absolute",
        placement: t.placement
      });
    },
    data: {}
  };
  const It = {
    name: "preventOverflow",
    enabled: true,
    phase: "main",
    fn: function (e) {
      var t = e.state;
      var n = e.options;
      var i = e.name;
      var r = n.mainAxis;
      var o = r === undefined || r;
      var a = n.altAxis;
      var s = a !== undefined && a;
      var l = n.boundary;
      var c = n.rootBoundary;
      var u = n.altBoundary;
      var d = n.padding;
      var h = n.tether;
      var f = h === undefined || h;
      var p = n.tetherOffset;
      var g = p === undefined ? 0 : p;
      var m = kt(t, {
        boundary: l,
        rootBoundary: c,
        padding: d,
        altBoundary: u
      });
      var v = Be(t.placement);
      var y = lt(t.placement);
      var b = !y;
      var w = it(v);
      var x = w === "x" ? "y" : "x";
      var _ = t.modifiersData.popperOffsets;
      var C = t.rects.reference;
      var S = t.rects.popper;
      var k = typeof g == "function" ? g(Object.assign({}, t.rects, {
        placement: t.placement
      })) : g;
      var T = typeof k == "number" ? {
        mainAxis: k,
        altAxis: k
      } : Object.assign({
        mainAxis: 0,
        altAxis: 0
      }, k);
      var A = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null;
      var D = {
        x: 0,
        y: 0
      };
      if (_) {
        if (o) {
          var E;
          var O = w === "y" ? ge : ye;
          var M = w === "y" ? me : ve;
          var I = w === "y" ? "height" : "width";
          var P = _[w];
          var L = P + m[O];
          var N = P - m[M];
          var F = f ? -S[I] / 2 : 0;
          var R = y === xe ? C[I] : S[I];
          var j = y === xe ? -S[I] : -C[I];
          var $ = t.elements.arrow;
          var z = f && $ ? Ge($) : {
            width: 0,
            height: 0
          };
          var H = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          };
          var B = H[O];
          var q = H[M];
          var W = rt(0, C[I], z[I]);
          var U = b ? C[I] / 2 - F - W - B - T.mainAxis : R - W - B - T.mainAxis;
          var V = b ? -C[I] / 2 + F + W + q + T.mainAxis : j + W + q + T.mainAxis;
          var Y = t.elements.arrow && nt(t.elements.arrow);
          var X = Y ? w === "y" ? Y.clientTop || 0 : Y.clientLeft || 0 : 0;
          var G = (E = A == null ? undefined : A[w]) != null ? E : 0;
          var K = P + V - G;
          var Q = rt(f ? We(L, P + U - G - X) : L, P, f ? qe(N, K) : N);
          _[w] = Q;
          D[w] = Q - P;
        }
        if (s) {
          var Z;
          var J = w === "x" ? ge : ye;
          var ee = w === "x" ? me : ve;
          var te = _[x];
          var ne = x === "y" ? "height" : "width";
          var ie = te + m[J];
          var re = te - m[ee];
          var oe = [ge, ye].indexOf(v) !== -1;
          var ae = (Z = A == null ? undefined : A[x]) != null ? Z : 0;
          var se = oe ? ie : te - C[ne] - S[ne] - ae + T.altAxis;
          var le = oe ? te + C[ne] + S[ne] - ae - T.altAxis : re;
          var ce = f && oe ? function (e, t, n) {
            var i = rt(e, t, n);
            if (i > n) {
              return n;
            } else {
              return i;
            }
          }(se, te, le) : rt(f ? se : ie, te, f ? le : re);
          _[x] = ce;
          D[x] = ce - te;
        }
        t.modifiersData[i] = D;
      }
    },
    requiresIfExists: ["offset"]
  };
  function Pt(e, t, n) {
    if (n === undefined) {
      n = false;
    }
    var i;
    var r;
    var o = $e(t);
    var a = $e(t) && function (e) {
      var t = e.getBoundingClientRect();
      var n = Ue(t.width) / e.offsetWidth || 1;
      var i = Ue(t.height) / e.offsetHeight || 1;
      return n !== 1 || i !== 1;
    }(t);
    var s = Je(t);
    var l = Xe(e, a, n);
    var c = {
      scrollLeft: 0,
      scrollTop: 0
    };
    var u = {
      x: 0,
      y: 0
    };
    if (o || !o && !n) {
      if (Fe(t) !== "body" || wt(s)) {
        c = (i = t) !== Re(i) && $e(i) ? {
          scrollLeft: (r = i).scrollLeft,
          scrollTop: r.scrollTop
        } : yt(i);
      }
      if ($e(t)) {
        (u = Xe(t, true)).x += t.clientLeft;
        u.y += t.clientTop;
      } else if (s) {
        u.x = bt(s);
      }
    }
    return {
      x: l.left + c.scrollLeft - u.x,
      y: l.top + c.scrollTop - u.y,
      width: l.width,
      height: l.height
    };
  }
  function Lt(e) {
    var t = new Map();
    var n = new Set();
    var i = [];
    e.forEach(function (e) {
      t.set(e.name, e);
    });
    e.forEach(function (e) {
      if (!n.has(e.name)) {
        (function e(r) {
          n.add(r.name);
          [].concat(r.requires || [], r.requiresIfExists || []).forEach(function (i) {
            if (!n.has(i)) {
              var r = t.get(i);
              if (r) {
                e(r);
              }
            }
          });
          i.push(r);
        })(e);
      }
    });
    return i;
  }
  var Nt = {
    placement: "bottom",
    modifiers: [],
    strategy: "absolute"
  };
  function Ft() {
    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) {
      t[n] = arguments[n];
    }
    return !t.some(function (e) {
      return !(e && typeof e.getBoundingClientRect == "function");
    });
  }
  function Rt(e) {
    if (e === undefined) {
      e = {};
    }
    var t = e;
    var n = t.defaultModifiers;
    var i = n === undefined ? [] : n;
    var r = t.defaultOptions;
    var o = r === undefined ? Nt : r;
    return function (e, t, n) {
      if (n === undefined) {
        n = o;
      }
      var r;
      var a;
      var s = {
        placement: "bottom",
        orderedModifiers: [],
        options: Object.assign({}, Nt, o),
        modifiersData: {},
        elements: {
          reference: e,
          popper: t
        },
        attributes: {},
        styles: {}
      };
      var l = [];
      var c = false;
      var u = {
        state: s,
        setOptions: function (n) {
          var r = typeof n == "function" ? n(s.options) : n;
          d();
          s.options = Object.assign({}, o, s.options, r);
          s.scrollParents = {
            reference: je(e) ? xt(e) : e.contextElement ? xt(e.contextElement) : [],
            popper: xt(t)
          };
          var a;
          var c;
          var h = function (e) {
            var t = Lt(e);
            return Ne.reduce(function (e, n) {
              return e.concat(t.filter(function (e) {
                return e.phase === n;
              }));
            }, []);
          }((a = [].concat(i, s.options.modifiers), c = a.reduce(function (e, t) {
            var n = e[t.name];
            e[t.name] = n ? Object.assign({}, n, t, {
              options: Object.assign({}, n.options, t.options),
              data: Object.assign({}, n.data, t.data)
            }) : t;
            return e;
          }, {}), Object.keys(c).map(function (e) {
            return c[e];
          })));
          s.orderedModifiers = h.filter(function (e) {
            return e.enabled;
          });
          s.orderedModifiers.forEach(function (e) {
            var t = e.name;
            var n = e.options;
            var i = n === undefined ? {} : n;
            var r = e.effect;
            if (typeof r == "function") {
              var o = r({
                state: s,
                name: t,
                instance: u,
                options: i
              });
              l.push(o || function () {});
            }
          });
          return u.update();
        },
        forceUpdate: function () {
          if (!c) {
            var e = s.elements;
            var t = e.reference;
            var n = e.popper;
            if (Ft(t, n)) {
              s.rects = {
                reference: Pt(t, nt(n), s.options.strategy === "fixed"),
                popper: Ge(n)
              };
              s.reset = false;
              s.placement = s.options.placement;
              s.orderedModifiers.forEach(function (e) {
                return s.modifiersData[e.name] = Object.assign({}, e.data);
              });
              for (var i = 0; i < s.orderedModifiers.length; i++) {
                if (s.reset !== true) {
                  var r = s.orderedModifiers[i];
                  var o = r.fn;
                  var a = r.options;
                  var l = a === undefined ? {} : a;
                  var d = r.name;
                  if (typeof o == "function") {
                    s = o({
                      state: s,
                      options: l,
                      name: d,
                      instance: u
                    }) || s;
                  }
                } else {
                  s.reset = false;
                  i = -1;
                }
              }
            }
          }
        },
        update: (r = function () {
          return new Promise(function (e) {
            u.forceUpdate();
            e(s);
          });
        }, function () {
          if (!a) {
            a = new Promise(function (e) {
              Promise.resolve().then(function () {
                a = undefined;
                e(r());
              });
            });
          }
          return a;
        }),
        destroy: function () {
          d();
          c = true;
        }
      };
      if (!Ft(e, t)) {
        return u;
      }
      function d() {
        l.forEach(function (e) {
          return e();
        });
        l = [];
      }
      u.setOptions(n).then(function (e) {
        if (!c && n.onFirstUpdate) {
          n.onFirstUpdate(e);
        }
      });
      return u;
    };
  }
  var jt = Rt();
  var $t = Rt({
    defaultModifiers: [ft, Mt, dt, He]
  });
  var zt = Rt({
    defaultModifiers: [ft, Mt, dt, He, Ot, Tt, It, st, Et]
  });
  const Ht = Object.freeze(Object.defineProperty({
    __proto__: null,
    popperGenerator: Rt,
    detectOverflow: kt,
    createPopperBase: jt,
    createPopper: zt,
    createPopperLite: $t,
    top: ge,
    bottom: me,
    right: ve,
    left: ye,
    auto: be,
    basePlacements: we,
    start: xe,
    end: _e,
    clippingParents: Ce,
    viewport: Se,
    popper: ke,
    reference: Te,
    variationPlacements: Ae,
    placements: De,
    beforeRead: Ee,
    read: "read",
    afterRead: Oe,
    beforeMain: Me,
    main: "main",
    afterMain: Ie,
    beforeWrite: Pe,
    write: "write",
    afterWrite: Le,
    modifierPhases: Ne,
    applyStyles: He,
    arrow: st,
    computeStyles: dt,
    eventListeners: ft,
    flip: Tt,
    hide: Et,
    offset: Ot,
    popperOffsets: Mt,
    preventOverflow: It
  }, Symbol.toStringTag, {
    value: "Module"
  }));
  const Bt = "dropdown";
  const qt = "ArrowUp";
  const Wt = "ArrowDown";
  const Ut = "click.bs.dropdown.data-api";
  const Vt = "keydown.bs.dropdown.data-api";
  const Yt = "show";
  const Xt = "[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)";
  const Gt = ".dropdown-menu";
  const Kt = p() ? "top-end" : "top-start";
  const Qt = p() ? "top-start" : "top-end";
  const Zt = p() ? "bottom-end" : "bottom-start";
  const Jt = p() ? "bottom-start" : "bottom-end";
  const en = p() ? "left-start" : "right-start";
  const tn = p() ? "right-start" : "left-start";
  const nn = {
    autoClose: true,
    boundary: "clippingParents",
    display: "dynamic",
    offset: [0, 2],
    popperConfig: null,
    reference: "toggle"
  };
  const rn = {
    autoClose: "(boolean|string)",
    boundary: "(string|element)",
    display: "string",
    offset: "(array|string|function)",
    popperConfig: "(null|object|function)",
    reference: "(string|element|object)"
  };
  class on extends B {
    constructor(e, t) {
      super(e, t);
      this._popper = null;
      this._parent = this._element.parentNode;
      this._menu = Y.next(this._element, Gt)[0] || Y.prev(this._element, Gt)[0] || Y.findOne(Gt, this._parent);
      this._inNavbar = this._detectNavbar();
    }
    static get Default() {
      return nn;
    }
    static get DefaultType() {
      return rn;
    }
    static get NAME() {
      return Bt;
    }
    toggle() {
      if (this._isShown()) {
        return this.hide();
      } else {
        return this.show();
      }
    }
    show() {
      if (l(this._element) || this._isShown()) {
        return;
      }
      const e = {
        relatedTarget: this._element
      };
      if (!L.trigger(this._element, "show.bs.dropdown", e).defaultPrevented) {
        this._createPopper();
        if ("ontouchstart" in document.documentElement && !this._parent.closest(".navbar-nav")) {
          for (const e of [].concat(...document.body.children)) {
            L.on(e, "mouseover", u);
          }
        }
        this._element.focus();
        this._element.setAttribute("aria-expanded", true);
        this._menu.classList.add(Yt);
        this._element.classList.add(Yt);
        L.trigger(this._element, "shown.bs.dropdown", e);
      }
    }
    hide() {
      if (l(this._element) || !this._isShown()) {
        return;
      }
      const e = {
        relatedTarget: this._element
      };
      this._completeHide(e);
    }
    dispose() {
      if (this._popper) {
        this._popper.destroy();
      }
      super.dispose();
    }
    update() {
      this._inNavbar = this._detectNavbar();
      if (this._popper) {
        this._popper.update();
      }
    }
    _completeHide(e) {
      if (!L.trigger(this._element, "hide.bs.dropdown", e).defaultPrevented) {
        if ("ontouchstart" in document.documentElement) {
          for (const e of [].concat(...document.body.children)) {
            L.off(e, "mouseover", u);
          }
        }
        if (this._popper) {
          this._popper.destroy();
        }
        this._menu.classList.remove(Yt);
        this._element.classList.remove(Yt);
        this._element.setAttribute("aria-expanded", "false");
        z.removeDataAttribute(this._menu, "popper");
        L.trigger(this._element, "hidden.bs.dropdown", e);
      }
    }
    _getConfig(e) {
      if (typeof (e = super._getConfig(e)).reference == "object" && !o(e.reference) && typeof e.reference.getBoundingClientRect != "function") {
        throw new TypeError(Bt.toUpperCase() + ": Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.");
      }
      return e;
    }
    _createPopper() {
      if (Ht === undefined) {
        throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");
      }
      let e = this._element;
      if (this._config.reference === "parent") {
        e = this._parent;
      } else if (o(this._config.reference)) {
        e = a(this._config.reference);
      } else if (typeof this._config.reference == "object") {
        e = this._config.reference;
      }
      const t = this._getPopperConfig();
      this._popper = zt(e, this._menu, t);
    }
    _isShown() {
      return this._menu.classList.contains(Yt);
    }
    _getPlacement() {
      const e = this._parent;
      if (e.classList.contains("dropend")) {
        return en;
      }
      if (e.classList.contains("dropstart")) {
        return tn;
      }
      if (e.classList.contains("dropup-center")) {
        return "top";
      }
      if (e.classList.contains("dropdown-center")) {
        return "bottom";
      }
      const t = getComputedStyle(this._menu).getPropertyValue("--bs-position").trim() === "end";
      if (e.classList.contains("dropup")) {
        if (t) {
          return Qt;
        } else {
          return Kt;
        }
      } else if (t) {
        return Jt;
      } else {
        return Zt;
      }
    }
    _detectNavbar() {
      return this._element.closest(".navbar") !== null;
    }
    _getOffset() {
      const {
        offset: e
      } = this._config;
      if (typeof e == "string") {
        return e.split(",").map(e => Number.parseInt(e, 10));
      } else if (typeof e == "function") {
        return t => e(t, this._element);
      } else {
        return e;
      }
    }
    _getPopperConfig() {
      const e = {
        placement: this._getPlacement(),
        modifiers: [{
          name: "preventOverflow",
          options: {
            boundary: this._config.boundary
          }
        }, {
          name: "offset",
          options: {
            offset: this._getOffset()
          }
        }]
      };
      if (this._inNavbar || this._config.display === "static") {
        z.setDataAttribute(this._menu, "popper", "static");
        e.modifiers = [{
          name: "applyStyles",
          enabled: false
        }];
      }
      return {
        ...e,
        ...(typeof this._config.popperConfig == "function" ? this._config.popperConfig(e) : this._config.popperConfig)
      };
    }
    _selectMenuItem({
      key: e,
      target: t
    }) {
      const n = Y.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", this._menu).filter(e => s(e));
      if (n.length) {
        y(n, t, e === Wt, !n.includes(t)).focus();
      }
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = on.getOrCreateInstance(this, e);
        if (typeof e == "string") {
          if (t[e] === undefined) {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e]();
        }
      });
    }
    static clearMenus(e) {
      if (e.button === 2 || e.type === "keyup" && e.key !== "Tab") {
        return;
      }
      const t = Y.find("[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled).show");
      for (const n of t) {
        const t = on.getInstance(n);
        if (!t || t._config.autoClose === false) {
          continue;
        }
        const i = e.composedPath();
        const r = i.includes(t._menu);
        if (i.includes(t._element) || t._config.autoClose === "inside" && !r || t._config.autoClose === "outside" && r) {
          continue;
        }
        if (t._menu.contains(e.target) && (e.type === "keyup" && e.key === "Tab" || /input|select|option|textarea|form/i.test(e.target.tagName))) {
          continue;
        }
        const o = {
          relatedTarget: t._element
        };
        if (e.type === "click") {
          o.clickEvent = e;
        }
        t._completeHide(o);
      }
    }
    static dataApiKeydownHandler(e) {
      const t = /input|textarea/i.test(e.target.tagName);
      const n = e.key === "Escape";
      const i = [qt, Wt].includes(e.key);
      if (!i && !n) {
        return;
      }
      if (t && !n) {
        return;
      }
      e.preventDefault();
      const r = this.matches(Xt) ? this : Y.prev(this, Xt)[0] || Y.next(this, Xt)[0] || Y.findOne(Xt, e.delegateTarget.parentNode);
      const o = on.getOrCreateInstance(r);
      if (i) {
        e.stopPropagation();
        o.show();
        return void o._selectMenuItem(e);
      }
      if (o._isShown()) {
        e.stopPropagation();
        o.hide();
        r.focus();
      }
    }
  }
  L.on(document, Vt, Xt, on.dataApiKeydownHandler);
  L.on(document, Vt, Gt, on.dataApiKeydownHandler);
  L.on(document, Ut, on.clearMenus);
  L.on(document, "keyup.bs.dropdown.data-api", on.clearMenus);
  L.on(document, Ut, Xt, function (e) {
    e.preventDefault();
    on.getOrCreateInstance(this).toggle();
  });
  g(on);
  const an = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top";
  const sn = ".sticky-top";
  const ln = "padding-right";
  const cn = "margin-right";
  class un {
    constructor() {
      this._element = document.body;
    }
    getWidth() {
      const e = document.documentElement.clientWidth;
      return Math.abs(window.innerWidth - e);
    }
    hide() {
      const e = this.getWidth();
      this._disableOverFlow();
      this._setElementAttributes(this._element, ln, t => t + e);
      this._setElementAttributes(an, ln, t => t + e);
      this._setElementAttributes(sn, cn, t => t - e);
    }
    reset() {
      this._resetElementAttributes(this._element, "overflow");
      this._resetElementAttributes(this._element, ln);
      this._resetElementAttributes(an, ln);
      this._resetElementAttributes(sn, cn);
    }
    isOverflowing() {
      return this.getWidth() > 0;
    }
    _disableOverFlow() {
      this._saveInitialAttribute(this._element, "overflow");
      this._element.style.overflow = "hidden";
    }
    _setElementAttributes(e, t, n) {
      const i = this.getWidth();
      this._applyManipulationCallback(e, e => {
        if (e !== this._element && window.innerWidth > e.clientWidth + i) {
          return;
        }
        this._saveInitialAttribute(e, t);
        const r = window.getComputedStyle(e).getPropertyValue(t);
        e.style.setProperty(t, n(Number.parseFloat(r)) + "px");
      });
    }
    _saveInitialAttribute(e, t) {
      const n = e.style.getPropertyValue(t);
      if (n) {
        z.setDataAttribute(e, t, n);
      }
    }
    _resetElementAttributes(e, t) {
      this._applyManipulationCallback(e, e => {
        const n = z.getDataAttribute(e, t);
        if (n !== null) {
          z.removeDataAttribute(e, t);
          e.style.setProperty(t, n);
        } else {
          e.style.removeProperty(t);
        }
      });
    }
    _applyManipulationCallback(e, t) {
      if (o(e)) {
        t(e);
      } else {
        for (const n of Y.find(e, this._element)) {
          t(n);
        }
      }
    }
  }
  const dn = "mousedown.bs.backdrop";
  const hn = {
    className: "modal-backdrop",
    clickCallback: null,
    isAnimated: false,
    isVisible: true,
    rootElement: "body"
  };
  const fn = {
    className: "string",
    clickCallback: "(function|null)",
    isAnimated: "boolean",
    isVisible: "boolean",
    rootElement: "(element|string)"
  };
  class pn extends H {
    constructor(e) {
      super();
      this._config = this._getConfig(e);
      this._isAppended = false;
      this._element = null;
    }
    static get Default() {
      return hn;
    }
    static get DefaultType() {
      return fn;
    }
    static get NAME() {
      return "backdrop";
    }
    show(e) {
      if (!this._config.isVisible) {
        return void m(e);
      }
      this._append();
      const t = this._getElement();
      if (this._config.isAnimated) {
        d(t);
      }
      t.classList.add("show");
      this._emulateAnimation(() => {
        m(e);
      });
    }
    hide(e) {
      if (this._config.isVisible) {
        this._getElement().classList.remove("show");
        this._emulateAnimation(() => {
          this.dispose();
          m(e);
        });
      } else {
        m(e);
      }
    }
    dispose() {
      if (this._isAppended) {
        L.off(this._element, dn);
        this._element.remove();
        this._isAppended = false;
      }
    }
    _getElement() {
      if (!this._element) {
        const e = document.createElement("div");
        e.className = this._config.className;
        if (this._config.isAnimated) {
          e.classList.add("fade");
        }
        this._element = e;
      }
      return this._element;
    }
    _configAfterMerge(e) {
      e.rootElement = a(e.rootElement);
      return e;
    }
    _append() {
      if (this._isAppended) {
        return;
      }
      const e = this._getElement();
      this._config.rootElement.append(e);
      L.on(e, dn, () => {
        m(this._config.clickCallback);
      });
      this._isAppended = true;
    }
    _emulateAnimation(e) {
      v(e, this._getElement(), this._config.isAnimated);
    }
  }
  const gn = ".bs.focustrap";
  const mn = "backward";
  const vn = {
    autofocus: true,
    trapElement: null
  };
  const yn = {
    autofocus: "boolean",
    trapElement: "element"
  };
  class bn extends H {
    constructor(e) {
      super();
      this._config = this._getConfig(e);
      this._isActive = false;
      this._lastTabNavDirection = null;
    }
    static get Default() {
      return vn;
    }
    static get DefaultType() {
      return yn;
    }
    static get NAME() {
      return "focustrap";
    }
    activate() {
      if (!this._isActive) {
        if (this._config.autofocus) {
          this._config.trapElement.focus();
        }
        L.off(document, gn);
        L.on(document, "focusin.bs.focustrap", e => this._handleFocusin(e));
        L.on(document, "keydown.tab.bs.focustrap", e => this._handleKeydown(e));
        this._isActive = true;
      }
    }
    deactivate() {
      if (this._isActive) {
        this._isActive = false;
        L.off(document, gn);
      }
    }
    _handleFocusin(e) {
      const {
        trapElement: t
      } = this._config;
      if (e.target === document || e.target === t || t.contains(e.target)) {
        return;
      }
      const n = Y.focusableChildren(t);
      if (n.length === 0) {
        t.focus();
      } else if (this._lastTabNavDirection === mn) {
        n[n.length - 1].focus();
      } else {
        n[0].focus();
      }
    }
    _handleKeydown(e) {
      if (e.key === "Tab") {
        this._lastTabNavDirection = e.shiftKey ? mn : "forward";
      }
    }
  }
  const wn = "hidden.bs.modal";
  const xn = "show.bs.modal";
  const _n = "modal-open";
  const Cn = "modal-static";
  const Sn = {
    backdrop: true,
    focus: true,
    keyboard: true
  };
  const kn = {
    backdrop: "(boolean|string)",
    focus: "boolean",
    keyboard: "boolean"
  };
  class Tn extends B {
    constructor(e, t) {
      super(e, t);
      this._dialog = Y.findOne(".modal-dialog", this._element);
      this._backdrop = this._initializeBackDrop();
      this._focustrap = this._initializeFocusTrap();
      this._isShown = false;
      this._isTransitioning = false;
      this._scrollBar = new un();
      this._addEventListeners();
    }
    static get Default() {
      return Sn;
    }
    static get DefaultType() {
      return kn;
    }
    static get NAME() {
      return "modal";
    }
    toggle(e) {
      if (this._isShown) {
        return this.hide();
      } else {
        return this.show(e);
      }
    }
    show(e) {
      if (!(this._isShown || this._isTransitioning || L.trigger(this._element, xn, {
        relatedTarget: e
      }).defaultPrevented)) {
        this._isShown = true;
        this._isTransitioning = true;
        this._scrollBar.hide();
        document.body.classList.add(_n);
        this._adjustDialog();
        this._backdrop.show(() => this._showElement(e));
      }
    }
    hide() {
      if (this._isShown && !this._isTransitioning) {
        if (!L.trigger(this._element, "hide.bs.modal").defaultPrevented) {
          this._isShown = false;
          this._isTransitioning = true;
          this._focustrap.deactivate();
          this._element.classList.remove("show");
          this._queueCallback(() => this._hideModal(), this._element, this._isAnimated());
        }
      }
    }
    dispose() {
      for (const e of [window, this._dialog]) {
        L.off(e, ".bs.modal");
      }
      this._backdrop.dispose();
      this._focustrap.deactivate();
      super.dispose();
    }
    handleUpdate() {
      this._adjustDialog();
    }
    _initializeBackDrop() {
      return new pn({
        isVisible: Boolean(this._config.backdrop),
        isAnimated: this._isAnimated()
      });
    }
    _initializeFocusTrap() {
      return new bn({
        trapElement: this._element
      });
    }
    _showElement(e) {
      if (!document.body.contains(this._element)) {
        document.body.append(this._element);
      }
      this._element.style.display = "block";
      this._element.removeAttribute("aria-hidden");
      this._element.setAttribute("aria-modal", true);
      this._element.setAttribute("role", "dialog");
      this._element.scrollTop = 0;
      const t = Y.findOne(".modal-body", this._dialog);
      if (t) {
        t.scrollTop = 0;
      }
      d(this._element);
      this._element.classList.add("show");
      this._queueCallback(() => {
        if (this._config.focus) {
          this._focustrap.activate();
        }
        this._isTransitioning = false;
        L.trigger(this._element, "shown.bs.modal", {
          relatedTarget: e
        });
      }, this._dialog, this._isAnimated());
    }
    _addEventListeners() {
      L.on(this._element, "keydown.dismiss.bs.modal", e => {
        if (e.key === "Escape") {
          if (this._config.keyboard) {
            e.preventDefault();
            return void this.hide();
          } else {
            return void this._triggerBackdropTransition();
          }
        }
      });
      L.on(window, "resize.bs.modal", () => {
        if (this._isShown && !this._isTransitioning) {
          this._adjustDialog();
        }
      });
      L.on(this._element, "mousedown.dismiss.bs.modal", e => {
        L.one(this._element, "click.dismiss.bs.modal", t => {
          if (this._element === e.target && this._element === t.target) {
            if (this._config.backdrop !== "static") {
              if (this._config.backdrop) {
                this.hide();
              }
            } else {
              this._triggerBackdropTransition();
            }
          }
        });
      });
    }
    _hideModal() {
      this._element.style.display = "none";
      this._element.setAttribute("aria-hidden", true);
      this._element.removeAttribute("aria-modal");
      this._element.removeAttribute("role");
      this._isTransitioning = false;
      this._backdrop.hide(() => {
        document.body.classList.remove(_n);
        this._resetAdjustments();
        this._scrollBar.reset();
        L.trigger(this._element, wn);
      });
    }
    _isAnimated() {
      return this._element.classList.contains("fade");
    }
    _triggerBackdropTransition() {
      if (L.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented) {
        return;
      }
      const e = this._element.scrollHeight > document.documentElement.clientHeight;
      const t = this._element.style.overflowY;
      if (!(t === "hidden" || this._element.classList.contains(Cn))) {
        if (!e) {
          this._element.style.overflowY = "hidden";
        }
        this._element.classList.add(Cn);
        this._queueCallback(() => {
          this._element.classList.remove(Cn);
          this._queueCallback(() => {
            this._element.style.overflowY = t;
          }, this._dialog);
        }, this._dialog);
        this._element.focus();
      }
    }
    _adjustDialog() {
      const e = this._element.scrollHeight > document.documentElement.clientHeight;
      const t = this._scrollBar.getWidth();
      const n = t > 0;
      if (n && !e) {
        const e = p() ? "paddingLeft" : "paddingRight";
        this._element.style[e] = t + "px";
      }
      if (!n && e) {
        const e = p() ? "paddingRight" : "paddingLeft";
        this._element.style[e] = t + "px";
      }
    }
    _resetAdjustments() {
      this._element.style.paddingLeft = "";
      this._element.style.paddingRight = "";
    }
    static jQueryInterface(e, t) {
      return this.each(function () {
        const n = Tn.getOrCreateInstance(this, e);
        if (typeof e == "string") {
          if (n[e] === undefined) {
            throw new TypeError(`No method named "${e}"`);
          }
          n[e](t);
        }
      });
    }
  }
  L.on(document, "click.bs.modal.data-api", "[data-bs-toggle=\"modal\"]", function (e) {
    const t = i(this);
    if (["A", "AREA"].includes(this.tagName)) {
      e.preventDefault();
    }
    L.one(t, xn, e => {
      if (!e.defaultPrevented) {
        L.one(t, wn, () => {
          if (s(this)) {
            this.focus();
          }
        });
      }
    });
    const n = Y.findOne(".modal.show");
    if (n) {
      Tn.getInstance(n).hide();
    }
    Tn.getOrCreateInstance(t).toggle(this);
  });
  q(Tn);
  g(Tn);
  const An = "showing";
  const Dn = ".offcanvas.show";
  const En = "hidePrevented.bs.offcanvas";
  const On = "hidden.bs.offcanvas";
  const Mn = {
    backdrop: true,
    keyboard: true,
    scroll: false
  };
  const In = {
    backdrop: "(boolean|string)",
    keyboard: "boolean",
    scroll: "boolean"
  };
  class Pn extends B {
    constructor(e, t) {
      super(e, t);
      this._isShown = false;
      this._backdrop = this._initializeBackDrop();
      this._focustrap = this._initializeFocusTrap();
      this._addEventListeners();
    }
    static get Default() {
      return Mn;
    }
    static get DefaultType() {
      return In;
    }
    static get NAME() {
      return "offcanvas";
    }
    toggle(e) {
      if (this._isShown) {
        return this.hide();
      } else {
        return this.show(e);
      }
    }
    show(e) {
      if (!(this._isShown || L.trigger(this._element, "show.bs.offcanvas", {
        relatedTarget: e
      }).defaultPrevented)) {
        this._isShown = true;
        this._backdrop.show();
        if (!this._config.scroll) {
          new un().hide();
        }
        this._element.setAttribute("aria-modal", true);
        this._element.setAttribute("role", "dialog");
        this._element.classList.add(An);
        this._queueCallback(() => {
          if (!(this._config.scroll && !this._config.backdrop)) {
            this._focustrap.activate();
          }
          this._element.classList.add("show");
          this._element.classList.remove(An);
          L.trigger(this._element, "shown.bs.offcanvas", {
            relatedTarget: e
          });
        }, this._element, true);
      }
    }
    hide() {
      if (this._isShown) {
        if (!L.trigger(this._element, "hide.bs.offcanvas").defaultPrevented) {
          this._focustrap.deactivate();
          this._element.blur();
          this._isShown = false;
          this._element.classList.add("hiding");
          this._backdrop.hide();
          this._queueCallback(() => {
            this._element.classList.remove("show", "hiding");
            this._element.removeAttribute("aria-modal");
            this._element.removeAttribute("role");
            if (!this._config.scroll) {
              new un().reset();
            }
            L.trigger(this._element, On);
          }, this._element, true);
        }
      }
    }
    dispose() {
      this._backdrop.dispose();
      this._focustrap.deactivate();
      super.dispose();
    }
    _initializeBackDrop() {
      const e = Boolean(this._config.backdrop);
      return new pn({
        className: "offcanvas-backdrop",
        isVisible: e,
        isAnimated: true,
        rootElement: this._element.parentNode,
        clickCallback: e ? () => {
          if (this._config.backdrop !== "static") {
            this.hide();
          } else {
            L.trigger(this._element, En);
          }
        } : null
      });
    }
    _initializeFocusTrap() {
      return new bn({
        trapElement: this._element
      });
    }
    _addEventListeners() {
      L.on(this._element, "keydown.dismiss.bs.offcanvas", e => {
        if (e.key === "Escape") {
          if (this._config.keyboard) {
            this.hide();
          } else {
            L.trigger(this._element, En);
          }
        }
      });
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = Pn.getOrCreateInstance(this, e);
        if (typeof e == "string") {
          if (t[e] === undefined || e.startsWith("_") || e === "constructor") {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e](this);
        }
      });
    }
  }
  L.on(document, "click.bs.offcanvas.data-api", "[data-bs-toggle=\"offcanvas\"]", function (e) {
    const t = i(this);
    if (["A", "AREA"].includes(this.tagName)) {
      e.preventDefault();
    }
    if (l(this)) {
      return;
    }
    L.one(t, On, () => {
      if (s(this)) {
        this.focus();
      }
    });
    const n = Y.findOne(Dn);
    if (n && n !== t) {
      Pn.getInstance(n).hide();
    }
    Pn.getOrCreateInstance(t).toggle(this);
  });
  L.on(window, "load.bs.offcanvas.data-api", () => {
    for (const e of Y.find(Dn)) {
      Pn.getOrCreateInstance(e).show();
    }
  });
  L.on(window, "resize.bs.offcanvas", () => {
    for (const e of Y.find("[aria-modal][class*=show][class*=offcanvas-]")) {
      if (getComputedStyle(e).position !== "fixed") {
        Pn.getOrCreateInstance(e).hide();
      }
    }
  });
  q(Pn);
  g(Pn);
  const Ln = new Set(["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]);
  const Nn = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i;
  const Fn = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;
  const Rn = (e, t) => {
    const n = e.nodeName.toLowerCase();
    if (t.includes(n)) {
      return !Ln.has(n) || Boolean(Nn.test(e.nodeValue) || Fn.test(e.nodeValue));
    } else {
      return t.filter(e => e instanceof RegExp).some(e => e.test(n));
    }
  };
  const jn = {
    "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
    a: ["target", "href", "title", "rel"],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ["src", "srcset", "alt", "title", "width", "height"],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  };
  const $n = {
    allowList: jn,
    content: {},
    extraClass: "",
    html: false,
    sanitize: true,
    sanitizeFn: null,
    template: "<div></div>"
  };
  const zn = {
    allowList: "object",
    content: "object",
    extraClass: "(string|function)",
    html: "boolean",
    sanitize: "boolean",
    sanitizeFn: "(null|function)",
    template: "string"
  };
  const Hn = {
    entry: "(string|element|function|null)",
    selector: "(string|element)"
  };
  class Bn extends H {
    constructor(e) {
      super();
      this._config = this._getConfig(e);
    }
    static get Default() {
      return $n;
    }
    static get DefaultType() {
      return zn;
    }
    static get NAME() {
      return "TemplateFactory";
    }
    getContent() {
      return Object.values(this._config.content).map(e => this._resolvePossibleFunction(e)).filter(Boolean);
    }
    hasContent() {
      return this.getContent().length > 0;
    }
    changeContent(e) {
      this._checkContent(e);
      this._config.content = {
        ...this._config.content,
        ...e
      };
      return this;
    }
    toHtml() {
      const e = document.createElement("div");
      e.innerHTML = this._maybeSanitize(this._config.template);
      for (const [t, n] of Object.entries(this._config.content)) {
        this._setContent(e, n, t);
      }
      const t = e.children[0];
      const n = this._resolvePossibleFunction(this._config.extraClass);
      if (n) {
        t.classList.add(...n.split(" "));
      }
      return t;
    }
    _typeCheckConfig(e) {
      super._typeCheckConfig(e);
      this._checkContent(e.content);
    }
    _checkContent(e) {
      for (const [t, n] of Object.entries(e)) {
        super._typeCheckConfig({
          selector: t,
          entry: n
        }, Hn);
      }
    }
    _setContent(e, t, n) {
      const i = Y.findOne(n, e);
      if (i) {
        if (t = this._resolvePossibleFunction(t)) {
          if (o(t)) {
            this._putElementInTemplate(a(t), i);
          } else if (this._config.html) {
            i.innerHTML = this._maybeSanitize(t);
          } else {
            i.textContent = t;
          }
        } else {
          i.remove();
        }
      }
    }
    _maybeSanitize(e) {
      if (this._config.sanitize) {
        return function (e, t, n) {
          if (!e.length) {
            return e;
          }
          if (n && typeof n == "function") {
            return n(e);
          }
          const i = new window.DOMParser().parseFromString(e, "text/html");
          const r = [].concat(...i.body.querySelectorAll("*"));
          for (const e of r) {
            const n = e.nodeName.toLowerCase();
            if (!Object.keys(t).includes(n)) {
              e.remove();
              continue;
            }
            const i = [].concat(...e.attributes);
            const r = [].concat(t["*"] || [], t[n] || []);
            for (const t of i) {
              if (!Rn(t, r)) {
                e.removeAttribute(t.nodeName);
              }
            }
          }
          return i.body.innerHTML;
        }(e, this._config.allowList, this._config.sanitizeFn);
      } else {
        return e;
      }
    }
    _resolvePossibleFunction(e) {
      if (typeof e == "function") {
        return e(this);
      } else {
        return e;
      }
    }
    _putElementInTemplate(e, t) {
      if (this._config.html) {
        t.innerHTML = "";
        return void t.append(e);
      }
      t.textContent = e.textContent;
    }
  }
  const qn = new Set(["sanitize", "allowList", "sanitizeFn"]);
  const Wn = "fade";
  const Un = "show";
  const Vn = "hide.bs.modal";
  const Yn = "hover";
  const Xn = {
    AUTO: "auto",
    TOP: "top",
    RIGHT: p() ? "left" : "right",
    BOTTOM: "bottom",
    LEFT: p() ? "right" : "left"
  };
  const Gn = {
    allowList: jn,
    animation: true,
    boundary: "clippingParents",
    container: false,
    customClass: "",
    delay: 0,
    fallbackPlacements: ["top", "right", "bottom", "left"],
    html: false,
    offset: [0, 0],
    placement: "top",
    popperConfig: null,
    sanitize: true,
    sanitizeFn: null,
    selector: false,
    template: "<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>",
    title: "",
    trigger: "hover focus"
  };
  const Kn = {
    allowList: "object",
    animation: "boolean",
    boundary: "(string|element)",
    container: "(string|element|boolean)",
    customClass: "(string|function)",
    delay: "(number|object)",
    fallbackPlacements: "array",
    html: "boolean",
    offset: "(array|string|function)",
    placement: "(string|function)",
    popperConfig: "(null|object|function)",
    sanitize: "boolean",
    sanitizeFn: "(null|function)",
    selector: "(string|boolean)",
    template: "string",
    title: "(string|element|function)",
    trigger: "string"
  };
  class Qn extends B {
    constructor(e, t) {
      if (Ht === undefined) {
        throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");
      }
      super(e, t);
      this._isEnabled = true;
      this._timeout = 0;
      this._isHovered = null;
      this._activeTrigger = {};
      this._popper = null;
      this._templateFactory = null;
      this._newContent = null;
      this.tip = null;
      this._setListeners();
      if (!this._config.selector) {
        this._fixTitle();
      }
    }
    static get Default() {
      return Gn;
    }
    static get DefaultType() {
      return Kn;
    }
    static get NAME() {
      return "tooltip";
    }
    enable() {
      this._isEnabled = true;
    }
    disable() {
      this._isEnabled = false;
    }
    toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    }
    toggle() {
      if (this._isEnabled) {
        this._activeTrigger.click = !this._activeTrigger.click;
        if (this._isShown()) {
          this._leave();
        } else {
          this._enter();
        }
      }
    }
    dispose() {
      clearTimeout(this._timeout);
      L.off(this._element.closest(".modal"), Vn, this._hideModalHandler);
      if (this._element.getAttribute("data-bs-original-title")) {
        this._element.setAttribute("title", this._element.getAttribute("data-bs-original-title"));
      }
      this._disposePopper();
      super.dispose();
    }
    show() {
      if (this._element.style.display === "none") {
        throw new Error("Please use show on visible elements");
      }
      if (!this._isWithContent() || !this._isEnabled) {
        return;
      }
      const e = L.trigger(this._element, this.constructor.eventName("show"));
      const t = (c(this._element) || this._element.ownerDocument.documentElement).contains(this._element);
      if (e.defaultPrevented || !t) {
        return;
      }
      this._disposePopper();
      const n = this._getTipElement();
      this._element.setAttribute("aria-describedby", n.getAttribute("id"));
      const {
        container: i
      } = this._config;
      if (!this._element.ownerDocument.documentElement.contains(this.tip)) {
        i.append(n);
        L.trigger(this._element, this.constructor.eventName("inserted"));
      }
      this._popper = this._createPopper(n);
      n.classList.add(Un);
      if ("ontouchstart" in document.documentElement) {
        for (const e of [].concat(...document.body.children)) {
          L.on(e, "mouseover", u);
        }
      }
      this._queueCallback(() => {
        L.trigger(this._element, this.constructor.eventName("shown"));
        if (this._isHovered === false) {
          this._leave();
        }
        this._isHovered = false;
      }, this.tip, this._isAnimated());
    }
    hide() {
      if (this._isShown() && !L.trigger(this._element, this.constructor.eventName("hide")).defaultPrevented) {
        this._getTipElement().classList.remove(Un);
        if ("ontouchstart" in document.documentElement) {
          for (const e of [].concat(...document.body.children)) {
            L.off(e, "mouseover", u);
          }
        }
        this._activeTrigger.click = false;
        this._activeTrigger.focus = false;
        this._activeTrigger.hover = false;
        this._isHovered = null;
        this._queueCallback(() => {
          if (!this._isWithActiveTrigger()) {
            if (!this._isHovered) {
              this._disposePopper();
            }
            this._element.removeAttribute("aria-describedby");
            L.trigger(this._element, this.constructor.eventName("hidden"));
          }
        }, this.tip, this._isAnimated());
      }
    }
    update() {
      if (this._popper) {
        this._popper.update();
      }
    }
    _isWithContent() {
      return Boolean(this._getTitle());
    }
    _getTipElement() {
      if (!this.tip) {
        this.tip = this._createTipElement(this._newContent || this._getContentForTemplate());
      }
      return this.tip;
    }
    _createTipElement(e) {
      const t = this._getTemplateFactory(e).toHtml();
      if (!t) {
        return null;
      }
      t.classList.remove(Wn, Un);
      t.classList.add(`bs-${this.constructor.NAME}-auto`);
      const n = (e => {
        do {
          e += Math.floor(Math.random() * 1000000);
        } while (document.getElementById(e));
        return e;
      })(this.constructor.NAME).toString();
      t.setAttribute("id", n);
      if (this._isAnimated()) {
        t.classList.add(Wn);
      }
      return t;
    }
    setContent(e) {
      this._newContent = e;
      if (this._isShown()) {
        this._disposePopper();
        this.show();
      }
    }
    _getTemplateFactory(e) {
      if (this._templateFactory) {
        this._templateFactory.changeContent(e);
      } else {
        this._templateFactory = new Bn({
          ...this._config,
          content: e,
          extraClass: this._resolvePossibleFunction(this._config.customClass)
        });
      }
      return this._templateFactory;
    }
    _getContentForTemplate() {
      return {
        ".tooltip-inner": this._getTitle()
      };
    }
    _getTitle() {
      return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute("data-bs-original-title");
    }
    _initializeOnDelegatedTarget(e) {
      return this.constructor.getOrCreateInstance(e.delegateTarget, this._getDelegateConfig());
    }
    _isAnimated() {
      return this._config.animation || this.tip && this.tip.classList.contains(Wn);
    }
    _isShown() {
      return this.tip && this.tip.classList.contains(Un);
    }
    _createPopper(e) {
      const t = typeof this._config.placement == "function" ? this._config.placement.call(this, e, this._element) : this._config.placement;
      const n = Xn[t.toUpperCase()];
      return zt(this._element, e, this._getPopperConfig(n));
    }
    _getOffset() {
      const {
        offset: e
      } = this._config;
      if (typeof e == "string") {
        return e.split(",").map(e => Number.parseInt(e, 10));
      } else if (typeof e == "function") {
        return t => e(t, this._element);
      } else {
        return e;
      }
    }
    _resolvePossibleFunction(e) {
      if (typeof e == "function") {
        return e.call(this._element);
      } else {
        return e;
      }
    }
    _getPopperConfig(e) {
      const t = {
        placement: e,
        modifiers: [{
          name: "flip",
          options: {
            fallbackPlacements: this._config.fallbackPlacements
          }
        }, {
          name: "offset",
          options: {
            offset: this._getOffset()
          }
        }, {
          name: "preventOverflow",
          options: {
            boundary: this._config.boundary
          }
        }, {
          name: "arrow",
          options: {
            element: `.${this.constructor.NAME}-arrow`
          }
        }, {
          name: "preSetPlacement",
          enabled: true,
          phase: "beforeMain",
          fn: e => {
            this._getTipElement().setAttribute("data-popper-placement", e.state.placement);
          }
        }]
      };
      return {
        ...t,
        ...(typeof this._config.popperConfig == "function" ? this._config.popperConfig(t) : this._config.popperConfig)
      };
    }
    _setListeners() {
      const e = this._config.trigger.split(" ");
      for (const t of e) {
        if (t === "click") {
          L.on(this._element, this.constructor.eventName("click"), this._config.selector, e => {
            this._initializeOnDelegatedTarget(e).toggle();
          });
        } else if (t !== "manual") {
          const e = t === Yn ? this.constructor.eventName("mouseenter") : this.constructor.eventName("focusin");
          const n = t === Yn ? this.constructor.eventName("mouseleave") : this.constructor.eventName("focusout");
          L.on(this._element, e, this._config.selector, e => {
            const t = this._initializeOnDelegatedTarget(e);
            t._activeTrigger[e.type === "focusin" ? "focus" : Yn] = true;
            t._enter();
          });
          L.on(this._element, n, this._config.selector, e => {
            const t = this._initializeOnDelegatedTarget(e);
            t._activeTrigger[e.type === "focusout" ? "focus" : Yn] = t._element.contains(e.relatedTarget);
            t._leave();
          });
        }
      }
      this._hideModalHandler = () => {
        if (this._element) {
          this.hide();
        }
      };
      L.on(this._element.closest(".modal"), Vn, this._hideModalHandler);
    }
    _fixTitle() {
      const e = this._element.getAttribute("title");
      if (e) {
        if (!(this._element.getAttribute("aria-label") || this._element.textContent.trim())) {
          this._element.setAttribute("aria-label", e);
        }
        this._element.setAttribute("data-bs-original-title", e);
        this._element.removeAttribute("title");
      }
    }
    _enter() {
      if (this._isShown() || this._isHovered) {
        this._isHovered = true;
      } else {
        this._isHovered = true;
        this._setTimeout(() => {
          if (this._isHovered) {
            this.show();
          }
        }, this._config.delay.show);
      }
    }
    _leave() {
      if (!this._isWithActiveTrigger()) {
        this._isHovered = false;
        this._setTimeout(() => {
          if (!this._isHovered) {
            this.hide();
          }
        }, this._config.delay.hide);
      }
    }
    _setTimeout(e, t) {
      clearTimeout(this._timeout);
      this._timeout = setTimeout(e, t);
    }
    _isWithActiveTrigger() {
      return Object.values(this._activeTrigger).includes(true);
    }
    _getConfig(e) {
      const t = z.getDataAttributes(this._element);
      for (const e of Object.keys(t)) {
        if (qn.has(e)) {
          delete t[e];
        }
      }
      e = {
        ...t,
        ...(typeof e == "object" && e ? e : {})
      };
      e = this._mergeConfigObj(e);
      e = this._configAfterMerge(e);
      this._typeCheckConfig(e);
      return e;
    }
    _configAfterMerge(e) {
      e.container = e.container === false ? document.body : a(e.container);
      if (typeof e.delay == "number") {
        e.delay = {
          show: e.delay,
          hide: e.delay
        };
      }
      if (typeof e.title == "number") {
        e.title = e.title.toString();
      }
      if (typeof e.content == "number") {
        e.content = e.content.toString();
      }
      return e;
    }
    _getDelegateConfig() {
      const e = {};
      for (const t in this._config) {
        if (this.constructor.Default[t] !== this._config[t]) {
          e[t] = this._config[t];
        }
      }
      e.selector = false;
      e.trigger = "manual";
      return e;
    }
    _disposePopper() {
      if (this._popper) {
        this._popper.destroy();
        this._popper = null;
      }
      if (this.tip) {
        this.tip.remove();
        this.tip = null;
      }
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = Qn.getOrCreateInstance(this, e);
        if (typeof e == "string") {
          if (t[e] === undefined) {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e]();
        }
      });
    }
  }
  g(Qn);
  const Zn = {
    ...Qn.Default,
    content: "",
    offset: [0, 8],
    placement: "right",
    template: "<div class=\"popover\" role=\"tooltip\"><div class=\"popover-arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>",
    trigger: "click"
  };
  const Jn = {
    ...Qn.DefaultType,
    content: "(null|string|element|function)"
  };
  class ei extends Qn {
    static get Default() {
      return Zn;
    }
    static get DefaultType() {
      return Jn;
    }
    static get NAME() {
      return "popover";
    }
    _isWithContent() {
      return this._getTitle() || this._getContent();
    }
    _getContentForTemplate() {
      return {
        ".popover-header": this._getTitle(),
        ".popover-body": this._getContent()
      };
    }
    _getContent() {
      return this._resolvePossibleFunction(this._config.content);
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = ei.getOrCreateInstance(this, e);
        if (typeof e == "string") {
          if (t[e] === undefined) {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e]();
        }
      });
    }
  }
  g(ei);
  const ti = "click.bs.scrollspy";
  const ni = "active";
  const ii = {
    offset: null,
    rootMargin: "0px 0px -25%",
    smoothScroll: false,
    target: null,
    threshold: [0.1, 0.5, 1]
  };
  const ri = {
    offset: "(number|null)",
    rootMargin: "string",
    smoothScroll: "boolean",
    target: "element",
    threshold: "array"
  };
  class oi extends B {
    constructor(e, t) {
      super(e, t);
      this._targetLinks = new Map();
      this._observableSections = new Map();
      this._rootElement = getComputedStyle(this._element).overflowY === "visible" ? null : this._element;
      this._activeTarget = null;
      this._observer = null;
      this._previousScrollData = {
        visibleEntryTop: 0,
        parentScrollTop: 0
      };
      this.refresh();
    }
    static get Default() {
      return ii;
    }
    static get DefaultType() {
      return ri;
    }
    static get NAME() {
      return "scrollspy";
    }
    refresh() {
      this._initializeTargetsAndObservables();
      this._maybeEnableSmoothScroll();
      if (this._observer) {
        this._observer.disconnect();
      } else {
        this._observer = this._getNewObserver();
      }
      for (const e of this._observableSections.values()) {
        this._observer.observe(e);
      }
    }
    dispose() {
      this._observer.disconnect();
      super.dispose();
    }
    _configAfterMerge(e) {
      e.target = a(e.target) || document.body;
      e.rootMargin = e.offset ? e.offset + "px 0px -30%" : e.rootMargin;
      if (typeof e.threshold == "string") {
        e.threshold = e.threshold.split(",").map(e => Number.parseFloat(e));
      }
      return e;
    }
    _maybeEnableSmoothScroll() {
      if (this._config.smoothScroll) {
        L.off(this._config.target, ti);
        L.on(this._config.target, ti, "[href]", e => {
          const t = this._observableSections.get(e.target.hash);
          if (t) {
            e.preventDefault();
            const n = this._rootElement || window;
            const i = t.offsetTop - this._element.offsetTop;
            if (n.scrollTo) {
              return void n.scrollTo({
                top: i,
                behavior: "smooth"
              });
            }
            n.scrollTop = i;
          }
        });
      }
    }
    _getNewObserver() {
      const e = {
        root: this._rootElement,
        threshold: this._config.threshold,
        rootMargin: this._config.rootMargin
      };
      return new IntersectionObserver(e => this._observerCallback(e), e);
    }
    _observerCallback(e) {
      const t = e => this._targetLinks.get("#" + e.target.id);
      const n = e => {
        this._previousScrollData.visibleEntryTop = e.target.offsetTop;
        this._process(t(e));
      };
      const i = (this._rootElement || document.documentElement).scrollTop;
      const r = i >= this._previousScrollData.parentScrollTop;
      this._previousScrollData.parentScrollTop = i;
      for (const o of e) {
        if (!o.isIntersecting) {
          this._activeTarget = null;
          this._clearActiveClass(t(o));
          continue;
        }
        const e = o.target.offsetTop >= this._previousScrollData.visibleEntryTop;
        if (r && e) {
          n(o);
          if (!i) {
            return;
          }
        } else if (!(r || e)) {
          n(o);
        }
      }
    }
    _initializeTargetsAndObservables() {
      this._targetLinks = new Map();
      this._observableSections = new Map();
      const e = Y.find("[href]", this._config.target);
      for (const t of e) {
        if (!t.hash || l(t)) {
          continue;
        }
        const e = Y.findOne(t.hash, this._element);
        if (s(e)) {
          this._targetLinks.set(t.hash, t);
          this._observableSections.set(t.hash, e);
        }
      }
    }
    _process(e) {
      if (this._activeTarget !== e) {
        this._clearActiveClass(this._config.target);
        this._activeTarget = e;
        e.classList.add(ni);
        this._activateParents(e);
        L.trigger(this._element, "activate.bs.scrollspy", {
          relatedTarget: e
        });
      }
    }
    _activateParents(e) {
      if (e.classList.contains("dropdown-item")) {
        Y.findOne(".dropdown-toggle", e.closest(".dropdown")).classList.add(ni);
      } else {
        for (const t of Y.parents(e, ".nav, .list-group")) {
          for (const e of Y.prev(t, ".nav-link, .nav-item > .nav-link, .list-group-item")) {
            e.classList.add(ni);
          }
        }
      }
    }
    _clearActiveClass(e) {
      e.classList.remove(ni);
      const t = Y.find("[href].active", e);
      for (const e of t) {
        e.classList.remove(ni);
      }
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = oi.getOrCreateInstance(this, e);
        if (typeof e == "string") {
          if (t[e] === undefined || e.startsWith("_") || e === "constructor") {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e]();
        }
      });
    }
  }
  L.on(window, "load.bs.scrollspy.data-api", () => {
    for (const e of Y.find("[data-bs-spy=\"scroll\"]")) {
      oi.getOrCreateInstance(e);
    }
  });
  g(oi);
  const ai = "ArrowLeft";
  const si = "ArrowRight";
  const li = "ArrowUp";
  const ci = "ArrowDown";
  const ui = "active";
  const di = "show";
  const hi = "[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]";
  const fi = ".nav-link:not(.dropdown-toggle), .list-group-item:not(.dropdown-toggle), [role=\"tab\"]:not(.dropdown-toggle), " + hi;
  class pi extends B {
    constructor(e) {
      super(e);
      this._parent = this._element.closest(".list-group, .nav, [role=\"tablist\"]");
      if (this._parent) {
        this._setInitialAttributes(this._parent, this._getChildren());
        L.on(this._element, "keydown.bs.tab", e => this._keydown(e));
      }
    }
    static get NAME() {
      return "tab";
    }
    show() {
      const e = this._element;
      if (this._elemIsActive(e)) {
        return;
      }
      const t = this._getActiveElem();
      const n = t ? L.trigger(t, "hide.bs.tab", {
        relatedTarget: e
      }) : null;
      if (!(L.trigger(e, "show.bs.tab", {
        relatedTarget: t
      }).defaultPrevented || n && n.defaultPrevented)) {
        this._deactivate(t, e);
        this._activate(e, t);
      }
    }
    _activate(e, t) {
      if (e) {
        e.classList.add(ui);
        this._activate(i(e));
        this._queueCallback(() => {
          if (e.getAttribute("role") === "tab") {
            e.removeAttribute("tabindex");
            e.setAttribute("aria-selected", true);
            this._toggleDropDown(e, true);
            L.trigger(e, "shown.bs.tab", {
              relatedTarget: t
            });
          } else {
            e.classList.add(di);
          }
        }, e, e.classList.contains("fade"));
      }
    }
    _deactivate(e, t) {
      if (e) {
        e.classList.remove(ui);
        e.blur();
        this._deactivate(i(e));
        this._queueCallback(() => {
          if (e.getAttribute("role") === "tab") {
            e.setAttribute("aria-selected", false);
            e.setAttribute("tabindex", "-1");
            this._toggleDropDown(e, false);
            L.trigger(e, "hidden.bs.tab", {
              relatedTarget: t
            });
          } else {
            e.classList.remove(di);
          }
        }, e, e.classList.contains("fade"));
      }
    }
    _keydown(e) {
      if (![ai, si, li, ci].includes(e.key)) {
        return;
      }
      e.stopPropagation();
      e.preventDefault();
      const t = [si, ci].includes(e.key);
      const n = y(this._getChildren().filter(e => !l(e)), e.target, t, true);
      if (n) {
        n.focus({
          preventScroll: true
        });
        pi.getOrCreateInstance(n).show();
      }
    }
    _getChildren() {
      return Y.find(fi, this._parent);
    }
    _getActiveElem() {
      return this._getChildren().find(e => this._elemIsActive(e)) || null;
    }
    _setInitialAttributes(e, t) {
      this._setAttributeIfNotExists(e, "role", "tablist");
      for (const e of t) {
        this._setInitialAttributesOnChild(e);
      }
    }
    _setInitialAttributesOnChild(e) {
      e = this._getInnerElement(e);
      const t = this._elemIsActive(e);
      const n = this._getOuterElement(e);
      e.setAttribute("aria-selected", t);
      if (n !== e) {
        this._setAttributeIfNotExists(n, "role", "presentation");
      }
      if (!t) {
        e.setAttribute("tabindex", "-1");
      }
      this._setAttributeIfNotExists(e, "role", "tab");
      this._setInitialAttributesOnTargetPanel(e);
    }
    _setInitialAttributesOnTargetPanel(e) {
      const t = i(e);
      if (t) {
        this._setAttributeIfNotExists(t, "role", "tabpanel");
        if (e.id) {
          this._setAttributeIfNotExists(t, "aria-labelledby", "#" + e.id);
        }
      }
    }
    _toggleDropDown(e, t) {
      const n = this._getOuterElement(e);
      if (!n.classList.contains("dropdown")) {
        return;
      }
      const i = (e, i) => {
        const r = Y.findOne(e, n);
        if (r) {
          r.classList.toggle(i, t);
        }
      };
      i(".dropdown-toggle", ui);
      i(".dropdown-menu", di);
      n.setAttribute("aria-expanded", t);
    }
    _setAttributeIfNotExists(e, t, n) {
      if (!e.hasAttribute(t)) {
        e.setAttribute(t, n);
      }
    }
    _elemIsActive(e) {
      return e.classList.contains(ui);
    }
    _getInnerElement(e) {
      if (e.matches(fi)) {
        return e;
      } else {
        return Y.findOne(fi, e);
      }
    }
    _getOuterElement(e) {
      return e.closest(".nav-item, .list-group-item") || e;
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = pi.getOrCreateInstance(this);
        if (typeof e == "string") {
          if (t[e] === undefined || e.startsWith("_") || e === "constructor") {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e]();
        }
      });
    }
  }
  L.on(document, "click.bs.tab", hi, function (e) {
    if (["A", "AREA"].includes(this.tagName)) {
      e.preventDefault();
    }
    if (!l(this)) {
      pi.getOrCreateInstance(this).show();
    }
  });
  L.on(window, "load.bs.tab", () => {
    for (const e of Y.find(".active[data-bs-toggle=\"tab\"], .active[data-bs-toggle=\"pill\"], .active[data-bs-toggle=\"list\"]")) {
      pi.getOrCreateInstance(e);
    }
  });
  g(pi);
  const gi = "show";
  const mi = "showing";
  const vi = {
    animation: "boolean",
    autohide: "boolean",
    delay: "number"
  };
  const yi = {
    animation: true,
    autohide: true,
    delay: 5000
  };
  class bi extends B {
    constructor(e, t) {
      super(e, t);
      this._timeout = null;
      this._hasMouseInteraction = false;
      this._hasKeyboardInteraction = false;
      this._setListeners();
    }
    static get Default() {
      return yi;
    }
    static get DefaultType() {
      return vi;
    }
    static get NAME() {
      return "toast";
    }
    show() {
      if (!L.trigger(this._element, "show.bs.toast").defaultPrevented) {
        this._clearTimeout();
        if (this._config.animation) {
          this._element.classList.add("fade");
        }
        this._element.classList.remove("hide");
        d(this._element);
        this._element.classList.add(gi, mi);
        this._queueCallback(() => {
          this._element.classList.remove(mi);
          L.trigger(this._element, "shown.bs.toast");
          this._maybeScheduleHide();
        }, this._element, this._config.animation);
      }
    }
    hide() {
      if (this.isShown()) {
        if (!L.trigger(this._element, "hide.bs.toast").defaultPrevented) {
          this._element.classList.add(mi);
          this._queueCallback(() => {
            this._element.classList.add("hide");
            this._element.classList.remove(mi, gi);
            L.trigger(this._element, "hidden.bs.toast");
          }, this._element, this._config.animation);
        }
      }
    }
    dispose() {
      this._clearTimeout();
      if (this.isShown()) {
        this._element.classList.remove(gi);
      }
      super.dispose();
    }
    isShown() {
      return this._element.classList.contains(gi);
    }
    _maybeScheduleHide() {
      if (this._config.autohide) {
        if (!(this._hasMouseInteraction || this._hasKeyboardInteraction)) {
          this._timeout = setTimeout(() => {
            this.hide();
          }, this._config.delay);
        }
      }
    }
    _onInteraction(e, t) {
      switch (e.type) {
        case "mouseover":
        case "mouseout":
          this._hasMouseInteraction = t;
          break;
        case "focusin":
        case "focusout":
          this._hasKeyboardInteraction = t;
      }
      if (t) {
        return void this._clearTimeout();
      }
      const n = e.relatedTarget;
      if (!(this._element === n || this._element.contains(n))) {
        this._maybeScheduleHide();
      }
    }
    _setListeners() {
      L.on(this._element, "mouseover.bs.toast", e => this._onInteraction(e, true));
      L.on(this._element, "mouseout.bs.toast", e => this._onInteraction(e, false));
      L.on(this._element, "focusin.bs.toast", e => this._onInteraction(e, true));
      L.on(this._element, "focusout.bs.toast", e => this._onInteraction(e, false));
    }
    _clearTimeout() {
      clearTimeout(this._timeout);
      this._timeout = null;
    }
    static jQueryInterface(e) {
      return this.each(function () {
        const t = bi.getOrCreateInstance(this, e);
        if (typeof e == "string") {
          if (t[e] === undefined) {
            throw new TypeError(`No method named "${e}"`);
          }
          t[e](this);
        }
      });
    }
  }
  q(bi);
  g(bi);
  return {
    Alert: W,
    Button: V,
    Carousel: se,
    Collapse: pe,
    Dropdown: on,
    Modal: Tn,
    Offcanvas: Pn,
    Popover: ei,
    ScrollSpy: oi,
    Tab: pi,
    Toast: bi,
    Tooltip: Qn
  };
});
var NioApp = function (e, t) {
  "use strict";

  var n = t(window);
  var i = t("body");
  var r = "lite-dash";
  function o(e, t) {
    Object.keys(t).forEach(function (n) {
      e[n] = t[n];
    });
    return e;
  }
  t.fn.exists = function () {
    return this.length > 0;
  };
  t.fn.csskey = function (e, t) {
    for (var n = t ? t + "-" : "", i = e ? e.split(" ") : "", r = 0; r < i.length; r++) {
      i[r] = n + i[r];
    }
    return i.toString().replace(",", " ");
  };
  e.BS = {};
  e.TGL = {};
  e.Ani = {};
  e.Addons = {};
  e.Slider = {};
  e.Picker = {};
  e.Custom = {};
  e.Win = {
    height: n.height(),
    width: n.outerWidth()
  };
  e.Break = {
    mb: 420,
    sm: 576,
    md: 768,
    lg: 992,
    xl: 1200,
    xxl: 1540,
    any: 1 / 0
  };
  e.Host = {
    name: window.location.hostname,
    locat: r.slice(-4) + r.slice(0, 4)
  };
  e.isDark = !(!i.hasClass("dark-mode") && i.data("theme") !== "dark");
  e.State = {
    isRTL: !(!i.hasClass("has-rtl") && i.attr("dir") !== "rtl"),
    isTouch: "ontouchstart" in document.documentElement,
    isMobile: !!navigator.userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Windows Phone|/i),
    asMobile: e.Win.width < e.Break.md,
    asServe: e.Host.name.split(".").indexOf(e.Host.locat)
  };
  e.hexRGB = function (e, t) {
    t = t || 1;
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(e)) {
      e = [(e = "0x" + (e = (e = e.substring(1).split("")).length === 3 ? [e[0], e[0], e[1], e[1], e[2], e[2]] : e).join("")) >> 16 & 255, e >> 8 & 255, e & 255].join(",");
      if (t >= 1) {
        return "rgba(" + e + ")";
      } else {
        return "rgba(" + e + "," + t + ")";
      }
    }
    throw new Error("bad hex");
  };
  e.StateUpdate = function () {
    e.Win = {
      height: n.height(),
      width: n.outerWidth()
    };
    e.State.asMobile = e.Win.width < e.Break.md;
  };
  e.ClassInit = function () {
    function t() {
      if (e.State.asMobile === true) {
        i.addClass("as-mobile");
      } else {
        i.removeClass("as-mobile");
      }
    }
    if (e.State.isTouch === true) {
      i.addClass("has-touch");
    } else {
      i.addClass("no-touch");
    }
    t();
    if (e.State.isRTL === true) {
      i.addClass("has-rtl");
    }
    i.addClass("nk-nio-theme");
    n.on("resize", t);
  };
  e.ColorBG = function () {
    function e(e, n) {
      n = n || "bg";
      var i = (e = t(e)).data(n);
      if (i !== "") {
        if (n === "bg-color") {
          e.css("background-color", i);
        } else if (n === "bg-image") {
          e.css("background-image", "url(\"" + i + "\")");
        } else {
          e.css("background", i);
        }
      }
    }
    t("[data-bg]").each(function () {
      e(this, "bg");
    });
    t("[data-bg-color]").each(function () {
      e(this, "bg-color");
    });
    t("[data-bg-image]").each(function () {
      e(this, "bg-image");
    });
  };
  e.ColorTXT = function () {
    t("[data-color]").each(function () {
      var e;
      var n;
      n = "color";
      if ((n = (e = t(e = this)).data(n || "color")) !== "") {
        e.css("color", n);
      }
    });
  };
  e.BreakClass = function (n, i, r) {
    var a = n || ".header-menu";
    var s = i || e.Break.md;
    n = {
      timeOut: 1000,
      classAdd: "mobile-menu"
    };
    var l = r ? o(n, r) : n;
    if ((i = l.ignore || false) && t(a).hasClass(i)) {
      return false;
    }
    if (e.Win.width < s) {
      setTimeout(function () {
        if (e.Win.width < s) {
          t(a).addClass(l.classAdd);
        }
      }, l.timeOut);
    } else {
      t(a).removeClass(l.classAdd);
    }
  };
  e.Passcode = function (e, n) {
    var i = {
      showClass: "is-shown",
      hideClass: "is-hidden"
    };
    var r = n ? o(i, n) : i;
    if (t(e).exists()) {
      t(e).on("click", function (e) {
        var n = t(this);
        var i = n.data("target");
        i = t("#" + i);
        e.preventDefault();
        if (i.hasClass(r.showClass)) {
          n.add(i).addClass(r.hideClass).removeClass(r.showClass);
          i.attr("type", "password");
        } else {
          n.add(i).addClass(r.showClass).removeClass(r.hideClass);
          i.attr("type", "text");
        }
      });
    }
  };
  e.LinkOff = function (e) {
    t(e).on("click", function (e) {
      e.preventDefault();
    });
  };
  e.SetHW = function (e, n) {
    n = n == "height" || n == "h" ? "height" : "width";
    if (t(e = e || "[data-" + n + "]").exists()) {
      t(e).each(function () {
        t(this).css(n, t(this).data(n));
      });
    }
  };
  e.AddInBody = function (e, n) {
    var r = {
      prefix: "nk-",
      class: "",
      has: "has"
    };
    n = n ? o(r, n) : r;
    e = r = e.replace(".", "").replace(n.prefix, "");
    n.prefix = n.prefix !== false ? n.prefix : "";
    n.has = n.has !== "" ? n.has + "-" : "";
    e = n.class !== "" ? n.class : n.has + e;
    if (t("." + n.prefix + r).exists() && !i.hasClass(e)) {
      i.addClass(e);
    }
  };
  e.Toggle = {
    trigger: function (e, n) {
      var r = {
        self: e,
        active: "active",
        content: "expanded",
        data: "content",
        olay: "toggle-overlay",
        speed: 400
      };
      n = n ? o(r, n) : r;
      r = t("[data-target=" + e + "]");
      var a = (e = t("[data-" + n.data + "=" + e + "]")).data("toggle-body");
      if (e.data("toggle-overlay")) {
        n.overlay = n.olay;
      }
      if (a) {
        n.body = "toggle-shown";
      }
      if (e.hasClass(n.content)) {
        r.removeClass(n.active);
        (n.toggle == 1 ? e.slideUp(n.speed) : e).removeClass(n.content);
      } else {
        r.addClass(n.active);
        (n.toggle == 1 ? e.slideDown(n.speed) : e).addClass(n.content);
      }
      if (n.body) {
        i.toggleClass(n.body);
      }
      if (n.overlay) {
        this.overlay(e, n.overlay, n);
      }
    },
    removed: function (e, n) {
      var r = {
        self: e,
        active: "active",
        content: "expanded",
        body: "",
        data: "content",
        olay: "toggle-overlay"
      };
      n = n ? o(r, n) : r;
      r = t("[data-target=" + e + "]");
      var a = (e = t("[data-" + n.data + "=" + e + "]")).data("toggle-body");
      if (e.data("toggle-overlay")) {
        n.overlay = n.olay;
      }
      if (a) {
        n.body = "toggle-shown";
      }
      if (r.hasClass(n.active) || e.hasClass(n.content)) {
        r.removeClass(n.active);
        e.removeClass(n.content);
        if (n.toggle === true) {
          e.slideUp(n.speed);
        }
      }
      if (n.body && i.hasClass(n.body)) {
        i.removeClass(n.body);
      }
      if (n.close) {
        if (n.close.profile === true) {
          this.closeProfile(e);
        }
        if (n.close.menu === true) {
          this.closeMenu(e);
        }
      }
      if (n.overlay) {
        this.overlayRemove(n.overlay);
      }
    },
    overlay: function (n, i, r) {
      var o;
      if (r.break === true) {
        o = t(n).data("toggle-screen");
        r.break = e.Break[o];
      }
      if (t(n).hasClass(r.content) && e.Win.width < r.break) {
        t(n).after("<div class=\"" + i + "\" data-target=\"" + r.self + "\"></div>");
      } else {
        this.overlayRemove(i);
      }
    },
    overlayRemove: function (e) {
      t("." + e).fadeOut(300).remove();
    },
    dropMenu: function (e, n) {
      var i = {
        active: "active",
        self: "link-toggle",
        child: "menu-sub",
        speed: 400
      };
      n = n ? o(i, n) : i;
      e = (i = t(e).parent()).children("." + n.child);
      n.speed = e.children().length > 5 ? n.speed + e.children().length * 20 : n.speed;
      e.slideToggle(n.speed).find("." + n.child).slideUp(n.speed);
      i.toggleClass(n.active).siblings().removeClass(n.active).find("." + n.child).slideUp(n.speed);
    },
    closeProfile: function (e) {
      var n = t(e).find(".nk-profile-toggle.active");
      e = t(e).find(".nk-profile-content.expanded");
      if (n.exists()) {
        n.removeClass("active");
        e.slideUp().removeClass("expanded");
      }
    },
    closeMenu: function (e) {
      if ((e = t(e).find(".nk-menu-item.active")).exists()) {
        e.removeClass("active").find(".nk-menu-sub").slideUp();
      }
    }
  };
  e.BS.tooltip = function (e, n) {
    var i = {
      boundary: "window",
      trigger: "hover"
    };
    var r = n ? o(i, n) : i;
    if (t(e).exists()) {
      [].slice.call(document.querySelectorAll(e || "[data-bs-toggle=\"tooltip\"]")).map(function (e) {
        return new bootstrap.Tooltip(e, r);
      });
    }
  };
  e.BS.menutip = function (t) {
    e.BS.tooltip(t, {
      boundary: "window",
      placement: "right"
    });
  };
  e.BS.popover = function (e) {
    [].slice.call(document.querySelectorAll(e || "[data-bs-toggle=\"popover\"]")).map(function (e) {
      return new bootstrap.Popover(e);
    });
  };
  e.BS.progress = function (e) {
    if (t(e).exists()) {
      t(e).each(function () {
        t(this).css("width", t(this).data("progress") + "%");
      });
    }
  };
  e.BS.modalfix = function (e) {
    if (t(e = e || ".modal").exists() && typeof t.fn.modal == "function") {
      t(e).on("shown.bs.modal", function () {
        if (!i.hasClass("modal-open")) {
          i.addClass("modal-open");
        }
      });
    }
  };
  e.BS.fileinput = function (e) {
    if (t(e).exists()) {
      t(e).each(function () {
        var e = t(this).next().text();
        var n = [];
        t(this).on("change", function () {
          for (var i = 0; i < this.files.length; i++) {
            n[i] = this.files[i].name;
          }
          e = n ? n.join(", ") : e;
          t(this).next().html(e);
        });
      });
    }
  };
  e.Picker.date = function (n, i) {
    if (t(n).exists() && typeof t.fn.datepicker == "function") {
      t(n).each(function () {
        var n = {
          format: (n = t(this).data("date-format")) !== "" ? n : "mm/dd/yyyy",
          maxViewMode: 2,
          clearBtn: true,
          autoclose: true,
          todayHighlight: true,
          rtl: e.State.isRTL
        };
        n = i ? o(n, i) : n;
        t(this).datepicker(n).on("changeDate", function (e) {
          if (e.dates.length !== 0) {
            t(this).parent().addClass("focused");
          } else {
            t(this).parent().removeClass("focused");
          }
        });
      });
    }
  };
  e.Picker.dob = function (t, n) {
    var i = {
      startView: 2,
      todayHighlight: false
    };
    n = n ? o(i, n) : i;
    e.Picker.date(t, n);
  };
  e.Picker.time = function (e, n) {
    if (t(e).exists() && typeof t.fn.timepicker == "function") {
      t(e).each(function () {
        t(this).parent().addClass("has-timepicker");
        var e = {
          timeFormat: (e = t(this).data("time-format")) !== "" ? e : "HH:mm",
          interval: (i = t(this).data("time-interval")) !== "" ? i : 15,
          change: function (e) {
            if (e !== false) {
              t(this).parent().addClass("focused");
            } else {
              t(this).parent().removeClass("focused");
            }
          }
        };
        var i = n ? o(e, n) : e;
        t(this).timepicker(i);
      });
    }
  };
  e.Select2 = function (n, i) {
    if (t(n).exists() && typeof t.fn.select2 == "function") {
      t(n).each(function () {
        (r = {
          placeholder: (n = t(this)).data("placeholder"),
          clear: n.data("clear"),
          search: n.data("search"),
          width: n.data("width"),
          theme: n.data("theme"),
          ui: n.data("ui")
        }).ui = r.ui ? " " + n.csskey(r.ui, "select2") : "";
        var n = {
          theme: r.theme ? r.theme + " " + r.ui : "default" + r.ui,
          allowClear: r.clear || false,
          placeholder: r.placeholder || "",
          dropdownAutoWidth: !(!r.width || r.width !== "auto"),
          minimumResultsForSearch: r.search && r.search === "on" ? 1 : -1,
          dir: e.State.isRTL ? "rtl" : "ltr"
        };
        var r = i ? o(n, i) : n;
        t(this).select2(r);
      });
    }
  };
  e.Custom.Stepper = function (e, n) {
    var i = !(!e.dataset.stepInit || isNaN(e.dataset.stepInit)) && parseInt(e.dataset.stepInit);
    i = {
      selectors: {
        nav: n.selectors.nav || "stepper-nav",
        progress: n.selectors.progress || "stepper-progress",
        content: n.selectors.content || "stepper-steps",
        prev: n.selectors.prev || "step-prev",
        next: n.selectors.next || "step-next",
        submit: n.selectors.submit || "step-submit"
      },
      classes: {
        nav_current: n.classes.nav_current || "current",
        nav_done: n.classes.nav_done || "done",
        step_active: n.classes.step_active || "active",
        step_done: n.classes.step_done || "done"
      },
      current_step: i || parseInt(n.current_step)
    };
    let r = e.querySelectorAll(`.${i.selectors.nav} > *`);
    let o = e.querySelectorAll(`.${i.selectors.content} > *`);
    e.querySelector("." + i.selectors.progress);
    let a = e.querySelector(`.${i.selectors.progress}-count`);
    let s = e.querySelector(`.${i.selectors.progress}-bar`);
    let l = e.querySelector("." + i.selectors.prev);
    let c = e.querySelector("." + i.selectors.next);
    let u = e.querySelector("." + i.selectors.submit);
    let d = i.classes.nav_current;
    let h = i.classes.nav_done;
    let f = i.classes.step_active;
    let p = i.classes.step_done;
    let g = i.current_step || 1;
    let m = g;
    let v = r.length;
    let y = o.length;
    let b = e.querySelectorAll("." + i.selectors.nav).length > 0;
    let w = e.querySelectorAll("." + i.selectors.progress).length > 0;
    function x(t) {
      var n = t - 1;
      if ((n = (e.style.display = "block", b && (r.forEach(function (e, t) {
        e.classList.remove(d);
      }), r[n].classList.add(d)), o.forEach(function (e, t) {
        e.classList.remove(f);
      }), o[n].classList.add(f), t)) === 1) {
        c.style.display = "block";
        l.style.display = "none";
        u.style.display = "none";
        e.setAttribute("data-step-current", "first");
      }
      if (y !== n & n !== 1) {
        l.style.display = "block";
        c.style.display = "block";
        u.style.display = "none";
        e.setAttribute("data-step-current", n);
      }
      if (y === n) {
        l.style.display = "block";
        u.style.display = "block";
        c.style.display = "none";
        e.setAttribute("data-step-current", "last");
      }
      if (w) {
        a.innerHTML = t + " of " + y;
        s.style.width = 100 / y * t + "%";
      }
    }
    if (v !== y && b) {
      console.error("Stepper nav should have same amount of child element as Stepper steps");
    } else {
      x(g);
    }
    let _ = t("#" + e.id).validate({
      errorElement: "span",
      errorClass: "invalid",
      onfocusout: false,
      errorPlacement: function (e, t) {
        if (t.parents().hasClass("input-group")) {
          e.appendTo(t.parent().parent());
        } else {
          e.appendTo(t.parent());
        }
      }
    });
    l.querySelector("button").addEventListener("click", function (e) {
      e.preventDefault();
      e = _.form();
      var t = m - 1;
      if (e) {
        if (y !== m) {
          if (b) {
            r[t].classList.add(h);
          }
          o[t].classList.add(p);
        }
      } else {
        if (b) {
          r[t].classList.remove(h);
        }
        o[t].classList.remove(p);
      }
      x(--m);
    });
    c.querySelector("button").addEventListener("click", function (e) {
      e.preventDefault();
      if (_.form()) {
        e = m - 1;
        if (b) {
          r[e].classList.add(h);
        }
        o[e].classList.add(p);
        x(++m);
      }
    });
    u.querySelector("button").addEventListener("click", function (e) {
      e.preventDefault();
      _.form();
    });
  };
  e.coreInit = function () {
    e.coms.onResize.push(e.StateUpdate);
    e.coms.docReady.push(e.ClassInit);
  };
  e.coreInit();
  return e;
}(NioApp = function (e, t, n) {
  "use strict";

  var i = {
    AppInfo: {
      name: "NioApp",
      version: "1.0.8",
      author: "Softnio"
    },
    Package: {
      name: "DashLite",
      version: "2.3"
    }
  };
  var r = {
    docReady: [],
    docReadyDefer: [],
    winLoad: [],
    winLoadDefer: [],
    onResize: [],
    onResizeDefer: []
  };
  function o(t) {
    t = t === undefined ? e : t;
    r.docReady.concat(r.docReadyDefer).forEach(function (e) {
      if (e != null) {
        e(t);
      }
    });
  }
  function a(t) {
    t = typeof t == "object" ? e : t;
    r.winLoad.concat(r.winLoadDefer).forEach(function (e) {
      if (e != null) {
        e(t);
      }
    });
  }
  function s(t) {
    t = typeof t == "object" ? e : t;
    r.onResize.concat(r.onResizeDefer).forEach(function (e) {
      if (e != null) {
        e(t);
      }
    });
  }
  e(n).ready(o);
  e(t).on("load", a);
  e(t).on("resize", s);
  i.coms = r;
  i.docReady = o;
  i.winLoad = a;
  i.onResize = s;
  return i;
}(jQuery, window, document), jQuery);
!function (e, t) {
  if (typeof exports == "object" && typeof module != "undefined") {
    module.exports = t();
  } else if (typeof define == "function" && define.amd) {
    define(t);
  } else {
    (e = e || self).SimpleBar = t();
  }
}(this, function () {
  "use strict";

  var e = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
  function t(e, t) {
    e(t = {
      exports: {}
    }, t.exports);
    return t.exports;
  }
  var n;
  var i;
  var r = function (e) {
    return e && e.Math == Math && e;
  };
  var o = r(typeof globalThis == "object" && globalThis) || r(typeof window == "object" && window) || r(typeof self == "object" && self) || r(typeof e == "object" && e) || function () {
    return this;
  }() || Function("return this")();
  var a = Object.defineProperty;
  var s = function (e, t) {
    try {
      a(o, e, {
        value: t,
        configurable: true,
        writable: true
      });
    } catch (n) {
      o[e] = t;
    }
    return t;
  };
  var l = o["__core-js_shared__"] || s("__core-js_shared__", {});
  var c = t(function (e) {
    (e.exports = function (e, t) {
      return l[e] || (l[e] = t !== undefined ? t : {});
    })("versions", []).push({
      version: "3.22.6",
      mode: "global",
      copyright: "Â© 2014-2022 Denis Pushkarev (zloirock.ru)",
      license: "https://github.com/zloirock/core-js/blob/v3.22.6/LICENSE",
      source: "https://github.com/zloirock/core-js"
    });
  });
  var u = function (e) {
    try {
      return !!e();
    } catch (e) {
      return true;
    }
  };
  var d = !u(function () {
    var e = function () {}.bind();
    return typeof e != "function" || e.hasOwnProperty("prototype");
  });
  var h = Function.prototype;
  var f = h.bind;
  var p = h.call;
  var g = d && f.bind(p, p);
  var m = d ? function (e) {
    return e && g(e);
  } : function (e) {
    return e && function () {
      return p.apply(e, arguments);
    };
  };
  var v = o.TypeError;
  var y = function (e) {
    if (e == null) {
      throw v("Can't call method on " + e);
    }
    return e;
  };
  var b = o.Object;
  var w = function (e) {
    return b(y(e));
  };
  var x = m({}.hasOwnProperty);
  var _ = Object.hasOwn || function (e, t) {
    return x(w(e), t);
  };
  var C = 0;
  var S = Math.random();
  var k = m(1 .toString);
  var T = function (e) {
    return "Symbol(" + (e === undefined ? "" : e) + ")_" + k(++C + S, 36);
  };
  var A = function (e) {
    return typeof e == "function";
  };
  var D = function (e) {
    if (A(e)) {
      return e;
    } else {
      return undefined;
    }
  };
  var E = function (e, t) {
    if (arguments.length < 2) {
      return D(o[e]);
    } else {
      return o[e] && o[e][t];
    }
  };
  var O = E("navigator", "userAgent") || "";
  var M = o.process;
  var I = o.Deno;
  var P = M && M.versions || I && I.version;
  var L = P && P.v8;
  if (L) {
    i = (n = L.split("."))[0] > 0 && n[0] < 4 ? 1 : +(n[0] + n[1]);
  }
  if (!i && O && (!(n = O.match(/Edge\/(\d+)/)) || n[1] >= 74) && (n = O.match(/Chrome\/(\d+)/))) {
    i = +n[1];
  }
  var N = i;
  var F = !!Object.getOwnPropertySymbols && !u(function () {
    var e = Symbol();
    return !String(e) || !(Object(e) instanceof Symbol) || !Symbol.sham && N && N < 41;
  });
  var R = F && !Symbol.sham && typeof Symbol.iterator == "symbol";
  var j = c("wks");
  var $ = o.Symbol;
  var z = $ && $.for;
  var H = R ? $ : $ && $.withoutSetter || T;
  var B = function (e) {
    if (!_(j, e) || !F && typeof j[e] != "string") {
      var t = "Symbol." + e;
      if (F && _($, e)) {
        j[e] = $[e];
      } else {
        j[e] = R && z ? z(t) : H(t);
      }
    }
    return j[e];
  };
  var q = {
    [B("toStringTag")]: "z"
  };
  var W = String(q) === "[object z]";
  var U = !u(function () {
    return Object.defineProperty({}, 1, {
      get: function () {
        return 7;
      }
    })[1] != 7;
  });
  var V = function (e) {
    if (typeof e == "object") {
      return e !== null;
    } else {
      return A(e);
    }
  };
  var Y = o.document;
  var X = V(Y) && V(Y.createElement);
  var G = function (e) {
    if (X) {
      return Y.createElement(e);
    } else {
      return {};
    }
  };
  var K = !U && !u(function () {
    return Object.defineProperty(G("div"), "a", {
      get: function () {
        return 7;
      }
    }).a != 7;
  });
  var Q = U && u(function () {
    return Object.defineProperty(function () {}, "prototype", {
      value: 42,
      writable: false
    }).prototype != 42;
  });
  var Z = o.String;
  var J = o.TypeError;
  var ee = function (e) {
    if (V(e)) {
      return e;
    }
    throw J(Z(e) + " is not an object");
  };
  var te = Function.prototype.call;
  var ne = d ? te.bind(te) : function () {
    return te.apply(te, arguments);
  };
  var ie = m({}.isPrototypeOf);
  var re = o.Object;
  var oe = R ? function (e) {
    return typeof e == "symbol";
  } : function (e) {
    var t = E("Symbol");
    return A(t) && ie(t.prototype, re(e));
  };
  var ae = o.String;
  var se = function (e) {
    try {
      return ae(e);
    } catch (e) {
      return "Object";
    }
  };
  var le = o.TypeError;
  var ce = function (e) {
    if (A(e)) {
      return e;
    }
    throw le(se(e) + " is not a function");
  };
  var ue = function (e, t) {
    var n = e[t];
    if (n == null) {
      return undefined;
    } else {
      return ce(n);
    }
  };
  var de = o.TypeError;
  var he = o.TypeError;
  var fe = B("toPrimitive");
  var pe = function (e) {
    var t = function (e, t) {
      if (!V(e) || oe(e)) {
        return e;
      }
      var n;
      var i = ue(e, fe);
      if (i) {
        if (t === undefined) {
          t = "default";
        }
        n = ne(i, e, t);
        if (!V(n) || oe(n)) {
          return n;
        }
        throw he("Can't convert object to primitive value");
      }
      if (t === undefined) {
        t = "number";
      }
      return function (e, t) {
        var n;
        var i;
        if (t === "string" && A(n = e.toString) && !V(i = ne(n, e))) {
          return i;
        }
        if (A(n = e.valueOf) && !V(i = ne(n, e))) {
          return i;
        }
        if (t !== "string" && A(n = e.toString) && !V(i = ne(n, e))) {
          return i;
        }
        throw de("Can't convert object to primitive value");
      }(e, t);
    }(e, "string");
    if (oe(t)) {
      return t;
    } else {
      return t + "";
    }
  };
  var ge = o.TypeError;
  var me = Object.defineProperty;
  var ve = Object.getOwnPropertyDescriptor;
  var ye = {
    f: U ? Q ? function (e, t, n) {
      ee(e);
      t = pe(t);
      ee(n);
      if (typeof e == "function" && t === "prototype" && "value" in n && "writable" in n && !n.writable) {
        var i = ve(e, t);
        if (i && i.writable) {
          e[t] = n.value;
          n = {
            configurable: "configurable" in n ? n.configurable : i.configurable,
            enumerable: "enumerable" in n ? n.enumerable : i.enumerable,
            writable: false
          };
        }
      }
      return me(e, t, n);
    } : me : function (e, t, n) {
      ee(e);
      t = pe(t);
      ee(n);
      if (K) {
        try {
          return me(e, t, n);
        } catch (e) {}
      }
      if ("get" in n || "set" in n) {
        throw ge("Accessors not supported");
      }
      if ("value" in n) {
        e[t] = n.value;
      }
      return e;
    }
  };
  var be = function (e, t) {
    return {
      enumerable: !(e & 1),
      configurable: !(e & 2),
      writable: !(e & 4),
      value: t
    };
  };
  var we = U ? function (e, t, n) {
    return ye.f(e, t, be(1, n));
  } : function (e, t, n) {
    e[t] = n;
    return e;
  };
  var xe = Function.prototype;
  var _e = U && Object.getOwnPropertyDescriptor;
  var Ce = _(xe, "name");
  var Se = {
    EXISTS: Ce,
    PROPER: Ce && function () {}.name === "something",
    CONFIGURABLE: Ce && (!U || U && _e(xe, "name").configurable)
  };
  var ke = m(Function.toString);
  if (!A(l.inspectSource)) {
    l.inspectSource = function (e) {
      return ke(e);
    };
  }
  var Te;
  var Ae;
  var De;
  var Ee = l.inspectSource;
  var Oe = o.WeakMap;
  var Me = A(Oe) && /native code/.test(Ee(Oe));
  var Ie = c("keys");
  var Pe = function (e) {
    return Ie[e] || (Ie[e] = T(e));
  };
  var Le = {};
  var Ne = o.TypeError;
  var Fe = o.WeakMap;
  if (Me || l.state) {
    var Re = l.state || (l.state = new Fe());
    var je = m(Re.get);
    var $e = m(Re.has);
    var ze = m(Re.set);
    Te = function (e, t) {
      if ($e(Re, e)) {
        throw new Ne("Object already initialized");
      }
      t.facade = e;
      ze(Re, e, t);
      return t;
    };
    Ae = function (e) {
      return je(Re, e) || {};
    };
    De = function (e) {
      return $e(Re, e);
    };
  } else {
    var He = Pe("state");
    Le[He] = true;
    Te = function (e, t) {
      if (_(e, He)) {
        throw new Ne("Object already initialized");
      }
      t.facade = e;
      we(e, He, t);
      return t;
    };
    Ae = function (e) {
      if (_(e, He)) {
        return e[He];
      } else {
        return {};
      }
    };
    De = function (e) {
      return _(e, He);
    };
  }
  var Be = {
    set: Te,
    get: Ae,
    has: De,
    enforce: function (e) {
      if (De(e)) {
        return Ae(e);
      } else {
        return Te(e, {});
      }
    },
    getterFor: function (e) {
      return function (t) {
        var n;
        if (!V(t) || (n = Ae(t)).type !== e) {
          throw Ne("Incompatible receiver, " + e + " required");
        }
        return n;
      };
    }
  };
  var qe = t(function (e) {
    var t = Se.CONFIGURABLE;
    var n = Be.enforce;
    var i = Be.get;
    var r = Object.defineProperty;
    var o = U && !u(function () {
      return r(function () {}, "length", {
        value: 8
      }).length !== 8;
    });
    var a = String(String).split("String");
    var s = e.exports = function (e, i, s) {
      if (String(i).slice(0, 7) === "Symbol(") {
        i = "[" + String(i).replace(/^Symbol\(([^)]*)\)/, "$1") + "]";
      }
      if (s && s.getter) {
        i = "get " + i;
      }
      if (s && s.setter) {
        i = "set " + i;
      }
      if (!_(e, "name") || t && e.name !== i) {
        r(e, "name", {
          value: i,
          configurable: true
        });
      }
      if (o && s && _(s, "arity") && e.length !== s.arity) {
        r(e, "length", {
          value: s.arity
        });
      }
      if (s && _(s, "constructor") && s.constructor) {
        if (U) {
          try {
            r(e, "prototype", {
              writable: false
            });
          } catch (e) {}
        }
      } else {
        e.prototype = undefined;
      }
      var l = n(e);
      if (!_(l, "source")) {
        l.source = a.join(typeof i == "string" ? i : "");
      }
      return e;
    };
    Function.prototype.toString = s(function () {
      return A(this) && i(this).source || Ee(this);
    }, "toString");
  });
  var We = function (e, t, n, i) {
    if (!i) {
      i = {};
    }
    var r = i.enumerable;
    var o = i.name !== undefined ? i.name : t;
    if (A(n)) {
      qe(n, o, i);
    }
    if (i.global) {
      if (r) {
        e[t] = n;
      } else {
        s(t, n);
      }
    } else {
      if (i.unsafe) {
        if (e[t]) {
          r = true;
        }
      } else {
        delete e[t];
      }
      if (r) {
        e[t] = n;
      } else {
        we(e, t, n);
      }
    }
    return e;
  };
  var Ue = m({}.toString);
  var Ve = m("".slice);
  var Ye = function (e) {
    return Ve(Ue(e), 8, -1);
  };
  var Xe = B("toStringTag");
  var Ge = o.Object;
  var Ke = Ye(function () {
    return arguments;
  }()) == "Arguments";
  var Qe = W ? Ye : function (e) {
    var t;
    var n;
    var i;
    if (e === undefined) {
      return "Undefined";
    } else if (e === null) {
      return "Null";
    } else if (typeof (n = function (e, t) {
      try {
        return e[t];
      } catch (e) {}
    }(t = Ge(e), Xe)) == "string") {
      return n;
    } else if (Ke) {
      return Ye(t);
    } else if ((i = Ye(t)) == "Object" && A(t.callee)) {
      return "Arguments";
    } else {
      return i;
    }
  };
  var Ze = W ? {}.toString : function () {
    return "[object " + Qe(this) + "]";
  };
  if (!W) {
    We(Object.prototype, "toString", Ze, {
      unsafe: true
    });
  }
  var Je = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };
  var et = G("span").classList;
  var tt = et && et.constructor && et.constructor.prototype;
  var nt = tt === Object.prototype ? undefined : tt;
  var it = m(m.bind);
  var rt = function (e, t) {
    ce(e);
    if (t === undefined) {
      return e;
    } else if (d) {
      return it(e, t);
    } else {
      return function () {
        return e.apply(t, arguments);
      };
    }
  };
  var ot = o.Object;
  var at = m("".split);
  var st = u(function () {
    return !ot("z").propertyIsEnumerable(0);
  }) ? function (e) {
    if (Ye(e) == "String") {
      return at(e, "");
    } else {
      return ot(e);
    }
  } : ot;
  var lt = Math.ceil;
  var ct = Math.floor;
  var ut = Math.trunc || function (e) {
    var t = +e;
    return (t > 0 ? ct : lt)(t);
  };
  var dt = function (e) {
    var t = +e;
    if (t != t || t === 0) {
      return 0;
    } else {
      return ut(t);
    }
  };
  var ht = Math.min;
  var ft = function (e) {
    if (e > 0) {
      return ht(dt(e), 9007199254740991);
    } else {
      return 0;
    }
  };
  var pt = function (e) {
    return ft(e.length);
  };
  var gt = Array.isArray || function (e) {
    return Ye(e) == "Array";
  };
  var mt = function () {};
  var vt = [];
  var yt = E("Reflect", "construct");
  var bt = /^\s*(?:class|function)\b/;
  var wt = m(bt.exec);
  var xt = !bt.exec(mt);
  var _t = function (e) {
    if (!A(e)) {
      return false;
    }
    try {
      yt(mt, vt, e);
      return true;
    } catch (e) {
      return false;
    }
  };
  var Ct = function (e) {
    if (!A(e)) {
      return false;
    }
    switch (Qe(e)) {
      case "AsyncFunction":
      case "GeneratorFunction":
      case "AsyncGeneratorFunction":
        return false;
    }
    try {
      return xt || !!wt(bt, Ee(e));
    } catch (e) {
      return true;
    }
  };
  Ct.sham = true;
  var St = !yt || u(function () {
    var e;
    return _t(_t.call) || !_t(Object) || !_t(function () {
      e = true;
    }) || e;
  }) ? Ct : _t;
  var kt = B("species");
  var Tt = o.Array;
  var At = function (e, t) {
    return new (function (e) {
      var t;
      if (gt(e)) {
        t = e.constructor;
        if (St(t) && (t === Tt || gt(t.prototype)) || V(t) && (t = t[kt]) === null) {
          t = undefined;
        }
      }
      if (t === undefined) {
        return Tt;
      } else {
        return t;
      }
    }(e))(t === 0 ? 0 : t);
  };
  var Dt = m([].push);
  var Et = function (e) {
    var t = e == 1;
    var n = e == 2;
    var i = e == 3;
    var r = e == 4;
    var o = e == 6;
    var a = e == 7;
    var s = e == 5 || o;
    return function (l, c, u, d) {
      for (var h, f, p = w(l), g = st(p), m = rt(c, u), v = pt(g), y = 0, b = d || At, x = t ? b(l, v) : n || a ? b(l, 0) : undefined; v > y; y++) {
        if ((s || y in g) && (f = m(h = g[y], y, p), e)) {
          if (t) {
            x[y] = f;
          } else if (f) {
            switch (e) {
              case 3:
                return true;
              case 5:
                return h;
              case 6:
                return y;
              case 2:
                Dt(x, h);
            }
          } else {
            switch (e) {
              case 4:
                return false;
              case 7:
                Dt(x, h);
            }
          }
        }
      }
      if (o) {
        return -1;
      } else if (i || r) {
        return r;
      } else {
        return x;
      }
    };
  };
  var Ot = {
    forEach: Et(0),
    map: Et(1),
    filter: Et(2),
    some: Et(3),
    every: Et(4),
    find: Et(5),
    findIndex: Et(6),
    filterReject: Et(7)
  };
  var Mt = function (e, t) {
    var n = [][e];
    return !!n && u(function () {
      n.call(null, t || function () {
        return 1;
      }, 1);
    });
  };
  var It = Ot.forEach;
  var Pt = Mt("forEach") ? [].forEach : function (e) {
    return It(this, e, arguments.length > 1 ? arguments[1] : undefined);
  };
  var Lt = function (e) {
    if (e && e.forEach !== Pt) {
      try {
        we(e, "forEach", Pt);
      } catch (t) {
        e.forEach = Pt;
      }
    }
  };
  for (var Nt in Je) {
    if (Je[Nt]) {
      Lt(o[Nt] && o[Nt].prototype);
    }
  }
  Lt(nt);
  var Ft = !(typeof window == "undefined" || !window.document || !window.document.createElement);
  var Rt = {}.propertyIsEnumerable;
  var jt = Object.getOwnPropertyDescriptor;
  var $t = {
    f: jt && !Rt.call({
      1: 2
    }, 1) ? function (e) {
      var t = jt(this, e);
      return !!t && t.enumerable;
    } : Rt
  };
  var zt = function (e) {
    return st(y(e));
  };
  var Ht = Object.getOwnPropertyDescriptor;
  var Bt = {
    f: U ? Ht : function (e, t) {
      e = zt(e);
      t = pe(t);
      if (K) {
        try {
          return Ht(e, t);
        } catch (e) {}
      }
      if (_(e, t)) {
        return be(!ne($t.f, e, t), e[t]);
      }
    }
  };
  var qt = Math.max;
  var Wt = Math.min;
  var Ut = function (e, t) {
    var n = dt(e);
    if (n < 0) {
      return qt(n + t, 0);
    } else {
      return Wt(n, t);
    }
  };
  var Vt = function (e) {
    return function (t, n, i) {
      var r;
      var o = zt(t);
      var a = pt(o);
      var s = Ut(i, a);
      if (e && n != n) {
        for (; a > s;) {
          if ((r = o[s++]) != r) {
            return true;
          }
        }
      } else {
        for (; a > s; s++) {
          if ((e || s in o) && o[s] === n) {
            return e || s || 0;
          }
        }
      }
      return !e && -1;
    };
  };
  Vt(true);
  var Yt = Vt(false);
  var Xt = m([].push);
  var Gt = function (e, t) {
    var n;
    var i = zt(e);
    var r = 0;
    var o = [];
    for (n in i) {
      if (!_(Le, n) && _(i, n)) {
        Xt(o, n);
      }
    }
    for (; t.length > r;) {
      if (_(i, n = t[r++])) {
        if (!~Yt(o, n)) {
          Xt(o, n);
        }
      }
    }
    return o;
  };
  var Kt = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
  var Qt = Kt.concat("length", "prototype");
  var Zt = {
    f: Object.getOwnPropertyNames || function (e) {
      return Gt(e, Qt);
    }
  };
  var Jt = {
    f: Object.getOwnPropertySymbols
  };
  var en = m([].concat);
  var tn = E("Reflect", "ownKeys") || function (e) {
    var t = Zt.f(ee(e));
    var n = Jt.f;
    if (n) {
      return en(t, n(e));
    } else {
      return t;
    }
  };
  var nn = function (e, t, n) {
    for (var i = tn(t), r = ye.f, o = Bt.f, a = 0; a < i.length; a++) {
      var s = i[a];
      if (!(_(e, s) || n && _(n, s))) {
        r(e, s, o(t, s));
      }
    }
  };
  var rn = /#|\.prototype\./;
  var on = function (e, t) {
    var n = sn[an(e)];
    return n == cn || n != ln && (A(t) ? u(t) : !!t);
  };
  var an = on.normalize = function (e) {
    return String(e).replace(rn, ".").toLowerCase();
  };
  var sn = on.data = {};
  var ln = on.NATIVE = "N";
  var cn = on.POLYFILL = "P";
  var un = on;
  var dn = Bt.f;
  var hn = function (e, t) {
    var n;
    var i;
    var r;
    var a;
    var l;
    var c = e.target;
    var u = e.global;
    var d = e.stat;
    if (n = u ? o : d ? o[c] || s(c, {}) : (o[c] || {}).prototype) {
      for (i in t) {
        a = t[i];
        r = e.dontCallGetSet ? (l = dn(n, i)) && l.value : n[i];
        if (!un(u ? i : c + (d ? "." : "#") + i, e.forced) && r !== undefined) {
          if (typeof a == typeof r) {
            continue;
          }
          nn(a, r);
        }
        if (e.sham || r && r.sham) {
          we(a, "sham", true);
        }
        We(n, i, a, e);
      }
    }
  };
  var fn = o.String;
  var pn = function (e) {
    if (Qe(e) === "Symbol") {
      throw TypeError("Cannot convert a Symbol value to a string");
    }
    return fn(e);
  };
  var gn = "\t\n\f\r Â áââââââââââââ¯âã\u2028\u2029ï»¿";
  var mn = m("".replace);
  var vn = "[" + gn + "]";
  var yn = RegExp("^" + vn + vn + "*");
  var bn = RegExp(vn + vn + "*$");
  var wn = function (e) {
    return function (t) {
      var n = pn(y(t));
      if (e & 1) {
        n = mn(n, yn, "");
      }
      if (e & 2) {
        n = mn(n, bn, "");
      }
      return n;
    };
  };
  wn(1);
  wn(2);
  var xn = wn(3);
  var _n = o.parseInt;
  var Cn = o.Symbol;
  var Sn = Cn && Cn.iterator;
  var kn = /^[+-]?0x/i;
  var Tn = m(kn.exec);
  var An = _n(gn + "08") !== 8 || _n(gn + "0x16") !== 22 || Sn && !u(function () {
    _n(Object(Sn));
  }) ? function (e, t) {
    var n = xn(pn(e));
    return _n(n, t >>> 0 || (Tn(kn, n) ? 16 : 10));
  } : _n;
  hn({
    global: true,
    forced: parseInt != An
  }, {
    parseInt: An
  });
  var Dn = Object.keys || function (e) {
    return Gt(e, Kt);
  };
  var En = Object.assign;
  var On = Object.defineProperty;
  var Mn = m([].concat);
  var In = !En || u(function () {
    if (U && En({
      b: 1
    }, En(On({}, "a", {
      enumerable: true,
      get: function () {
        On(this, "b", {
          value: 3,
          enumerable: false
        });
      }
    }), {
      b: 2
    })).b !== 1) {
      return true;
    }
    var e = {};
    var t = {};
    var n = Symbol();
    e[n] = 7;
    "abcdefghijklmnopqrst".split("").forEach(function (e) {
      t[e] = e;
    });
    return En({}, e)[n] != 7 || Dn(En({}, t)).join("") != "abcdefghijklmnopqrst";
  }) ? function (e, t) {
    for (var n = w(e), i = arguments.length, r = 1, o = Jt.f, a = $t.f; i > r;) {
      for (var s, l = st(arguments[r++]), c = o ? Mn(Dn(l), o(l)) : Dn(l), u = c.length, d = 0; u > d;) {
        s = c[d++];
        if (!(U && !ne(a, l, s))) {
          n[s] = l[s];
        }
      }
    }
    return n;
  } : En;
  hn({
    target: "Object",
    stat: true,
    arity: 2,
    forced: Object.assign !== In
  }, {
    assign: In
  });
  var Pn = B("species");
  var Ln = Ot.filter;
  "filter";
  var Nn = N >= 51 || !u(function () {
    var e = [];
    (e.constructor = {})[Pn] = function () {
      return {
        foo: 1
      };
    };
    return e.filter(Boolean).foo !== 1;
  });
  hn({
    target: "Array",
    proto: true,
    forced: !Nn
  }, {
    filter: function (e) {
      return Ln(this, e, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  var Fn;
  var Rn = {
    f: U && !Q ? Object.defineProperties : function (e, t) {
      ee(e);
      for (var n, i = zt(t), r = Dn(t), o = r.length, a = 0; o > a;) {
        ye.f(e, n = r[a++], i[n]);
      }
      return e;
    }
  };
  var jn = E("document", "documentElement");
  var $n = Pe("IE_PROTO");
  var zn = function () {};
  var Hn = function (e) {
    return "<script>" + e + "</script>";
  };
  var Bn = function (e) {
    e.write(Hn(""));
    e.close();
    var t = e.parentWindow.Object;
    e = null;
    return t;
  };
  var qn = function () {
    try {
      Fn = new ActiveXObject("htmlfile");
    } catch (e) {}
    var e;
    var t;
    qn = typeof document != "undefined" ? document.domain && Fn ? Bn(Fn) : ((t = G("iframe")).style.display = "none", jn.appendChild(t), t.src = String("javascript:"), (e = t.contentWindow.document).open(), e.write(Hn("document.F=Object")), e.close(), e.F) : Bn(Fn);
    for (var n = Kt.length; n--;) {
      delete qn.prototype[Kt[n]];
    }
    return qn();
  };
  Le[$n] = true;
  var Wn = Object.create || function (e, t) {
    var n;
    if (e !== null) {
      zn.prototype = ee(e);
      n = new zn();
      zn.prototype = null;
      n[$n] = e;
    } else {
      n = qn();
    }
    if (t === undefined) {
      return n;
    } else {
      return Rn.f(n, t);
    }
  };
  var Un = ye.f;
  var Vn = B("unscopables");
  var Yn = Array.prototype;
  if (Yn[Vn] == null) {
    Un(Yn, Vn, {
      configurable: true,
      value: Wn(null)
    });
  }
  var Xn;
  var Gn;
  var Kn;
  var Qn = function (e) {
    Yn[Vn][e] = true;
  };
  var Zn = {};
  var Jn = !u(function () {
    function e() {}
    e.prototype.constructor = null;
    return Object.getPrototypeOf(new e()) !== e.prototype;
  });
  var ei = Pe("IE_PROTO");
  var ti = o.Object;
  var ni = ti.prototype;
  var ii = Jn ? ti.getPrototypeOf : function (e) {
    var t = w(e);
    if (_(t, ei)) {
      return t[ei];
    }
    var n = t.constructor;
    if (A(n) && t instanceof n) {
      return n.prototype;
    } else if (t instanceof ti) {
      return ni;
    } else {
      return null;
    }
  };
  var ri = B("iterator");
  var oi = false;
  if ([].keys) {
    if ("next" in (Kn = [].keys())) {
      if ((Gn = ii(ii(Kn))) !== Object.prototype) {
        Xn = Gn;
      }
    } else {
      oi = true;
    }
  }
  if (Xn == null || u(function () {
    var e = {};
    return Xn[ri].call(e) !== e;
  })) {
    Xn = {};
  }
  if (!A(Xn[ri])) {
    We(Xn, ri, function () {
      return this;
    });
  }
  var ai = {
    IteratorPrototype: Xn,
    BUGGY_SAFARI_ITERATORS: oi
  };
  var si = ye.f;
  var li = B("toStringTag");
  var ci = function (e, t, n) {
    if (e && !n) {
      e = e.prototype;
    }
    if (e && !_(e, li)) {
      si(e, li, {
        configurable: true,
        value: t
      });
    }
  };
  var ui = ai.IteratorPrototype;
  var di = function () {
    return this;
  };
  var hi = o.String;
  var fi = o.TypeError;
  var pi = Object.setPrototypeOf || ("__proto__" in {} ? function () {
    var e;
    var t = false;
    var n = {};
    try {
      (e = m(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set))(n, []);
      t = n instanceof Array;
    } catch (e) {}
    return function (n, i) {
      ee(n);
      (function (e) {
        if (typeof e == "object" || A(e)) {
          return e;
        }
        throw fi("Can't set " + hi(e) + " as a prototype");
      })(i);
      if (t) {
        e(n, i);
      } else {
        n.__proto__ = i;
      }
      return n;
    };
  }() : undefined);
  var gi = Se.PROPER;
  var mi = Se.CONFIGURABLE;
  var vi = ai.IteratorPrototype;
  var yi = ai.BUGGY_SAFARI_ITERATORS;
  var bi = B("iterator");
  var wi = function () {
    return this;
  };
  var xi = function (e, t, n, i, r, o, a) {
    !function (e, t, n, i) {
      var r = t + " Iterator";
      e.prototype = Wn(ui, {
        next: be(1, n)
      });
      ci(e, r, false);
      Zn[r] = di;
    }(n, t, i);
    var s;
    var l;
    var c;
    var u = function (e) {
      if (e === r && g) {
        return g;
      }
      if (!yi && e in f) {
        return f[e];
      }
      switch (e) {
        case "keys":
        case "values":
        case "entries":
          return function () {
            return new n(this, e);
          };
      }
      return function () {
        return new n(this);
      };
    };
    var d = t + " Iterator";
    var h = false;
    var f = e.prototype;
    var p = f[bi] || f["@@iterator"] || r && f[r];
    var g = !yi && p || u(r);
    var m = t == "Array" && f.entries || p;
    if (m && (s = ii(m.call(new e()))) !== Object.prototype && s.next) {
      if (ii(s) !== vi) {
        if (pi) {
          pi(s, vi);
        } else if (!A(s[bi])) {
          We(s, bi, wi);
        }
      }
      ci(s, d, true);
    }
    if (gi && r == "values" && p && p.name !== "values") {
      if (mi) {
        we(f, "name", "values");
      } else {
        h = true;
        g = function () {
          return ne(p, this);
        };
      }
    }
    if (r) {
      l = {
        values: u("values"),
        keys: o ? g : u("keys"),
        entries: u("entries")
      };
      if (a) {
        for (c in l) {
          if (yi || h || !(c in f)) {
            We(f, c, l[c]);
          }
        }
      } else {
        hn({
          target: t,
          proto: true,
          forced: yi || h
        }, l);
      }
    }
    if (f[bi] !== g) {
      We(f, bi, g, {
        name: r
      });
    }
    Zn[t] = g;
    return l;
  };
  var _i = ye.f;
  var Ci = Be.set;
  var Si = Be.getterFor("Array Iterator");
  var ki = xi(Array, "Array", function (e, t) {
    Ci(this, {
      type: "Array Iterator",
      target: zt(e),
      index: 0,
      kind: t
    });
  }, function () {
    var e = Si(this);
    var t = e.target;
    var n = e.kind;
    var i = e.index++;
    if (!t || i >= t.length) {
      e.target = undefined;
      return {
        value: undefined,
        done: true
      };
    } else if (n == "keys") {
      return {
        value: i,
        done: false
      };
    } else if (n == "values") {
      return {
        value: t[i],
        done: false
      };
    } else {
      return {
        value: [i, t[i]],
        done: false
      };
    }
  }, "values");
  var Ti = Zn.Arguments = Zn.Array;
  Qn("keys");
  Qn("values");
  Qn("entries");
  if (U && Ti.name !== "values") {
    try {
      _i(Ti, "name", {
        value: "values"
      });
    } catch (e) {}
  }
  var Ai = m("".charAt);
  var Di = m("".charCodeAt);
  var Ei = m("".slice);
  var Oi = function (e) {
    return function (t, n) {
      var i;
      var r;
      var o = pn(y(t));
      var a = dt(n);
      var s = o.length;
      if (a < 0 || a >= s) {
        if (e) {
          return "";
        } else {
          return undefined;
        }
      } else if ((i = Di(o, a)) < 55296 || i > 56319 || a + 1 === s || (r = Di(o, a + 1)) < 56320 || r > 57343) {
        if (e) {
          return Ai(o, a);
        } else {
          return i;
        }
      } else if (e) {
        return Ei(o, a, a + 2);
      } else {
        return r - 56320 + (i - 55296 << 10) + 65536;
      }
    };
  };
  var Mi = {
    codeAt: Oi(false),
    charAt: Oi(true)
  };
  var Ii = Mi.charAt;
  var Pi = Be.set;
  var Li = Be.getterFor("String Iterator");
  xi(String, "String", function (e) {
    Pi(this, {
      type: "String Iterator",
      string: pn(e),
      index: 0
    });
  }, function () {
    var e;
    var t = Li(this);
    var n = t.string;
    var i = t.index;
    if (i >= n.length) {
      return {
        value: undefined,
        done: true
      };
    } else {
      e = Ii(n, i);
      t.index += e.length;
      return {
        value: e,
        done: false
      };
    }
  });
  var Ni = function (e, t, n) {
    for (var i in t) {
      We(e, i, t[i], n);
    }
    return e;
  };
  var Fi = o.Array;
  var Ri = Math.max;
  var ji = Zt.f;
  var $i = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var zi = {
    f: function (e) {
      if ($i && Ye(e) == "Window") {
        return function (e) {
          try {
            return ji(e);
          } catch (e) {
            return function (e, t, n) {
              for (var i, r, o, a, s = pt(e), l = Ut(undefined, s), c = Ut(s, s), u = Fi(Ri(c - l, 0)), d = 0; l < c; l++, d++) {
                i = u;
                r = d;
                o = e[l];
                undefined;
                if ((a = pe(r)) in i) {
                  ye.f(i, a, be(0, o));
                } else {
                  i[a] = o;
                }
              }
              u.length = d;
              return u;
            }($i);
          }
        }(e);
      } else {
        return ji(zt(e));
      }
    }
  };
  var Hi = u(function () {
    if (typeof ArrayBuffer == "function") {
      var e = new ArrayBuffer(8);
      if (Object.isExtensible(e)) {
        Object.defineProperty(e, "a", {
          value: 8
        });
      }
    }
  });
  var Bi = Object.isExtensible;
  var qi = u(function () {
    Bi(1);
  }) || Hi ? function (e) {
    return !!V(e) && (!Hi || Ye(e) != "ArrayBuffer") && (!Bi || Bi(e));
  } : Bi;
  var Wi = !u(function () {
    return Object.isExtensible(Object.preventExtensions({}));
  });
  var Ui = t(function (e) {
    var t = ye.f;
    var n = false;
    var i = T("meta");
    var r = 0;
    var o = function (e) {
      t(e, i, {
        value: {
          objectID: "O" + r++,
          weakData: {}
        }
      });
    };
    var a = e.exports = {
      enable: function () {
        a.enable = function () {};
        n = true;
        var e = Zt.f;
        var t = m([].splice);
        var r = {
          [i]: 1
        };
        if (e(r).length) {
          Zt.f = function (n) {
            for (var r = e(n), o = 0, a = r.length; o < a; o++) {
              if (r[o] === i) {
                t(r, o, 1);
                break;
              }
            }
            return r;
          };
          hn({
            target: "Object",
            stat: true,
            forced: true
          }, {
            getOwnPropertyNames: zi.f
          });
        }
      },
      fastKey: function (e, t) {
        if (!V(e)) {
          if (typeof e == "symbol") {
            return e;
          } else {
            return (typeof e == "string" ? "S" : "P") + e;
          }
        }
        if (!_(e, i)) {
          if (!qi(e)) {
            return "F";
          }
          if (!t) {
            return "E";
          }
          o(e);
        }
        return e[i].objectID;
      },
      getWeakData: function (e, t) {
        if (!_(e, i)) {
          if (!qi(e)) {
            return true;
          }
          if (!t) {
            return false;
          }
          o(e);
        }
        return e[i].weakData;
      },
      onFreeze: function (e) {
        if (Wi && n && qi(e) && !_(e, i)) {
          o(e);
        }
        return e;
      }
    };
    Le[i] = true;
  });
  Ui.enable;
  Ui.fastKey;
  Ui.getWeakData;
  Ui.onFreeze;
  var Vi = B("iterator");
  var Yi = Array.prototype;
  var Xi = B("iterator");
  var Gi = function (e) {
    if (e != null) {
      return ue(e, Xi) || ue(e, "@@iterator") || Zn[Qe(e)];
    }
  };
  var Ki = o.TypeError;
  var Qi = function (e, t, n) {
    var i;
    var r;
    ee(e);
    try {
      if (!(i = ue(e, "return"))) {
        if (t === "throw") {
          throw n;
        }
        return n;
      }
      i = ne(i, e);
    } catch (e) {
      r = true;
      i = e;
    }
    if (t === "throw") {
      throw n;
    }
    if (r) {
      throw i;
    }
    ee(i);
    return n;
  };
  var Zi = o.TypeError;
  var Ji = function (e, t) {
    this.stopped = e;
    this.result = t;
  };
  var er = Ji.prototype;
  var tr = function (e, t, n) {
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d = n && n.that;
    var h = !(!n || !n.AS_ENTRIES);
    var f = !(!n || !n.IS_ITERATOR);
    var p = !(!n || !n.INTERRUPTED);
    var g = rt(t, d);
    var m = function (e) {
      if (i) {
        Qi(i, "normal", e);
      }
      return new Ji(true, e);
    };
    var v = function (e) {
      if (h) {
        ee(e);
        if (p) {
          return g(e[0], e[1], m);
        } else {
          return g(e[0], e[1]);
        }
      } else if (p) {
        return g(e, m);
      } else {
        return g(e);
      }
    };
    if (f) {
      i = e;
    } else {
      if (!(r = Gi(e))) {
        throw Zi(se(e) + " is not iterable");
      }
      if ((u = r) !== undefined && (Zn.Array === u || Yi[Vi] === u)) {
        o = 0;
        a = pt(e);
        for (; a > o; o++) {
          if ((s = v(e[o])) && ie(er, s)) {
            return s;
          }
        }
        return new Ji(false);
      }
      i = function (e, t) {
        var n = arguments.length < 2 ? Gi(e) : t;
        if (ce(n)) {
          return ee(ne(n, e));
        }
        throw Ki(se(e) + " is not iterable");
      }(e, r);
    }
    for (l = i.next; !(c = ne(l, i)).done;) {
      try {
        s = v(c.value);
      } catch (e) {
        Qi(i, "throw", e);
      }
      if (typeof s == "object" && s && ie(er, s)) {
        return s;
      }
    }
    return new Ji(false);
  };
  var nr = o.TypeError;
  var ir = function (e, t) {
    if (ie(t, e)) {
      return e;
    }
    throw nr("Incorrect invocation");
  };
  var rr = B("iterator");
  var or = false;
  try {
    var ar = 0;
    var sr = {
      next: function () {
        return {
          done: !!ar++
        };
      },
      return: function () {
        or = true;
      }
    };
    sr[rr] = function () {
      return this;
    };
    Array.from(sr, function () {
      throw 2;
    });
  } catch (e) {}
  var lr = Ui.getWeakData;
  var cr = Be.set;
  var ur = Be.getterFor;
  var dr = Ot.find;
  var hr = Ot.findIndex;
  var fr = m([].splice);
  var pr = 0;
  var gr = function (e) {
    return e.frozen || (e.frozen = new mr());
  };
  var mr = function () {
    this.entries = [];
  };
  var vr = function (e, t) {
    return dr(e.entries, function (e) {
      return e[0] === t;
    });
  };
  mr.prototype = {
    get: function (e) {
      var t = vr(this, e);
      if (t) {
        return t[1];
      }
    },
    has: function (e) {
      return !!vr(this, e);
    },
    set: function (e, t) {
      var n = vr(this, e);
      if (n) {
        n[1] = t;
      } else {
        this.entries.push([e, t]);
      }
    },
    delete: function (e) {
      var t = hr(this.entries, function (t) {
        return t[0] === e;
      });
      if (~t) {
        fr(this.entries, t, 1);
      }
      return !!~t;
    }
  };
  var yr;
  var br = {
    getConstructor: function (e, t, n, i) {
      var r = e(function (e, r) {
        ir(e, o);
        cr(e, {
          type: t,
          id: pr++,
          frozen: undefined
        });
        if (r != null) {
          tr(r, e[i], {
            that: e,
            AS_ENTRIES: n
          });
        }
      });
      var o = r.prototype;
      var a = ur(t);
      var s = function (e, t, n) {
        var i = a(e);
        var r = lr(ee(t), true);
        if (r === true) {
          gr(i).set(t, n);
        } else {
          r[i.id] = n;
        }
        return e;
      };
      Ni(o, {
        delete: function (e) {
          var t = a(this);
          if (!V(e)) {
            return false;
          }
          var n = lr(e);
          if (n === true) {
            return gr(t).delete(e);
          } else {
            return n && _(n, t.id) && delete n[t.id];
          }
        },
        has: function (e) {
          var t = a(this);
          if (!V(e)) {
            return false;
          }
          var n = lr(e);
          if (n === true) {
            return gr(t).has(e);
          } else {
            return n && _(n, t.id);
          }
        }
      });
      Ni(o, n ? {
        get: function (e) {
          var t = a(this);
          if (V(e)) {
            var n = lr(e);
            if (n === true) {
              return gr(t).get(e);
            } else if (n) {
              return n[t.id];
            } else {
              return undefined;
            }
          }
        },
        set: function (e, t) {
          return s(this, e, t);
        }
      } : {
        add: function (e) {
          return s(this, e, true);
        }
      });
      return r;
    }
  };
  var wr = Be.enforce;
  var xr = !o.ActiveXObject && "ActiveXObject" in o;
  var _r = function (e) {
    return function () {
      return e(this, arguments.length ? arguments[0] : undefined);
    };
  };
  var Cr = function (e, t, n) {
    var i = e.indexOf("Map") !== -1;
    var r = e.indexOf("Weak") !== -1;
    var a = i ? "set" : "add";
    var s = o[e];
    var l = s && s.prototype;
    var c = s;
    var d = {};
    var h = function (e) {
      var t = m(l[e]);
      We(l, e, e == "add" ? function (e) {
        t(this, e === 0 ? 0 : e);
        return this;
      } : e == "delete" ? function (e) {
        return !(r && !V(e)) && t(this, e === 0 ? 0 : e);
      } : e == "get" ? function (e) {
        if (r && !V(e)) {
          return undefined;
        } else {
          return t(this, e === 0 ? 0 : e);
        }
      } : e == "has" ? function (e) {
        return !(r && !V(e)) && t(this, e === 0 ? 0 : e);
      } : function (e, n) {
        t(this, e === 0 ? 0 : e, n);
        return this;
      });
    };
    if (un(e, !A(s) || !(r || l.forEach && !u(function () {
      new s().entries().next();
    })))) {
      c = n.getConstructor(t, e, i, a);
      Ui.enable();
    } else if (un(e, true)) {
      var f = new c();
      var p = f[a](r ? {} : -0, 1) != f;
      var g = u(function () {
        f.has(1);
      });
      var v = function (e, t) {
        if (!or) {
          return false;
        }
        var n = false;
        try {
          var i = {
            [rr]: function () {
              return {
                next: function () {
                  return {
                    done: n = true
                  };
                }
              };
            }
          };
          (function (e) {
            new s(e);
          })(i);
        } catch (e) {}
        return n;
      }();
      var y = !r && u(function () {
        for (var e = new s(), t = 5; t--;) {
          e[a](t, t);
        }
        return !e.has(-0);
      });
      if (!v) {
        (c = t(function (e, t) {
          ir(e, l);
          var n = function (e, t, n) {
            var i;
            var r;
            if (pi && A(i = t.constructor) && i !== n && V(r = i.prototype) && r !== n.prototype) {
              pi(e, r);
            }
            return e;
          }(new s(), e, c);
          if (t != null) {
            tr(t, n[a], {
              that: n,
              AS_ENTRIES: i
            });
          }
          return n;
        })).prototype = l;
        l.constructor = c;
      }
      if (g || y) {
        h("delete");
        h("has");
        if (i) {
          h("get");
        }
      }
      if (y || p) {
        h(a);
      }
      if (r && l.clear) {
        delete l.clear;
      }
    }
    d[e] = c;
    hn({
      global: true,
      constructor: true,
      forced: c != s
    }, d);
    ci(c, e);
    if (!r) {
      n.setStrong(c, e, i);
    }
    return c;
  }("WeakMap", _r, br);
  if (Me && xr) {
    yr = br.getConstructor(_r, "WeakMap", true);
    Ui.enable();
    var Sr = Cr.prototype;
    var kr = m(Sr.delete);
    var Tr = m(Sr.has);
    var Ar = m(Sr.get);
    var Dr = m(Sr.set);
    Ni(Sr, {
      delete: function (e) {
        if (V(e) && !qi(e)) {
          var t = wr(this);
          if (!t.frozen) {
            t.frozen = new yr();
          }
          return kr(this, e) || t.frozen.delete(e);
        }
        return kr(this, e);
      },
      has: function (e) {
        if (V(e) && !qi(e)) {
          var t = wr(this);
          if (!t.frozen) {
            t.frozen = new yr();
          }
          return Tr(this, e) || t.frozen.has(e);
        }
        return Tr(this, e);
      },
      get: function (e) {
        if (V(e) && !qi(e)) {
          var t = wr(this);
          if (!t.frozen) {
            t.frozen = new yr();
          }
          if (Tr(this, e)) {
            return Ar(this, e);
          } else {
            return t.frozen.get(e);
          }
        }
        return Ar(this, e);
      },
      set: function (e, t) {
        if (V(e) && !qi(e)) {
          var n = wr(this);
          if (!n.frozen) {
            n.frozen = new yr();
          }
          if (Tr(this, e)) {
            Dr(this, e, t);
          } else {
            n.frozen.set(e, t);
          }
        } else {
          Dr(this, e, t);
        }
        return this;
      }
    });
  }
  var Er = B("iterator");
  var Or = B("toStringTag");
  var Mr = ki.values;
  var Ir = function (e, t) {
    if (e) {
      if (e[Er] !== Mr) {
        try {
          we(e, Er, Mr);
        } catch (t) {
          e[Er] = Mr;
        }
      }
      if (!e[Or]) {
        we(e, Or, t);
      }
      if (Je[t]) {
        for (var n in ki) {
          if (e[n] !== ki[n]) {
            try {
              we(e, n, ki[n]);
            } catch (t) {
              e[n] = ki[n];
            }
          }
        }
      }
    }
  };
  for (var Pr in Je) {
    Ir(o[Pr] && o[Pr].prototype, Pr);
  }
  Ir(nt, "DOMTokenList");
  var Lr = /^\s+|\s+$/g;
  var Nr = /^[-+]0x[0-9a-f]+$/i;
  var Fr = /^0b[01]+$/i;
  var Rr = /^0o[0-7]+$/i;
  var jr = parseInt;
  var $r = typeof e == "object" && e && e.Object === Object && e;
  var zr = typeof self == "object" && self && self.Object === Object && self;
  var Hr = $r || zr || Function("return this")();
  var Br = Object.prototype.toString;
  var qr = Math.max;
  var Wr = Math.min;
  var Ur = function () {
    return Hr.Date.now();
  };
  function Vr(e) {
    var t = typeof e;
    return !!e && (t == "object" || t == "function");
  }
  function Yr(e) {
    if (typeof e == "number") {
      return e;
    }
    if (function (e) {
      return typeof e == "symbol" || function (e) {
        return !!e && typeof e == "object";
      }(e) && Br.call(e) == "[object Symbol]";
    }(e)) {
      return NaN;
    }
    if (Vr(e)) {
      var t = typeof e.valueOf == "function" ? e.valueOf() : e;
      e = Vr(t) ? t + "" : t;
    }
    if (typeof e != "string") {
      if (e === 0) {
        return e;
      } else {
        return +e;
      }
    }
    e = e.replace(Lr, "");
    var n = Fr.test(e);
    if (n || Rr.test(e)) {
      return jr(e.slice(2), n ? 2 : 8);
    } else if (Nr.test(e)) {
      return NaN;
    } else {
      return +e;
    }
  }
  var Xr = function (e, t, n) {
    var i = true;
    var r = true;
    if (typeof e != "function") {
      throw new TypeError("Expected a function");
    }
    if (Vr(n)) {
      i = "leading" in n ? !!n.leading : i;
      r = "trailing" in n ? !!n.trailing : r;
    }
    return function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c = 0;
      var u = false;
      var d = false;
      var h = true;
      if (typeof e != "function") {
        throw new TypeError("Expected a function");
      }
      function f(t) {
        var n = i;
        var o = r;
        i = r = undefined;
        c = t;
        return a = e.apply(o, n);
      }
      function p(e) {
        c = e;
        s = setTimeout(m, t);
        if (u) {
          return f(e);
        } else {
          return a;
        }
      }
      function g(e) {
        var n = e - l;
        return l === undefined || n >= t || n < 0 || d && e - c >= o;
      }
      function m() {
        var e = Ur();
        if (g(e)) {
          return v(e);
        }
        s = setTimeout(m, function (e) {
          var n = t - (e - l);
          if (d) {
            return Wr(n, o - (e - c));
          } else {
            return n;
          }
        }(e));
      }
      function v(e) {
        s = undefined;
        if (h && i) {
          return f(e);
        } else {
          i = r = undefined;
          return a;
        }
      }
      function y() {
        var e = Ur();
        var n = g(e);
        i = arguments;
        r = this;
        l = e;
        if (n) {
          if (s === undefined) {
            return p(l);
          }
          if (d) {
            s = setTimeout(m, t);
            return f(l);
          }
        }
        if (s === undefined) {
          s = setTimeout(m, t);
        }
        return a;
      }
      t = Yr(t) || 0;
      if (Vr(n)) {
        u = !!n.leading;
        o = (d = "maxWait" in n) ? qr(Yr(n.maxWait) || 0, t) : o;
        h = "trailing" in n ? !!n.trailing : h;
      }
      y.cancel = function () {
        if (s !== undefined) {
          clearTimeout(s);
        }
        c = 0;
        i = l = r = s = undefined;
      };
      y.flush = function () {
        if (s === undefined) {
          return a;
        } else {
          return v(Ur());
        }
      };
      return y;
    }(e, t, {
      leading: i,
      maxWait: t,
      trailing: r
    });
  };
  var Gr = /^\s+|\s+$/g;
  var Kr = /^[-+]0x[0-9a-f]+$/i;
  var Qr = /^0b[01]+$/i;
  var Zr = /^0o[0-7]+$/i;
  var Jr = parseInt;
  var eo = typeof e == "object" && e && e.Object === Object && e;
  var to = typeof self == "object" && self && self.Object === Object && self;
  var no = eo || to || Function("return this")();
  var io = Object.prototype.toString;
  var ro = Math.max;
  var oo = Math.min;
  var ao = function () {
    return no.Date.now();
  };
  function so(e) {
    var t = typeof e;
    return !!e && (t == "object" || t == "function");
  }
  function lo(e) {
    if (typeof e == "number") {
      return e;
    }
    if (function (e) {
      return typeof e == "symbol" || function (e) {
        return !!e && typeof e == "object";
      }(e) && io.call(e) == "[object Symbol]";
    }(e)) {
      return NaN;
    }
    if (so(e)) {
      var t = typeof e.valueOf == "function" ? e.valueOf() : e;
      e = so(t) ? t + "" : t;
    }
    if (typeof e != "string") {
      if (e === 0) {
        return e;
      } else {
        return +e;
      }
    }
    e = e.replace(Gr, "");
    var n = Qr.test(e);
    if (n || Zr.test(e)) {
      return Jr(e.slice(2), n ? 2 : 8);
    } else if (Kr.test(e)) {
      return NaN;
    } else {
      return +e;
    }
  }
  var co = function (e, t, n) {
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c = 0;
    var u = false;
    var d = false;
    var h = true;
    if (typeof e != "function") {
      throw new TypeError("Expected a function");
    }
    function f(t) {
      var n = i;
      var o = r;
      i = r = undefined;
      c = t;
      return a = e.apply(o, n);
    }
    function p(e) {
      c = e;
      s = setTimeout(m, t);
      if (u) {
        return f(e);
      } else {
        return a;
      }
    }
    function g(e) {
      var n = e - l;
      return l === undefined || n >= t || n < 0 || d && e - c >= o;
    }
    function m() {
      var e = ao();
      if (g(e)) {
        return v(e);
      }
      s = setTimeout(m, function (e) {
        var n = t - (e - l);
        if (d) {
          return oo(n, o - (e - c));
        } else {
          return n;
        }
      }(e));
    }
    function v(e) {
      s = undefined;
      if (h && i) {
        return f(e);
      } else {
        i = r = undefined;
        return a;
      }
    }
    function y() {
      var e = ao();
      var n = g(e);
      i = arguments;
      r = this;
      l = e;
      if (n) {
        if (s === undefined) {
          return p(l);
        }
        if (d) {
          s = setTimeout(m, t);
          return f(l);
        }
      }
      if (s === undefined) {
        s = setTimeout(m, t);
      }
      return a;
    }
    t = lo(t) || 0;
    if (so(n)) {
      u = !!n.leading;
      o = (d = "maxWait" in n) ? ro(lo(n.maxWait) || 0, t) : o;
      h = "trailing" in n ? !!n.trailing : h;
    }
    y.cancel = function () {
      if (s !== undefined) {
        clearTimeout(s);
      }
      c = 0;
      i = l = r = s = undefined;
    };
    y.flush = function () {
      if (s === undefined) {
        return a;
      } else {
        return v(ao());
      }
    };
    return y;
  };
  var uo = /^\[object .+?Constructor\]$/;
  var ho = typeof e == "object" && e && e.Object === Object && e;
  var fo = typeof self == "object" && self && self.Object === Object && self;
  var po = ho || fo || Function("return this")();
  var go = Array.prototype;
  var mo = Function.prototype;
  var vo = Object.prototype;
  var yo = po["__core-js_shared__"];
  var bo = function () {
    var e = /[^.]+$/.exec(yo && yo.keys && yo.keys.IE_PROTO || "");
    if (e) {
      return "Symbol(src)_1." + e;
    } else {
      return "";
    }
  }();
  var wo = mo.toString;
  var xo = vo.hasOwnProperty;
  var _o = vo.toString;
  var Co = RegExp("^" + wo.call(xo).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var So = go.splice;
  var ko = Io(po, "Map");
  var To = Io(Object, "create");
  function Ao(e) {
    var t = -1;
    var n = e ? e.length : 0;
    for (this.clear(); ++t < n;) {
      var i = e[t];
      this.set(i[0], i[1]);
    }
  }
  function Do(e) {
    var t = -1;
    var n = e ? e.length : 0;
    for (this.clear(); ++t < n;) {
      var i = e[t];
      this.set(i[0], i[1]);
    }
  }
  function Eo(e) {
    var t = -1;
    var n = e ? e.length : 0;
    for (this.clear(); ++t < n;) {
      var i = e[t];
      this.set(i[0], i[1]);
    }
  }
  function Oo(e, t) {
    for (var n, i, r = e.length; r--;) {
      if ((n = e[r][0]) === (i = t) || n != n && i != i) {
        return r;
      }
    }
    return -1;
  }
  function Mo(e, t) {
    var n;
    var i;
    var r = e.__data__;
    if ((i = typeof (n = t)) == "string" || i == "number" || i == "symbol" || i == "boolean" ? n !== "__proto__" : n === null) {
      return r[typeof t == "string" ? "string" : "hash"];
    } else {
      return r.map;
    }
  }
  function Io(e, t) {
    var n = function (e, t) {
      if (e == null) {
        return undefined;
      } else {
        return e[t];
      }
    }(e, t);
    if (function (e) {
      return !(!Lo(e) || (t = e, bo && bo in t)) && (function (e) {
        var t = Lo(e) ? _o.call(e) : "";
        return t == "[object Function]" || t == "[object GeneratorFunction]";
      }(e) || function (e) {
        var t = false;
        if (e != null && typeof e.toString != "function") {
          try {
            t = !!(e + "");
          } catch (e) {}
        }
        return t;
      }(e) ? Co : uo).test(function (e) {
        if (e != null) {
          try {
            return wo.call(e);
          } catch (e) {}
          try {
            return e + "";
          } catch (e) {}
        }
        return "";
      }(e));
      var t;
    }(n)) {
      return n;
    } else {
      return undefined;
    }
  }
  function Po(e, t) {
    if (typeof e != "function" || t && typeof t != "function") {
      throw new TypeError("Expected a function");
    }
    var n = function () {
      var i = arguments;
      var r = t ? t.apply(this, i) : i[0];
      var o = n.cache;
      if (o.has(r)) {
        return o.get(r);
      }
      var a = e.apply(this, i);
      n.cache = o.set(r, a);
      return a;
    };
    n.cache = new (Po.Cache || Eo)();
    return n;
  }
  function Lo(e) {
    var t = typeof e;
    return !!e && (t == "object" || t == "function");
  }
  Ao.prototype.clear = function () {
    this.__data__ = To ? To(null) : {};
  };
  Ao.prototype.delete = function (e) {
    return this.has(e) && delete this.__data__[e];
  };
  Ao.prototype.get = function (e) {
    var t = this.__data__;
    if (To) {
      var n = t[e];
      if (n === "__lodash_hash_undefined__") {
        return undefined;
      } else {
        return n;
      }
    }
    if (xo.call(t, e)) {
      return t[e];
    } else {
      return undefined;
    }
  };
  Ao.prototype.has = function (e) {
    var t = this.__data__;
    if (To) {
      return t[e] !== undefined;
    } else {
      return xo.call(t, e);
    }
  };
  Ao.prototype.set = function (e, t) {
    this.__data__[e] = To && t === undefined ? "__lodash_hash_undefined__" : t;
    return this;
  };
  Do.prototype.clear = function () {
    this.__data__ = [];
  };
  Do.prototype.delete = function (e) {
    var t = this.__data__;
    var n = Oo(t, e);
    return !(n < 0 || (n == t.length - 1 ? t.pop() : So.call(t, n, 1), 0));
  };
  Do.prototype.get = function (e) {
    var t = this.__data__;
    var n = Oo(t, e);
    if (n < 0) {
      return undefined;
    } else {
      return t[n][1];
    }
  };
  Do.prototype.has = function (e) {
    return Oo(this.__data__, e) > -1;
  };
  Do.prototype.set = function (e, t) {
    var n = this.__data__;
    var i = Oo(n, e);
    if (i < 0) {
      n.push([e, t]);
    } else {
      n[i][1] = t;
    }
    return this;
  };
  Eo.prototype.clear = function () {
    this.__data__ = {
      hash: new Ao(),
      map: new (ko || Do)(),
      string: new Ao()
    };
  };
  Eo.prototype.delete = function (e) {
    return Mo(this, e).delete(e);
  };
  Eo.prototype.get = function (e) {
    return Mo(this, e).get(e);
  };
  Eo.prototype.has = function (e) {
    return Mo(this, e).has(e);
  };
  Eo.prototype.set = function (e, t) {
    Mo(this, e).set(e, t);
    return this;
  };
  Po.Cache = Eo;
  var No;
  var Fo = Po;
  var Ro = [];
  var jo = "ResizeObserver loop completed with undelivered notifications.";
  !function (e) {
    e.BORDER_BOX = "border-box";
    e.CONTENT_BOX = "content-box";
    e.DEVICE_PIXEL_CONTENT_BOX = "device-pixel-content-box";
  }(No || (No = {}));
  var $o;
  var zo = function (e) {
    return Object.freeze(e);
  };
  var Ho = function (e, t) {
    this.inlineSize = e;
    this.blockSize = t;
    zo(this);
  };
  var Bo = function () {
    function e(e, t, n, i) {
      this.x = e;
      this.y = t;
      this.width = n;
      this.height = i;
      this.top = this.y;
      this.left = this.x;
      this.bottom = this.top + this.height;
      this.right = this.left + this.width;
      return zo(this);
    }
    e.prototype.toJSON = function () {
      var e = this;
      return {
        x: e.x,
        y: e.y,
        top: e.top,
        right: e.right,
        bottom: e.bottom,
        left: e.left,
        width: e.width,
        height: e.height
      };
    };
    e.fromRect = function (t) {
      return new e(t.x, t.y, t.width, t.height);
    };
    return e;
  }();
  var qo = function (e) {
    return e instanceof SVGElement && "getBBox" in e;
  };
  var Wo = function (e) {
    if (qo(e)) {
      var t = e.getBBox();
      var n = t.width;
      var i = t.height;
      return !n && !i;
    }
    var r = e;
    var o = r.offsetWidth;
    var a = r.offsetHeight;
    return !(o || a || e.getClientRects().length);
  };
  var Uo = function (e) {
    var t;
    var n;
    if (e instanceof Element) {
      return true;
    }
    var i = (n = (t = e) === null || t === undefined ? undefined : t.ownerDocument) === null || n === undefined ? undefined : n.defaultView;
    return !!(i && e instanceof i.Element);
  };
  var Vo = typeof window != "undefined" ? window : {};
  var Yo = new WeakMap();
  var Xo = /auto|scroll/;
  var Go = /^tb|vertical/;
  var Ko = /msie|trident/i.test(Vo.navigator && Vo.navigator.userAgent);
  var Qo = function (e) {
    return parseFloat(e || "0");
  };
  var Zo = function (e, t, n) {
    if (e === undefined) {
      e = 0;
    }
    if (t === undefined) {
      t = 0;
    }
    if (n === undefined) {
      n = false;
    }
    return new Ho((n ? t : e) || 0, (n ? e : t) || 0);
  };
  var Jo = zo({
    devicePixelContentBoxSize: Zo(),
    borderBoxSize: Zo(),
    contentBoxSize: Zo(),
    contentRect: new Bo(0, 0, 0, 0)
  });
  var ea = function (e, t) {
    if (t === undefined) {
      t = false;
    }
    if (Yo.has(e) && !t) {
      return Yo.get(e);
    }
    if (Wo(e)) {
      Yo.set(e, Jo);
      return Jo;
    }
    var n = getComputedStyle(e);
    var i = qo(e) && e.ownerSVGElement && e.getBBox();
    var r = !Ko && n.boxSizing === "border-box";
    var o = Go.test(n.writingMode || "");
    var a = !i && Xo.test(n.overflowY || "");
    var s = !i && Xo.test(n.overflowX || "");
    var l = i ? 0 : Qo(n.paddingTop);
    var c = i ? 0 : Qo(n.paddingRight);
    var u = i ? 0 : Qo(n.paddingBottom);
    var d = i ? 0 : Qo(n.paddingLeft);
    var h = i ? 0 : Qo(n.borderTopWidth);
    var f = i ? 0 : Qo(n.borderRightWidth);
    var p = i ? 0 : Qo(n.borderBottomWidth);
    var g = d + c;
    var m = l + u;
    var v = (i ? 0 : Qo(n.borderLeftWidth)) + f;
    var y = h + p;
    var b = s ? e.offsetHeight - y - e.clientHeight : 0;
    var w = a ? e.offsetWidth - v - e.clientWidth : 0;
    var x = r ? g + v : 0;
    var _ = r ? m + y : 0;
    var C = i ? i.width : Qo(n.width) - x - w;
    var S = i ? i.height : Qo(n.height) - _ - b;
    var k = C + g + w + v;
    var T = S + m + b + y;
    var A = zo({
      devicePixelContentBoxSize: Zo(Math.round(C * devicePixelRatio), Math.round(S * devicePixelRatio), o),
      borderBoxSize: Zo(k, T, o),
      contentBoxSize: Zo(C, S, o),
      contentRect: new Bo(d, l, C, S)
    });
    Yo.set(e, A);
    return A;
  };
  var ta = function (e, t, n) {
    var i = ea(e, n);
    var r = i.borderBoxSize;
    var o = i.contentBoxSize;
    var a = i.devicePixelContentBoxSize;
    switch (t) {
      case No.DEVICE_PIXEL_CONTENT_BOX:
        return a;
      case No.BORDER_BOX:
        return r;
      default:
        return o;
    }
  };
  var na = function (e) {
    var t = ea(e);
    this.target = e;
    this.contentRect = t.contentRect;
    this.borderBoxSize = zo([t.borderBoxSize]);
    this.contentBoxSize = zo([t.contentBoxSize]);
    this.devicePixelContentBoxSize = zo([t.devicePixelContentBoxSize]);
  };
  var ia = function (e) {
    if (Wo(e)) {
      return 1 / 0;
    }
    for (var t = 0, n = e.parentNode; n;) {
      t += 1;
      n = n.parentNode;
    }
    return t;
  };
  var ra = function () {
    var e = 1 / 0;
    var t = [];
    Ro.forEach(function (n) {
      if (n.activeTargets.length !== 0) {
        var i = [];
        n.activeTargets.forEach(function (t) {
          var n = new na(t.target);
          var r = ia(t.target);
          i.push(n);
          t.lastReportedSize = ta(t.target, t.observedBox);
          if (r < e) {
            e = r;
          }
        });
        t.push(function () {
          n.callback.call(n.observer, i, n.observer);
        });
        n.activeTargets.splice(0, n.activeTargets.length);
      }
    });
    for (var n = 0, i = t; n < i.length; n++) {
      (0, i[n])();
    }
    return e;
  };
  var oa = function (e) {
    Ro.forEach(function (t) {
      t.activeTargets.splice(0, t.activeTargets.length);
      t.skippedTargets.splice(0, t.skippedTargets.length);
      t.observationTargets.forEach(function (n) {
        if (n.isActive()) {
          if (ia(n.target) > e) {
            t.activeTargets.push(n);
          } else {
            t.skippedTargets.push(n);
          }
        }
      });
    });
  };
  var aa = [];
  var sa = 0;
  var la = {
    attributes: true,
    characterData: true,
    childList: true,
    subtree: true
  };
  var ca = ["resize", "load", "transitionend", "animationend", "animationstart", "animationiteration", "keyup", "keydown", "mouseup", "mousedown", "mouseover", "mouseout", "blur", "focus"];
  var ua = function (e) {
    if (e === undefined) {
      e = 0;
    }
    return Date.now() + e;
  };
  var da = false;
  var ha = new (function () {
    function e() {
      var e = this;
      this.stopped = true;
      this.listener = function () {
        return e.schedule();
      };
    }
    e.prototype.run = function (e) {
      var t = this;
      if (e === undefined) {
        e = 250;
      }
      if (!da) {
        da = true;
        var n;
        var i = ua(e);
        n = function () {
          var n = false;
          try {
            n = function () {
              var e;
              var t = 0;
              for (oa(t); Ro.some(function (e) {
                return e.activeTargets.length > 0;
              });) {
                t = ra();
                oa(t);
              }
              if (Ro.some(function (e) {
                return e.skippedTargets.length > 0;
              })) {
                if (typeof ErrorEvent == "function") {
                  e = new ErrorEvent("error", {
                    message: jo
                  });
                } else {
                  (e = document.createEvent("Event")).initEvent("error", false, false);
                  e.message = jo;
                }
                window.dispatchEvent(e);
              }
              return t > 0;
            }();
          } finally {
            da = false;
            e = i - ua();
            if (!sa) {
              return;
            }
            if (n) {
              t.run(1000);
            } else if (e > 0) {
              t.run(e);
            } else {
              t.start();
            }
          }
        };
        (function (e) {
          if (!$o) {
            var t = 0;
            var n = document.createTextNode("");
            new MutationObserver(function () {
              return aa.splice(0).forEach(function (e) {
                return e();
              });
            }).observe(n, {
              characterData: true
            });
            $o = function () {
              n.textContent = "" + (t ? t-- : t++);
            };
          }
          aa.push(e);
          $o();
        })(function () {
          requestAnimationFrame(n);
        });
      }
    };
    e.prototype.schedule = function () {
      this.stop();
      this.run();
    };
    e.prototype.observe = function () {
      var e = this;
      var t = function () {
        return e.observer && e.observer.observe(document.body, la);
      };
      if (document.body) {
        t();
      } else {
        Vo.addEventListener("DOMContentLoaded", t);
      }
    };
    e.prototype.start = function () {
      var e = this;
      if (this.stopped) {
        this.stopped = false;
        this.observer = new MutationObserver(this.listener);
        this.observe();
        ca.forEach(function (t) {
          return Vo.addEventListener(t, e.listener, true);
        });
      }
    };
    e.prototype.stop = function () {
      var e = this;
      if (!this.stopped) {
        if (this.observer) {
          this.observer.disconnect();
        }
        ca.forEach(function (t) {
          return Vo.removeEventListener(t, e.listener, true);
        });
        this.stopped = true;
      }
    };
    return e;
  }())();
  var fa = function (e) {
    if (!sa && e > 0) {
      ha.start();
    }
    if (!(sa += e)) {
      ha.stop();
    }
  };
  var pa = function () {
    function e(e, t) {
      this.target = e;
      this.observedBox = t || No.CONTENT_BOX;
      this.lastReportedSize = {
        inlineSize: 0,
        blockSize: 0
      };
    }
    e.prototype.isActive = function () {
      var e;
      var t = ta(this.target, this.observedBox, true);
      e = this.target;
      if (!(qo(e) || function (e) {
        switch (e.tagName) {
          case "INPUT":
            if (e.type !== "image") {
              break;
            }
          case "VIDEO":
          case "AUDIO":
          case "EMBED":
          case "OBJECT":
          case "CANVAS":
          case "IFRAME":
          case "IMG":
            return true;
        }
        return false;
      }(e) || getComputedStyle(e).display !== "inline")) {
        this.lastReportedSize = t;
      }
      return this.lastReportedSize.inlineSize !== t.inlineSize || this.lastReportedSize.blockSize !== t.blockSize;
    };
    return e;
  }();
  var ga = function (e, t) {
    this.activeTargets = [];
    this.skippedTargets = [];
    this.observationTargets = [];
    this.observer = e;
    this.callback = t;
  };
  var ma = new WeakMap();
  var va = function (e, t) {
    for (var n = 0; n < e.length; n += 1) {
      if (e[n].target === t) {
        return n;
      }
    }
    return -1;
  };
  var ya = function () {
    function e() {}
    e.connect = function (e, t) {
      var n = new ga(e, t);
      ma.set(e, n);
    };
    e.observe = function (e, t, n) {
      var i = ma.get(e);
      var r = i.observationTargets.length === 0;
      if (va(i.observationTargets, t) < 0) {
        if (r) {
          Ro.push(i);
        }
        i.observationTargets.push(new pa(t, n && n.box));
        fa(1);
        ha.schedule();
      }
    };
    e.unobserve = function (e, t) {
      var n = ma.get(e);
      var i = va(n.observationTargets, t);
      var r = n.observationTargets.length === 1;
      if (i >= 0) {
        if (r) {
          Ro.splice(Ro.indexOf(n), 1);
        }
        n.observationTargets.splice(i, 1);
        fa(-1);
      }
    };
    e.disconnect = function (e) {
      var t = this;
      var n = ma.get(e);
      n.observationTargets.slice().forEach(function (n) {
        return t.unobserve(e, n.target);
      });
      n.activeTargets.splice(0, n.activeTargets.length);
    };
    return e;
  }();
  var ba = function () {
    function e(e) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (typeof e != "function") {
        throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
      }
      ya.connect(this, e);
    }
    e.prototype.observe = function (e, t) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (!Uo(e)) {
        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
      }
      ya.observe(this, e, t);
    };
    e.prototype.unobserve = function (e) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (!Uo(e)) {
        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
      }
      ya.unobserve(this, e);
    };
    e.prototype.disconnect = function () {
      ya.disconnect(this);
    };
    e.toString = function () {
      return "function ResizeObserver () { [polyfill code] }";
    };
    return e;
  }();
  var wa = o.TypeError;
  var xa = function (e) {
    return function (t, n, i, r) {
      ce(n);
      var o = w(t);
      var a = st(o);
      var s = pt(o);
      var l = e ? s - 1 : 0;
      var c = e ? -1 : 1;
      if (i < 2) {
        for (;;) {
          if (l in a) {
            r = a[l];
            l += c;
            break;
          }
          l += c;
          if (e ? l < 0 : s <= l) {
            throw wa("Reduce of empty array with no initial value");
          }
        }
      }
      for (; e ? l >= 0 : s > l; l += c) {
        if (l in a) {
          r = n(r, a[l], l, o);
        }
      }
      return r;
    };
  };
  var _a = {
    left: xa(false),
    right: xa(true)
  };
  var Ca = Ye(o.process) == "process";
  var Sa = _a.left;
  var ka = Mt("reduce");
  hn({
    target: "Array",
    proto: true,
    forced: !ka || !Ca && N > 79 && N < 83
  }, {
    reduce: function (e) {
      var t = arguments.length;
      return Sa(this, e, t, t > 1 ? arguments[1] : undefined);
    }
  });
  var Ta;
  var Aa;
  var Da = function () {
    var e = ee(this);
    var t = "";
    if (e.hasIndices) {
      t += "d";
    }
    if (e.global) {
      t += "g";
    }
    if (e.ignoreCase) {
      t += "i";
    }
    if (e.multiline) {
      t += "m";
    }
    if (e.dotAll) {
      t += "s";
    }
    if (e.unicode) {
      t += "u";
    }
    if (e.sticky) {
      t += "y";
    }
    return t;
  };
  var Ea = o.RegExp;
  var Oa = u(function () {
    var e = Ea("a", "y");
    e.lastIndex = 2;
    return e.exec("abcd") != null;
  });
  var Ma = Oa || u(function () {
    return !Ea("a", "y").sticky;
  });
  var Ia = {
    BROKEN_CARET: Oa || u(function () {
      var e = Ea("^r", "gy");
      e.lastIndex = 2;
      return e.exec("str") != null;
    }),
    MISSED_STICKY: Ma,
    UNSUPPORTED_Y: Oa
  };
  var Pa = o.RegExp;
  var La = u(function () {
    var e = Pa(".", "s");
    return !(e.dotAll && e.exec("\n") && e.flags === "s");
  });
  var Na = o.RegExp;
  var Fa = u(function () {
    var e = Na("(?<a>b)", "g");
    return e.exec("b").groups.a !== "b" || "b".replace(e, "$<a>c") !== "bc";
  });
  var Ra = Be.get;
  var ja = c("native-string-replace", String.prototype.replace);
  var $a = RegExp.prototype.exec;
  var za = $a;
  var Ha = m("".charAt);
  var Ba = m("".indexOf);
  var qa = m("".replace);
  var Wa = m("".slice);
  Aa = /b*/g;
  ne($a, Ta = /a/, "a");
  ne($a, Aa, "a");
  var Ua = Ta.lastIndex !== 0 || Aa.lastIndex !== 0;
  var Va = Ia.BROKEN_CARET;
  var Ya = /()??/.exec("")[1] !== undefined;
  if (Ua || Ya || Va || La || Fa) {
    za = function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l = this;
      var c = Ra(l);
      var u = pn(e);
      var d = c.raw;
      if (d) {
        d.lastIndex = l.lastIndex;
        t = ne(za, d, u);
        l.lastIndex = d.lastIndex;
        return t;
      }
      var h = c.groups;
      var f = Va && l.sticky;
      var p = ne(Da, l);
      var g = l.source;
      var m = 0;
      var v = u;
      if (f) {
        p = qa(p, "y", "");
        if (Ba(p, "g") === -1) {
          p += "g";
        }
        v = Wa(u, l.lastIndex);
        if (l.lastIndex > 0 && (!l.multiline || l.multiline && Ha(u, l.lastIndex - 1) !== "\n")) {
          g = "(?: " + g + ")";
          v = " " + v;
          m++;
        }
        n = new RegExp("^(?:" + g + ")", p);
      }
      if (Ya) {
        n = new RegExp("^" + g + "$(?!\\s)", p);
      }
      if (Ua) {
        i = l.lastIndex;
      }
      r = ne($a, f ? n : l, v);
      if (f) {
        if (r) {
          r.input = Wa(r.input, m);
          r[0] = Wa(r[0], m);
          r.index = l.lastIndex;
          l.lastIndex += r[0].length;
        } else {
          l.lastIndex = 0;
        }
      } else if (Ua && r) {
        l.lastIndex = l.global ? r.index + r[0].length : i;
      }
      if (Ya && r && r.length > 1) {
        ne(ja, r[0], n, function () {
          for (o = 1; o < arguments.length - 2; o++) {
            if (arguments[o] === undefined) {
              r[o] = undefined;
            }
          }
        });
      }
      if (r && h) {
        r.groups = a = Wn(null);
        o = 0;
        r.groups = a = Wn(null);
        o = 0;
        for (; o < h.length; o++) {
          a[(s = h[o])[0]] = r[s[1]];
        }
      }
      return r;
    };
  }
  var Xa = za;
  hn({
    target: "RegExp",
    proto: true,
    forced: /./.exec !== Xa
  }, {
    exec: Xa
  });
  var Ga = B("species");
  var Ka = RegExp.prototype;
  var Qa = function (e, t, n, i) {
    var r = B(e);
    var o = !u(function () {
      var t = {
        [r]: function () {
          return 7;
        }
      };
      return ""[e](t) != 7;
    });
    var a = o && !u(function () {
      var t = false;
      var n = /a/;
      if (e === "split") {
        (n = {}).constructor = {};
        n.constructor[Ga] = function () {
          return n;
        };
        n.flags = "";
        n[r] = /./[r];
      }
      n.exec = function () {
        t = true;
        return null;
      };
      n[r]("");
      return !t;
    });
    if (!o || !a || n) {
      var s = m(/./[r]);
      var l = t(r, ""[e], function (e, t, n, i, r) {
        var a = m(e);
        var l = t.exec;
        if (l === Xa || l === Ka.exec) {
          if (o && !r) {
            return {
              done: true,
              value: s(t, n, i)
            };
          } else {
            return {
              done: true,
              value: a(n, t, i)
            };
          }
        } else {
          return {
            done: false
          };
        }
      });
      We(String.prototype, e, l[0]);
      We(Ka, r, l[1]);
    }
    if (i) {
      we(Ka[r], "sham", true);
    }
  };
  var Za = Mi.charAt;
  var Ja = function (e, t, n) {
    return t + (n ? Za(e, t).length : 1);
  };
  var es = o.TypeError;
  var ts = function (e, t) {
    var n = e.exec;
    if (A(n)) {
      var i = ne(n, e, t);
      if (i !== null) {
        ee(i);
      }
      return i;
    }
    if (Ye(e) === "RegExp") {
      return ne(Xa, e, t);
    }
    throw es("RegExp#exec called on incompatible receiver");
  };
  Qa("match", function (e, t, n) {
    return [function (t) {
      var n = y(this);
      var i = t == null ? undefined : ue(t, e);
      if (i) {
        return ne(i, t, n);
      } else {
        return new RegExp(t)[e](pn(n));
      }
    }, function (e) {
      var i = ee(this);
      var r = pn(e);
      var o = n(t, i, r);
      if (o.done) {
        return o.value;
      }
      if (!i.global) {
        return ts(i, r);
      }
      var a = i.unicode;
      i.lastIndex = 0;
      for (var s, l = [], c = 0; (s = ts(i, r)) !== null;) {
        var u = pn(s[0]);
        l[c] = u;
        if (u === "") {
          i.lastIndex = Ja(r, ft(i.lastIndex), a);
        }
        c++;
      }
      if (c === 0) {
        return null;
      } else {
        return l;
      }
    }];
  });
  var ns = Se.EXISTS;
  var is = ye.f;
  var rs = Function.prototype;
  var os = m(rs.toString);
  var as = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
  var ss = m(as.exec);
  if (U && !ns) {
    is(rs, "name", {
      configurable: true,
      get: function () {
        try {
          return ss(as, os(this))[1];
        } catch (e) {
          return "";
        }
      }
    });
  }
  var ls = Function.prototype;
  var cs = ls.apply;
  var us = ls.call;
  var ds = typeof Reflect == "object" && Reflect.apply || (d ? us.bind(cs) : function () {
    return us.apply(cs, arguments);
  });
  var hs = Math.floor;
  var fs = m("".charAt);
  var ps = m("".replace);
  var gs = m("".slice);
  var ms = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
  var vs = /\$([$&'`]|\d{1,2})/g;
  var ys = function (e, t, n, i, r, o) {
    var a = n + e.length;
    var s = i.length;
    var l = vs;
    if (r !== undefined) {
      r = w(r);
      l = ms;
    }
    return ps(o, l, function (o, l) {
      var c;
      switch (fs(l, 0)) {
        case "$":
          return "$";
        case "&":
          return e;
        case "`":
          return gs(t, 0, n);
        case "'":
          return gs(t, a);
        case "<":
          c = r[gs(l, 1, -1)];
          break;
        default:
          var u = +l;
          if (u === 0) {
            return o;
          }
          if (u > s) {
            var d = hs(u / 10);
            if (d === 0) {
              return o;
            } else if (d <= s) {
              if (i[d - 1] === undefined) {
                return fs(l, 1);
              } else {
                return i[d - 1] + fs(l, 1);
              }
            } else {
              return o;
            }
          }
          c = i[u - 1];
      }
      if (c === undefined) {
        return "";
      } else {
        return c;
      }
    });
  };
  var bs = B("replace");
  var ws = Math.max;
  var xs = Math.min;
  var _s = m([].concat);
  var Cs = m([].push);
  var Ss = m("".indexOf);
  var ks = m("".slice);
  var Ts = "a".replace(/./, "$0") === "$0";
  var As = !!/./[bs] && /./[bs]("a", "$0") === "";
  Qa("replace", function (e, t, n) {
    var i = As ? "$" : "$0";
    return [function (e, n) {
      var i = y(this);
      var r = e == null ? undefined : ue(e, bs);
      if (r) {
        return ne(r, e, i, n);
      } else {
        return ne(t, pn(i), e, n);
      }
    }, function (e, r) {
      var o = ee(this);
      var a = pn(e);
      if (typeof r == "string" && Ss(r, i) === -1 && Ss(r, "$<") === -1) {
        var s = n(t, o, a, r);
        if (s.done) {
          return s.value;
        }
      }
      var l = A(r);
      if (!l) {
        r = pn(r);
      }
      var c = o.global;
      if (c) {
        var u = o.unicode;
        o.lastIndex = 0;
      }
      for (var d = [];;) {
        var h = ts(o, a);
        if (h === null) {
          break;
        }
        Cs(d, h);
        if (!c) {
          break;
        }
        if (pn(h[0]) === "") {
          o.lastIndex = Ja(a, ft(o.lastIndex), u);
        }
      }
      for (var f, p = "", g = 0, m = 0; m < d.length; m++) {
        for (var v = pn((h = d[m])[0]), y = ws(xs(dt(h.index), a.length), 0), b = [], w = 1; w < h.length; w++) {
          Cs(b, (f = h[w]) === undefined ? f : String(f));
        }
        var x = h.groups;
        if (l) {
          var _ = _s([v], b, y, a);
          if (x !== undefined) {
            Cs(_, x);
          }
          var C = pn(ds(r, undefined, _));
        } else {
          C = ys(v, a, y, b, x, r);
        }
        if (y >= g) {
          p += ks(a, g, y) + C;
          g = y + v.length;
        }
      }
      return p + ks(a, g);
    }];
  }, !!u(function () {
    var e = /./;
    e.exec = function () {
      var e = [];
      e.groups = {
        a: "7"
      };
      return e;
    };
    return "".replace(e, "$<a>") !== "7";
  }) || !Ts || As);
  var Ds = function (e) {
    return Array.prototype.reduce.call(e, function (e, t) {
      var n = t.name.match(/data-simplebar-(.+)/);
      if (n) {
        var i = n[1].replace(/\W+(.)/g, function (e, t) {
          return t.toUpperCase();
        });
        switch (t.value) {
          case "true":
            e[i] = true;
            break;
          case "false":
            e[i] = false;
            break;
          case undefined:
            e[i] = true;
            break;
          default:
            e[i] = t.value;
        }
      }
      return e;
    }, {});
  };
  function Es(e) {
    if (e && e.ownerDocument && e.ownerDocument.defaultView) {
      return e.ownerDocument.defaultView;
    } else {
      return window;
    }
  }
  function Os(e) {
    if (e && e.ownerDocument) {
      return e.ownerDocument;
    } else {
      return document;
    }
  }
  var Ms = null;
  var Is = null;
  function Ps(e) {
    if (Ms === null) {
      var t = Os(e);
      if (t === undefined) {
        return Ms = 0;
      }
      var n = t.body;
      var i = t.createElement("div");
      i.classList.add("simplebar-hide-scrollbar");
      n.appendChild(i);
      var r = i.getBoundingClientRect().right;
      n.removeChild(i);
      Ms = r;
    }
    return Ms;
  }
  if (Ft) {
    window.addEventListener("resize", function () {
      if (Is !== window.devicePixelRatio) {
        Is = window.devicePixelRatio;
        Ms = null;
      }
    });
  }
  var Ls = function () {
    function e(t, n) {
      var i = this;
      this.onScroll = function () {
        var e = Es(i.el);
        if (!i.scrollXTicking) {
          e.requestAnimationFrame(i.scrollX);
          i.scrollXTicking = true;
        }
        if (!i.scrollYTicking) {
          e.requestAnimationFrame(i.scrollY);
          i.scrollYTicking = true;
        }
      };
      this.scrollX = function () {
        if (i.axis.x.isOverflowing) {
          i.showScrollbar("x");
          i.positionScrollbar("x");
        }
        i.scrollXTicking = false;
      };
      this.scrollY = function () {
        if (i.axis.y.isOverflowing) {
          i.showScrollbar("y");
          i.positionScrollbar("y");
        }
        i.scrollYTicking = false;
      };
      this.onMouseEnter = function () {
        i.showScrollbar("x");
        i.showScrollbar("y");
      };
      this.onMouseMove = function (e) {
        i.mouseX = e.clientX;
        i.mouseY = e.clientY;
        if (i.axis.x.isOverflowing || i.axis.x.forceVisible) {
          i.onMouseMoveForAxis("x");
        }
        if (i.axis.y.isOverflowing || i.axis.y.forceVisible) {
          i.onMouseMoveForAxis("y");
        }
      };
      this.onMouseLeave = function () {
        i.onMouseMove.cancel();
        if (i.axis.x.isOverflowing || i.axis.x.forceVisible) {
          i.onMouseLeaveForAxis("x");
        }
        if (i.axis.y.isOverflowing || i.axis.y.forceVisible) {
          i.onMouseLeaveForAxis("y");
        }
        i.mouseX = -1;
        i.mouseY = -1;
      };
      this.onWindowResize = function () {
        i.scrollbarWidth = i.getScrollbarWidth();
        i.hideNativeScrollbar();
      };
      this.hideScrollbars = function () {
        i.axis.x.track.rect = i.axis.x.track.el.getBoundingClientRect();
        i.axis.y.track.rect = i.axis.y.track.el.getBoundingClientRect();
        if (!i.isWithinBounds(i.axis.y.track.rect)) {
          i.axis.y.scrollbar.el.classList.remove(i.classNames.visible);
          i.axis.y.isVisible = false;
        }
        if (!i.isWithinBounds(i.axis.x.track.rect)) {
          i.axis.x.scrollbar.el.classList.remove(i.classNames.visible);
          i.axis.x.isVisible = false;
        }
      };
      this.onPointerEvent = function (e) {
        var t;
        var n;
        i.axis.x.track.rect = i.axis.x.track.el.getBoundingClientRect();
        i.axis.y.track.rect = i.axis.y.track.el.getBoundingClientRect();
        if (i.axis.x.isOverflowing || i.axis.x.forceVisible) {
          t = i.isWithinBounds(i.axis.x.track.rect);
        }
        if (i.axis.y.isOverflowing || i.axis.y.forceVisible) {
          n = i.isWithinBounds(i.axis.y.track.rect);
        }
        if (t || n) {
          e.preventDefault();
          e.stopPropagation();
          if (e.type === "mousedown") {
            if (t) {
              i.axis.x.scrollbar.rect = i.axis.x.scrollbar.el.getBoundingClientRect();
              if (i.isWithinBounds(i.axis.x.scrollbar.rect)) {
                i.onDragStart(e, "x");
              } else {
                i.onTrackClick(e, "x");
              }
            }
            if (n) {
              i.axis.y.scrollbar.rect = i.axis.y.scrollbar.el.getBoundingClientRect();
              if (i.isWithinBounds(i.axis.y.scrollbar.rect)) {
                i.onDragStart(e, "y");
              } else {
                i.onTrackClick(e, "y");
              }
            }
          }
        }
      };
      this.drag = function (t) {
        var n = i.axis[i.draggedAxis].track;
        var r = n.rect[i.axis[i.draggedAxis].sizeAttr];
        var o = i.axis[i.draggedAxis].scrollbar;
        var a = i.contentWrapperEl[i.axis[i.draggedAxis].scrollSizeAttr];
        var s = parseInt(i.elStyles[i.axis[i.draggedAxis].sizeAttr], 10);
        t.preventDefault();
        t.stopPropagation();
        var l = ((i.draggedAxis === "y" ? t.pageY : t.pageX) - n.rect[i.axis[i.draggedAxis].offsetAttr] - i.axis[i.draggedAxis].dragOffset) / (r - o.size) * (a - s);
        if (i.draggedAxis === "x") {
          l = i.isRtl && e.getRtlHelpers().isRtlScrollbarInverted ? l - (r + o.size) : l;
          l = i.isRtl && e.getRtlHelpers().isRtlScrollingInverted ? -l : l;
        }
        i.contentWrapperEl[i.axis[i.draggedAxis].scrollOffsetAttr] = l;
      };
      this.onEndDrag = function (e) {
        var t = Os(i.el);
        var n = Es(i.el);
        e.preventDefault();
        e.stopPropagation();
        i.el.classList.remove(i.classNames.dragging);
        t.removeEventListener("mousemove", i.drag, true);
        t.removeEventListener("mouseup", i.onEndDrag, true);
        i.removePreventClickId = n.setTimeout(function () {
          t.removeEventListener("click", i.preventClick, true);
          t.removeEventListener("dblclick", i.preventClick, true);
          i.removePreventClickId = null;
        });
      };
      this.preventClick = function (e) {
        e.preventDefault();
        e.stopPropagation();
      };
      this.el = t;
      this.minScrollbarWidth = 20;
      this.options = Object.assign({}, e.defaultOptions, n);
      this.classNames = Object.assign({}, e.defaultOptions.classNames, this.options.classNames);
      this.axis = {
        x: {
          scrollOffsetAttr: "scrollLeft",
          sizeAttr: "width",
          scrollSizeAttr: "scrollWidth",
          offsetSizeAttr: "offsetWidth",
          offsetAttr: "left",
          overflowAttr: "overflowX",
          dragOffset: 0,
          isOverflowing: true,
          isVisible: false,
          forceVisible: false,
          track: {},
          scrollbar: {}
        },
        y: {
          scrollOffsetAttr: "scrollTop",
          sizeAttr: "height",
          scrollSizeAttr: "scrollHeight",
          offsetSizeAttr: "offsetHeight",
          offsetAttr: "top",
          overflowAttr: "overflowY",
          dragOffset: 0,
          isOverflowing: true,
          isVisible: false,
          forceVisible: false,
          track: {},
          scrollbar: {}
        }
      };
      this.removePreventClickId = null;
      if (!e.instances.has(this.el)) {
        this.recalculate = Xr(this.recalculate.bind(this), 64);
        this.onMouseMove = Xr(this.onMouseMove.bind(this), 64);
        this.hideScrollbars = co(this.hideScrollbars.bind(this), this.options.timeout);
        this.onWindowResize = co(this.onWindowResize.bind(this), 64, {
          leading: true
        });
        e.getRtlHelpers = Fo(e.getRtlHelpers);
        this.init();
      }
    }
    e.getRtlHelpers = function () {
      var t = document.createElement("div");
      t.innerHTML = "<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>";
      var n = t.firstElementChild;
      document.body.appendChild(n);
      var i = n.firstElementChild;
      n.scrollLeft = 0;
      var r = e.getOffset(n);
      var o = e.getOffset(i);
      n.scrollLeft = 999;
      var a = e.getOffset(i);
      return {
        isRtlScrollingInverted: r.left !== o.left && o.left - a.left != 0,
        isRtlScrollbarInverted: r.left !== o.left
      };
    };
    e.getOffset = function (e) {
      var t = e.getBoundingClientRect();
      var n = Os(e);
      var i = Es(e);
      return {
        top: t.top + (i.pageYOffset || n.documentElement.scrollTop),
        left: t.left + (i.pageXOffset || n.documentElement.scrollLeft)
      };
    };
    var t = e.prototype;
    t.init = function () {
      e.instances.set(this.el, this);
      if (Ft) {
        this.initDOM();
        this.setAccessibilityAttributes();
        this.scrollbarWidth = this.getScrollbarWidth();
        this.recalculate();
        this.initListeners();
      }
    };
    t.initDOM = function () {
      var e = this;
      if (Array.prototype.filter.call(this.el.children, function (t) {
        return t.classList.contains(e.classNames.wrapper);
      }).length) {
        this.wrapperEl = this.el.querySelector("." + this.classNames.wrapper);
        this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector("." + this.classNames.contentWrapper);
        this.contentEl = this.options.contentNode || this.el.querySelector("." + this.classNames.contentEl);
        this.offsetEl = this.el.querySelector("." + this.classNames.offset);
        this.maskEl = this.el.querySelector("." + this.classNames.mask);
        this.placeholderEl = this.findChild(this.wrapperEl, "." + this.classNames.placeholder);
        this.heightAutoObserverWrapperEl = this.el.querySelector("." + this.classNames.heightAutoObserverWrapperEl);
        this.heightAutoObserverEl = this.el.querySelector("." + this.classNames.heightAutoObserverEl);
        this.axis.x.track.el = this.findChild(this.el, "." + this.classNames.track + "." + this.classNames.horizontal);
        this.axis.y.track.el = this.findChild(this.el, "." + this.classNames.track + "." + this.classNames.vertical);
      } else {
        this.wrapperEl = document.createElement("div");
        this.contentWrapperEl = document.createElement("div");
        this.offsetEl = document.createElement("div");
        this.maskEl = document.createElement("div");
        this.contentEl = document.createElement("div");
        this.placeholderEl = document.createElement("div");
        this.heightAutoObserverWrapperEl = document.createElement("div");
        this.heightAutoObserverEl = document.createElement("div");
        this.wrapperEl.classList.add(this.classNames.wrapper);
        this.contentWrapperEl.classList.add(this.classNames.contentWrapper);
        this.offsetEl.classList.add(this.classNames.offset);
        this.maskEl.classList.add(this.classNames.mask);
        this.contentEl.classList.add(this.classNames.contentEl);
        this.placeholderEl.classList.add(this.classNames.placeholder);
        this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl);
        this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);
        for (; this.el.firstChild;) {
          this.contentEl.appendChild(this.el.firstChild);
        }
        this.contentWrapperEl.appendChild(this.contentEl);
        this.offsetEl.appendChild(this.contentWrapperEl);
        this.maskEl.appendChild(this.offsetEl);
        this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);
        this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);
        this.wrapperEl.appendChild(this.maskEl);
        this.wrapperEl.appendChild(this.placeholderEl);
        this.el.appendChild(this.wrapperEl);
      }
      if (!this.axis.x.track.el || !this.axis.y.track.el) {
        var t = document.createElement("div");
        var n = document.createElement("div");
        t.classList.add(this.classNames.track);
        n.classList.add(this.classNames.scrollbar);
        t.appendChild(n);
        this.axis.x.track.el = t.cloneNode(true);
        this.axis.x.track.el.classList.add(this.classNames.horizontal);
        this.axis.y.track.el = t.cloneNode(true);
        this.axis.y.track.el.classList.add(this.classNames.vertical);
        this.el.appendChild(this.axis.x.track.el);
        this.el.appendChild(this.axis.y.track.el);
      }
      this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector("." + this.classNames.scrollbar);
      this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector("." + this.classNames.scrollbar);
      if (!this.options.autoHide) {
        this.axis.x.scrollbar.el.classList.add(this.classNames.visible);
        this.axis.y.scrollbar.el.classList.add(this.classNames.visible);
      }
      this.el.setAttribute("data-simplebar", "init");
    };
    t.setAccessibilityAttributes = function () {
      var e = this.options.ariaLabel || "scrollable content";
      this.contentWrapperEl.setAttribute("tabindex", "0");
      this.contentWrapperEl.setAttribute("role", "region");
      this.contentWrapperEl.setAttribute("aria-label", e);
    };
    t.initListeners = function () {
      var e = this;
      var t = Es(this.el);
      if (this.options.autoHide) {
        this.el.addEventListener("mouseenter", this.onMouseEnter);
      }
      ["mousedown", "click", "dblclick"].forEach(function (t) {
        e.el.addEventListener(t, e.onPointerEvent, true);
      });
      ["touchstart", "touchend", "touchmove"].forEach(function (t) {
        e.el.addEventListener(t, e.onPointerEvent, {
          capture: true,
          passive: true
        });
      });
      this.el.addEventListener("mousemove", this.onMouseMove);
      this.el.addEventListener("mouseleave", this.onMouseLeave);
      this.contentWrapperEl.addEventListener("scroll", this.onScroll);
      t.addEventListener("resize", this.onWindowResize);
      var n = false;
      var i = null;
      var r = t.ResizeObserver || ba;
      this.resizeObserver = new r(function () {
        if (n && i === null) {
          i = t.requestAnimationFrame(function () {
            e.recalculate();
            i = null;
          });
        }
      });
      this.resizeObserver.observe(this.el);
      this.resizeObserver.observe(this.contentEl);
      t.requestAnimationFrame(function () {
        n = true;
      });
      this.mutationObserver = new t.MutationObserver(this.recalculate);
      this.mutationObserver.observe(this.contentEl, {
        childList: true,
        subtree: true,
        characterData: true
      });
    };
    t.recalculate = function () {
      var e = Es(this.el);
      this.elStyles = e.getComputedStyle(this.el);
      this.isRtl = this.elStyles.direction === "rtl";
      var t = this.heightAutoObserverEl.offsetHeight <= 1;
      var n = this.heightAutoObserverEl.offsetWidth <= 1;
      var i = this.contentEl.offsetWidth;
      var r = this.contentWrapperEl.offsetWidth;
      var o = this.elStyles.overflowX;
      var a = this.elStyles.overflowY;
      this.contentEl.style.padding = this.elStyles.paddingTop + " " + this.elStyles.paddingRight + " " + this.elStyles.paddingBottom + " " + this.elStyles.paddingLeft;
      this.wrapperEl.style.margin = "-" + this.elStyles.paddingTop + " -" + this.elStyles.paddingRight + " -" + this.elStyles.paddingBottom + " -" + this.elStyles.paddingLeft;
      var s = this.contentEl.scrollHeight;
      var l = this.contentEl.scrollWidth;
      this.contentWrapperEl.style.height = t ? "auto" : "100%";
      this.placeholderEl.style.width = n ? i + "px" : "auto";
      this.placeholderEl.style.height = s + "px";
      var c = this.contentWrapperEl.offsetHeight;
      this.axis.x.isOverflowing = l > i;
      this.axis.y.isOverflowing = s > c;
      this.axis.x.isOverflowing = o !== "hidden" && this.axis.x.isOverflowing;
      this.axis.y.isOverflowing = a !== "hidden" && this.axis.y.isOverflowing;
      this.axis.x.forceVisible = this.options.forceVisible === "x" || this.options.forceVisible === true;
      this.axis.y.forceVisible = this.options.forceVisible === "y" || this.options.forceVisible === true;
      this.hideNativeScrollbar();
      var u = this.axis.x.isOverflowing ? this.scrollbarWidth : 0;
      var d = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;
      this.axis.x.isOverflowing = this.axis.x.isOverflowing && l > r - d;
      this.axis.y.isOverflowing = this.axis.y.isOverflowing && s > c - u;
      this.axis.x.scrollbar.size = this.getScrollbarSize("x");
      this.axis.y.scrollbar.size = this.getScrollbarSize("y");
      this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + "px";
      this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + "px";
      this.positionScrollbar("x");
      this.positionScrollbar("y");
      this.toggleTrackVisibility("x");
      this.toggleTrackVisibility("y");
    };
    t.getScrollbarSize = function (e) {
      if (e === undefined) {
        e = "y";
      }
      if (!this.axis[e].isOverflowing) {
        return 0;
      }
      var t;
      var n = this.contentEl[this.axis[e].scrollSizeAttr];
      var i = this.axis[e].track.el[this.axis[e].offsetSizeAttr];
      var r = i / n;
      t = Math.max(~~(r * i), this.options.scrollbarMinSize);
      if (this.options.scrollbarMaxSize) {
        t = Math.min(t, this.options.scrollbarMaxSize);
      }
      return t;
    };
    t.positionScrollbar = function (t) {
      if (t === undefined) {
        t = "y";
      }
      if (this.axis[t].isOverflowing) {
        var n = this.contentWrapperEl[this.axis[t].scrollSizeAttr];
        var i = this.axis[t].track.el[this.axis[t].offsetSizeAttr];
        var r = parseInt(this.elStyles[this.axis[t].sizeAttr], 10);
        var o = this.axis[t].scrollbar;
        var a = this.contentWrapperEl[this.axis[t].scrollOffsetAttr];
        var s = (a = t === "x" && this.isRtl && e.getRtlHelpers().isRtlScrollingInverted ? -a : a) / (n - r);
        var l = ~~((i - o.size) * s);
        l = t === "x" && this.isRtl && e.getRtlHelpers().isRtlScrollbarInverted ? l + (i - o.size) : l;
        o.el.style.transform = t === "x" ? "translate3d(" + l + "px, 0, 0)" : "translate3d(0, " + l + "px, 0)";
      }
    };
    t.toggleTrackVisibility = function (e) {
      if (e === undefined) {
        e = "y";
      }
      var t = this.axis[e].track.el;
      var n = this.axis[e].scrollbar.el;
      if (this.axis[e].isOverflowing || this.axis[e].forceVisible) {
        t.style.visibility = "visible";
        this.contentWrapperEl.style[this.axis[e].overflowAttr] = "scroll";
      } else {
        t.style.visibility = "hidden";
        this.contentWrapperEl.style[this.axis[e].overflowAttr] = "hidden";
      }
      if (this.axis[e].isOverflowing) {
        n.style.display = "block";
      } else {
        n.style.display = "none";
      }
    };
    t.hideNativeScrollbar = function () {
      this.offsetEl.style[this.isRtl ? "left" : "right"] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? "-" + this.scrollbarWidth + "px" : 0;
      this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? "-" + this.scrollbarWidth + "px" : 0;
    };
    t.onMouseMoveForAxis = function (e) {
      if (e === undefined) {
        e = "y";
      }
      this.axis[e].track.rect = this.axis[e].track.el.getBoundingClientRect();
      this.axis[e].scrollbar.rect = this.axis[e].scrollbar.el.getBoundingClientRect();
      if (this.isWithinBounds(this.axis[e].scrollbar.rect)) {
        this.axis[e].scrollbar.el.classList.add(this.classNames.hover);
      } else {
        this.axis[e].scrollbar.el.classList.remove(this.classNames.hover);
      }
      if (this.isWithinBounds(this.axis[e].track.rect)) {
        this.showScrollbar(e);
        this.axis[e].track.el.classList.add(this.classNames.hover);
      } else {
        this.axis[e].track.el.classList.remove(this.classNames.hover);
      }
    };
    t.onMouseLeaveForAxis = function (e) {
      if (e === undefined) {
        e = "y";
      }
      this.axis[e].track.el.classList.remove(this.classNames.hover);
      this.axis[e].scrollbar.el.classList.remove(this.classNames.hover);
    };
    t.showScrollbar = function (e) {
      if (e === undefined) {
        e = "y";
      }
      var t = this.axis[e].scrollbar.el;
      if (!this.axis[e].isVisible) {
        t.classList.add(this.classNames.visible);
        this.axis[e].isVisible = true;
      }
      if (this.options.autoHide) {
        this.hideScrollbars();
      }
    };
    t.onDragStart = function (e, t) {
      if (t === undefined) {
        t = "y";
      }
      var n = Os(this.el);
      var i = Es(this.el);
      var r = this.axis[t].scrollbar;
      var o = t === "y" ? e.pageY : e.pageX;
      this.axis[t].dragOffset = o - r.rect[this.axis[t].offsetAttr];
      this.draggedAxis = t;
      this.el.classList.add(this.classNames.dragging);
      n.addEventListener("mousemove", this.drag, true);
      n.addEventListener("mouseup", this.onEndDrag, true);
      if (this.removePreventClickId === null) {
        n.addEventListener("click", this.preventClick, true);
        n.addEventListener("dblclick", this.preventClick, true);
      } else {
        i.clearTimeout(this.removePreventClickId);
        this.removePreventClickId = null;
      }
    };
    t.onTrackClick = function (e, t) {
      var n = this;
      if (t === undefined) {
        t = "y";
      }
      if (this.options.clickOnTrack) {
        var i = Es(this.el);
        this.axis[t].scrollbar.rect = this.axis[t].scrollbar.el.getBoundingClientRect();
        var r = this.axis[t].scrollbar.rect[this.axis[t].offsetAttr];
        var o = parseInt(this.elStyles[this.axis[t].sizeAttr], 10);
        var a = this.contentWrapperEl[this.axis[t].scrollOffsetAttr];
        var s = (t === "y" ? this.mouseY - r : this.mouseX - r) < 0 ? -1 : 1;
        var l = s === -1 ? a - o : a + o;
        !function e() {
          var r;
          var o;
          if (s === -1) {
            if (a > l) {
              a -= n.options.clickOnTrackSpeed;
              n.contentWrapperEl.scrollTo(((r = {})[n.axis[t].offsetAttr] = a, r));
              i.requestAnimationFrame(e);
            }
          } else if (a < l) {
            a += n.options.clickOnTrackSpeed;
            n.contentWrapperEl.scrollTo(((o = {})[n.axis[t].offsetAttr] = a, o));
            i.requestAnimationFrame(e);
          }
        }();
      }
    };
    t.getContentElement = function () {
      return this.contentEl;
    };
    t.getScrollElement = function () {
      return this.contentWrapperEl;
    };
    t.getScrollbarWidth = function () {
      try {
        if (getComputedStyle(this.contentWrapperEl, "::-webkit-scrollbar").display === "none" || "scrollbarWidth" in document.documentElement.style || "-ms-overflow-style" in document.documentElement.style) {
          return 0;
        } else {
          return Ps(this.el);
        }
      } catch (e) {
        return Ps(this.el);
      }
    };
    t.removeListeners = function () {
      var e = this;
      var t = Es(this.el);
      if (this.options.autoHide) {
        this.el.removeEventListener("mouseenter", this.onMouseEnter);
      }
      ["mousedown", "click", "dblclick"].forEach(function (t) {
        e.el.removeEventListener(t, e.onPointerEvent, true);
      });
      ["touchstart", "touchend", "touchmove"].forEach(function (t) {
        e.el.removeEventListener(t, e.onPointerEvent, {
          capture: true,
          passive: true
        });
      });
      this.el.removeEventListener("mousemove", this.onMouseMove);
      this.el.removeEventListener("mouseleave", this.onMouseLeave);
      if (this.contentWrapperEl) {
        this.contentWrapperEl.removeEventListener("scroll", this.onScroll);
      }
      t.removeEventListener("resize", this.onWindowResize);
      if (this.mutationObserver) {
        this.mutationObserver.disconnect();
      }
      if (this.resizeObserver) {
        this.resizeObserver.disconnect();
      }
      this.recalculate.cancel();
      this.onMouseMove.cancel();
      this.hideScrollbars.cancel();
      this.onWindowResize.cancel();
    };
    t.unMount = function () {
      this.removeListeners();
      e.instances.delete(this.el);
    };
    t.isWithinBounds = function (e) {
      return this.mouseX >= e.left && this.mouseX <= e.left + e.width && this.mouseY >= e.top && this.mouseY <= e.top + e.height;
    };
    t.findChild = function (e, t) {
      var n = e.matches || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector;
      return Array.prototype.filter.call(e.children, function (e) {
        return n.call(e, t);
      })[0];
    };
    return e;
  }();
  Ls.defaultOptions = {
    autoHide: true,
    forceVisible: false,
    clickOnTrack: true,
    clickOnTrackSpeed: 40,
    classNames: {
      contentEl: "simplebar-content",
      contentWrapper: "simplebar-content-wrapper",
      offset: "simplebar-offset",
      mask: "simplebar-mask",
      wrapper: "simplebar-wrapper",
      placeholder: "simplebar-placeholder",
      scrollbar: "simplebar-scrollbar",
      track: "simplebar-track",
      heightAutoObserverWrapperEl: "simplebar-height-auto-observer-wrapper",
      heightAutoObserverEl: "simplebar-height-auto-observer",
      visible: "simplebar-visible",
      horizontal: "simplebar-horizontal",
      vertical: "simplebar-vertical",
      hover: "simplebar-hover",
      dragging: "simplebar-dragging"
    },
    scrollbarMinSize: 25,
    scrollbarMaxSize: 0,
    timeout: 1000
  };
  Ls.instances = new WeakMap();
  Ls.initDOMLoadedElements = function () {
    document.removeEventListener("DOMContentLoaded", this.initDOMLoadedElements);
    window.removeEventListener("load", this.initDOMLoadedElements);
    Array.prototype.forEach.call(document.querySelectorAll("[data-simplebar]"), function (e) {
      if (!(e.getAttribute("data-simplebar") === "init" || Ls.instances.has(e))) {
        new Ls(e, Ds(e.attributes));
      }
    });
  };
  Ls.removeObserver = function () {
    this.globalObserver.disconnect();
  };
  Ls.initHtmlApi = function () {
    this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this);
    if (typeof MutationObserver != "undefined") {
      this.globalObserver = new MutationObserver(Ls.handleMutations);
      this.globalObserver.observe(document, {
        childList: true,
        subtree: true
      });
    }
    if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {
      window.setTimeout(this.initDOMLoadedElements);
    } else {
      document.addEventListener("DOMContentLoaded", this.initDOMLoadedElements);
      window.addEventListener("load", this.initDOMLoadedElements);
    }
  };
  Ls.handleMutations = function (e) {
    e.forEach(function (e) {
      Array.prototype.forEach.call(e.addedNodes, function (e) {
        if (e.nodeType === 1) {
          if (e.hasAttribute("data-simplebar")) {
            if (!Ls.instances.has(e) && document.documentElement.contains(e)) {
              new Ls(e, Ds(e.attributes));
            }
          } else {
            Array.prototype.forEach.call(e.querySelectorAll("[data-simplebar]"), function (e) {
              if (e.getAttribute("data-simplebar") !== "init" && !Ls.instances.has(e) && document.documentElement.contains(e)) {
                new Ls(e, Ds(e.attributes));
              }
            });
          }
        }
      });
      Array.prototype.forEach.call(e.removedNodes, function (e) {
        if (e.nodeType === 1) {
          if (e.getAttribute("data-simplebar") === "init") {
            if (Ls.instances.has(e) && !document.documentElement.contains(e)) {
              Ls.instances.get(e).unMount();
            }
          } else {
            Array.prototype.forEach.call(e.querySelectorAll("[data-simplebar=\"init\"]"), function (e) {
              if (Ls.instances.has(e) && !document.documentElement.contains(e)) {
                Ls.instances.get(e).unMount();
              }
            });
          }
        }
      });
    });
  };
  Ls.getOptions = Ds;
  if (Ft) {
    Ls.initHtmlApi();
  }
  return Ls;
});
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery"], e);
  } else if (typeof module == "object" && module.exports) {
    module.exports = function (t, n) {
      if (n === undefined) {
        n = typeof window != "undefined" ? require("jquery") : require("jquery")(t);
      }
      e(n);
      return n;
    };
  } else {
    e(jQuery);
  }
})(function (e) {
  var t = function () {
    if (e && e.fn && e.fn.select2 && e.fn.select2.amd) {
      var t = e.fn.select2.amd;
    }
    var n;
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d;
    var h;
    var f;
    var p;
    var g;
    var m;
    var v;
    function y(e, t) {
      return p.call(e, t);
    }
    function b(e, t) {
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var f;
      var p = t && t.split("/");
      var g = h.map;
      var v = g && g["*"] || {};
      if (e) {
        a = (e = e.split("/")).length - 1;
        if (h.nodeIdCompat && m.test(e[a])) {
          e[a] = e[a].replace(m, "");
        }
        if (e[0].charAt(0) === "." && p) {
          e = p.slice(0, p.length - 1).concat(e);
        }
        u = 0;
        for (; u < e.length; u++) {
          if ((f = e[u]) === ".") {
            e.splice(u, 1);
            --u;
          } else if (f === "..") {
            if (u === 0 || u === 1 && e[2] === ".." || e[u - 1] === "..") {
              continue;
            }
            if (u > 0) {
              e.splice(u - 1, 2);
              u -= 2;
            }
          }
        }
        e = e.join("/");
      }
      if ((p || v) && g) {
        for (u = (n = e.split("/")).length; u > 0; --u) {
          i = n.slice(0, u).join("/");
          if (p) {
            for (d = p.length; d > 0; --d) {
              if (r = (r = g[p.slice(0, d).join("/")]) && r[i]) {
                o = r;
                s = u;
                break;
              }
            }
          }
          if (o) {
            break;
          }
          if (!l && v && v[i]) {
            l = v[i];
            c = u;
          }
        }
        if (!o && l) {
          o = l;
          s = c;
        }
        if (o) {
          n.splice(0, s, o);
          e = n.join("/");
        }
      }
      return e;
    }
    function w(e, t) {
      return function () {
        var n = g.call(arguments, 0);
        if (typeof n[0] != "string" && n.length === 1) {
          n.push(null);
        }
        return s.apply(o, n.concat([e, t]));
      };
    }
    function x(e) {
      return function (t) {
        u[e] = t;
      };
    }
    function _(e) {
      if (y(d, e)) {
        var t = d[e];
        delete d[e];
        f[e] = true;
        a.apply(o, t);
      }
      if (!y(u, e) && !y(f, e)) {
        throw new Error("No " + e);
      }
      return u[e];
    }
    function C(e) {
      var t;
      var n = e ? e.indexOf("!") : -1;
      if (n > -1) {
        t = e.substring(0, n);
        e = e.substring(n + 1, e.length);
      }
      return [t, e];
    }
    function S(e) {
      if (e) {
        return C(e);
      } else {
        return [];
      }
    }
    if (!(t && t.requirejs)) {
      if (t) {
        i = t;
      } else {
        t = {};
      }
      u = {};
      d = {};
      h = {};
      f = {};
      p = Object.prototype.hasOwnProperty;
      g = [].slice;
      m = /\.js$/;
      l = function (e, t) {
        var n;
        var i;
        var r = C(e);
        var o = r[0];
        var a = t[1];
        e = r[1];
        if (o) {
          n = _(o = b(o, a));
        }
        if (o) {
          e = n && n.normalize ? n.normalize(e, (i = a, function (e) {
            return b(e, i);
          })) : b(e, a);
        } else {
          o = (r = C(e = b(e, a)))[0];
          e = r[1];
          if (o) {
            n = _(o);
          }
        }
        return {
          f: o ? o + "!" + e : e,
          n: e,
          pr: o,
          p: n
        };
      };
      c = {
        require: function (e) {
          return w(e);
        },
        exports: function (e) {
          var t = u[e];
          if (t !== undefined) {
            return t;
          } else {
            return u[e] = {};
          }
        },
        module: function (e) {
          return {
            id: e,
            uri: "",
            exports: u[e],
            config: (t = e, function () {
              return h && h.config && h.config[t] || {};
            })
          };
          var t;
        }
      };
      a = function (e, t, n, i) {
        var r;
        var a;
        var s;
        var h;
        var p;
        var g;
        var m;
        var v = [];
        var b = typeof n;
        g = S(i = i || e);
        if (b == "undefined" || b == "function") {
          t = !t.length && n.length ? ["require", "exports", "module"] : t;
          p = 0;
          for (; p < t.length; p += 1) {
            if ((a = (h = l(t[p], g)).f) === "require") {
              v[p] = c.require(e);
            } else if (a === "exports") {
              v[p] = c.exports(e);
              m = true;
            } else if (a === "module") {
              r = v[p] = c.module(e);
            } else if (y(u, a) || y(d, a) || y(f, a)) {
              v[p] = _(a);
            } else {
              if (!h.p) {
                throw new Error(e + " missing " + a);
              }
              h.p.load(h.n, w(i, true), x(a), {});
              v[p] = u[a];
            }
          }
          s = n ? n.apply(u[e], v) : undefined;
          if (e) {
            if (r && r.exports !== o && r.exports !== u[e]) {
              u[e] = r.exports;
            } else if (!(s === o && m)) {
              u[e] = s;
            }
          }
        } else if (e) {
          u[e] = n;
        }
      };
      n = i = s = function (e, t, n, i, r) {
        if (typeof e == "string") {
          if (c[e]) {
            return c[e](t);
          } else {
            return _(l(e, S(t)).f);
          }
        }
        if (!e.splice) {
          if ((h = e).deps) {
            s(h.deps, h.callback);
          }
          if (!t) {
            return;
          }
          if (t.splice) {
            e = t;
            t = n;
            n = null;
          } else {
            e = o;
          }
        }
        t = t || function () {};
        if (typeof n == "function") {
          n = i;
          i = r;
        }
        if (i) {
          a(o, e, t, n);
        } else {
          setTimeout(function () {
            a(o, e, t, n);
          }, 4);
        }
        return s;
      };
      s.config = function (e) {
        return s(e);
      };
      n._defined = u;
      (r = function (e, t, n) {
        if (typeof e != "string") {
          throw new Error("See almond README: incorrect module build, no module name");
        }
        if (!t.splice) {
          n = t;
          t = [];
        }
        if (!(y(u, e) || y(d, e))) {
          d[e] = [e, t, n];
        }
      }).amd = {
        jQuery: true
      };
      t.requirejs = n;
      t.require = i;
      t.define = r;
    }
    t.define("almond", function () {});
    t.define("jquery", [], function () {
      var t = e || $;
      if (t == null && console && console.error) {
        console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page.");
      }
      return t;
    });
    t.define("select2/utils", ["jquery"], function (e) {
      var t = {};
      function n(e) {
        var t = e.prototype;
        var n = [];
        for (var i in t) {
          if (typeof t[i] == "function" && i !== "constructor") {
            n.push(i);
          }
        }
        return n;
      }
      function i() {
        this.listeners = {};
      }
      t.Extend = function (e, t) {
        var n = {}.hasOwnProperty;
        function i() {
          this.constructor = e;
        }
        for (var r in t) {
          if (n.call(t, r)) {
            e[r] = t[r];
          }
        }
        i.prototype = t.prototype;
        e.prototype = new i();
        e.__super__ = t.prototype;
        return e;
      };
      t.Decorate = function (e, t) {
        var i = n(t);
        var r = n(e);
        function o() {
          var n = Array.prototype.unshift;
          var i = t.prototype.constructor.length;
          var r = e.prototype.constructor;
          if (i > 0) {
            n.call(arguments, e.prototype.constructor);
            r = t.prototype.constructor;
          }
          r.apply(this, arguments);
        }
        t.displayName = e.displayName;
        o.prototype = new function () {
          this.constructor = o;
        }();
        for (var a = 0; a < r.length; a++) {
          var s = r[a];
          o.prototype[s] = e.prototype[s];
        }
        function l(e) {
          var n = function () {};
          if (e in o.prototype) {
            n = o.prototype[e];
          }
          var i = t.prototype[e];
          return function () {
            Array.prototype.unshift.call(arguments, n);
            return i.apply(this, arguments);
          };
        }
        for (var c = 0; c < i.length; c++) {
          var u = i[c];
          o.prototype[u] = l(u);
        }
        return o;
      };
      i.prototype.on = function (e, t) {
        this.listeners = this.listeners || {};
        if (e in this.listeners) {
          this.listeners[e].push(t);
        } else {
          this.listeners[e] = [t];
        }
      };
      i.prototype.trigger = function (e) {
        var t = Array.prototype.slice;
        var n = t.call(arguments, 1);
        this.listeners = this.listeners || {};
        if (n == null) {
          n = [];
        }
        if (n.length === 0) {
          n.push({});
        }
        if ((n[0]._type = e) in this.listeners) {
          this.invoke(this.listeners[e], t.call(arguments, 1));
        }
        if ("*" in this.listeners) {
          this.invoke(this.listeners["*"], arguments);
        }
      };
      i.prototype.invoke = function (e, t) {
        for (var n = 0, i = e.length; n < i; n++) {
          e[n].apply(this, t);
        }
      };
      t.Observable = i;
      t.generateChars = function (e) {
        for (var t = "", n = 0; n < e; n++) {
          t += Math.floor(Math.random() * 36).toString(36);
        }
        return t;
      };
      t.bind = function (e, t) {
        return function () {
          e.apply(t, arguments);
        };
      };
      t._convertData = function (e) {
        for (var t in e) {
          var n = t.split("-");
          var i = e;
          if (n.length !== 1) {
            for (var r = 0; r < n.length; r++) {
              var o = n[r];
              if (!((o = o.substring(0, 1).toLowerCase() + o.substring(1)) in i)) {
                i[o] = {};
              }
              if (r == n.length - 1) {
                i[o] = e[t];
              }
              i = i[o];
            }
            delete e[t];
          }
        }
        return e;
      };
      t.hasScroll = function (t, n) {
        var i = e(n);
        var r = n.style.overflowX;
        var o = n.style.overflowY;
        return (r !== o || o !== "hidden" && o !== "visible") && (r === "scroll" || o === "scroll" || i.innerHeight() < n.scrollHeight || i.innerWidth() < n.scrollWidth);
      };
      t.escapeMarkup = function (e) {
        var t = {
          "\\": "&#92;",
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          "\"": "&quot;",
          "'": "&#39;",
          "/": "&#47;"
        };
        if (typeof e != "string") {
          return e;
        } else {
          return String(e).replace(/[&<>"'\/\\]/g, function (e) {
            return t[e];
          });
        }
      };
      t.appendMany = function (t, n) {
        if (e.fn.jquery.substr(0, 3) === "1.7") {
          var i = e();
          e.map(n, function (e) {
            i = i.add(e);
          });
          n = i;
        }
        t.append(n);
      };
      t.__cache = {};
      var r = 0;
      t.GetUniqueElementId = function (e) {
        var t = e.getAttribute("data-select2-id");
        if (t == null) {
          if (e.id) {
            t = e.id;
            e.setAttribute("data-select2-id", t);
          } else {
            e.setAttribute("data-select2-id", ++r);
            t = r.toString();
          }
        }
        return t;
      };
      t.StoreData = function (e, n, i) {
        var r = t.GetUniqueElementId(e);
        if (!t.__cache[r]) {
          t.__cache[r] = {};
        }
        t.__cache[r][n] = i;
      };
      t.GetData = function (n, i) {
        var r = t.GetUniqueElementId(n);
        if (i) {
          if (t.__cache[r] && t.__cache[r][i] != null) {
            return t.__cache[r][i];
          } else {
            return e(n).data(i);
          }
        } else {
          return t.__cache[r];
        }
      };
      t.RemoveData = function (e) {
        var n = t.GetUniqueElementId(e);
        if (t.__cache[n] != null) {
          delete t.__cache[n];
        }
        e.removeAttribute("data-select2-id");
      };
      return t;
    });
    t.define("select2/results", ["jquery", "./utils"], function (e, t) {
      function n(e, t, i) {
        this.$element = e;
        this.data = i;
        this.options = t;
        n.__super__.constructor.call(this);
      }
      t.Extend(n, t.Observable);
      n.prototype.render = function () {
        var t = e("<ul class=\"select2-results__options\" role=\"listbox\"></ul>");
        if (this.options.get("multiple")) {
          t.attr("aria-multiselectable", "true");
        }
        return this.$results = t;
      };
      n.prototype.clear = function () {
        this.$results.empty();
      };
      n.prototype.displayMessage = function (t) {
        var n = this.options.get("escapeMarkup");
        this.clear();
        this.hideLoading();
        var i = e("<li role=\"alert\" aria-live=\"assertive\" class=\"select2-results__option\"></li>");
        var r = this.options.get("translations").get(t.message);
        i.append(n(r(t.args)));
        i[0].className += " select2-results__message";
        this.$results.append(i);
      };
      n.prototype.hideMessages = function () {
        this.$results.find(".select2-results__message").remove();
      };
      n.prototype.append = function (e) {
        this.hideLoading();
        var t = [];
        if (e.results != null && e.results.length !== 0) {
          e.results = this.sort(e.results);
          for (var n = 0; n < e.results.length; n++) {
            var i = e.results[n];
            var r = this.option(i);
            t.push(r);
          }
          this.$results.append(t);
        } else if (this.$results.children().length === 0) {
          this.trigger("results:message", {
            message: "noResults"
          });
        }
      };
      n.prototype.position = function (e, t) {
        t.find(".select2-results").append(e);
      };
      n.prototype.sort = function (e) {
        return this.options.get("sorter")(e);
      };
      n.prototype.highlightFirstItem = function () {
        var e = this.$results.find(".select2-results__option[aria-selected]");
        var t = e.filter("[aria-selected=true]");
        if (t.length > 0) {
          t.first().trigger("mouseenter");
        } else {
          e.first().trigger("mouseenter");
        }
        this.ensureHighlightVisible();
      };
      n.prototype.setClasses = function () {
        var n = this;
        this.data.current(function (i) {
          var r = e.map(i, function (e) {
            return e.id.toString();
          });
          n.$results.find(".select2-results__option[aria-selected]").each(function () {
            var n = e(this);
            var i = t.GetData(this, "data");
            var o = "" + i.id;
            if (i.element != null && i.element.selected || i.element == null && e.inArray(o, r) > -1) {
              n.attr("aria-selected", "true");
            } else {
              n.attr("aria-selected", "false");
            }
          });
        });
      };
      n.prototype.showLoading = function (e) {
        this.hideLoading();
        var t = {
          disabled: true,
          loading: true,
          text: this.options.get("translations").get("searching")(e)
        };
        var n = this.option(t);
        n.className += " loading-results";
        this.$results.prepend(n);
      };
      n.prototype.hideLoading = function () {
        this.$results.find(".loading-results").remove();
      };
      n.prototype.option = function (n) {
        var i = document.createElement("li");
        i.className = "select2-results__option";
        var r = {
          role: "option",
          "aria-selected": "false"
        };
        var o = window.Element.prototype.matches || window.Element.prototype.msMatchesSelector || window.Element.prototype.webkitMatchesSelector;
        if (n.element != null && o.call(n.element, ":disabled") || n.element == null && n.disabled) {
          delete r["aria-selected"];
          r["aria-disabled"] = "true";
        }
        if (n.id == null) {
          delete r["aria-selected"];
        }
        if (n._resultId != null) {
          i.id = n._resultId;
        }
        if (n.title) {
          i.title = n.title;
        }
        if (n.children) {
          r.role = "group";
          r["aria-label"] = n.text;
          delete r["aria-selected"];
        }
        for (var a in r) {
          var s = r[a];
          i.setAttribute(a, s);
        }
        if (n.children) {
          var l = e(i);
          var c = document.createElement("strong");
          c.className = "select2-results__group";
          e(c);
          this.template(n, c);
          for (var u = [], d = 0; d < n.children.length; d++) {
            var h = n.children[d];
            var f = this.option(h);
            u.push(f);
          }
          var p = e("<ul></ul>", {
            class: "select2-results__options select2-results__options--nested"
          });
          p.append(u);
          l.append(c);
          l.append(p);
        } else {
          this.template(n, i);
        }
        t.StoreData(i, "data", n);
        return i;
      };
      n.prototype.bind = function (n, i) {
        var r = this;
        var o = n.id + "-results";
        this.$results.attr("id", o);
        n.on("results:all", function (e) {
          r.clear();
          r.append(e.data);
          if (n.isOpen()) {
            r.setClasses();
            r.highlightFirstItem();
          }
        });
        n.on("results:append", function (e) {
          r.append(e.data);
          if (n.isOpen()) {
            r.setClasses();
          }
        });
        n.on("query", function (e) {
          r.hideMessages();
          r.showLoading(e);
        });
        n.on("select", function () {
          if (n.isOpen()) {
            r.setClasses();
            if (r.options.get("scrollAfterSelect")) {
              r.highlightFirstItem();
            }
          }
        });
        n.on("unselect", function () {
          if (n.isOpen()) {
            r.setClasses();
            if (r.options.get("scrollAfterSelect")) {
              r.highlightFirstItem();
            }
          }
        });
        n.on("open", function () {
          r.$results.attr("aria-expanded", "true");
          r.$results.attr("aria-hidden", "false");
          r.setClasses();
          r.ensureHighlightVisible();
        });
        n.on("close", function () {
          r.$results.attr("aria-expanded", "false");
          r.$results.attr("aria-hidden", "true");
          r.$results.removeAttr("aria-activedescendant");
        });
        n.on("results:toggle", function () {
          var e = r.getHighlightedResults();
          if (e.length !== 0) {
            e.trigger("mouseup");
          }
        });
        n.on("results:select", function () {
          var e = r.getHighlightedResults();
          if (e.length !== 0) {
            var n = t.GetData(e[0], "data");
            if (e.attr("aria-selected") == "true") {
              r.trigger("close", {});
            } else {
              r.trigger("select", {
                data: n
              });
            }
          }
        });
        n.on("results:previous", function () {
          var e = r.getHighlightedResults();
          var t = r.$results.find("[aria-selected]");
          var n = t.index(e);
          if (!(n <= 0)) {
            var i = n - 1;
            if (e.length === 0) {
              i = 0;
            }
            var o = t.eq(i);
            o.trigger("mouseenter");
            var a = r.$results.offset().top;
            var s = o.offset().top;
            var l = r.$results.scrollTop() + (s - a);
            if (i === 0) {
              r.$results.scrollTop(0);
            } else if (s - a < 0) {
              r.$results.scrollTop(l);
            }
          }
        });
        n.on("results:next", function () {
          var e = r.getHighlightedResults();
          var t = r.$results.find("[aria-selected]");
          var n = t.index(e) + 1;
          if (!(n >= t.length)) {
            var i = t.eq(n);
            i.trigger("mouseenter");
            var o = r.$results.offset().top + r.$results.outerHeight(false);
            var a = i.offset().top + i.outerHeight(false);
            var s = r.$results.scrollTop() + a - o;
            if (n === 0) {
              r.$results.scrollTop(0);
            } else if (o < a) {
              r.$results.scrollTop(s);
            }
          }
        });
        n.on("results:focus", function (e) {
          e.element.addClass("select2-results__option--highlighted");
        });
        n.on("results:message", function (e) {
          r.displayMessage(e);
        });
        if (e.fn.mousewheel) {
          this.$results.on("mousewheel", function (e) {
            var t = r.$results.scrollTop();
            var n = r.$results.get(0).scrollHeight - t + e.deltaY;
            var i = e.deltaY > 0 && t - e.deltaY <= 0;
            var o = e.deltaY < 0 && n <= r.$results.height();
            if (i) {
              r.$results.scrollTop(0);
              e.preventDefault();
              e.stopPropagation();
            } else if (o) {
              r.$results.scrollTop(r.$results.get(0).scrollHeight - r.$results.height());
              e.preventDefault();
              e.stopPropagation();
            }
          });
        }
        this.$results.on("mouseup", ".select2-results__option[aria-selected]", function (n) {
          var i = e(this);
          var o = t.GetData(this, "data");
          if (i.attr("aria-selected") !== "true") {
            r.trigger("select", {
              originalEvent: n,
              data: o
            });
          } else if (r.options.get("multiple")) {
            r.trigger("unselect", {
              originalEvent: n,
              data: o
            });
          } else {
            r.trigger("close", {});
          }
        });
        this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function (n) {
          var i = t.GetData(this, "data");
          r.getHighlightedResults().removeClass("select2-results__option--highlighted");
          r.trigger("results:focus", {
            data: i,
            element: e(this)
          });
        });
      };
      n.prototype.getHighlightedResults = function () {
        return this.$results.find(".select2-results__option--highlighted");
      };
      n.prototype.destroy = function () {
        this.$results.remove();
      };
      n.prototype.ensureHighlightVisible = function () {
        var e = this.getHighlightedResults();
        if (e.length !== 0) {
          var t = this.$results.find("[aria-selected]").index(e);
          var n = this.$results.offset().top;
          var i = e.offset().top;
          var r = this.$results.scrollTop() + (i - n);
          var o = i - n;
          r -= e.outerHeight(false) * 2;
          if (t <= 2) {
            this.$results.scrollTop(0);
          } else if (o > this.$results.outerHeight() || o < 0) {
            this.$results.scrollTop(r);
          }
        }
      };
      n.prototype.template = function (t, n) {
        var i = this.options.get("templateResult");
        var r = this.options.get("escapeMarkup");
        var o = i(t, n);
        if (o == null) {
          n.style.display = "none";
        } else if (typeof o == "string") {
          n.innerHTML = r(o);
        } else {
          e(n).append(o);
        }
      };
      return n;
    });
    t.define("select2/keys", [], function () {
      return {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        ESC: 27,
        SPACE: 32,
        PAGE_UP: 33,
        PAGE_DOWN: 34,
        END: 35,
        HOME: 36,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        DELETE: 46
      };
    });
    t.define("select2/selection/base", ["jquery", "../utils", "../keys"], function (e, t, n) {
      function i(e, t) {
        this.$element = e;
        this.options = t;
        i.__super__.constructor.call(this);
      }
      t.Extend(i, t.Observable);
      i.prototype.render = function () {
        var n = e("<span class=\"select2-selection\" role=\"combobox\"  aria-haspopup=\"true\" aria-expanded=\"false\"></span>");
        this._tabindex = 0;
        if (t.GetData(this.$element[0], "old-tabindex") != null) {
          this._tabindex = t.GetData(this.$element[0], "old-tabindex");
        } else if (this.$element.attr("tabindex") != null) {
          this._tabindex = this.$element.attr("tabindex");
        }
        n.attr("title", this.$element.attr("title"));
        n.attr("tabindex", this._tabindex);
        n.attr("aria-disabled", "false");
        return this.$selection = n;
      };
      i.prototype.bind = function (e, t) {
        var i = this;
        var r = e.id + "-results";
        this.container = e;
        this.$selection.on("focus", function (e) {
          i.trigger("focus", e);
        });
        this.$selection.on("blur", function (e) {
          i._handleBlur(e);
        });
        this.$selection.on("keydown", function (e) {
          i.trigger("keypress", e);
          if (e.which === n.SPACE) {
            e.preventDefault();
          }
        });
        e.on("results:focus", function (e) {
          i.$selection.attr("aria-activedescendant", e.data._resultId);
        });
        e.on("selection:update", function (e) {
          i.update(e.data);
        });
        e.on("open", function () {
          i.$selection.attr("aria-expanded", "true");
          i.$selection.attr("aria-owns", r);
          i._attachCloseHandler(e);
        });
        e.on("close", function () {
          i.$selection.attr("aria-expanded", "false");
          i.$selection.removeAttr("aria-activedescendant");
          i.$selection.removeAttr("aria-owns");
          i.$selection.trigger("focus");
          i._detachCloseHandler(e);
        });
        e.on("enable", function () {
          i.$selection.attr("tabindex", i._tabindex);
          i.$selection.attr("aria-disabled", "false");
        });
        e.on("disable", function () {
          i.$selection.attr("tabindex", "-1");
          i.$selection.attr("aria-disabled", "true");
        });
      };
      i.prototype._handleBlur = function (t) {
        var n = this;
        window.setTimeout(function () {
          if (!(document.activeElement == n.$selection[0] || e.contains(n.$selection[0], document.activeElement))) {
            n.trigger("blur", t);
          }
        }, 1);
      };
      i.prototype._attachCloseHandler = function (n) {
        e(document.body).on("mousedown.select2." + n.id, function (n) {
          var i = e(n.target).closest(".select2");
          e(".select2.select2-container--open").each(function () {
            if (this != i[0]) {
              t.GetData(this, "element").select2("close");
            }
          });
        });
      };
      i.prototype._detachCloseHandler = function (t) {
        e(document.body).off("mousedown.select2." + t.id);
      };
      i.prototype.position = function (e, t) {
        t.find(".selection").append(e);
      };
      i.prototype.destroy = function () {
        this._detachCloseHandler(this.container);
      };
      i.prototype.update = function (e) {
        throw new Error("The `update` method must be defined in child classes.");
      };
      i.prototype.isEnabled = function () {
        return !this.isDisabled();
      };
      i.prototype.isDisabled = function () {
        return this.options.get("disabled");
      };
      return i;
    });
    t.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function (e, t, n, i) {
      function r() {
        r.__super__.constructor.apply(this, arguments);
      }
      n.Extend(r, t);
      r.prototype.render = function () {
        var e = r.__super__.render.call(this);
        e.addClass("select2-selection--single");
        e.html("<span class=\"select2-selection__rendered\"></span><span class=\"select2-selection__arrow\" role=\"presentation\"><b role=\"presentation\"></b></span>");
        return e;
      };
      r.prototype.bind = function (e, t) {
        var n = this;
        r.__super__.bind.apply(this, arguments);
        var i = e.id + "-container";
        this.$selection.find(".select2-selection__rendered").attr("id", i).attr("role", "textbox").attr("aria-readonly", "true");
        this.$selection.attr("aria-labelledby", i);
        this.$selection.on("mousedown", function (e) {
          if (e.which === 1) {
            n.trigger("toggle", {
              originalEvent: e
            });
          }
        });
        this.$selection.on("focus", function (e) {});
        this.$selection.on("blur", function (e) {});
        e.on("focus", function (t) {
          if (!e.isOpen()) {
            n.$selection.trigger("focus");
          }
        });
      };
      r.prototype.clear = function () {
        var e = this.$selection.find(".select2-selection__rendered");
        e.empty();
        e.removeAttr("title");
      };
      r.prototype.display = function (e, t) {
        var n = this.options.get("templateSelection");
        return this.options.get("escapeMarkup")(n(e, t));
      };
      r.prototype.selectionContainer = function () {
        return e("<span></span>");
      };
      r.prototype.update = function (e) {
        if (e.length !== 0) {
          var t = e[0];
          var n = this.$selection.find(".select2-selection__rendered");
          var i = this.display(t, n);
          n.empty().append(i);
          var r = t.title || t.text;
          if (r) {
            n.attr("title", r);
          } else {
            n.removeAttr("title");
          }
        } else {
          this.clear();
        }
      };
      return r;
    });
    t.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function (e, t, n) {
      function i(e, t) {
        i.__super__.constructor.apply(this, arguments);
      }
      n.Extend(i, t);
      i.prototype.render = function () {
        var e = i.__super__.render.call(this);
        e.addClass("select2-selection--multiple");
        e.html("<ul class=\"select2-selection__rendered\"></ul>");
        return e;
      };
      i.prototype.bind = function (t, r) {
        var o = this;
        i.__super__.bind.apply(this, arguments);
        this.$selection.on("click", function (e) {
          o.trigger("toggle", {
            originalEvent: e
          });
        });
        this.$selection.on("click", ".select2-selection__choice__remove", function (t) {
          if (!o.isDisabled()) {
            var i = e(this).parent();
            var r = n.GetData(i[0], "data");
            o.trigger("unselect", {
              originalEvent: t,
              data: r
            });
          }
        });
      };
      i.prototype.clear = function () {
        var e = this.$selection.find(".select2-selection__rendered");
        e.empty();
        e.removeAttr("title");
      };
      i.prototype.display = function (e, t) {
        var n = this.options.get("templateSelection");
        return this.options.get("escapeMarkup")(n(e, t));
      };
      i.prototype.selectionContainer = function () {
        return e("<li class=\"select2-selection__choice\"><span class=\"select2-selection__choice__remove\" role=\"presentation\">&times;</span></li>");
      };
      i.prototype.update = function (e) {
        this.clear();
        if (e.length !== 0) {
          for (var t = [], i = 0; i < e.length; i++) {
            var r = e[i];
            var o = this.selectionContainer();
            var a = this.display(r, o);
            o.append(a);
            var s = r.title || r.text;
            if (s) {
              o.attr("title", s);
            }
            n.StoreData(o[0], "data", r);
            t.push(o);
          }
          var l = this.$selection.find(".select2-selection__rendered");
          n.appendMany(l, t);
        }
      };
      return i;
    });
    t.define("select2/selection/placeholder", ["../utils"], function (e) {
      function t(e, t, n) {
        this.placeholder = this.normalizePlaceholder(n.get("placeholder"));
        e.call(this, t, n);
      }
      t.prototype.normalizePlaceholder = function (e, t) {
        if (typeof t == "string") {
          t = {
            id: "",
            text: t
          };
        }
        return t;
      };
      t.prototype.createPlaceholder = function (e, t) {
        var n = this.selectionContainer();
        n.html(this.display(t));
        n.addClass("select2-selection__placeholder").removeClass("select2-selection__choice");
        return n;
      };
      t.prototype.update = function (e, t) {
        var n = t.length == 1 && t[0].id != this.placeholder.id;
        if (t.length > 1 || n) {
          return e.call(this, t);
        }
        this.clear();
        var i = this.createPlaceholder(this.placeholder);
        this.$selection.find(".select2-selection__rendered").append(i);
      };
      return t;
    });
    t.define("select2/selection/allowClear", ["jquery", "../keys", "../utils"], function (e, t, n) {
      function i() {}
      i.prototype.bind = function (e, t, n) {
        var i = this;
        e.call(this, t, n);
        if (this.placeholder == null && this.options.get("debug") && window.console && console.error) {
          console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option.");
        }
        this.$selection.on("mousedown", ".select2-selection__clear", function (e) {
          i._handleClear(e);
        });
        t.on("keypress", function (e) {
          i._handleKeyboardClear(e, t);
        });
      };
      i.prototype._handleClear = function (e, t) {
        if (!this.isDisabled()) {
          var i = this.$selection.find(".select2-selection__clear");
          if (i.length !== 0) {
            t.stopPropagation();
            var r = n.GetData(i[0], "data");
            var o = this.$element.val();
            this.$element.val(this.placeholder.id);
            var a = {
              data: r
            };
            this.trigger("clear", a);
            if (a.prevented) {
              this.$element.val(o);
            } else {
              for (var s = 0; s < r.length; s++) {
                a = {
                  data: r[s]
                };
                this.trigger("unselect", a);
                if (a.prevented) {
                  return void this.$element.val(o);
                }
              }
              this.$element.trigger("input").trigger("change");
              this.trigger("toggle", {});
            }
          }
        }
      };
      i.prototype._handleKeyboardClear = function (e, n, i) {
        if (!(i.isOpen() || n.which != t.DELETE && n.which != t.BACKSPACE)) {
          this._handleClear(n);
        }
      };
      i.prototype.update = function (t, i) {
        t.call(this, i);
        if (!(this.$selection.find(".select2-selection__placeholder").length > 0 || i.length === 0)) {
          var r = this.options.get("translations").get("removeAllItems");
          var o = e("<span class=\"select2-selection__clear\" title=\"" + r() + "\">&times;</span>");
          n.StoreData(o[0], "data", i);
          this.$selection.find(".select2-selection__rendered").prepend(o);
        }
      };
      return i;
    });
    t.define("select2/selection/search", ["jquery", "../utils", "../keys"], function (e, t, n) {
      function i(e, t, n) {
        e.call(this, t, n);
      }
      i.prototype.render = function (t) {
        var n = e("<li class=\"select2-search select2-search--inline\"><input class=\"select2-search__field\" type=\"search\" tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"none\" spellcheck=\"false\" role=\"searchbox\" aria-autocomplete=\"list\" /></li>");
        this.$searchContainer = n;
        this.$search = n.find("input");
        var i = t.call(this);
        this._transferTabIndex();
        return i;
      };
      i.prototype.bind = function (e, i, r) {
        var o = this;
        var a = i.id + "-results";
        e.call(this, i, r);
        i.on("open", function () {
          o.$search.attr("aria-controls", a);
          o.$search.trigger("focus");
        });
        i.on("close", function () {
          o.$search.val("");
          o.$search.removeAttr("aria-controls");
          o.$search.removeAttr("aria-activedescendant");
          o.$search.trigger("focus");
        });
        i.on("enable", function () {
          o.$search.prop("disabled", false);
          o._transferTabIndex();
        });
        i.on("disable", function () {
          o.$search.prop("disabled", true);
        });
        i.on("focus", function (e) {
          o.$search.trigger("focus");
        });
        i.on("results:focus", function (e) {
          if (e.data._resultId) {
            o.$search.attr("aria-activedescendant", e.data._resultId);
          } else {
            o.$search.removeAttr("aria-activedescendant");
          }
        });
        this.$selection.on("focusin", ".select2-search--inline", function (e) {
          o.trigger("focus", e);
        });
        this.$selection.on("focusout", ".select2-search--inline", function (e) {
          o._handleBlur(e);
        });
        this.$selection.on("keydown", ".select2-search--inline", function (e) {
          e.stopPropagation();
          o.trigger("keypress", e);
          o._keyUpPrevented = e.isDefaultPrevented();
          if (e.which === n.BACKSPACE && o.$search.val() === "") {
            var i = o.$searchContainer.prev(".select2-selection__choice");
            if (i.length > 0) {
              var r = t.GetData(i[0], "data");
              o.searchRemoveChoice(r);
              e.preventDefault();
            }
          }
        });
        this.$selection.on("click", ".select2-search--inline", function (e) {
          if (o.$search.val()) {
            e.stopPropagation();
          }
        });
        var s = document.documentMode;
        var l = s && s <= 11;
        this.$selection.on("input.searchcheck", ".select2-search--inline", function (e) {
          if (l) {
            o.$selection.off("input.search input.searchcheck");
          } else {
            o.$selection.off("keyup.search");
          }
        });
        this.$selection.on("keyup.search input.search", ".select2-search--inline", function (e) {
          if (l && e.type === "input") {
            o.$selection.off("input.search input.searchcheck");
          } else {
            var t = e.which;
            if (t != n.SHIFT && t != n.CTRL && t != n.ALT && t != n.TAB) {
              o.handleSearch(e);
            }
          }
        });
      };
      i.prototype._transferTabIndex = function (e) {
        this.$search.attr("tabindex", this.$selection.attr("tabindex"));
        this.$selection.attr("tabindex", "-1");
      };
      i.prototype.createPlaceholder = function (e, t) {
        this.$search.attr("placeholder", t.text);
      };
      i.prototype.update = function (e, t) {
        var n = this.$search[0] == document.activeElement;
        this.$search.attr("placeholder", "");
        e.call(this, t);
        this.$selection.find(".select2-selection__rendered").append(this.$searchContainer);
        this.resizeSearch();
        if (n) {
          this.$search.trigger("focus");
        }
      };
      i.prototype.handleSearch = function () {
        this.resizeSearch();
        if (!this._keyUpPrevented) {
          var e = this.$search.val();
          this.trigger("query", {
            term: e
          });
        }
        this._keyUpPrevented = false;
      };
      i.prototype.searchRemoveChoice = function (e, t) {
        this.trigger("unselect", {
          data: t
        });
        this.$search.val(t.text);
        this.handleSearch();
      };
      i.prototype.resizeSearch = function () {
        this.$search.css("width", "25px");
        var e = "";
        e = this.$search.attr("placeholder") !== "" ? this.$selection.find(".select2-selection__rendered").width() : (this.$search.val().length + 1) * 0.75 + "em";
        this.$search.css("width", e);
      };
      return i;
    });
    t.define("select2/selection/eventRelay", ["jquery"], function (e) {
      function t() {}
      t.prototype.bind = function (t, n, i) {
        var r = this;
        var o = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting", "clear", "clearing"];
        var a = ["opening", "closing", "selecting", "unselecting", "clearing"];
        t.call(this, n, i);
        n.on("*", function (t, n) {
          if (e.inArray(t, o) !== -1) {
            n = n || {};
            var i = e.Event("select2:" + t, {
              params: n
            });
            r.$element.trigger(i);
            if (e.inArray(t, a) !== -1) {
              n.prevented = i.isDefaultPrevented();
            }
          }
        });
      };
      return t;
    });
    t.define("select2/translation", ["jquery", "require"], function (e, t) {
      function n(e) {
        this.dict = e || {};
      }
      n.prototype.all = function () {
        return this.dict;
      };
      n.prototype.get = function (e) {
        return this.dict[e];
      };
      n.prototype.extend = function (t) {
        this.dict = e.extend({}, t.all(), this.dict);
      };
      n._cache = {};
      n.loadPath = function (e) {
        if (!(e in n._cache)) {
          var i = t(e);
          n._cache[e] = i;
        }
        return new n(n._cache[e]);
      };
      return n;
    });
    t.define("select2/diacritics", [], function () {
      return {
        "â¶": "A",
        ï¼¡: "A",
        Ã: "A",
        Ã: "A",
        Ã: "A",
        áº¦: "A",
        áº¤: "A",
        áºª: "A",
        áº¨: "A",
        Ã: "A",
        Ä: "A",
        Ä: "A",
        áº°: "A",
        áº®: "A",
        áº´: "A",
        áº²: "A",
        È¦: "A",
        Ç : "A",
        Ã: "A",
        Ç: "A",
        áº¢: "A",
        Ã: "A",
        Çº: "A",
        Ç: "A",
        È: "A",
        È: "A",
        áº : "A",
        áº¬: "A",
        áº¶: "A",
        á¸: "A",
        Ä: "A",
        Èº: "A",
        â±¯: "A",
        ê²: "AA",
        Ã: "AE",
        Ç¼: "AE",
        Ç¢: "AE",
        ê´: "AO",
        ê¶: "AU",
        ê¸: "AV",
        êº: "AV",
        ê¼: "AY",
        "â·": "B",
        ï¼¢: "B",
        á¸: "B",
        á¸: "B",
        á¸: "B",
        É: "B",
        Æ: "B",
        Æ: "B",
        "â¸": "C",
        ï¼£: "C",
        Ä: "C",
        Ä: "C",
        Ä: "C",
        Ä: "C",
        Ã: "C",
        á¸: "C",
        Æ: "C",
        È»: "C",
        ê¾: "C",
        "â¹": "D",
        ï¼¤: "D",
        á¸: "D",
        Ä: "D",
        á¸: "D",
        á¸: "D",
        á¸: "D",
        á¸: "D",
        Ä: "D",
        Æ: "D",
        Æ: "D",
        Æ: "D",
        ê¹: "D",
        Ç±: "DZ",
        Ç: "DZ",
        Ç²: "Dz",
        Ç: "Dz",
        "âº": "E",
        ï¼¥: "E",
        Ã: "E",
        Ã: "E",
        Ã: "E",
        á»: "E",
        áº¾: "E",
        á»: "E",
        á»: "E",
        áº¼: "E",
        Ä: "E",
        á¸: "E",
        á¸: "E",
        Ä: "E",
        Ä: "E",
        Ã: "E",
        áºº: "E",
        Ä: "E",
        È: "E",
        È: "E",
        áº¸: "E",
        á»: "E",
        È¨: "E",
        á¸: "E",
        Ä: "E",
        á¸: "E",
        á¸: "E",
        Æ: "E",
        Æ: "E",
        "â»": "F",
        ï¼¦: "F",
        á¸: "F",
        Æ: "F",
        ê»: "F",
        "â¼": "G",
        ï¼§: "G",
        Ç´: "G",
        Ä: "G",
        á¸ : "G",
        Ä: "G",
        Ä : "G",
        Ç¦: "G",
        Ä¢: "G",
        Ç¤: "G",
        Æ: "G",
        ê : "G",
        ê½: "G",
        ê¾: "G",
        "â½": "H",
        ï¼¨: "H",
        Ä¤: "H",
        á¸¢: "H",
        á¸¦: "H",
        È: "H",
        á¸¤: "H",
        á¸¨: "H",
        á¸ª: "H",
        Ä¦: "H",
        â±§: "H",
        â±µ: "H",
        ê: "H",
        "â¾": "I",
        ï¼©: "I",
        Ã: "I",
        Ã: "I",
        Ã: "I",
        Ä¨: "I",
        Äª: "I",
        Ä¬: "I",
        Ä°: "I",
        Ã: "I",
        á¸®: "I",
        á»: "I",
        Ç: "I",
        È: "I",
        È: "I",
        á»: "I",
        Ä®: "I",
        á¸¬: "I",
        Æ: "I",
        "â¿": "J",
        ï¼ª: "J",
        Ä´: "J",
        É: "J",
        "â": "K",
        ï¼«: "K",
        á¸°: "K",
        Ç¨: "K",
        á¸²: "K",
        Ä¶: "K",
        á¸´: "K",
        Æ: "K",
        â±©: "K",
        ê: "K",
        ê: "K",
        ê: "K",
        ê¢: "K",
        "â": "L",
        ï¼¬: "L",
        Ä¿: "L",
        Ä¹: "L",
        Ä½: "L",
        á¸¶: "L",
        á¸¸: "L",
        Ä»: "L",
        á¸¼: "L",
        á¸º: "L",
        Å: "L",
        È½: "L",
        â±¢: "L",
        â± : "L",
        ê: "L",
        ê: "L",
        ê: "L",
        Ç: "LJ",
        Ç: "Lj",
        "â": "M",
        ï¼­: "M",
        á¸¾: "M",
        á¹: "M",
        á¹: "M",
        â±®: "M",
        Æ: "M",
        "â": "N",
        ï¼®: "N",
        Ç¸: "N",
        Å: "N",
        Ã: "N",
        á¹: "N",
        Å: "N",
        á¹: "N",
        Å: "N",
        á¹: "N",
        á¹: "N",
        È : "N",
        Æ: "N",
        ê: "N",
        ê¤: "N",
        Ç: "NJ",
        Ç: "Nj",
        "â": "O",
        ï¼¯: "O",
        Ã: "O",
        Ã: "O",
        Ã: "O",
        á»: "O",
        á»: "O",
        á»: "O",
        á»: "O",
        Ã: "O",
        á¹: "O",
        È¬: "O",
        á¹: "O",
        Å: "O",
        á¹: "O",
        á¹: "O",
        Å: "O",
        È®: "O",
        È°: "O",
        Ã: "O",
        Èª: "O",
        á»: "O",
        Å: "O",
        Ç: "O",
        È: "O",
        È: "O",
        Æ : "O",
        á»: "O",
        á»: "O",
        á» : "O",
        á»: "O",
        á»¢: "O",
        á»: "O",
        á»: "O",
        Çª: "O",
        Ç¬: "O",
        Ã: "O",
        Ç¾: "O",
        Æ: "O",
        Æ: "O",
        ê: "O",
        ê: "O",
        Å: "OE",
        Æ¢: "OI",
        ê: "OO",
        È¢: "OU",
        "â": "P",
        ï¼°: "P",
        á¹: "P",
        á¹: "P",
        Æ¤: "P",
        â±£: "P",
        ê: "P",
        ê: "P",
        ê: "P",
        "â": "Q",
        ï¼±: "Q",
        ê: "Q",
        ê: "Q",
        É: "Q",
        "â": "R",
        ï¼²: "R",
        Å: "R",
        á¹: "R",
        Å: "R",
        È: "R",
        È: "R",
        á¹: "R",
        á¹: "R",
        Å: "R",
        á¹: "R",
        É: "R",
        â±¤: "R",
        ê: "R",
        ê¦: "R",
        ê: "R",
        "â": "S",
        ï¼³: "S",
        áº: "S",
        Å: "S",
        á¹¤: "S",
        Å: "S",
        á¹ : "S",
        Å : "S",
        á¹¦: "S",
        á¹¢: "S",
        á¹¨: "S",
        È: "S",
        Å: "S",
        â±¾: "S",
        ê¨: "S",
        ê: "S",
        "â": "T",
        ï¼´: "T",
        á¹ª: "T",
        Å¤: "T",
        á¹¬: "T",
        È: "T",
        Å¢: "T",
        á¹°: "T",
        á¹®: "T",
        Å¦: "T",
        Æ¬: "T",
        Æ®: "T",
        È¾: "T",
        ê: "T",
        ê¨: "TZ",
        "â": "U",
        ï¼µ: "U",
        Ã: "U",
        Ã: "U",
        Ã: "U",
        Å¨: "U",
        á¹¸: "U",
        Åª: "U",
        á¹º: "U",
        Å¬: "U",
        Ã: "U",
        Ç: "U",
        Ç: "U",
        Ç: "U",
        Ç: "U",
        á»¦: "U",
        Å®: "U",
        Å°: "U",
        Ç: "U",
        È: "U",
        È: "U",
        Æ¯: "U",
        á»ª: "U",
        á»¨: "U",
        á»®: "U",
        á»¬: "U",
        á»°: "U",
        á»¤: "U",
        á¹²: "U",
        Å²: "U",
        á¹¶: "U",
        á¹´: "U",
        É: "U",
        "â": "V",
        ï¼¶: "V",
        á¹¼: "V",
        á¹¾: "V",
        Æ²: "V",
        ê: "V",
        É: "V",
        ê : "VY",
        "â": "W",
        ï¼·: "W",
        áº: "W",
        áº: "W",
        Å´: "W",
        áº: "W",
        áº: "W",
        áº: "W",
        â±²: "W",
        "â": "X",
        ï¼¸: "X",
        áº: "X",
        áº: "X",
        "â": "Y",
        ï¼¹: "Y",
        á»²: "Y",
        Ã: "Y",
        Å¶: "Y",
        á»¸: "Y",
        È²: "Y",
        áº: "Y",
        Å¸: "Y",
        á»¶: "Y",
        á»´: "Y",
        Æ³: "Y",
        É: "Y",
        á»¾: "Y",
        "â": "Z",
        ï¼º: "Z",
        Å¹: "Z",
        áº: "Z",
        Å»: "Z",
        Å½: "Z",
        áº: "Z",
        áº: "Z",
        Æµ: "Z",
        È¤: "Z",
        â±¿: "Z",
        â±«: "Z",
        ê¢: "Z",
        "â": "a",
        ï½: "a",
        áº: "a",
        Ã : "a",
        Ã¡: "a",
        Ã¢: "a",
        áº§: "a",
        áº¥: "a",
        áº«: "a",
        áº©: "a",
        Ã£: "a",
        Ä: "a",
        Ä: "a",
        áº±: "a",
        áº¯: "a",
        áºµ: "a",
        áº³: "a",
        È§: "a",
        Ç¡: "a",
        Ã¤: "a",
        Ç: "a",
        áº£: "a",
        Ã¥: "a",
        Ç»: "a",
        Ç: "a",
        È: "a",
        È: "a",
        áº¡: "a",
        áº­: "a",
        áº·: "a",
        á¸: "a",
        Ä: "a",
        â±¥: "a",
        É: "a",
        ê³: "aa",
        Ã¦: "ae",
        Ç½: "ae",
        Ç£: "ae",
        êµ: "ao",
        ê·: "au",
        ê¹: "av",
        ê»: "av",
        ê½: "ay",
        "â": "b",
        ï½: "b",
        á¸: "b",
        á¸: "b",
        á¸: "b",
        Æ: "b",
        Æ: "b",
        É: "b",
        "â": "c",
        ï½: "c",
        Ä: "c",
        Ä: "c",
        Ä: "c",
        Ä: "c",
        Ã§: "c",
        á¸: "c",
        Æ: "c",
        È¼: "c",
        ê¿: "c",
        â: "c",
        "â": "d",
        ï½: "d",
        á¸: "d",
        Ä: "d",
        á¸: "d",
        á¸: "d",
        á¸: "d",
        á¸: "d",
        Ä: "d",
        Æ: "d",
        É: "d",
        É: "d",
        êº: "d",
        Ç³: "dz",
        Ç: "dz",
        "â": "e",
        ï½: "e",
        Ã¨: "e",
        Ã©: "e",
        Ãª: "e",
        á»: "e",
        áº¿: "e",
        á»: "e",
        á»: "e",
        áº½: "e",
        Ä: "e",
        á¸: "e",
        á¸: "e",
        Ä: "e",
        Ä: "e",
        Ã«: "e",
        áº»: "e",
        Ä: "e",
        È: "e",
        È: "e",
        áº¹: "e",
        á»: "e",
        È©: "e",
        á¸: "e",
        Ä: "e",
        á¸: "e",
        á¸: "e",
        É: "e",
        É: "e",
        Ç: "e",
        "â": "f",
        ï½: "f",
        á¸: "f",
        Æ: "f",
        ê¼: "f",
        "â": "g",
        ï½: "g",
        Çµ: "g",
        Ä: "g",
        á¸¡: "g",
        Ä: "g",
        Ä¡: "g",
        Ç§: "g",
        Ä£: "g",
        Ç¥: "g",
        É : "g",
        ê¡: "g",
        áµ¹: "g",
        ê¿: "g",
        "â": "h",
        ï½: "h",
        Ä¥: "h",
        á¸£: "h",
        á¸§: "h",
        È: "h",
        á¸¥: "h",
        á¸©: "h",
        á¸«: "h",
        áº: "h",
        Ä§: "h",
        â±¨: "h",
        â±¶: "h",
        É¥: "h",
        Æ: "hv",
        "â": "i",
        ï½: "i",
        Ã¬: "i",
        Ã­: "i",
        Ã®: "i",
        Ä©: "i",
        Ä«: "i",
        Ä­: "i",
        Ã¯: "i",
        á¸¯: "i",
        á»: "i",
        Ç: "i",
        È: "i",
        È: "i",
        á»: "i",
        Ä¯: "i",
        á¸­: "i",
        É¨: "i",
        Ä±: "i",
        "â": "j",
        ï½: "j",
        Äµ: "j",
        Ç°: "j",
        É: "j",
        "â": "k",
        ï½: "k",
        á¸±: "k",
        Ç©: "k",
        á¸³: "k",
        Ä·: "k",
        á¸µ: "k",
        Æ: "k",
        â±ª: "k",
        ê: "k",
        ê: "k",
        ê: "k",
        ê£: "k",
        "â": "l",
        ï½: "l",
        Å: "l",
        Äº: "l",
        Ä¾: "l",
        á¸·: "l",
        á¸¹: "l",
        Ä¼: "l",
        á¸½: "l",
        á¸»: "l",
        Å¿: "l",
        Å: "l",
        Æ: "l",
        É«: "l",
        â±¡: "l",
        ê: "l",
        ê: "l",
        ê: "l",
        Ç: "lj",
        "â": "m",
        ï½: "m",
        á¸¿: "m",
        á¹: "m",
        á¹: "m",
        É±: "m",
        É¯: "m",
        "â": "n",
        ï½: "n",
        Ç¹: "n",
        Å: "n",
        Ã±: "n",
        á¹: "n",
        Å: "n",
        á¹: "n",
        Å: "n",
        á¹: "n",
        á¹: "n",
        Æ: "n",
        É²: "n",
        Å: "n",
        ê: "n",
        ê¥: "n",
        Ç: "nj",
        "â": "o",
        ï½: "o",
        Ã²: "o",
        Ã³: "o",
        Ã´: "o",
        á»: "o",
        á»: "o",
        á»: "o",
        á»: "o",
        Ãµ: "o",
        á¹: "o",
        È­: "o",
        á¹: "o",
        Å: "o",
        á¹: "o",
        á¹: "o",
        Å: "o",
        È¯: "o",
        È±: "o",
        Ã¶: "o",
        È«: "o",
        á»: "o",
        Å: "o",
        Ç: "o",
        È: "o",
        È: "o",
        Æ¡: "o",
        á»: "o",
        á»: "o",
        á»¡: "o",
        á»: "o",
        á»£: "o",
        á»: "o",
        á»: "o",
        Ç«: "o",
        Ç­: "o",
        Ã¸: "o",
        Ç¿: "o",
        É: "o",
        ê: "o",
        ê: "o",
        Éµ: "o",
        Å: "oe",
        Æ£: "oi",
        È£: "ou",
        ê: "oo",
        "â": "p",
        ï½: "p",
        á¹: "p",
        á¹: "p",
        Æ¥: "p",
        áµ½: "p",
        ê: "p",
        ê: "p",
        ê: "p",
        "â ": "q",
        ï½: "q",
        É: "q",
        ê: "q",
        ê: "q",
        "â¡": "r",
        ï½: "r",
        Å: "r",
        á¹: "r",
        Å: "r",
        È: "r",
        È: "r",
        á¹: "r",
        á¹: "r",
        Å: "r",
        á¹: "r",
        É: "r",
        É½: "r",
        ê: "r",
        ê§: "r",
        ê: "r",
        "â¢": "s",
        ï½: "s",
        Ã: "s",
        Å: "s",
        á¹¥: "s",
        Å: "s",
        á¹¡: "s",
        Å¡: "s",
        á¹§: "s",
        á¹£: "s",
        á¹©: "s",
        È: "s",
        Å: "s",
        È¿: "s",
        ê©: "s",
        ê: "s",
        áº: "s",
        "â£": "t",
        ï½: "t",
        á¹«: "t",
        áº: "t",
        Å¥: "t",
        á¹­: "t",
        È: "t",
        Å£: "t",
        á¹±: "t",
        á¹¯: "t",
        Å§: "t",
        Æ­: "t",
        Ê: "t",
        â±¦: "t",
        ê: "t",
        ê©: "tz",
        "â¤": "u",
        ï½: "u",
        Ã¹: "u",
        Ãº: "u",
        Ã»: "u",
        Å©: "u",
        á¹¹: "u",
        Å«: "u",
        á¹»: "u",
        Å­: "u",
        Ã¼: "u",
        Ç: "u",
        Ç: "u",
        Ç: "u",
        Ç: "u",
        á»§: "u",
        Å¯: "u",
        Å±: "u",
        Ç: "u",
        È: "u",
        È: "u",
        Æ°: "u",
        á»«: "u",
        á»©: "u",
        á»¯: "u",
        á»­: "u",
        á»±: "u",
        á»¥: "u",
        á¹³: "u",
        Å³: "u",
        á¹·: "u",
        á¹µ: "u",
        Ê: "u",
        "â¥": "v",
        ï½: "v",
        á¹½: "v",
        á¹¿: "v",
        Ê: "v",
        ê: "v",
        Ê: "v",
        ê¡: "vy",
        "â¦": "w",
        ï½: "w",
        áº: "w",
        áº: "w",
        Åµ: "w",
        áº: "w",
        áº: "w",
        áº: "w",
        áº: "w",
        â±³: "w",
        "â§": "x",
        ï½: "x",
        áº: "x",
        áº: "x",
        "â¨": "y",
        ï½: "y",
        á»³: "y",
        Ã½: "y",
        Å·: "y",
        á»¹: "y",
        È³: "y",
        áº: "y",
        Ã¿: "y",
        á»·: "y",
        áº: "y",
        á»µ: "y",
        Æ´: "y",
        É: "y",
        á»¿: "y",
        "â©": "z",
        ï½: "z",
        Åº: "z",
        áº: "z",
        Å¼: "z",
        Å¾: "z",
        áº: "z",
        áº: "z",
        Æ¶: "z",
        È¥: "z",
        É: "z",
        â±¬: "z",
        ê£: "z",
        Î: "Î",
        Î: "Î",
        Î: "Î",
        Î: "Î",
        Îª: "Î",
        Î: "Î",
        Î: "Î¥",
        Î«: "Î¥",
        Î: "Î©",
        Î¬: "Î±",
        Î­: "Îµ",
        Î®: "Î·",
        Î¯: "Î¹",
        Ï: "Î¹",
        Î: "Î¹",
        Ï: "Î¿",
        Ï: "Ï",
        Ï: "Ï",
        Î°: "Ï",
        Ï: "Ï",
        Ï: "Ï",
        "â": "'"
      };
    });
    t.define("select2/data/base", ["../utils"], function (e) {
      function t(e, n) {
        t.__super__.constructor.call(this);
      }
      e.Extend(t, e.Observable);
      t.prototype.current = function (e) {
        throw new Error("The `current` method must be defined in child classes.");
      };
      t.prototype.query = function (e, t) {
        throw new Error("The `query` method must be defined in child classes.");
      };
      t.prototype.bind = function (e, t) {};
      t.prototype.destroy = function () {};
      t.prototype.generateResultId = function (t, n) {
        var i = t.id + "-result-";
        i += e.generateChars(4);
        if (n.id != null) {
          i += "-" + n.id.toString();
        } else {
          i += "-" + e.generateChars(4);
        }
        return i;
      };
      return t;
    });
    t.define("select2/data/select", ["./base", "../utils", "jquery"], function (e, t, n) {
      function i(e, t) {
        this.$element = e;
        this.options = t;
        i.__super__.constructor.call(this);
      }
      t.Extend(i, e);
      i.prototype.current = function (e) {
        var t = [];
        var i = this;
        this.$element.find(":selected").each(function () {
          var e = n(this);
          var r = i.item(e);
          t.push(r);
        });
        e(t);
      };
      i.prototype.select = function (e) {
        var t = this;
        e.selected = true;
        if (n(e.element).is("option")) {
          e.element.selected = true;
          return void this.$element.trigger("input").trigger("change");
        }
        if (this.$element.prop("multiple")) {
          this.current(function (i) {
            var r = [];
            (e = [e]).push.apply(e, i);
            for (var o = 0; o < e.length; o++) {
              var a = e[o].id;
              if (n.inArray(a, r) === -1) {
                r.push(a);
              }
            }
            t.$element.val(r);
            t.$element.trigger("input").trigger("change");
          });
        } else {
          var i = e.id;
          this.$element.val(i);
          this.$element.trigger("input").trigger("change");
        }
      };
      i.prototype.unselect = function (e) {
        var t = this;
        if (this.$element.prop("multiple")) {
          e.selected = false;
          if (n(e.element).is("option")) {
            e.element.selected = false;
            return void this.$element.trigger("input").trigger("change");
          }
          this.current(function (i) {
            for (var r = [], o = 0; o < i.length; o++) {
              var a = i[o].id;
              if (a !== e.id && n.inArray(a, r) === -1) {
                r.push(a);
              }
            }
            t.$element.val(r);
            t.$element.trigger("input").trigger("change");
          });
        }
      };
      i.prototype.bind = function (e, t) {
        var n = this;
        (this.container = e).on("select", function (e) {
          n.select(e.data);
        });
        e.on("unselect", function (e) {
          n.unselect(e.data);
        });
      };
      i.prototype.destroy = function () {
        this.$element.find("*").each(function () {
          t.RemoveData(this);
        });
      };
      i.prototype.query = function (e, t) {
        var i = [];
        var r = this;
        this.$element.children().each(function () {
          var t = n(this);
          if (t.is("option") || t.is("optgroup")) {
            var o = r.item(t);
            var a = r.matches(e, o);
            if (a !== null) {
              i.push(a);
            }
          }
        });
        t({
          results: i
        });
      };
      i.prototype.addOptions = function (e) {
        t.appendMany(this.$element, e);
      };
      i.prototype.option = function (e) {
        var i;
        if (e.children) {
          (i = document.createElement("optgroup")).label = e.text;
        } else if ((i = document.createElement("option")).textContent !== undefined) {
          i.textContent = e.text;
        } else {
          i.innerText = e.text;
        }
        if (e.id !== undefined) {
          i.value = e.id;
        }
        if (e.disabled) {
          i.disabled = true;
        }
        if (e.selected) {
          i.selected = true;
        }
        if (e.title) {
          i.title = e.title;
        }
        var r = n(i);
        var o = this._normalizeItem(e);
        o.element = i;
        t.StoreData(i, "data", o);
        return r;
      };
      i.prototype.item = function (e) {
        var i = {};
        if ((i = t.GetData(e[0], "data")) != null) {
          return i;
        }
        if (e.is("option")) {
          i = {
            id: e.val(),
            text: e.text(),
            disabled: e.prop("disabled"),
            selected: e.prop("selected"),
            title: e.prop("title")
          };
        } else if (e.is("optgroup")) {
          i = {
            text: e.prop("label"),
            children: [],
            title: e.prop("title")
          };
          for (var r = e.children("option"), o = [], a = 0; a < r.length; a++) {
            var s = n(r[a]);
            var l = this.item(s);
            o.push(l);
          }
          i.children = o;
        }
        (i = this._normalizeItem(i)).element = e[0];
        t.StoreData(e[0], "data", i);
        return i;
      };
      i.prototype._normalizeItem = function (e) {
        if (e !== Object(e)) {
          e = {
            id: e,
            text: e
          };
        }
        if ((e = n.extend({}, {
          text: ""
        }, e)).id != null) {
          e.id = e.id.toString();
        }
        if (e.text != null) {
          e.text = e.text.toString();
        }
        if (e._resultId == null && e.id && this.container != null) {
          e._resultId = this.generateResultId(this.container, e);
        }
        return n.extend({}, {
          selected: false,
          disabled: false
        }, e);
      };
      i.prototype.matches = function (e, t) {
        return this.options.get("matcher")(e, t);
      };
      return i;
    });
    t.define("select2/data/array", ["./select", "../utils", "jquery"], function (e, t, n) {
      function i(e, t) {
        this._dataToConvert = t.get("data") || [];
        i.__super__.constructor.call(this, e, t);
      }
      t.Extend(i, e);
      i.prototype.bind = function (e, t) {
        i.__super__.bind.call(this, e, t);
        this.addOptions(this.convertToOptions(this._dataToConvert));
      };
      i.prototype.select = function (e) {
        var t = this.$element.find("option").filter(function (t, n) {
          return n.value == e.id.toString();
        });
        if (t.length === 0) {
          t = this.option(e);
          this.addOptions(t);
        }
        i.__super__.select.call(this, e);
      };
      i.prototype.convertToOptions = function (e) {
        var i = this;
        var r = this.$element.find("option");
        var o = r.map(function () {
          return i.item(n(this)).id;
        }).get();
        var a = [];
        function s(e) {
          return function () {
            return n(this).val() == e.id;
          };
        }
        for (var l = 0; l < e.length; l++) {
          var c = this._normalizeItem(e[l]);
          if (n.inArray(c.id, o) >= 0) {
            var u = r.filter(s(c));
            var d = this.item(u);
            var h = n.extend(true, {}, c, d);
            var f = this.option(h);
            u.replaceWith(f);
          } else {
            var p = this.option(c);
            if (c.children) {
              var g = this.convertToOptions(c.children);
              t.appendMany(p, g);
            }
            a.push(p);
          }
        }
        return a;
      };
      return i;
    });
    t.define("select2/data/ajax", ["./array", "../utils", "jquery"], function (e, t, n) {
      function i(e, t) {
        this.ajaxOptions = this._applyDefaults(t.get("ajax"));
        if (this.ajaxOptions.processResults != null) {
          this.processResults = this.ajaxOptions.processResults;
        }
        i.__super__.constructor.call(this, e, t);
      }
      t.Extend(i, e);
      i.prototype._applyDefaults = function (e) {
        var t = {
          data: function (e) {
            return n.extend({}, e, {
              q: e.term
            });
          },
          transport: function (e, t, i) {
            var r = n.ajax(e);
            r.then(t);
            r.fail(i);
            return r;
          }
        };
        return n.extend({}, t, e, true);
      };
      i.prototype.processResults = function (e) {
        return e;
      };
      i.prototype.query = function (e, t) {
        var i = this;
        if (this._request != null) {
          if (n.isFunction(this._request.abort)) {
            this._request.abort();
          }
          this._request = null;
        }
        var r = n.extend({
          type: "GET"
        }, this.ajaxOptions);
        function o() {
          var o = r.transport(r, function (r) {
            var o = i.processResults(r, e);
            if (i.options.get("debug") && window.console && console.error) {
              if (!(o && o.results && n.isArray(o.results))) {
                console.error("Select2: The AJAX results did not return an array in the `results` key of the response.");
              }
            }
            t(o);
          }, function () {
            if (!("status" in o && (o.status === 0 || o.status === "0"))) {
              i.trigger("results:message", {
                message: "errorLoading"
              });
            }
          });
          i._request = o;
        }
        if (typeof r.url == "function") {
          r.url = r.url.call(this.$element, e);
        }
        if (typeof r.data == "function") {
          r.data = r.data.call(this.$element, e);
        }
        if (this.ajaxOptions.delay && e.term != null) {
          if (this._queryTimeout) {
            window.clearTimeout(this._queryTimeout);
          }
          this._queryTimeout = window.setTimeout(o, this.ajaxOptions.delay);
        } else {
          o();
        }
      };
      return i;
    });
    t.define("select2/data/tags", ["jquery"], function (e) {
      function t(t, n, i) {
        var r = i.get("tags");
        var o = i.get("createTag");
        if (o !== undefined) {
          this.createTag = o;
        }
        var a = i.get("insertTag");
        if (a !== undefined) {
          this.insertTag = a;
        }
        t.call(this, n, i);
        if (e.isArray(r)) {
          for (var s = 0; s < r.length; s++) {
            var l = r[s];
            var c = this._normalizeItem(l);
            var u = this.option(c);
            this.$element.append(u);
          }
        }
      }
      t.prototype.query = function (e, t, n) {
        var i = this;
        this._removeOldTags();
        if (t.term != null && t.page == null) {
          e.call(this, t, function e(r, o) {
            for (var a = r.results, s = 0; s < a.length; s++) {
              var l = a[s];
              var c = l.children != null && !e({
                results: l.children
              }, true);
              if ((l.text || "").toUpperCase() === (t.term || "").toUpperCase() || c) {
                return !o && (r.data = a, void n(r));
              }
            }
            if (o) {
              return true;
            }
            var u = i.createTag(t);
            if (u != null) {
              var d = i.option(u);
              d.attr("data-select2-tag", true);
              i.addOptions([d]);
              i.insertTag(a, u);
            }
            r.results = a;
            n(r);
          });
        } else {
          e.call(this, t, n);
        }
      };
      t.prototype.createTag = function (t, n) {
        var i = e.trim(n.term);
        if (i === "") {
          return null;
        } else {
          return {
            id: i,
            text: i
          };
        }
      };
      t.prototype.insertTag = function (e, t, n) {
        t.unshift(n);
      };
      t.prototype._removeOldTags = function (t) {
        this.$element.find("option[data-select2-tag]").each(function () {
          if (!this.selected) {
            e(this).remove();
          }
        });
      };
      return t;
    });
    t.define("select2/data/tokenizer", ["jquery"], function (e) {
      function t(e, t, n) {
        var i = n.get("tokenizer");
        if (i !== undefined) {
          this.tokenizer = i;
        }
        e.call(this, t, n);
      }
      t.prototype.bind = function (e, t, n) {
        e.call(this, t, n);
        this.$search = t.dropdown.$search || t.selection.$search || n.find(".select2-search__field");
      };
      t.prototype.query = function (t, n, i) {
        var r = this;
        n.term = n.term || "";
        var o = this.tokenizer(n, this.options, function (t) {
          var n;
          var i = r._normalizeItem(t);
          if (!r.$element.find("option").filter(function () {
            return e(this).val() === i.id;
          }).length) {
            var o = r.option(i);
            o.attr("data-select2-tag", true);
            r._removeOldTags();
            r.addOptions([o]);
          }
          n = i;
          r.trigger("select", {
            data: n
          });
        });
        if (o.term !== n.term) {
          if (this.$search.length) {
            this.$search.val(o.term);
            this.$search.trigger("focus");
          }
          n.term = o.term;
        }
        t.call(this, n, i);
      };
      t.prototype.tokenizer = function (t, n, i, r) {
        for (var o = i.get("tokenSeparators") || [], a = n.term, s = 0, l = this.createTag || function (e) {
            return {
              id: e.term,
              text: e.term
            };
          }; s < a.length;) {
          var c = a[s];
          if (e.inArray(c, o) !== -1) {
            var u = a.substr(0, s);
            var d = l(e.extend({}, n, {
              term: u
            }));
            if (d != null) {
              r(d);
              a = a.substr(s + 1) || "";
              s = 0;
            } else {
              s++;
            }
          } else {
            s++;
          }
        }
        return {
          term: a
        };
      };
      return t;
    });
    t.define("select2/data/minimumInputLength", [], function () {
      function e(e, t, n) {
        this.minimumInputLength = n.get("minimumInputLength");
        e.call(this, t, n);
      }
      e.prototype.query = function (e, t, n) {
        t.term = t.term || "";
        if (t.term.length < this.minimumInputLength) {
          this.trigger("results:message", {
            message: "inputTooShort",
            args: {
              minimum: this.minimumInputLength,
              input: t.term,
              params: t
            }
          });
        } else {
          e.call(this, t, n);
        }
      };
      return e;
    });
    t.define("select2/data/maximumInputLength", [], function () {
      function e(e, t, n) {
        this.maximumInputLength = n.get("maximumInputLength");
        e.call(this, t, n);
      }
      e.prototype.query = function (e, t, n) {
        t.term = t.term || "";
        if (this.maximumInputLength > 0 && t.term.length > this.maximumInputLength) {
          this.trigger("results:message", {
            message: "inputTooLong",
            args: {
              maximum: this.maximumInputLength,
              input: t.term,
              params: t
            }
          });
        } else {
          e.call(this, t, n);
        }
      };
      return e;
    });
    t.define("select2/data/maximumSelectionLength", [], function () {
      function e(e, t, n) {
        this.maximumSelectionLength = n.get("maximumSelectionLength");
        e.call(this, t, n);
      }
      e.prototype.bind = function (e, t, n) {
        var i = this;
        e.call(this, t, n);
        t.on("select", function () {
          i._checkIfMaximumSelected();
        });
      };
      e.prototype.query = function (e, t, n) {
        var i = this;
        this._checkIfMaximumSelected(function () {
          e.call(i, t, n);
        });
      };
      e.prototype._checkIfMaximumSelected = function (e, t) {
        var n = this;
        this.current(function (e) {
          var i = e != null ? e.length : 0;
          if (n.maximumSelectionLength > 0 && i >= n.maximumSelectionLength) {
            n.trigger("results:message", {
              message: "maximumSelected",
              args: {
                maximum: n.maximumSelectionLength
              }
            });
          } else if (t) {
            t();
          }
        });
      };
      return e;
    });
    t.define("select2/dropdown", ["jquery", "./utils"], function (e, t) {
      function n(e, t) {
        this.$element = e;
        this.options = t;
        n.__super__.constructor.call(this);
      }
      t.Extend(n, t.Observable);
      n.prototype.render = function () {
        var t = e("<span class=\"select2-dropdown\"><span class=\"select2-results\"></span></span>");
        t.attr("dir", this.options.get("dir"));
        return this.$dropdown = t;
      };
      n.prototype.bind = function () {};
      n.prototype.position = function (e, t) {};
      n.prototype.destroy = function () {
        this.$dropdown.remove();
      };
      return n;
    });
    t.define("select2/dropdown/search", ["jquery", "../utils"], function (e, t) {
      function n() {}
      n.prototype.render = function (t) {
        var n = t.call(this);
        var i = e("<span class=\"select2-search select2-search--dropdown\"><input class=\"select2-search__field\" type=\"search\" tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"none\" spellcheck=\"false\" role=\"searchbox\" aria-autocomplete=\"list\" /></span>");
        this.$searchContainer = i;
        this.$search = i.find("input");
        n.prepend(i);
        return n;
      };
      n.prototype.bind = function (t, n, i) {
        var r = this;
        var o = n.id + "-results";
        t.call(this, n, i);
        this.$search.on("keydown", function (e) {
          r.trigger("keypress", e);
          r._keyUpPrevented = e.isDefaultPrevented();
        });
        this.$search.on("input", function (t) {
          e(this).off("keyup");
        });
        this.$search.on("keyup input", function (e) {
          r.handleSearch(e);
        });
        n.on("open", function () {
          r.$search.attr("tabindex", 0);
          r.$search.attr("aria-controls", o);
          r.$search.trigger("focus");
          window.setTimeout(function () {
            r.$search.trigger("focus");
          }, 0);
        });
        n.on("close", function () {
          r.$search.attr("tabindex", -1);
          r.$search.removeAttr("aria-controls");
          r.$search.removeAttr("aria-activedescendant");
          r.$search.val("");
          r.$search.trigger("blur");
        });
        n.on("focus", function () {
          if (!n.isOpen()) {
            r.$search.trigger("focus");
          }
        });
        n.on("results:all", function (e) {
          if (!(e.query.term != null && e.query.term !== "")) {
            if (r.showSearch(e)) {
              r.$searchContainer.removeClass("select2-search--hide");
            } else {
              r.$searchContainer.addClass("select2-search--hide");
            }
          }
        });
        n.on("results:focus", function (e) {
          if (e.data._resultId) {
            r.$search.attr("aria-activedescendant", e.data._resultId);
          } else {
            r.$search.removeAttr("aria-activedescendant");
          }
        });
      };
      n.prototype.handleSearch = function (e) {
        if (!this._keyUpPrevented) {
          var t = this.$search.val();
          this.trigger("query", {
            term: t
          });
        }
        this._keyUpPrevented = false;
      };
      n.prototype.showSearch = function (e, t) {
        return true;
      };
      return n;
    });
    t.define("select2/dropdown/hidePlaceholder", [], function () {
      function e(e, t, n, i) {
        this.placeholder = this.normalizePlaceholder(n.get("placeholder"));
        e.call(this, t, n, i);
      }
      e.prototype.append = function (e, t) {
        t.results = this.removePlaceholder(t.results);
        e.call(this, t);
      };
      e.prototype.normalizePlaceholder = function (e, t) {
        if (typeof t == "string") {
          t = {
            id: "",
            text: t
          };
        }
        return t;
      };
      e.prototype.removePlaceholder = function (e, t) {
        for (var n = t.slice(0), i = t.length - 1; i >= 0; i--) {
          var r = t[i];
          if (this.placeholder.id === r.id) {
            n.splice(i, 1);
          }
        }
        return n;
      };
      return e;
    });
    t.define("select2/dropdown/infiniteScroll", ["jquery"], function (e) {
      function t(e, t, n, i) {
        this.lastParams = {};
        e.call(this, t, n, i);
        this.$loadingMore = this.createLoadingMore();
        this.loading = false;
      }
      t.prototype.append = function (e, t) {
        this.$loadingMore.remove();
        this.loading = false;
        e.call(this, t);
        if (this.showLoadingMore(t)) {
          this.$results.append(this.$loadingMore);
          this.loadMoreIfNeeded();
        }
      };
      t.prototype.bind = function (e, t, n) {
        var i = this;
        e.call(this, t, n);
        t.on("query", function (e) {
          i.lastParams = e;
          i.loading = true;
        });
        t.on("query:append", function (e) {
          i.lastParams = e;
          i.loading = true;
        });
        this.$results.on("scroll", this.loadMoreIfNeeded.bind(this));
      };
      t.prototype.loadMoreIfNeeded = function () {
        var t = e.contains(document.documentElement, this.$loadingMore[0]);
        if (!this.loading && t) {
          var n = this.$results.offset().top + this.$results.outerHeight(false);
          if (this.$loadingMore.offset().top + this.$loadingMore.outerHeight(false) <= n + 50) {
            this.loadMore();
          }
        }
      };
      t.prototype.loadMore = function () {
        this.loading = true;
        var t = e.extend({}, {
          page: 1
        }, this.lastParams);
        t.page++;
        this.trigger("query:append", t);
      };
      t.prototype.showLoadingMore = function (e, t) {
        return t.pagination && t.pagination.more;
      };
      t.prototype.createLoadingMore = function () {
        var t = e("<li class=\"select2-results__option select2-results__option--load-more\"role=\"option\" aria-disabled=\"true\"></li>");
        var n = this.options.get("translations").get("loadingMore");
        t.html(n(this.lastParams));
        return t;
      };
      return t;
    });
    t.define("select2/dropdown/attachBody", ["jquery", "../utils"], function (e, t) {
      function n(t, n, i) {
        this.$dropdownParent = e(i.get("dropdownParent") || document.body);
        t.call(this, n, i);
      }
      n.prototype.bind = function (e, t, n) {
        var i = this;
        e.call(this, t, n);
        t.on("open", function () {
          i._showDropdown();
          i._attachPositioningHandler(t);
          i._bindContainerResultHandlers(t);
        });
        t.on("close", function () {
          i._hideDropdown();
          i._detachPositioningHandler(t);
        });
        this.$dropdownContainer.on("mousedown", function (e) {
          e.stopPropagation();
        });
      };
      n.prototype.destroy = function (e) {
        e.call(this);
        this.$dropdownContainer.remove();
      };
      n.prototype.position = function (e, t, n) {
        t.attr("class", n.attr("class"));
        t.removeClass("select2");
        t.addClass("select2-container--open");
        t.css({
          position: "absolute",
          top: -999999
        });
        this.$container = n;
      };
      n.prototype.render = function (t) {
        var n = e("<span></span>");
        var i = t.call(this);
        n.append(i);
        return this.$dropdownContainer = n;
      };
      n.prototype._hideDropdown = function (e) {
        this.$dropdownContainer.detach();
      };
      n.prototype._bindContainerResultHandlers = function (e, t) {
        if (!this._containerResultsHandlersBound) {
          var n = this;
          t.on("results:all", function () {
            n._positionDropdown();
            n._resizeDropdown();
          });
          t.on("results:append", function () {
            n._positionDropdown();
            n._resizeDropdown();
          });
          t.on("results:message", function () {
            n._positionDropdown();
            n._resizeDropdown();
          });
          t.on("select", function () {
            n._positionDropdown();
            n._resizeDropdown();
          });
          t.on("unselect", function () {
            n._positionDropdown();
            n._resizeDropdown();
          });
          this._containerResultsHandlersBound = true;
        }
      };
      n.prototype._attachPositioningHandler = function (n, i) {
        var r = this;
        var o = "scroll.select2." + i.id;
        var a = "resize.select2." + i.id;
        var s = "orientationchange.select2." + i.id;
        var l = this.$container.parents().filter(t.hasScroll);
        l.each(function () {
          t.StoreData(this, "select2-scroll-position", {
            x: e(this).scrollLeft(),
            y: e(this).scrollTop()
          });
        });
        l.on(o, function (n) {
          var i = t.GetData(this, "select2-scroll-position");
          e(this).scrollTop(i.y);
        });
        e(window).on(o + " " + a + " " + s, function (e) {
          r._positionDropdown();
          r._resizeDropdown();
        });
      };
      n.prototype._detachPositioningHandler = function (n, i) {
        var r = "scroll.select2." + i.id;
        var o = "resize.select2." + i.id;
        var a = "orientationchange.select2." + i.id;
        this.$container.parents().filter(t.hasScroll).off(r);
        e(window).off(r + " " + o + " " + a);
      };
      n.prototype._positionDropdown = function () {
        var t = e(window);
        var n = this.$dropdown.hasClass("select2-dropdown--above");
        var i = this.$dropdown.hasClass("select2-dropdown--below");
        var r = null;
        var o = this.$container.offset();
        o.bottom = o.top + this.$container.outerHeight(false);
        var a = {
          height: this.$container.outerHeight(false)
        };
        a.top = o.top;
        a.bottom = o.top + a.height;
        var s = this.$dropdown.outerHeight(false);
        var l = t.scrollTop();
        var c = t.scrollTop() + t.height();
        var u = l < o.top - s;
        var d = c > o.bottom + s;
        var h = {
          left: o.left,
          top: a.bottom
        };
        var f = this.$dropdownParent;
        if (f.css("position") === "static") {
          f = f.offsetParent();
        }
        var p = {
          top: 0,
          left: 0
        };
        if (e.contains(document.body, f[0]) || f[0].isConnected) {
          p = f.offset();
        }
        h.top -= p.top;
        h.left -= p.left;
        if (!(n || i)) {
          r = "below";
        }
        if (d || !u || n) {
          if (!u && d && n) {
            r = "below";
          }
        } else {
          r = "above";
        }
        if (r == "above" || n && r !== "below") {
          h.top = a.top - p.top - s;
        }
        if (r != null) {
          this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + r);
          this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + r);
        }
        this.$dropdownContainer.css(h);
      };
      n.prototype._resizeDropdown = function () {
        var e = {
          width: this.$container.outerWidth(false) + "px"
        };
        if (this.options.get("dropdownAutoWidth")) {
          e.minWidth = e.width;
          e.position = "relative";
          e.width = "auto";
        }
        this.$dropdown.css(e);
      };
      n.prototype._showDropdown = function (e) {
        this.$dropdownContainer.appendTo(this.$dropdownParent);
        this._positionDropdown();
        this._resizeDropdown();
      };
      return n;
    });
    t.define("select2/dropdown/minimumResultsForSearch", [], function () {
      function e(e, t, n, i) {
        this.minimumResultsForSearch = n.get("minimumResultsForSearch");
        if (this.minimumResultsForSearch < 0) {
          this.minimumResultsForSearch = 1 / 0;
        }
        e.call(this, t, n, i);
      }
      e.prototype.showSearch = function (e, t) {
        return !(function e(t) {
          for (var n = 0, i = 0; i < t.length; i++) {
            var r = t[i];
            if (r.children) {
              n += e(r.children);
            } else {
              n++;
            }
          }
          return n;
        }(t.data.results) < this.minimumResultsForSearch) && e.call(this, t);
      };
      return e;
    });
    t.define("select2/dropdown/selectOnClose", ["../utils"], function (e) {
      function t() {}
      t.prototype.bind = function (e, t, n) {
        var i = this;
        e.call(this, t, n);
        t.on("close", function (e) {
          i._handleSelectOnClose(e);
        });
      };
      t.prototype._handleSelectOnClose = function (t, n) {
        if (n && n.originalSelect2Event != null) {
          var i = n.originalSelect2Event;
          if (i._type === "select" || i._type === "unselect") {
            return;
          }
        }
        var r = this.getHighlightedResults();
        if (!(r.length < 1)) {
          var o = e.GetData(r[0], "data");
          if (!(o.element != null && o.element.selected || o.element == null && o.selected)) {
            this.trigger("select", {
              data: o
            });
          }
        }
      };
      return t;
    });
    t.define("select2/dropdown/closeOnSelect", [], function () {
      function e() {}
      e.prototype.bind = function (e, t, n) {
        var i = this;
        e.call(this, t, n);
        t.on("select", function (e) {
          i._selectTriggered(e);
        });
        t.on("unselect", function (e) {
          i._selectTriggered(e);
        });
      };
      e.prototype._selectTriggered = function (e, t) {
        var n = t.originalEvent;
        if (!(n && (n.ctrlKey || n.metaKey))) {
          this.trigger("close", {
            originalEvent: n,
            originalSelect2Event: t
          });
        }
      };
      return e;
    });
    t.define("select2/i18n/en", [], function () {
      return {
        errorLoading: function () {
          return "The results could not be loaded.";
        },
        inputTooLong: function (e) {
          var t = e.input.length - e.maximum;
          var n = "Please delete " + t + " character";
          if (t != 1) {
            n += "s";
          }
          return n;
        },
        inputTooShort: function (e) {
          return "Please enter " + (e.minimum - e.input.length) + " or more characters";
        },
        loadingMore: function () {
          return "Loading more resultsâ¦";
        },
        maximumSelected: function (e) {
          var t = "You can only select " + e.maximum + " item";
          if (e.maximum != 1) {
            t += "s";
          }
          return t;
        },
        noResults: function () {
          return "No results found";
        },
        searching: function () {
          return "Searchingâ¦";
        },
        removeAllItems: function () {
          return "Remove all items";
        }
      };
    });
    t.define("select2/defaults", ["jquery", "require", "./results", "./selection/single", "./selection/multiple", "./selection/placeholder", "./selection/allowClear", "./selection/search", "./selection/eventRelay", "./utils", "./translation", "./diacritics", "./data/select", "./data/array", "./data/ajax", "./data/tags", "./data/tokenizer", "./data/minimumInputLength", "./data/maximumInputLength", "./data/maximumSelectionLength", "./dropdown", "./dropdown/search", "./dropdown/hidePlaceholder", "./dropdown/infiniteScroll", "./dropdown/attachBody", "./dropdown/minimumResultsForSearch", "./dropdown/selectOnClose", "./dropdown/closeOnSelect", "./i18n/en"], function (e, t, n, i, r, o, a, s, l, c, u, d, h, f, p, g, m, v, y, b, w, x, _, C, S, k, T, A, D) {
      function E() {
        this.reset();
      }
      E.prototype.apply = function (u) {
        if ((u = e.extend(true, {}, this.defaults, u)).dataAdapter == null) {
          if (u.ajax != null) {
            u.dataAdapter = p;
          } else if (u.data != null) {
            u.dataAdapter = f;
          } else {
            u.dataAdapter = h;
          }
          if (u.minimumInputLength > 0) {
            u.dataAdapter = c.Decorate(u.dataAdapter, v);
          }
          if (u.maximumInputLength > 0) {
            u.dataAdapter = c.Decorate(u.dataAdapter, y);
          }
          if (u.maximumSelectionLength > 0) {
            u.dataAdapter = c.Decorate(u.dataAdapter, b);
          }
          if (u.tags) {
            u.dataAdapter = c.Decorate(u.dataAdapter, g);
          }
          if (!(u.tokenSeparators == null && u.tokenizer == null)) {
            u.dataAdapter = c.Decorate(u.dataAdapter, m);
          }
          if (u.query != null) {
            var d = t(u.amdBase + "compat/query");
            u.dataAdapter = c.Decorate(u.dataAdapter, d);
          }
          if (u.initSelection != null) {
            var D = t(u.amdBase + "compat/initSelection");
            u.dataAdapter = c.Decorate(u.dataAdapter, D);
          }
        }
        if (u.resultsAdapter == null) {
          u.resultsAdapter = n;
          if (u.ajax != null) {
            u.resultsAdapter = c.Decorate(u.resultsAdapter, C);
          }
          if (u.placeholder != null) {
            u.resultsAdapter = c.Decorate(u.resultsAdapter, _);
          }
          if (u.selectOnClose) {
            u.resultsAdapter = c.Decorate(u.resultsAdapter, T);
          }
        }
        if (u.dropdownAdapter == null) {
          if (u.multiple) {
            u.dropdownAdapter = w;
          } else {
            var E = c.Decorate(w, x);
            u.dropdownAdapter = E;
          }
          if (u.minimumResultsForSearch !== 0) {
            u.dropdownAdapter = c.Decorate(u.dropdownAdapter, k);
          }
          if (u.closeOnSelect) {
            u.dropdownAdapter = c.Decorate(u.dropdownAdapter, A);
          }
          if (u.dropdownCssClass != null || u.dropdownCss != null || u.adaptDropdownCssClass != null) {
            var O = t(u.amdBase + "compat/dropdownCss");
            u.dropdownAdapter = c.Decorate(u.dropdownAdapter, O);
          }
          u.dropdownAdapter = c.Decorate(u.dropdownAdapter, S);
        }
        if (u.selectionAdapter == null) {
          if (u.multiple) {
            u.selectionAdapter = r;
          } else {
            u.selectionAdapter = i;
          }
          if (u.placeholder != null) {
            u.selectionAdapter = c.Decorate(u.selectionAdapter, o);
          }
          if (u.allowClear) {
            u.selectionAdapter = c.Decorate(u.selectionAdapter, a);
          }
          if (u.multiple) {
            u.selectionAdapter = c.Decorate(u.selectionAdapter, s);
          }
          if (u.containerCssClass != null || u.containerCss != null || u.adaptContainerCssClass != null) {
            var M = t(u.amdBase + "compat/containerCss");
            u.selectionAdapter = c.Decorate(u.selectionAdapter, M);
          }
          u.selectionAdapter = c.Decorate(u.selectionAdapter, l);
        }
        u.language = this._resolveLanguage(u.language);
        u.language.push("en");
        for (var I = [], P = 0; P < u.language.length; P++) {
          var L = u.language[P];
          if (I.indexOf(L) === -1) {
            I.push(L);
          }
        }
        u.language = I;
        u.translations = this._processTranslations(u.language, u.debug);
        return u;
      };
      E.prototype.reset = function () {
        function t(e) {
          return e.replace(/[^\u0000-\u007E]/g, function (e) {
            return d[e] || e;
          });
        }
        this.defaults = {
          amdBase: "./",
          amdLanguageBase: "./i18n/",
          closeOnSelect: true,
          debug: false,
          dropdownAutoWidth: false,
          escapeMarkup: c.escapeMarkup,
          language: {},
          matcher: function n(i, r) {
            if (e.trim(i.term) === "") {
              return r;
            }
            if (r.children && r.children.length > 0) {
              for (var o = e.extend(true, {}, r), a = r.children.length - 1; a >= 0; a--) {
                if (n(i, r.children[a]) == null) {
                  o.children.splice(a, 1);
                }
              }
              if (o.children.length > 0) {
                return o;
              } else {
                return n(i, o);
              }
            }
            var s = t(r.text).toUpperCase();
            var l = t(i.term).toUpperCase();
            if (s.indexOf(l) > -1) {
              return r;
            } else {
              return null;
            }
          },
          minimumInputLength: 0,
          maximumInputLength: 0,
          maximumSelectionLength: 0,
          minimumResultsForSearch: 0,
          selectOnClose: false,
          scrollAfterSelect: false,
          sorter: function (e) {
            return e;
          },
          templateResult: function (e) {
            return e.text;
          },
          templateSelection: function (e) {
            return e.text;
          },
          theme: "default",
          width: "resolve"
        };
      };
      E.prototype.applyFromElement = function (e, t) {
        var n = e.language;
        var i = this.defaults.language;
        var r = t.prop("lang");
        var o = t.closest("[lang]").prop("lang");
        var a = Array.prototype.concat.call(this._resolveLanguage(r), this._resolveLanguage(n), this._resolveLanguage(i), this._resolveLanguage(o));
        e.language = a;
        return e;
      };
      E.prototype._resolveLanguage = function (t) {
        if (!t) {
          return [];
        }
        if (e.isEmptyObject(t)) {
          return [];
        }
        if (e.isPlainObject(t)) {
          return [t];
        }
        var n;
        n = e.isArray(t) ? t : [t];
        for (var i = [], r = 0; r < n.length; r++) {
          i.push(n[r]);
          if (typeof n[r] == "string" && n[r].indexOf("-") > 0) {
            var o = n[r].split("-")[0];
            i.push(o);
          }
        }
        return i;
      };
      E.prototype._processTranslations = function (t, n) {
        for (var i = new u(), r = 0; r < t.length; r++) {
          var o = new u();
          var a = t[r];
          if (typeof a == "string") {
            try {
              o = u.loadPath(a);
            } catch (t) {
              try {
                a = this.defaults.amdLanguageBase + a;
                o = u.loadPath(a);
              } catch (t) {
                if (n && window.console && console.warn) {
                  console.warn("Select2: The language file for \"" + a + "\" could not be automatically loaded. A fallback will be used instead.");
                }
              }
            }
          } else {
            o = e.isPlainObject(a) ? new u(a) : a;
          }
          i.extend(o);
        }
        return i;
      };
      E.prototype.set = function (t, n) {
        var i = {
          [e.camelCase(t)]: n
        };
        var r = c._convertData(i);
        e.extend(true, this.defaults, r);
      };
      return new E();
    });
    t.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function (e, t, n, i) {
      function r(t, r) {
        this.options = t;
        if (r != null) {
          this.fromElement(r);
        }
        if (r != null) {
          this.options = n.applyFromElement(this.options, r);
        }
        this.options = n.apply(this.options);
        if (r && r.is("input")) {
          var o = e(this.get("amdBase") + "compat/inputData");
          this.options.dataAdapter = i.Decorate(this.options.dataAdapter, o);
        }
      }
      r.prototype.fromElement = function (e) {
        var n = ["select2"];
        if (this.options.multiple == null) {
          this.options.multiple = e.prop("multiple");
        }
        if (this.options.disabled == null) {
          this.options.disabled = e.prop("disabled");
        }
        if (this.options.dir == null) {
          if (e.prop("dir")) {
            this.options.dir = e.prop("dir");
          } else if (e.closest("[dir]").prop("dir")) {
            this.options.dir = e.closest("[dir]").prop("dir");
          } else {
            this.options.dir = "ltr";
          }
        }
        e.prop("disabled", this.options.disabled);
        e.prop("multiple", this.options.multiple);
        if (i.GetData(e[0], "select2Tags")) {
          if (this.options.debug && window.console && console.warn) {
            console.warn("Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags=\"true\"` attributes and will be removed in future versions of Select2.");
          }
          i.StoreData(e[0], "data", i.GetData(e[0], "select2Tags"));
          i.StoreData(e[0], "tags", true);
        }
        if (i.GetData(e[0], "ajaxUrl")) {
          if (this.options.debug && window.console && console.warn) {
            console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2.");
          }
          e.attr("ajax--url", i.GetData(e[0], "ajaxUrl"));
          i.StoreData(e[0], "ajax-Url", i.GetData(e[0], "ajaxUrl"));
        }
        var r = {};
        function o(e, t) {
          return t.toUpperCase();
        }
        for (var a = 0; a < e[0].attributes.length; a++) {
          var s = e[0].attributes[a].name;
          var l = "data-";
          if (s.substr(0, l.length) == l) {
            var c = s.substring(l.length);
            var u = i.GetData(e[0], c);
            r[c.replace(/-([a-z])/g, o)] = u;
          }
        }
        if (t.fn.jquery && t.fn.jquery.substr(0, 2) == "1." && e[0].dataset) {
          r = t.extend(true, {}, e[0].dataset, r);
        }
        var d = t.extend(true, {}, i.GetData(e[0]), r);
        for (var h in d = i._convertData(d)) {
          if (!(t.inArray(h, n) > -1)) {
            if (t.isPlainObject(this.options[h])) {
              t.extend(this.options[h], d[h]);
            } else {
              this.options[h] = d[h];
            }
          }
        }
        return this;
      };
      r.prototype.get = function (e) {
        return this.options[e];
      };
      r.prototype.set = function (e, t) {
        this.options[e] = t;
      };
      return r;
    });
    t.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function (e, t, n, i) {
      var r = function (e, i) {
        if (n.GetData(e[0], "select2") != null) {
          n.GetData(e[0], "select2").destroy();
        }
        this.$element = e;
        this.id = this._generateId(e);
        i = i || {};
        this.options = new t(i, e);
        r.__super__.constructor.call(this);
        var o = e.attr("tabindex") || 0;
        n.StoreData(e[0], "old-tabindex", o);
        e.attr("tabindex", "-1");
        var a = this.options.get("dataAdapter");
        this.dataAdapter = new a(e, this.options);
        var s = this.render();
        this._placeContainer(s);
        var l = this.options.get("selectionAdapter");
        this.selection = new l(e, this.options);
        this.$selection = this.selection.render();
        this.selection.position(this.$selection, s);
        var c = this.options.get("dropdownAdapter");
        this.dropdown = new c(e, this.options);
        this.$dropdown = this.dropdown.render();
        this.dropdown.position(this.$dropdown, s);
        var u = this.options.get("resultsAdapter");
        this.results = new u(e, this.options, this.dataAdapter);
        this.$results = this.results.render();
        this.results.position(this.$results, this.$dropdown);
        var d = this;
        this._bindAdapters();
        this._registerDomEvents();
        this._registerDataEvents();
        this._registerSelectionEvents();
        this._registerDropdownEvents();
        this._registerResultsEvents();
        this._registerEvents();
        this.dataAdapter.current(function (e) {
          d.trigger("selection:update", {
            data: e
          });
        });
        e.addClass("select2-hidden-accessible");
        e.attr("aria-hidden", "true");
        this._syncAttributes();
        n.StoreData(e[0], "select2", this);
        e.data("select2", this);
      };
      n.Extend(r, n.Observable);
      r.prototype._generateId = function (e) {
        return "select2-" + (e.attr("id") != null ? e.attr("id") : e.attr("name") != null ? e.attr("name") + "-" + n.generateChars(2) : n.generateChars(4)).replace(/(:|\.|\[|\]|,)/g, "");
      };
      r.prototype._placeContainer = function (e) {
        e.insertAfter(this.$element);
        var t = this._resolveWidth(this.$element, this.options.get("width"));
        if (t != null) {
          e.css("width", t);
        }
      };
      r.prototype._resolveWidth = function (e, t) {
        var n = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
        if (t == "resolve") {
          var i = this._resolveWidth(e, "style");
          if (i != null) {
            return i;
          } else {
            return this._resolveWidth(e, "element");
          }
        }
        if (t == "element") {
          var r = e.outerWidth(false);
          if (r <= 0) {
            return "auto";
          } else {
            return r + "px";
          }
        }
        if (t != "style") {
          if (t != "computedstyle") {
            return t;
          } else {
            return window.getComputedStyle(e[0]).width;
          }
        }
        var o = e.attr("style");
        if (typeof o != "string") {
          return null;
        }
        for (var a = o.split(";"), s = 0, l = a.length; s < l; s += 1) {
          var c = a[s].replace(/\s/g, "").match(n);
          if (c !== null && c.length >= 1) {
            return c[1];
          }
        }
        return null;
      };
      r.prototype._bindAdapters = function () {
        this.dataAdapter.bind(this, this.$container);
        this.selection.bind(this, this.$container);
        this.dropdown.bind(this, this.$container);
        this.results.bind(this, this.$container);
      };
      r.prototype._registerDomEvents = function () {
        var e = this;
        this.$element.on("change.select2", function () {
          e.dataAdapter.current(function (t) {
            e.trigger("selection:update", {
              data: t
            });
          });
        });
        this.$element.on("focus.select2", function (t) {
          e.trigger("focus", t);
        });
        this._syncA = n.bind(this._syncAttributes, this);
        this._syncS = n.bind(this._syncSubtree, this);
        if (this.$element[0].attachEvent) {
          this.$element[0].attachEvent("onpropertychange", this._syncA);
        }
        var t = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
        if (t != null) {
          this._observer = new t(function (t) {
            e._syncA();
            e._syncS(null, t);
          });
          this._observer.observe(this.$element[0], {
            attributes: true,
            childList: true,
            subtree: false
          });
        } else if (this.$element[0].addEventListener) {
          this.$element[0].addEventListener("DOMAttrModified", e._syncA, false);
          this.$element[0].addEventListener("DOMNodeInserted", e._syncS, false);
          this.$element[0].addEventListener("DOMNodeRemoved", e._syncS, false);
        }
      };
      r.prototype._registerDataEvents = function () {
        var e = this;
        this.dataAdapter.on("*", function (t, n) {
          e.trigger(t, n);
        });
      };
      r.prototype._registerSelectionEvents = function () {
        var t = this;
        var n = ["toggle", "focus"];
        this.selection.on("toggle", function () {
          t.toggleDropdown();
        });
        this.selection.on("focus", function (e) {
          t.focus(e);
        });
        this.selection.on("*", function (i, r) {
          if (e.inArray(i, n) === -1) {
            t.trigger(i, r);
          }
        });
      };
      r.prototype._registerDropdownEvents = function () {
        var e = this;
        this.dropdown.on("*", function (t, n) {
          e.trigger(t, n);
        });
      };
      r.prototype._registerResultsEvents = function () {
        var e = this;
        this.results.on("*", function (t, n) {
          e.trigger(t, n);
        });
      };
      r.prototype._registerEvents = function () {
        var e = this;
        this.on("open", function () {
          e.$container.addClass("select2-container--open");
        });
        this.on("close", function () {
          e.$container.removeClass("select2-container--open");
        });
        this.on("enable", function () {
          e.$container.removeClass("select2-container--disabled");
        });
        this.on("disable", function () {
          e.$container.addClass("select2-container--disabled");
        });
        this.on("blur", function () {
          e.$container.removeClass("select2-container--focus");
        });
        this.on("query", function (t) {
          if (!e.isOpen()) {
            e.trigger("open", {});
          }
          this.dataAdapter.query(t, function (n) {
            e.trigger("results:all", {
              data: n,
              query: t
            });
          });
        });
        this.on("query:append", function (t) {
          this.dataAdapter.query(t, function (n) {
            e.trigger("results:append", {
              data: n,
              query: t
            });
          });
        });
        this.on("keypress", function (t) {
          var n = t.which;
          if (e.isOpen()) {
            if (n === i.ESC || n === i.TAB || n === i.UP && t.altKey) {
              e.close(t);
              t.preventDefault();
            } else if (n === i.ENTER) {
              e.trigger("results:select", {});
              t.preventDefault();
            } else if (n === i.SPACE && t.ctrlKey) {
              e.trigger("results:toggle", {});
              t.preventDefault();
            } else if (n === i.UP) {
              e.trigger("results:previous", {});
              t.preventDefault();
            } else if (n === i.DOWN) {
              e.trigger("results:next", {});
              t.preventDefault();
            }
          } else if (n === i.ENTER || n === i.SPACE || n === i.DOWN && t.altKey) {
            e.open();
            t.preventDefault();
          }
        });
      };
      r.prototype._syncAttributes = function () {
        this.options.set("disabled", this.$element.prop("disabled"));
        if (this.isDisabled()) {
          if (this.isOpen()) {
            this.close();
          }
          this.trigger("disable", {});
        } else {
          this.trigger("enable", {});
        }
      };
      r.prototype._isChangeMutation = function (t, n) {
        var i = false;
        var r = this;
        if (!t || !t.target || t.target.nodeName === "OPTION" || t.target.nodeName === "OPTGROUP") {
          if (n) {
            if (n.addedNodes && n.addedNodes.length > 0) {
              for (var o = 0; o < n.addedNodes.length; o++) {
                if (n.addedNodes[o].selected) {
                  i = true;
                }
              }
            } else if (n.removedNodes && n.removedNodes.length > 0) {
              i = true;
            } else if (e.isArray(n)) {
              e.each(n, function (e, t) {
                if (r._isChangeMutation(e, t)) {
                  return !(i = true);
                }
              });
            }
          } else {
            i = true;
          }
          return i;
        }
      };
      r.prototype._syncSubtree = function (e, t) {
        var n = this._isChangeMutation(e, t);
        var i = this;
        if (n) {
          this.dataAdapter.current(function (e) {
            i.trigger("selection:update", {
              data: e
            });
          });
        }
      };
      r.prototype.trigger = function (e, t) {
        var n = r.__super__.trigger;
        var i = {
          open: "opening",
          close: "closing",
          select: "selecting",
          unselect: "unselecting",
          clear: "clearing"
        };
        if (t === undefined) {
          t = {};
        }
        if (e in i) {
          var o = i[e];
          var a = {
            prevented: false,
            name: e,
            args: t
          };
          n.call(this, o, a);
          if (a.prevented) {
            return void (t.prevented = true);
          }
        }
        n.call(this, e, t);
      };
      r.prototype.toggleDropdown = function () {
        if (!this.isDisabled()) {
          if (this.isOpen()) {
            this.close();
          } else {
            this.open();
          }
        }
      };
      r.prototype.open = function () {
        if (!(this.isOpen() || this.isDisabled())) {
          this.trigger("query", {});
        }
      };
      r.prototype.close = function (e) {
        if (this.isOpen()) {
          this.trigger("close", {
            originalEvent: e
          });
        }
      };
      r.prototype.isEnabled = function () {
        return !this.isDisabled();
      };
      r.prototype.isDisabled = function () {
        return this.options.get("disabled");
      };
      r.prototype.isOpen = function () {
        return this.$container.hasClass("select2-container--open");
      };
      r.prototype.hasFocus = function () {
        return this.$container.hasClass("select2-container--focus");
      };
      r.prototype.focus = function (e) {
        if (!this.hasFocus()) {
          this.$container.addClass("select2-container--focus");
          this.trigger("focus", {});
        }
      };
      r.prototype.enable = function (e) {
        if (this.options.get("debug") && window.console && console.warn) {
          console.warn("Select2: The `select2(\"enable\")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop(\"disabled\") instead.");
        }
        if (!(e != null && e.length !== 0)) {
          e = [true];
        }
        var t = !e[0];
        this.$element.prop("disabled", t);
      };
      r.prototype.data = function () {
        if (this.options.get("debug") && arguments.length > 0 && window.console && console.warn) {
          console.warn("Select2: Data can no longer be set using `select2(\"data\")`. You should consider setting the value instead using `$element.val()`.");
        }
        var e = [];
        this.dataAdapter.current(function (t) {
          e = t;
        });
        return e;
      };
      r.prototype.val = function (t) {
        if (this.options.get("debug") && window.console && console.warn) {
          console.warn("Select2: The `select2(\"val\")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.");
        }
        if (t == null || t.length === 0) {
          return this.$element.val();
        }
        var n = t[0];
        if (e.isArray(n)) {
          n = e.map(n, function (e) {
            return e.toString();
          });
        }
        this.$element.val(n).trigger("input").trigger("change");
      };
      r.prototype.destroy = function () {
        this.$container.remove();
        if (this.$element[0].detachEvent) {
          this.$element[0].detachEvent("onpropertychange", this._syncA);
        }
        if (this._observer != null) {
          this._observer.disconnect();
          this._observer = null;
        } else if (this.$element[0].removeEventListener) {
          this.$element[0].removeEventListener("DOMAttrModified", this._syncA, false);
          this.$element[0].removeEventListener("DOMNodeInserted", this._syncS, false);
          this.$element[0].removeEventListener("DOMNodeRemoved", this._syncS, false);
        }
        this._syncA = null;
        this._syncS = null;
        this.$element.off(".select2");
        this.$element.attr("tabindex", n.GetData(this.$element[0], "old-tabindex"));
        this.$element.removeClass("select2-hidden-accessible");
        this.$element.attr("aria-hidden", "false");
        n.RemoveData(this.$element[0]);
        this.$element.removeData("select2");
        this.dataAdapter.destroy();
        this.selection.destroy();
        this.dropdown.destroy();
        this.results.destroy();
        this.dataAdapter = null;
        this.selection = null;
        this.dropdown = null;
        this.results = null;
      };
      r.prototype.render = function () {
        var t = e("<span class=\"select2 select2-container\"><span class=\"selection\"></span><span class=\"dropdown-wrapper\" aria-hidden=\"true\"></span></span>");
        t.attr("dir", this.options.get("dir"));
        this.$container = t;
        this.$container.addClass("select2-container--" + this.options.get("theme"));
        n.StoreData(t[0], "element", this.$element);
        return t;
      };
      return r;
    });
    t.define("select2/compat/utils", ["jquery"], function (e) {
      return {
        syncCssClasses: function (t, n, i) {
          var r;
          var o;
          var a = [];
          if (r = e.trim(t.attr("class"))) {
            e((r = "" + r).split(/\s+/)).each(function () {
              if (this.indexOf("select2-") === 0) {
                a.push(this);
              }
            });
          }
          if (r = e.trim(n.attr("class"))) {
            e((r = "" + r).split(/\s+/)).each(function () {
              if (this.indexOf("select2-") !== 0 && (o = i(this)) != null) {
                a.push(o);
              }
            });
          }
          t.attr("class", a.join(" "));
        }
      };
    });
    t.define("select2/compat/containerCss", ["jquery", "./utils"], function (e, t) {
      function n(e) {
        return null;
      }
      function i() {}
      i.prototype.render = function (i) {
        var r = i.call(this);
        var o = this.options.get("containerCssClass") || "";
        if (e.isFunction(o)) {
          o = o(this.$element);
        }
        var a = this.options.get("adaptContainerCssClass");
        a = a || n;
        if (o.indexOf(":all:") !== -1) {
          o = o.replace(":all:", "");
          var s = a;
          a = function (e) {
            var t = s(e);
            if (t != null) {
              return t + " " + e;
            } else {
              return e;
            }
          };
        }
        var l = this.options.get("containerCss") || {};
        if (e.isFunction(l)) {
          l = l(this.$element);
        }
        t.syncCssClasses(r, this.$element, a);
        r.css(l);
        r.addClass(o);
        return r;
      };
      return i;
    });
    t.define("select2/compat/dropdownCss", ["jquery", "./utils"], function (e, t) {
      function n(e) {
        return null;
      }
      function i() {}
      i.prototype.render = function (i) {
        var r = i.call(this);
        var o = this.options.get("dropdownCssClass") || "";
        if (e.isFunction(o)) {
          o = o(this.$element);
        }
        var a = this.options.get("adaptDropdownCssClass");
        a = a || n;
        if (o.indexOf(":all:") !== -1) {
          o = o.replace(":all:", "");
          var s = a;
          a = function (e) {
            var t = s(e);
            if (t != null) {
              return t + " " + e;
            } else {
              return e;
            }
          };
        }
        var l = this.options.get("dropdownCss") || {};
        if (e.isFunction(l)) {
          l = l(this.$element);
        }
        t.syncCssClasses(r, this.$element, a);
        r.css(l);
        r.addClass(o);
        return r;
      };
      return i;
    });
    t.define("select2/compat/initSelection", ["jquery"], function (e) {
      function t(e, t, n) {
        if (n.get("debug") && window.console && console.warn) {
          console.warn("Select2: The `initSelection` option has been deprecated in favor of a custom data adapter that overrides the `current` method. This method is now called multiple times instead of a single time when the instance is initialized. Support will be removed for the `initSelection` option in future versions of Select2");
        }
        this.initSelection = n.get("initSelection");
        this._isInitialized = false;
        e.call(this, t, n);
      }
      t.prototype.current = function (t, n) {
        var i = this;
        if (this._isInitialized) {
          t.call(this, n);
        } else {
          this.initSelection.call(null, this.$element, function (t) {
            i._isInitialized = true;
            if (!e.isArray(t)) {
              t = [t];
            }
            n(t);
          });
        }
      };
      return t;
    });
    t.define("select2/compat/inputData", ["jquery", "../utils"], function (e, t) {
      function n(e, t, n) {
        this._currentData = [];
        this._valueSeparator = n.get("valueSeparator") || ",";
        if (t.prop("type") === "hidden" && n.get("debug") && console && console.warn) {
          console.warn("Select2: Using a hidden input with Select2 is no longer supported and may stop working in the future. It is recommended to use a `<select>` element instead.");
        }
        e.call(this, t, n);
      }
      n.prototype.current = function (t, n) {
        function i(t, n) {
          var r = [];
          if (t.selected || e.inArray(t.id, n) !== -1) {
            t.selected = true;
            r.push(t);
          } else {
            t.selected = false;
          }
          if (t.children) {
            r.push.apply(r, i(t.children, n));
          }
          return r;
        }
        for (var r = [], o = 0; o < this._currentData.length; o++) {
          var a = this._currentData[o];
          r.push.apply(r, i(a, this.$element.val().split(this._valueSeparator)));
        }
        n(r);
      };
      n.prototype.select = function (t, n) {
        if (this.options.get("multiple")) {
          var i = this.$element.val();
          i += this._valueSeparator + n.id;
          this.$element.val(i);
          this.$element.trigger("input").trigger("change");
        } else {
          this.current(function (t) {
            e.map(t, function (e) {
              e.selected = false;
            });
          });
          this.$element.val(n.id);
          this.$element.trigger("input").trigger("change");
        }
      };
      n.prototype.unselect = function (e, t) {
        var n = this;
        t.selected = false;
        this.current(function (e) {
          for (var i = [], r = 0; r < e.length; r++) {
            var o = e[r];
            if (t.id != o.id) {
              i.push(o.id);
            }
          }
          n.$element.val(i.join(n._valueSeparator));
          n.$element.trigger("input").trigger("change");
        });
      };
      n.prototype.query = function (e, t, n) {
        for (var i = [], r = 0; r < this._currentData.length; r++) {
          var o = this._currentData[r];
          var a = this.matches(t, o);
          if (a !== null) {
            i.push(a);
          }
        }
        n({
          results: i
        });
      };
      n.prototype.addOptions = function (n, i) {
        var r = e.map(i, function (e) {
          return t.GetData(e[0], "data");
        });
        this._currentData.push.apply(this._currentData, r);
      };
      return n;
    });
    t.define("select2/compat/matcher", ["jquery"], function (e) {
      return function (t) {
        return function (n, i) {
          var r = e.extend(true, {}, i);
          if (n.term == null || e.trim(n.term) === "") {
            return r;
          }
          if (i.children) {
            for (var o = i.children.length - 1; o >= 0; o--) {
              var a = i.children[o];
              if (!t(n.term, a.text, a)) {
                r.children.splice(o, 1);
              }
            }
            if (r.children.length > 0) {
              return r;
            }
          }
          if (t(n.term, i.text, i)) {
            return r;
          } else {
            return null;
          }
        };
      };
    });
    t.define("select2/compat/query", [], function () {
      function e(e, t, n) {
        if (n.get("debug") && window.console && console.warn) {
          console.warn("Select2: The `query` option has been deprecated in favor of a custom data adapter that overrides the `query` method. Support will be removed for the `query` option in future versions of Select2.");
        }
        e.call(this, t, n);
      }
      e.prototype.query = function (e, t, n) {
        t.callback = n;
        this.options.get("query").call(null, t);
      };
      return e;
    });
    t.define("select2/dropdown/attachContainer", [], function () {
      function e(e, t, n) {
        e.call(this, t, n);
      }
      e.prototype.position = function (e, t, n) {
        n.find(".dropdown-wrapper").append(t);
        t.addClass("select2-dropdown--below");
        n.addClass("select2-container--below");
      };
      return e;
    });
    t.define("select2/dropdown/stopPropagation", [], function () {
      function e() {}
      e.prototype.bind = function (e, t, n) {
        e.call(this, t, n);
        this.$dropdown.on(["blur", "change", "click", "dblclick", "focus", "focusin", "focusout", "input", "keydown", "keyup", "keypress", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseover", "mouseup", "search", "touchend", "touchstart"].join(" "), function (e) {
          e.stopPropagation();
        });
      };
      return e;
    });
    t.define("select2/selection/stopPropagation", [], function () {
      function e() {}
      e.prototype.bind = function (e, t, n) {
        e.call(this, t, n);
        this.$selection.on(["blur", "change", "click", "dblclick", "focus", "focusin", "focusout", "input", "keydown", "keyup", "keypress", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseover", "mouseup", "search", "touchend", "touchstart"].join(" "), function (e) {
          e.stopPropagation();
        });
      };
      return e;
    });
    v = function (e) {
      var t;
      var n;
      var i = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"];
      var r = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"];
      var o = Array.prototype.slice;
      if (e.event.fixHooks) {
        for (var a = i.length; a;) {
          e.event.fixHooks[i[--a]] = e.event.mouseHooks;
        }
      }
      var s = e.event.special.mousewheel = {
        version: "3.1.12",
        setup: function () {
          if (this.addEventListener) {
            for (var t = r.length; t;) {
              this.addEventListener(r[--t], l, false);
            }
          } else {
            this.onmousewheel = l;
          }
          e.data(this, "mousewheel-line-height", s.getLineHeight(this));
          e.data(this, "mousewheel-page-height", s.getPageHeight(this));
        },
        teardown: function () {
          if (this.removeEventListener) {
            for (var t = r.length; t;) {
              this.removeEventListener(r[--t], l, false);
            }
          } else {
            this.onmousewheel = null;
          }
          e.removeData(this, "mousewheel-line-height");
          e.removeData(this, "mousewheel-page-height");
        },
        getLineHeight: function (t) {
          var n = e(t);
          var i = n["offsetParent" in e.fn ? "offsetParent" : "parent"]();
          if (!i.length) {
            i = e("body");
          }
          return parseInt(i.css("fontSize"), 10) || parseInt(n.css("fontSize"), 10) || 16;
        },
        getPageHeight: function (t) {
          return e(t).height();
        },
        settings: {
          adjustOldDeltas: true,
          normalizeOffset: true
        }
      };
      function l(i) {
        var r;
        var a = i || window.event;
        var l = o.call(arguments, 1);
        var d = 0;
        var h = 0;
        var f = 0;
        var p = 0;
        var g = 0;
        (i = e.event.fix(a)).type = "mousewheel";
        if ("detail" in a) {
          f = a.detail * -1;
        }
        if ("wheelDelta" in a) {
          f = a.wheelDelta;
        }
        if ("wheelDeltaY" in a) {
          f = a.wheelDeltaY;
        }
        if ("wheelDeltaX" in a) {
          h = a.wheelDeltaX * -1;
        }
        if ("axis" in a && a.axis === a.HORIZONTAL_AXIS) {
          h = f * -1;
          f = 0;
        }
        d = f === 0 ? h : f;
        if ("deltaY" in a) {
          d = f = a.deltaY * -1;
        }
        if ("deltaX" in a) {
          h = a.deltaX;
          if (f === 0) {
            d = h * -1;
          }
        }
        if (f !== 0 || h !== 0) {
          if (a.deltaMode === 1) {
            var m = e.data(this, "mousewheel-line-height");
            d *= m;
            f *= m;
            h *= m;
          } else if (a.deltaMode === 2) {
            var v = e.data(this, "mousewheel-page-height");
            d *= v;
            f *= v;
            h *= v;
          }
          r = Math.max(Math.abs(f), Math.abs(h));
          if ((!n || r < n) && u(a, n = r)) {
            n /= 40;
          }
          if (u(a, r)) {
            d /= 40;
            h /= 40;
            f /= 40;
          }
          d = Math[d >= 1 ? "floor" : "ceil"](d / n);
          h = Math[h >= 1 ? "floor" : "ceil"](h / n);
          f = Math[f >= 1 ? "floor" : "ceil"](f / n);
          if (s.settings.normalizeOffset && this.getBoundingClientRect) {
            var y = this.getBoundingClientRect();
            p = i.clientX - y.left;
            g = i.clientY - y.top;
          }
          i.deltaX = h;
          i.deltaY = f;
          i.deltaFactor = n;
          i.offsetX = p;
          i.offsetY = g;
          i.deltaMode = 0;
          l.unshift(i, d, h, f);
          if (t) {
            clearTimeout(t);
          }
          t = setTimeout(c, 200);
          return (e.event.dispatch || e.event.handle).apply(this, l);
        }
      }
      function c() {
        n = null;
      }
      function u(e, t) {
        return s.settings.adjustOldDeltas && e.type === "mousewheel" && t % 120 == 0;
      }
      e.fn.extend({
        mousewheel: function (e) {
          if (e) {
            return this.bind("mousewheel", e);
          } else {
            return this.trigger("mousewheel");
          }
        },
        unmousewheel: function (e) {
          return this.unbind("mousewheel", e);
        }
      });
    };
    if (typeof t.define == "function" && t.define.amd) {
      t.define("jquery-mousewheel", ["jquery"], v);
    } else if (typeof exports == "object") {
      module.exports = v;
    } else {
      v(e);
    }
    t.define("jquery.select2", ["jquery", "jquery-mousewheel", "./select2/core", "./select2/defaults", "./select2/utils"], function (e, t, n, i, r) {
      if (e.fn.select2 == null) {
        var o = ["open", "close", "destroy"];
        e.fn.select2 = function (t) {
          if (typeof (t = t || {}) == "object") {
            this.each(function () {
              var i = e.extend(true, {}, t);
              new n(e(this), i);
            });
            return this;
          }
          if (typeof t != "string") {
            throw new Error("Invalid arguments for Select2: " + t);
          }
          var i;
          var a = Array.prototype.slice.call(arguments, 1);
          this.each(function () {
            var e = r.GetData(this, "select2");
            if (e == null && window.console && console.error) {
              console.error("The select2('" + t + "') method was called on an element that is not using Select2.");
            }
            i = e[t].apply(e, a);
          });
          if (e.inArray(t, o) > -1) {
            return this;
          } else {
            return i;
          }
        };
      }
      if (e.fn.select2.defaults == null) {
        e.fn.select2.defaults = i;
      }
      return n;
    });
    return {
      define: t.define,
      require: t.require
    };
  }();
  var n = t.require("jquery.select2");
  e.fn.select2.amd = t;
  return n;
});
(function (e, t) {
  if (typeof exports == "object" && typeof module != "undefined") {
    module.exports = t();
  } else if (typeof define == "function" && define.amd) {
    define(t);
  } else {
    (e = e || self).Sweetalert2 = t();
  }
})(this, function () {
  "use strict";

  function e(t) {
    return (e = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (e) {
      return typeof e;
    } : function (e) {
      if (e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype) {
        return "symbol";
      } else {
        return typeof e;
      }
    })(t);
  }
  function t(e, t) {
    if (!(e instanceof t)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function n(e, t) {
    for (var n = 0; n < t.length; n++) {
      var i = t[n];
      i.enumerable = i.enumerable || false;
      i.configurable = true;
      if ("value" in i) {
        i.writable = true;
      }
      Object.defineProperty(e, i.key, i);
    }
  }
  function i(e, t, i) {
    if (t) {
      n(e.prototype, t);
    }
    if (i) {
      n(e, i);
    }
    return e;
  }
  function r() {
    return (r = Object.assign || function (e) {
      for (var t = 1; t < arguments.length; t++) {
        var n = arguments[t];
        for (var i in n) {
          if (Object.prototype.hasOwnProperty.call(n, i)) {
            e[i] = n[i];
          }
        }
      }
      return e;
    }).apply(this, arguments);
  }
  function o(e) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
      return e.__proto__ || Object.getPrototypeOf(e);
    })(e);
  }
  function a(e, t) {
    return (a = Object.setPrototypeOf || function (e, t) {
      e.__proto__ = t;
      return e;
    })(e, t);
  }
  function s() {
    if (typeof Reflect == "undefined" || !Reflect.construct) {
      return false;
    }
    if (Reflect.construct.sham) {
      return false;
    }
    if (typeof Proxy == "function") {
      return true;
    }
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }
  function l(e, t, n) {
    return (l = s() ? Reflect.construct : function (e, t, n) {
      var i = [null];
      i.push.apply(i, t);
      var r = new (Function.bind.apply(e, i))();
      if (n) {
        a(r, n.prototype);
      }
      return r;
    }).apply(null, arguments);
  }
  function c(e, t) {
    if (!t || typeof t != "object" && typeof t != "function") {
      return function (e) {
        if (e === undefined) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
      }(e);
    } else {
      return t;
    }
  }
  function u(e, t, n) {
    return (u = typeof Reflect != "undefined" && Reflect.get ? Reflect.get : function (e, t, n) {
      var i = function (e, t) {
        for (; !Object.prototype.hasOwnProperty.call(e, t) && (e = o(e)) !== null;);
        return e;
      }(e, t);
      if (i) {
        var r = Object.getOwnPropertyDescriptor(i, t);
        if (r.get) {
          return r.get.call(n);
        } else {
          return r.value;
        }
      }
    })(e, t, n || e);
  }
  function d(e) {
    return Object.keys(e).map(function (t) {
      return e[t];
    });
  }
  function h(e) {
    return Array.prototype.slice.call(e);
  }
  function f(e, t) {
    var n;
    n = "\"".concat(e, "\" is deprecated and will be removed in the next major release. Please use \"").concat(t, "\" instead.");
    if (W.indexOf(n) === -1) {
      W.push(n);
      B(n);
    }
  }
  function p(e) {
    return e && typeof e.toPromise == "function";
  }
  function g(e) {
    if (p(e)) {
      return e.toPromise();
    } else {
      return Promise.resolve(e);
    }
  }
  function m(e) {
    return e && Promise.resolve(e) === e;
  }
  function v(t) {
    return t instanceof Element || e(n = t) === "object" && n.jquery;
    var n;
  }
  function y(e) {
    var t = {};
    for (var n in e) {
      t[e[n]] = "swal2-" + e[n];
    }
    return t;
  }
  function b(e) {
    var t = G();
    if (t) {
      return t.querySelector(e);
    } else {
      return null;
    }
  }
  function w(e) {
    return b(".".concat(e));
  }
  function x() {
    return h(K().querySelectorAll(".".concat(Y.icon)));
  }
  function _() {
    var e = x().filter(function (e) {
      return me(e);
    });
    if (e.length) {
      return e[0];
    } else {
      return null;
    }
  }
  function C() {
    return w(Y.title);
  }
  function S() {
    return w(Y.content);
  }
  function k() {
    return w(Y.image);
  }
  function T() {
    return w(Y["progress-steps"]);
  }
  function A() {
    return w(Y["validation-message"]);
  }
  function D() {
    return b(".".concat(Y.actions, " .").concat(Y.confirm));
  }
  function E() {
    return b(".".concat(Y.actions, " .").concat(Y.cancel));
  }
  function O() {
    return w(Y.actions);
  }
  function M() {
    return w(Y.header);
  }
  function I() {
    return w(Y.footer);
  }
  function P() {
    return w(Y["timer-progress-bar"]);
  }
  function L() {
    return w(Y.close);
  }
  function N() {
    var e = h(K().querySelectorAll("[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])")).sort(function (e, t) {
      e = parseInt(e.getAttribute("tabindex"));
      if ((t = parseInt(t.getAttribute("tabindex"))) < e) {
        return 1;
      } else if (e < t) {
        return -1;
      } else {
        return 0;
      }
    });
    var t = h(K().querySelectorAll("\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n")).filter(function (e) {
      return e.getAttribute("tabindex") !== "-1";
    });
    return function (e) {
      for (var t = [], n = 0; n < e.length; n++) {
        if (t.indexOf(e[n]) === -1) {
          t.push(e[n]);
        }
      }
      return t;
    }(e.concat(t)).filter(function (e) {
      return me(e);
    });
  }
  function F() {
    return !Q() && !document.body.classList.contains(Y["no-backdrop"]);
  }
  function R() {
    return K().hasAttribute("data-loading");
  }
  function j(e, t) {
    var n;
    e.textContent = "";
    if (t) {
      h((n = new DOMParser().parseFromString(t, "text/html")).querySelector("head").childNodes).forEach(function (t) {
        e.appendChild(t);
      });
      h(n.querySelector("body").childNodes).forEach(function (t) {
        e.appendChild(t);
      });
    }
  }
  function $(e, t) {
    if (t) {
      for (var n = t.split(/\s+/), i = 0; i < n.length; i++) {
        if (!e.classList.contains(n[i])) {
          return;
        }
      }
      return 1;
    }
  }
  function z(t, n, i) {
    var r;
    var o;
    o = n;
    h((r = t).classList).forEach(function (e) {
      if (d(Y).indexOf(e) === -1 && d(X).indexOf(e) === -1 && d(o.showClass).indexOf(e) === -1) {
        r.classList.remove(e);
      }
    });
    if (n.customClass && n.customClass[i]) {
      if (typeof n.customClass[i] != "string" && !n.customClass[i].forEach) {
        return B("Invalid type of customClass.".concat(i, "! Expected string or iterable object, got \"").concat(e(n.customClass[i]), "\""));
      }
      fe(t, n.customClass[i]);
    }
  }
  var H = "SweetAlert2:";
  var B = function (e) {
    console.warn("".concat(H, " ").concat(e));
  };
  var q = function (e) {
    console.error("".concat(H, " ").concat(e));
  };
  var W = [];
  var U = function (e) {
    if (typeof e == "function") {
      return e();
    } else {
      return e;
    }
  };
  var V = Object.freeze({
    cancel: "cancel",
    backdrop: "backdrop",
    close: "close",
    esc: "esc",
    timer: "timer"
  });
  var Y = y(["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "toast-column", "show", "hide", "close", "title", "header", "content", "html-container", "actions", "confirm", "cancel", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error"]);
  var X = y(["success", "warning", "info", "question", "error"]);
  var G = function () {
    return document.body.querySelector(".".concat(Y.container));
  };
  var K = function () {
    return w(Y.popup);
  };
  var Q = function () {
    return document.body.classList.contains(Y["toast-shown"]);
  };
  var Z = {
    previousBodyPadding: null
  };
  function J(e, t) {
    if (!t) {
      return null;
    }
    switch (t) {
      case "select":
      case "textarea":
      case "file":
        return ge(e, Y[t]);
      case "checkbox":
        return e.querySelector(".".concat(Y.checkbox, " input"));
      case "radio":
        return e.querySelector(".".concat(Y.radio, " input:checked")) || e.querySelector(".".concat(Y.radio, " input:first-child"));
      case "range":
        return e.querySelector(".".concat(Y.range, " input"));
      default:
        return ge(e, Y.input);
    }
  }
  function ee(e) {
    var t;
    e.focus();
    if (e.type !== "file") {
      t = e.value;
      e.value = "";
      e.value = t;
    }
  }
  function te(e, t, n) {
    if (e && t) {
      if (typeof t == "string") {
        t = t.split(/\s+/).filter(Boolean);
      }
      t.forEach(function (t) {
        if (e.forEach) {
          e.forEach(function (e) {
            if (n) {
              e.classList.add(t);
            } else {
              e.classList.remove(t);
            }
          });
        } else if (n) {
          e.classList.add(t);
        } else {
          e.classList.remove(t);
        }
      });
    }
  }
  function ne(e, t, n) {
    if (n || parseInt(n) === 0) {
      e.style[t] = typeof n == "number" ? "".concat(n, "px") : n;
    } else {
      e.style.removeProperty(t);
    }
  }
  function ie(e, t) {
    var n = arguments.length > 1 && t !== undefined ? t : "flex";
    e.style.opacity = "";
    e.style.display = n;
  }
  function re(e) {
    e.style.opacity = "";
    e.style.display = "none";
  }
  function oe(e, t, n) {
    if (t) {
      ie(e, n);
    } else {
      re(e);
    }
  }
  function ae(e) {
    return !!(e.scrollHeight > e.clientHeight);
  }
  function se(e) {
    var t = window.getComputedStyle(e);
    var n = parseFloat(t.getPropertyValue("animation-duration") || "0");
    var i = parseFloat(t.getPropertyValue("transition-duration") || "0");
    return n > 0 || i > 0;
  }
  function le(e, t) {
    var n = arguments.length > 1 && t !== undefined && t;
    var i = P();
    if (me(i)) {
      if (n) {
        i.style.transition = "none";
        i.style.width = "100%";
      }
      setTimeout(function () {
        i.style.transition = "width ".concat(e / 1000, "s linear");
        i.style.width = "0%";
      }, 10);
    }
  }
  function ce() {
    return typeof window == "undefined" || typeof document == "undefined";
  }
  function ue(e) {
    if (jt.isVisible() && he !== e.target.value) {
      jt.resetValidationMessage();
    }
    he = e.target.value;
  }
  function de(t, n) {
    if (t instanceof HTMLElement) {
      n.appendChild(t);
    } else if (e(t) === "object") {
      ye(t, n);
    } else if (t) {
      j(n, t);
    }
  }
  var he;
  var fe = function (e, t) {
    te(e, t, true);
  };
  var pe = function (e, t) {
    te(e, t, false);
  };
  var ge = function (e, t) {
    for (var n = 0; n < e.childNodes.length; n++) {
      if ($(e.childNodes[n], t)) {
        return e.childNodes[n];
      }
    }
  };
  var me = function (e) {
    return !(!e || !(e.offsetWidth || e.offsetHeight || e.getClientRects().length));
  };
  var ve = "\n <div aria-labelledby=\"".concat(Y.title, "\" aria-describedby=\"").concat(Y.content, "\" class=\"").concat(Y.popup, "\" tabindex=\"-1\">\n   <div class=\"").concat(Y.header, "\">\n     <ul class=\"").concat(Y["progress-steps"], "\"></ul>\n     <div class=\"").concat(Y.icon, " ").concat(X.error, "\"></div>\n     <div class=\"").concat(Y.icon, " ").concat(X.question, "\"></div>\n     <div class=\"").concat(Y.icon, " ").concat(X.warning, "\"></div>\n     <div class=\"").concat(Y.icon, " ").concat(X.info, "\"></div>\n     <div class=\"").concat(Y.icon, " ").concat(X.success, "\"></div>\n     <img class=\"").concat(Y.image, "\" />\n     <h2 class=\"").concat(Y.title, "\" id=\"").concat(Y.title, "\"></h2>\n     <button type=\"button\" class=\"").concat(Y.close, "\"></button>\n   </div>\n   <div class=\"").concat(Y.content, "\">\n     <div id=\"").concat(Y.content, "\" class=\"").concat(Y["html-container"], "\"></div>\n     <input class=\"").concat(Y.input, "\" />\n     <input type=\"file\" class=\"").concat(Y.file, "\" />\n     <div class=\"").concat(Y.range, "\">\n       <input type=\"range\" />\n       <output></output>\n     </div>\n     <select class=\"").concat(Y.select, "\"></select>\n     <div class=\"").concat(Y.radio, "\"></div>\n     <label for=\"").concat(Y.checkbox, "\" class=\"").concat(Y.checkbox, "\">\n       <input type=\"checkbox\" />\n       <span class=\"").concat(Y.label, "\"></span>\n     </label>\n     <textarea class=\"").concat(Y.textarea, "\"></textarea>\n     <div class=\"").concat(Y["validation-message"], "\" id=\"").concat(Y["validation-message"], "\"></div>\n   </div>\n   <div class=\"").concat(Y.actions, "\">\n     <button type=\"button\" class=\"").concat(Y.confirm, "\">OK</button>\n     <button type=\"button\" class=\"").concat(Y.cancel, "\">Cancel</button>\n   </div>\n   <div class=\"").concat(Y.footer, "\"></div>\n   <div class=\"").concat(Y["timer-progress-bar-container"], "\">\n     <div class=\"").concat(Y["timer-progress-bar"], "\"></div>\n   </div>\n </div>\n").replace(/(^|\n)\s*/g, "");
  var ye = function (e, t) {
    if (e.jquery) {
      be(t, e);
    } else {
      j(t, e.toString());
    }
  };
  var be = function (e, t) {
    e.textContent = "";
    if (0 in t) {
      for (var n = 0; (n in t); n++) {
        e.appendChild(t[n].cloneNode(true));
      }
    } else {
      e.appendChild(t.cloneNode(true));
    }
  };
  var we = function () {
    if (ce()) {
      return false;
    }
    var e = document.createElement("div");
    var t = {
      WebkitAnimation: "webkitAnimationEnd",
      OAnimation: "oAnimationEnd oanimationend",
      animation: "animationend"
    };
    for (var n in t) {
      if (Object.prototype.hasOwnProperty.call(t, n) && e.style[n] !== undefined) {
        return t[n];
      }
    }
    return false;
  }();
  function xe(e, t, n) {
    var i;
    oe(e, n["show".concat((i = t).charAt(0).toUpperCase() + i.slice(1), "Button")], "inline-block");
    j(e, n["".concat(t, "ButtonText")]);
    e.setAttribute("aria-label", n["".concat(t, "ButtonAriaLabel")]);
    e.className = Y[t];
    z(e, n, "".concat(t, "Button"));
    fe(e, n["".concat(t, "ButtonClass")]);
  }
  function _e(e, t) {
    if (!(e.placeholder && !t.inputPlaceholder)) {
      e.placeholder = t.inputPlaceholder;
    }
  }
  var Ce = {
    promise: new WeakMap(),
    innerParams: new WeakMap(),
    domCache: new WeakMap()
  };
  var Se = ["input", "file", "range", "select", "radio", "checkbox", "textarea"];
  var ke = function (e) {
    var t = Y[e] ? Y[e] : Y.input;
    return ge(S(), t);
  };
  var Te = {};
  function Ae(e, t) {
    var n;
    var i;
    var r;
    var o;
    var a;
    var s = S().querySelector("#".concat(Y.content));
    if (t.html) {
      de(t.html, s);
      ie(s, "block");
    } else if (t.text) {
      s.textContent = t.text;
      ie(s, "block");
    } else {
      re(s);
    }
    n = e;
    i = t;
    r = S();
    o = Ce.innerParams.get(n);
    a = !o || i.input !== o.input;
    Se.forEach(function (e) {
      var t = Y[e];
      var n = ge(r, t);
      (function (e, t) {
        var n = J(S(), e);
        if (n) {
          (function (e) {
            for (var t = 0; t < e.attributes.length; t++) {
              var n = e.attributes[t].name;
              if (["type", "value", "style"].indexOf(n) === -1) {
                e.removeAttribute(n);
              }
            }
          })(n);
          for (var i in t) {
            if (!(e === "range" && i === "placeholder")) {
              n.setAttribute(i, t[i]);
            }
          }
        }
      })(e, i.inputAttributes);
      n.className = t;
      if (a) {
        re(n);
      }
    });
    if (i.input) {
      if (a) {
        (function (e) {
          if (!Te[e.input]) {
            return q("Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"".concat(e.input, "\""));
          }
          var t = ke(e.input);
          var n = Te[e.input](t, e);
          ie(n);
          setTimeout(function () {
            ee(n);
          });
        })(i);
      }
      (function (e) {
        var t = ke(e.input);
        if (e.customClass) {
          fe(t, e.customClass.input);
        }
      })(i);
    }
    z(S(), t, "content");
  }
  function De() {
    return G() && G().getAttribute("data-queue-step");
  }
  function Ee(e, t) {
    var n;
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c;
    z(M(), t, "header");
    (function (e, t) {
      var n = T();
      if (!t.progressSteps || t.progressSteps.length === 0) {
        re(n);
        return 0;
      }
      ie(n);
      n.textContent = "";
      var i = parseInt(t.currentProgressStep === undefined ? De() : t.currentProgressStep);
      if (i >= t.progressSteps.length) {
        B("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)");
      }
      t.progressSteps.forEach(function (e, r) {
        var o;
        var a;
        var s;
        var l;
        var c;
        o = e;
        a = document.createElement("li");
        fe(a, Y["progress-step"]);
        j(a, o);
        var u = a;
        n.appendChild(u);
        if (r === i) {
          fe(u, Y["active-progress-step"]);
        }
        if (r !== t.progressSteps.length - 1) {
          l = t;
          c = document.createElement("li");
          fe(c, Y["progress-step-line"]);
          if (l.progressStepsDistance) {
            c.style.width = l.progressStepsDistance;
          }
          s = c;
          n.appendChild(s);
        }
      });
    })(0, t);
    n = e;
    i = t;
    if ((o = Ce.innerParams.get(n)) && i.icon === o.icon && _()) {
      z(_(), i, "icon");
    } else {
      Ie();
      if (i.icon) {
        if (Object.keys(X).indexOf(i.icon) !== -1) {
          ie(r = b(".".concat(Y.icon, ".").concat(X[i.icon])));
          Le(r, i);
          Pe();
          z(r, i, "icon");
          fe(r, i.showClass.icon);
        } else {
          q("Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"".concat(i.icon, "\""));
        }
      }
    }
    (function (e) {
      var t = k();
      if (!e.imageUrl) {
        return re(t);
      }
      ie(t, "");
      t.setAttribute("src", e.imageUrl);
      t.setAttribute("alt", e.imageAlt);
      ne(t, "width", e.imageWidth);
      ne(t, "height", e.imageHeight);
      t.className = Y.image;
      z(t, e, "image");
    })(t);
    a = t;
    oe(s = C(), a.title || a.titleText);
    if (a.title) {
      de(a.title, s);
    }
    if (a.titleText) {
      s.innerText = a.titleText;
    }
    z(s, a, "title");
    l = t;
    j(c = L(), l.closeButtonHtml);
    z(c, l, "closeButton");
    oe(c, l.showCloseButton);
    c.setAttribute("aria-label", l.closeButtonAriaLabel);
  }
  function Oe(e, t) {
    var n;
    var i;
    var r;
    var o;
    n = t;
    ne(i = K(), "width", n.width);
    ne(i, "padding", n.padding);
    if (n.background) {
      i.style.background = n.background;
    }
    Re(i, n);
    (function (e, t) {
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u = G();
      if (u) {
        n = u;
        if (typeof (i = t.backdrop) == "string") {
          n.style.background = i;
        } else if (!i) {
          fe([document.documentElement, document.body], Y["no-backdrop"]);
        }
        if (!t.backdrop && t.allowOutsideClick) {
          B("\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`");
        }
        r = u;
        if ((o = t.position) in Y) {
          fe(r, Y[o]);
        } else {
          B("The \"position\" parameter is not valid, defaulting to \"center\"");
          fe(r, Y.center);
        }
        a = u;
        if (!(!(s = t.grow) || typeof s != "string")) {
          if ((l = "grow-".concat(s)) in Y) {
            fe(a, Y[l]);
          }
        }
        z(u, t, "container");
        if (c = document.body.getAttribute("data-swal2-queue-step")) {
          u.setAttribute("data-queue-step", c);
          document.body.removeAttribute("data-swal2-queue-step");
        }
      }
    })(0, t);
    Ee(e, t);
    Ae(e, t);
    (function (e, t) {
      var n = O();
      var i = D();
      var r = E();
      if (!(t.showConfirmButton || t.showCancelButton)) {
        re(n);
      }
      z(n, t, "actions");
      xe(i, "confirm", t);
      xe(r, "cancel", t);
      if (t.buttonsStyling) {
        (function (e, t, n) {
          var i;
          fe([e, t], Y.styled);
          if (n.confirmButtonColor) {
            e.style.backgroundColor = n.confirmButtonColor;
          }
          if (n.cancelButtonColor) {
            t.style.backgroundColor = n.cancelButtonColor;
          }
          if (!R()) {
            i = window.getComputedStyle(e).getPropertyValue("background-color");
            e.style.borderLeftColor = i;
            e.style.borderRightColor = i;
          }
        })(i, r, t);
      } else {
        pe([i, r], Y.styled);
        i.style.backgroundColor = i.style.borderLeftColor = i.style.borderRightColor = "";
        r.style.backgroundColor = r.style.borderLeftColor = r.style.borderRightColor = "";
      }
      if (t.reverseButtons) {
        i.parentNode.insertBefore(r, i);
      }
    })(0, t);
    r = t;
    oe(o = I(), r.footer);
    if (r.footer) {
      de(r.footer, o);
    }
    z(o, r, "footer");
    if (typeof t.onRender == "function") {
      t.onRender(K());
    }
  }
  function Me() {
    return D() && D().click();
  }
  Te.text = Te.email = Te.password = Te.number = Te.tel = Te.url = function (t, n) {
    if (typeof n.inputValue == "string" || typeof n.inputValue == "number") {
      t.value = n.inputValue;
    } else if (!m(n.inputValue)) {
      B("Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"".concat(e(n.inputValue), "\""));
    }
    _e(t, n);
    t.type = n.input;
    return t;
  };
  Te.file = function (e, t) {
    _e(e, t);
    return e;
  };
  Te.range = function (e, t) {
    var n = e.querySelector("input");
    var i = e.querySelector("output");
    n.value = t.inputValue;
    n.type = t.input;
    i.value = t.inputValue;
    return e;
  };
  Te.select = function (e, t) {
    var n;
    e.textContent = "";
    if (t.inputPlaceholder) {
      j(n = document.createElement("option"), t.inputPlaceholder);
      n.value = "";
      n.disabled = true;
      n.selected = true;
      e.appendChild(n);
    }
    return e;
  };
  Te.radio = function (e) {
    e.textContent = "";
    return e;
  };
  Te.checkbox = function (e, t) {
    var n = J(S(), "checkbox");
    n.value = 1;
    n.id = Y.checkbox;
    n.checked = Boolean(t.inputValue);
    j(e.querySelector("span"), t.inputPlaceholder);
    return e;
  };
  Te.textarea = function (e, t) {
    var n;
    var i;
    e.value = t.inputValue;
    _e(e, t);
    if ("MutationObserver" in window) {
      n = parseInt(window.getComputedStyle(K()).width);
      i = parseInt(window.getComputedStyle(K()).paddingLeft) + parseInt(window.getComputedStyle(K()).paddingRight);
      new MutationObserver(function () {
        var t = e.offsetWidth + i;
        K().style.width = n < t ? "".concat(t, "px") : null;
      }).observe(e, {
        attributes: true,
        attributeFilter: ["style"]
      });
    }
    return e;
  };
  var Ie = function () {
    for (var e = x(), t = 0; t < e.length; t++) {
      re(e[t]);
    }
  };
  var Pe = function () {
    for (var e = K(), t = window.getComputedStyle(e).getPropertyValue("background-color"), n = e.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"), i = 0; i < n.length; i++) {
      n[i].style.backgroundColor = t;
    }
  };
  var Le = function (e, t) {
    e.textContent = "";
    if (t.iconHtml) {
      j(e, Ne(t.iconHtml));
    } else if (t.icon === "success") {
      j(e, "\n      <div class=\"swal2-success-circular-line-left\"></div>\n      <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n      <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n      <div class=\"swal2-success-circular-line-right\"></div>\n    ");
    } else if (t.icon === "error") {
      j(e, "\n      <span class=\"swal2-x-mark\">\n        <span class=\"swal2-x-mark-line-left\"></span>\n        <span class=\"swal2-x-mark-line-right\"></span>\n      </span>\n    ");
    } else {
      j(e, Ne({
        question: "?",
        warning: "!",
        info: "i"
      }[t.icon]));
    }
  };
  var Ne = function (e) {
    return "<div class=\"".concat(Y["icon-content"], "\">").concat(e, "</div>");
  };
  var Fe = [];
  var Re = function (e, t) {
    e.className = "".concat(Y.popup, " ").concat(me(e) ? t.showClass.popup : "");
    if (t.toast) {
      fe([document.documentElement, document.body], Y["toast-shown"]);
      fe(e, Y.toast);
    } else {
      fe(e, Y.modal);
    }
    z(e, t, "popup");
    if (typeof t.customClass == "string") {
      fe(e, t.customClass);
    }
    if (t.icon) {
      fe(e, Y["icon-".concat(t.icon)]);
    }
  };
  function je() {
    var e = K();
    if (!e) {
      jt.fire();
    }
    e = K();
    var t = O();
    var n = D();
    ie(t);
    ie(n, "inline-block");
    fe([e, t], Y.loading);
    n.disabled = true;
    e.setAttribute("data-loading", true);
    e.setAttribute("aria-busy", true);
    e.focus();
  }
  function $e() {
    if (qe.timeout) {
      (function () {
        var e = P();
        var t = parseInt(window.getComputedStyle(e).width);
        e.style.removeProperty("transition");
        e.style.width = "100%";
        var n = parseInt(window.getComputedStyle(e).width);
        var i = parseInt(t / n * 100);
        e.style.removeProperty("transition");
        e.style.width = "".concat(i, "%");
      })();
      return qe.timeout.stop();
    }
  }
  function ze() {
    if (qe.timeout) {
      var e = qe.timeout.start();
      le(e);
      return e;
    }
  }
  function He(e) {
    return Object.prototype.hasOwnProperty.call(We, e);
  }
  function Be(e) {
    return Ve[e];
  }
  var qe = {};
  var We = {
    title: "",
    titleText: "",
    text: "",
    html: "",
    footer: "",
    icon: undefined,
    iconHtml: undefined,
    toast: false,
    animation: true,
    showClass: {
      popup: "swal2-show",
      backdrop: "swal2-backdrop-show",
      icon: "swal2-icon-show"
    },
    hideClass: {
      popup: "swal2-hide",
      backdrop: "swal2-backdrop-hide",
      icon: "swal2-icon-hide"
    },
    customClass: undefined,
    target: "body",
    backdrop: true,
    heightAuto: true,
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
    stopKeydownPropagation: true,
    keydownListenerCapture: false,
    showConfirmButton: true,
    showCancelButton: false,
    preConfirm: undefined,
    confirmButtonText: "OK",
    confirmButtonAriaLabel: "",
    confirmButtonColor: undefined,
    cancelButtonText: "Cancel",
    cancelButtonAriaLabel: "",
    cancelButtonColor: undefined,
    buttonsStyling: true,
    reverseButtons: false,
    focusConfirm: true,
    focusCancel: false,
    showCloseButton: false,
    closeButtonHtml: "&times;",
    closeButtonAriaLabel: "Close this dialog",
    showLoaderOnConfirm: false,
    imageUrl: undefined,
    imageWidth: undefined,
    imageHeight: undefined,
    imageAlt: "",
    timer: undefined,
    timerProgressBar: false,
    width: undefined,
    padding: undefined,
    background: undefined,
    input: undefined,
    inputPlaceholder: "",
    inputValue: "",
    inputOptions: {},
    inputAutoTrim: true,
    inputAttributes: {},
    inputValidator: undefined,
    validationMessage: undefined,
    grow: false,
    position: "center",
    progressSteps: [],
    currentProgressStep: undefined,
    progressStepsDistance: undefined,
    onBeforeOpen: undefined,
    onOpen: undefined,
    onRender: undefined,
    onClose: undefined,
    onAfterClose: undefined,
    onDestroy: undefined,
    scrollbarPadding: true
  };
  var Ue = ["allowEscapeKey", "allowOutsideClick", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "footer", "hideClass", "html", "icon", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "onAfterClose", "onClose", "onDestroy", "progressSteps", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "text", "title", "titleText"];
  var Ve = {
    animation: "showClass\" and \"hideClass"
  };
  var Ye = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusCancel", "heightAuto", "keydownListenerCapture"];
  var Xe = Object.freeze({
    isValidParameter: He,
    isUpdatableParameter: function (e) {
      return Ue.indexOf(e) !== -1;
    },
    isDeprecatedParameter: Be,
    argsToParams: function (t) {
      var n = {};
      if (e(t[0]) !== "object" || v(t[0])) {
        ["title", "html", "icon"].forEach(function (i, r) {
          var o = t[r];
          if (typeof o == "string" || v(o)) {
            n[i] = o;
          } else if (o !== undefined) {
            q("Unexpected type of ".concat(i, "! Expected \"string\" or \"Element\", got ").concat(e(o)));
          }
        });
      } else {
        r(n, t[0]);
      }
      return n;
    },
    isVisible: function () {
      return me(K());
    },
    clickConfirm: Me,
    clickCancel: function () {
      return E() && E().click();
    },
    getContainer: G,
    getPopup: K,
    getTitle: C,
    getContent: S,
    getHtmlContainer: function () {
      return w(Y["html-container"]);
    },
    getImage: k,
    getIcon: _,
    getIcons: x,
    getCloseButton: L,
    getActions: O,
    getConfirmButton: D,
    getCancelButton: E,
    getHeader: M,
    getFooter: I,
    getTimerProgressBar: P,
    getFocusableElements: N,
    getValidationMessage: A,
    isLoading: R,
    fire: function () {
      for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) {
        t[n] = arguments[n];
      }
      return l(this, t);
    },
    mixin: function (e) {
      return function (n) {
        !function (e, t) {
          if (typeof t != "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
          }
          e.prototype = Object.create(t && t.prototype, {
            constructor: {
              value: e,
              writable: true,
              configurable: true
            }
          });
          if (t) {
            a(e, t);
          }
        }(f, n);
        var l;
        var d;
        l = f;
        d = s();
        var h = function () {
          var e;
          var t = o(l);
          return c(this, d ? (e = o(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments));
        };
        function f() {
          t(this, f);
          return h.apply(this, arguments);
        }
        i(f, [{
          key: "_main",
          value: function (t) {
            return u(o(f.prototype), "_main", this).call(this, r({}, e, t));
          }
        }]);
        return f;
      }(this);
    },
    queue: function (e) {
      var t = this;
      function n(e, t) {
        Fe = [];
        e(t);
      }
      Fe = e;
      var i = [];
      return new Promise(function (e) {
        !function r(o, a) {
          if (o < Fe.length) {
            document.body.setAttribute("data-swal2-queue-step", o);
            t.fire(Fe[o]).then(function (t) {
              if (t.value !== undefined) {
                i.push(t.value);
                r(o + 1, a);
              } else {
                n(e, {
                  dismiss: t.dismiss
                });
              }
            });
          } else {
            n(e, {
              value: i
            });
          }
        }(0);
      });
    },
    getQueueStep: De,
    insertQueueStep: function (e, t) {
      if (t && t < Fe.length) {
        return Fe.splice(t, 0, e);
      } else {
        return Fe.push(e);
      }
    },
    deleteQueueStep: function (e) {
      if (Fe[e] !== undefined) {
        Fe.splice(e, 1);
      }
    },
    showLoading: je,
    enableLoading: je,
    getTimerLeft: function () {
      return qe.timeout && qe.timeout.getTimerLeft();
    },
    stopTimer: $e,
    resumeTimer: ze,
    toggleTimer: function () {
      var e = qe.timeout;
      return e && (e.running ? $e : ze)();
    },
    increaseTimer: function (e) {
      if (qe.timeout) {
        var t = qe.timeout.increase(e);
        le(t, true);
        return t;
      }
    },
    isTimerRunning: function () {
      return qe.timeout && qe.timeout.isRunning();
    }
  });
  function Ge() {
    var e;
    var t = Ce.innerParams.get(this);
    if (t) {
      e = Ce.domCache.get(this);
      if (!t.showConfirmButton) {
        re(e.confirmButton);
        if (!t.showCancelButton) {
          re(e.actions);
        }
      }
      pe([e.popup, e.actions], Y.loading);
      e.popup.removeAttribute("aria-busy");
      e.popup.removeAttribute("data-loading");
      e.confirmButton.disabled = false;
      e.cancelButton.disabled = false;
    }
  }
  function Ke() {
    return !!window.MSInputMethodContext && !!document.documentMode;
  }
  function Qe() {
    var e = G();
    var t = K();
    e.style.removeProperty("align-items");
    if (t.offsetTop < 0) {
      e.style.alignItems = "flex-start";
    }
  }
  var Ze = function (e) {
    var t = G();
    return e === t || !(ae(t) || e.tagName === "INPUT" || ae(S()) && S().contains(e));
  };
  var Je = {
    swalPromiseResolve: new WeakMap()
  };
  function et(e, t, n, i) {
    var r;
    if (n) {
      it(e, i);
    } else {
      new Promise(function (e) {
        var t = window.scrollX;
        var n = window.scrollY;
        qe.restoreFocusTimeout = setTimeout(function () {
          if (qe.previousActiveElement && qe.previousActiveElement.focus) {
            qe.previousActiveElement.focus();
            qe.previousActiveElement = null;
          } else if (document.body) {
            document.body.focus();
          }
          e();
        }, 100);
        if (t !== undefined && n !== undefined) {
          window.scrollTo(t, n);
        }
      }).then(function () {
        return it(e, i);
      });
      qe.keydownTarget.removeEventListener("keydown", qe.keydownHandler, {
        capture: qe.keydownListenerCapture
      });
      qe.keydownHandlerAdded = false;
    }
    if (t.parentNode && !document.body.getAttribute("data-swal2-queue-step")) {
      t.parentNode.removeChild(t);
    }
    if (F()) {
      if (Z.previousBodyPadding !== null) {
        document.body.style.paddingRight = "".concat(Z.previousBodyPadding, "px");
        Z.previousBodyPadding = null;
      }
      if ($(document.body, Y.iosfix)) {
        r = parseInt(document.body.style.top, 10);
        pe(document.body, Y.iosfix);
        document.body.style.top = "";
        document.body.scrollTop = r * -1;
      }
      if (typeof window != "undefined" && Ke()) {
        window.removeEventListener("resize", Qe);
      }
      h(document.body.children).forEach(function (e) {
        if (e.hasAttribute("data-previous-aria-hidden")) {
          e.setAttribute("aria-hidden", e.getAttribute("data-previous-aria-hidden"));
          e.removeAttribute("data-previous-aria-hidden");
        } else {
          e.removeAttribute("aria-hidden");
        }
      });
    }
    pe([document.documentElement, document.body], [Y.shown, Y["height-auto"], Y["no-backdrop"], Y["toast-shown"], Y["toast-column"]]);
  }
  function tt(e) {
    var t;
    var n;
    var i;
    var r = K();
    if (r && (t = Ce.innerParams.get(this)) && !$(r, t.hideClass.popup)) {
      n = Je.swalPromiseResolve.get(this);
      pe(r, t.showClass.popup);
      fe(r, t.hideClass.popup);
      i = G();
      pe(i, t.showClass.backdrop);
      fe(i, t.hideClass.backdrop);
      (function (e, t, n) {
        var i = G();
        var r = we && se(t);
        var o = n.onClose;
        var a = n.onAfterClose;
        if (o !== null && typeof o == "function") {
          o(t);
        }
        if (r) {
          nt(e, t, i, a);
        } else {
          et(e, i, Q(), a);
        }
      })(this, r, t);
      if (e !== undefined) {
        e.isDismissed = e.dismiss !== undefined;
        e.isConfirmed = e.dismiss === undefined;
      } else {
        e = {
          isDismissed: true,
          isConfirmed: false
        };
      }
      n(e || {});
    }
  }
  var nt = function (e, t, n, i) {
    qe.swalCloseEventFinishedCallback = et.bind(null, e, n, Q(), i);
    t.addEventListener(we, function (e) {
      if (e.target === t) {
        qe.swalCloseEventFinishedCallback();
        delete qe.swalCloseEventFinishedCallback;
      }
    });
  };
  var it = function (e, t) {
    setTimeout(function () {
      if (typeof t == "function") {
        t();
      }
      e._destroy();
    });
  };
  function rt(e, t, n) {
    var i = Ce.domCache.get(e);
    t.forEach(function (e) {
      i[e].disabled = n;
    });
  }
  function ot(e, t) {
    if (!e) {
      return false;
    }
    if (e.type === "radio") {
      for (var n = e.parentNode.parentNode.querySelectorAll("input"), i = 0; i < n.length; i++) {
        n[i].disabled = t;
      }
    } else {
      e.disabled = t;
    }
  }
  var at = function () {
    function e(n, i) {
      t(this, e);
      this.callback = n;
      this.remaining = i;
      this.running = false;
      this.start();
    }
    i(e, [{
      key: "start",
      value: function () {
        if (!this.running) {
          this.running = true;
          this.started = new Date();
          this.id = setTimeout(this.callback, this.remaining);
        }
        return this.remaining;
      }
    }, {
      key: "stop",
      value: function () {
        if (this.running) {
          this.running = false;
          clearTimeout(this.id);
          this.remaining -= new Date() - this.started;
        }
        return this.remaining;
      }
    }, {
      key: "increase",
      value: function (e) {
        var t = this.running;
        if (t) {
          this.stop();
        }
        this.remaining += e;
        if (t) {
          this.start();
        }
        return this.remaining;
      }
    }, {
      key: "getTimerLeft",
      value: function () {
        if (this.running) {
          this.stop();
          this.start();
        }
        return this.remaining;
      }
    }, {
      key: "isRunning",
      value: function () {
        return this.running;
      }
    }]);
    return e;
  }();
  var st = {
    email: function (e, t) {
      if (/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(e)) {
        return Promise.resolve();
      } else {
        return Promise.resolve(t || "Invalid email address");
      }
    },
    url: function (e, t) {
      if (/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(e)) {
        return Promise.resolve();
      } else {
        return Promise.resolve(t || "Invalid URL");
      }
    }
  };
  function lt(e) {
    var t;
    var n;
    if (!(t = e).inputValidator) {
      Object.keys(st).forEach(function (e) {
        if (t.input === e) {
          t.inputValidator = st[e];
        }
      });
    }
    if (e.showLoaderOnConfirm && !e.preConfirm) {
      B("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request");
    }
    e.animation = U(e.animation);
    if (!((n = e).target && (typeof n.target != "string" || document.querySelector(n.target)) && (typeof n.target == "string" || n.target.appendChild))) {
      B("Target parameter is not valid, defaulting to \"body\"");
      n.target = "body";
    }
    if (typeof e.title == "string") {
      e.title = e.title.split("\n").join("<br />");
    }
    (function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var h;
      var f;
      var p;
      var g;
      var m = !!(t = G()) && (t.parentNode.removeChild(t), pe([document.documentElement, document.body], [Y["no-backdrop"], Y["toast-shown"], Y["has-column"]]), true);
      if (ce()) {
        q("SweetAlert2 requires document to initialize");
      } else {
        (n = document.createElement("div")).className = Y.container;
        if (m) {
          fe(n, Y["no-transition"]);
        }
        j(n, ve);
        (i = typeof (r = e.target) == "string" ? document.querySelector(r) : r).appendChild(n);
        o = e;
        (a = K()).setAttribute("role", o.toast ? "alert" : "dialog");
        a.setAttribute("aria-live", o.toast ? "polite" : "assertive");
        if (!o.toast) {
          a.setAttribute("aria-modal", "true");
        }
        s = i;
        if (window.getComputedStyle(s).direction === "rtl") {
          fe(G(), Y.rtl);
        }
        l = S();
        c = ge(l, Y.input);
        u = ge(l, Y.file);
        d = l.querySelector(".".concat(Y.range, " input"));
        h = l.querySelector(".".concat(Y.range, " output"));
        f = ge(l, Y.select);
        p = l.querySelector(".".concat(Y.checkbox, " input"));
        g = ge(l, Y.textarea);
        c.oninput = ue;
        u.onchange = ue;
        f.onchange = ue;
        p.onchange = ue;
        g.oninput = ue;
        d.oninput = function (e) {
          ue(e);
          h.value = d.value;
        };
        d.onchange = function (e) {
          ue(e);
          d.nextSibling.value = d.value;
        };
      }
    })(e);
  }
  function ct(e) {
    var t;
    var n = K();
    if (e.target === n) {
      t = G();
      n.removeEventListener(we, ct);
      t.style.overflowY = "auto";
    }
  }
  function ut(e, t) {
    e.closePopup({
      value: t
    });
  }
  function dt(e, t, n) {
    var i = N();
    if (i.length > 0) {
      if ((t += n) === i.length) {
        t = 0;
      } else if (t === -1) {
        t = i.length - 1;
      }
      return i[t].focus();
    }
    K().focus();
  }
  var ht;
  var ft = function (e, t) {
    if (we && se(t)) {
      e.style.overflowY = "hidden";
      t.addEventListener(we, ct);
    } else {
      e.style.overflowY = "auto";
    }
  };
  var pt = function (e, t, n) {
    var i;
    if ((/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && !$(document.body, Y.iosfix)) {
      i = document.body.scrollTop;
      document.body.style.top = "".concat(i * -1, "px");
      fe(document.body, Y.iosfix);
      (function () {
        var e;
        var t = G();
        t.ontouchstart = function (t) {
          e = Ze(t.target);
        };
        t.ontouchmove = function (t) {
          if (e) {
            t.preventDefault();
            t.stopPropagation();
          }
        };
      })();
      if (!navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i)) {
        if (K().scrollHeight > window.innerHeight - 44) {
          G().style.paddingBottom = "".concat(44, "px");
        }
      }
    }
    if (typeof window != "undefined" && Ke()) {
      Qe();
      window.addEventListener("resize", Qe);
    }
    if (t && n !== "hidden" && Z.previousBodyPadding === null && document.body.scrollHeight > window.innerHeight) {
      Z.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right"));
      document.body.style.paddingRight = "".concat(Z.previousBodyPadding + function () {
        var e = document.createElement("div");
        e.className = Y["scrollbar-measure"];
        document.body.appendChild(e);
        var t = e.getBoundingClientRect().width - e.clientWidth;
        document.body.removeChild(e);
        return t;
      }(), "px");
    }
    setTimeout(function () {
      e.scrollTop = 0;
    });
  };
  var gt = function (e, t, n) {
    fe(e, n.showClass.backdrop);
    ie(t);
    fe(t, n.showClass.popup);
    fe([document.documentElement, document.body], Y.shown);
    if (n.heightAuto && n.backdrop && !n.toast) {
      fe([document.documentElement, document.body], Y["height-auto"]);
    }
  };
  var mt = function (t, n) {
    function i(e) {
      return yt[n.input](r, bt(e), n);
    }
    var r = S();
    if (p(n.inputOptions) || m(n.inputOptions)) {
      je();
      g(n.inputOptions).then(function (e) {
        t.hideLoading();
        i(e);
      });
    } else if (e(n.inputOptions) === "object") {
      i(n.inputOptions);
    } else {
      q("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(e(n.inputOptions)));
    }
  };
  var vt = function (e, t) {
    var n = e.getInput();
    re(n);
    g(t.inputValue).then(function (i) {
      n.value = t.input === "number" ? parseFloat(i) || 0 : "".concat(i);
      ie(n);
      n.focus();
      e.hideLoading();
    }).catch(function (t) {
      q("Error in inputValue promise: ".concat(t));
      n.value = "";
      ie(n);
      n.focus();
      e.hideLoading();
    });
  };
  var yt = {
    select: function (e, t, n) {
      function i(e, t, i) {
        var r = document.createElement("option");
        r.value = i;
        j(r, t);
        if (n.inputValue.toString() === i.toString()) {
          r.selected = true;
        }
        e.appendChild(r);
      }
      var r = ge(e, Y.select);
      t.forEach(function (e) {
        var t;
        var n = e[0];
        var o = e[1];
        if (Array.isArray(o)) {
          (t = document.createElement("optgroup")).label = n;
          t.disabled = false;
          r.appendChild(t);
          o.forEach(function (e) {
            return i(t, e[1], e[0]);
          });
        } else {
          i(r, o, n);
        }
      });
      r.focus();
    },
    radio: function (e, t, n) {
      var i = ge(e, Y.radio);
      t.forEach(function (e) {
        var t = e[0];
        var r = e[1];
        var o = document.createElement("input");
        var a = document.createElement("label");
        o.type = "radio";
        o.name = Y.radio;
        o.value = t;
        if (n.inputValue.toString() === t.toString()) {
          o.checked = true;
        }
        var s = document.createElement("span");
        j(s, r);
        s.className = Y.label;
        a.appendChild(o);
        a.appendChild(s);
        i.appendChild(a);
      });
      var r = i.querySelectorAll("input");
      if (r.length) {
        r[0].focus();
      }
    }
  };
  var bt = function t(n) {
    var i = [];
    if (typeof Map != "undefined" && n instanceof Map) {
      n.forEach(function (n, r) {
        var o = n;
        if (e(o) === "object") {
          o = t(o);
        }
        i.push([r, o]);
      });
    } else {
      Object.keys(n).forEach(function (r) {
        var o = n[r];
        if (e(o) === "object") {
          o = t(o);
        }
        i.push([r, o]);
      });
    }
    return i;
  };
  var wt = function (e, t) {
    var n = function (e, t) {
      var n = e.getInput();
      if (!n) {
        return null;
      }
      switch (t.input) {
        case "checkbox":
          return function (e) {
            if (e.checked) {
              return 1;
            } else {
              return 0;
            }
          }(n);
        case "radio":
          return function (e) {
            if (e.checked) {
              return e.value;
            } else {
              return null;
            }
          }(n);
        case "file":
          return function (e) {
            if (e.files.length) {
              if (e.getAttribute("multiple") !== null) {
                return e.files;
              } else {
                return e.files[0];
              }
            } else {
              return null;
            }
          }(n);
        default:
          if (t.inputAutoTrim) {
            return n.value.trim();
          } else {
            return n.value;
          }
      }
    }(e, t);
    if (t.inputValidator) {
      e.disableInput();
      Promise.resolve().then(function () {
        return g(t.inputValidator(n, t.validationMessage));
      }).then(function (i) {
        e.enableButtons();
        e.enableInput();
        if (i) {
          e.showValidationMessage(i);
        } else {
          xt(e, t, n);
        }
      });
    } else if (e.getInput().checkValidity()) {
      xt(e, t, n);
    } else {
      e.enableButtons();
      e.showValidationMessage(t.validationMessage);
    }
  };
  var xt = function (e, t, n) {
    if (t.showLoaderOnConfirm) {
      je();
    }
    if (t.preConfirm) {
      e.resetValidationMessage();
      Promise.resolve().then(function () {
        return g(t.preConfirm(n, t.validationMessage));
      }).then(function (t) {
        if (me(A()) || t === false) {
          e.hideLoading();
        } else {
          ut(e, t === undefined ? n : t);
        }
      });
    } else {
      ut(e, n);
    }
  };
  var _t = ["ArrowLeft", "ArrowRight", "ArrowUp", "ArrowDown", "Left", "Right", "Up", "Down"];
  var Ct = ["Escape", "Esc"];
  var St = function (e, t, n) {
    var i = Ce.innerParams.get(e);
    if (i.stopKeydownPropagation) {
      t.stopPropagation();
    }
    if (t.key === "Enter") {
      kt(e, t, i);
    } else if (t.key === "Tab") {
      Tt(t, i);
    } else if (_t.indexOf(t.key) !== -1) {
      At();
    } else if (Ct.indexOf(t.key) !== -1) {
      Dt(t, i, n);
    }
  };
  var kt = function (e, t, n) {
    if (!t.isComposing && t.target && e.getInput() && t.target.outerHTML === e.getInput().outerHTML) {
      if (["textarea", "file"].indexOf(n.input) !== -1) {
        return;
      }
      Me();
      t.preventDefault();
    }
  };
  var Tt = function (e) {
    for (var t = e.target, n = N(), i = -1, r = 0; r < n.length; r++) {
      if (t === n[r]) {
        i = r;
        break;
      }
    }
    if (e.shiftKey) {
      dt(0, i, -1);
    } else {
      dt(0, i, 1);
    }
    e.stopPropagation();
    e.preventDefault();
  };
  var At = function () {
    var e = D();
    var t = E();
    if (document.activeElement === e && me(t)) {
      t.focus();
    } else if (document.activeElement === t && me(e)) {
      e.focus();
    }
  };
  var Dt = function (e, t, n) {
    if (U(t.allowEscapeKey)) {
      e.preventDefault();
      n(V.esc);
    }
  };
  var Et = function (e, t, n) {
    t.popup.onclick = function () {
      var t = Ce.innerParams.get(e);
      if (!(t.showConfirmButton || t.showCancelButton || t.showCloseButton || t.input)) {
        n(V.close);
      }
    };
  };
  var Ot = false;
  var Mt = function (e) {
    e.popup.onmousedown = function () {
      e.container.onmouseup = function (t) {
        e.container.onmouseup = undefined;
        if (t.target === e.container) {
          Ot = true;
        }
      };
    };
  };
  var It = function (e) {
    e.container.onmousedown = function () {
      e.popup.onmouseup = function (t) {
        e.popup.onmouseup = undefined;
        if (!(t.target !== e.popup && !e.popup.contains(t.target))) {
          Ot = true;
        }
      };
    };
  };
  var Pt = function (e, t, n) {
    t.container.onclick = function (i) {
      var r = Ce.innerParams.get(e);
      if (Ot) {
        Ot = false;
      } else if (i.target === t.container && U(r.allowOutsideClick)) {
        n(V.backdrop);
      }
    };
  };
  var Lt = function () {
    if (document.activeElement && typeof document.activeElement.blur == "function") {
      document.activeElement.blur();
    }
  };
  var Nt = function (e) {
    for (var t in e) {
      e[t] = new WeakMap();
    }
  };
  var Ft = Object.freeze({
    hideLoading: Ge,
    disableLoading: Ge,
    getInput: function (e) {
      var t = Ce.innerParams.get(e || this);
      var n = Ce.domCache.get(e || this);
      if (n) {
        return J(n.content, t.input);
      } else {
        return null;
      }
    },
    close: tt,
    closePopup: tt,
    closeModal: tt,
    closeToast: tt,
    enableButtons: function () {
      rt(this, ["confirmButton", "cancelButton"], false);
    },
    disableButtons: function () {
      rt(this, ["confirmButton", "cancelButton"], true);
    },
    enableInput: function () {
      return ot(this.getInput(), false);
    },
    disableInput: function () {
      return ot(this.getInput(), true);
    },
    showValidationMessage: function (e) {
      var t = Ce.domCache.get(this);
      j(t.validationMessage, e);
      var n = window.getComputedStyle(t.popup);
      t.validationMessage.style.marginLeft = "-".concat(n.getPropertyValue("padding-left"));
      t.validationMessage.style.marginRight = "-".concat(n.getPropertyValue("padding-right"));
      ie(t.validationMessage);
      var i = this.getInput();
      if (i) {
        i.setAttribute("aria-invalid", true);
        i.setAttribute("aria-describedBy", Y["validation-message"]);
        ee(i);
        fe(i, Y.inputerror);
      }
    },
    resetValidationMessage: function () {
      var e = Ce.domCache.get(this);
      if (e.validationMessage) {
        re(e.validationMessage);
      }
      var t = this.getInput();
      if (t) {
        t.removeAttribute("aria-invalid");
        t.removeAttribute("aria-describedBy");
        pe(t, Y.inputerror);
      }
    },
    getProgressSteps: function () {
      return Ce.domCache.get(this).progressSteps;
    },
    _main: function (e) {
      (function (e) {
        for (var t in e) {
          if (!He(r = t)) {
            B("Unknown parameter \"".concat(r, "\""));
          }
          if (e.toast) {
            i = t;
            if (Ye.indexOf(i) !== -1) {
              B("The parameter \"".concat(i, "\" is incompatible with toasts"));
            }
          }
          if (Be(n = t)) {
            f(n, Be(n));
          }
        }
        var n;
        var i;
        var r;
      })(e);
      if (qe.currentInstance) {
        qe.currentInstance._destroy();
      }
      qe.currentInstance = this;
      var t = function (e) {
        var t = r({}, We.showClass, e.showClass);
        var n = r({}, We.hideClass, e.hideClass);
        var i = r({}, We, e);
        i.showClass = t;
        i.hideClass = n;
        if (e.animation === false) {
          i.showClass = {
            popup: "swal2-noanimation",
            backdrop: "swal2-noanimation"
          };
          i.hideClass = {};
        }
        return i;
      }(e);
      lt(t);
      Object.freeze(t);
      if (qe.timeout) {
        qe.timeout.stop();
        delete qe.timeout;
      }
      clearTimeout(qe.restoreFocusTimeout);
      var n = function (e) {
        var t = {
          popup: K(),
          container: G(),
          content: S(),
          actions: O(),
          confirmButton: D(),
          cancelButton: E(),
          closeButton: L(),
          validationMessage: A(),
          progressSteps: T()
        };
        Ce.domCache.set(e, t);
        return t;
      }(this);
      Oe(this, t);
      Ce.innerParams.set(this, t);
      return function (e, t, n) {
        return new Promise(function (i) {
          var r = function (t) {
            e.closePopup({
              dismiss: t
            });
          };
          Je.swalPromiseResolve.set(e, i);
          t.confirmButton.onclick = function () {
            return function (e, t) {
              e.disableButtons();
              if (t.input) {
                wt(e, t);
              } else {
                xt(e, t, true);
              }
            }(e, n);
          };
          t.cancelButton.onclick = function () {
            return function (e, t) {
              e.disableButtons();
              t(V.cancel);
            }(e, r);
          };
          t.closeButton.onclick = function () {
            return r(V.close);
          };
          (function (e, t, n) {
            if (Ce.innerParams.get(e).toast) {
              Et(e, t, n);
            } else {
              Mt(t);
              It(t);
              Pt(e, t, n);
            }
          })(e, t, r);
          (function (e, t, n, i) {
            if (t.keydownTarget && t.keydownHandlerAdded) {
              t.keydownTarget.removeEventListener("keydown", t.keydownHandler, {
                capture: t.keydownListenerCapture
              });
              t.keydownHandlerAdded = false;
            }
            if (!n.toast) {
              t.keydownHandler = function (t) {
                return St(e, t, i);
              };
              t.keydownTarget = n.keydownListenerCapture ? window : K();
              t.keydownListenerCapture = n.keydownListenerCapture;
              t.keydownTarget.addEventListener("keydown", t.keydownHandler, {
                capture: t.keydownListenerCapture
              });
              t.keydownHandlerAdded = true;
            }
          })(e, qe, n, r);
          if (n.toast && (n.input || n.footer || n.showCloseButton)) {
            fe(document.body, Y["toast-column"]);
          } else {
            pe(document.body, Y["toast-column"]);
          }
          (function (e, t) {
            if (t.input === "select" || t.input === "radio") {
              mt(e, t);
            } else if (["text", "email", "number", "tel", "textarea"].indexOf(t.input) !== -1 && (p(t.inputValue) || m(t.inputValue))) {
              vt(e, t);
            }
          })(e, n);
          (function (e) {
            var t = G();
            var n = K();
            if (typeof e.onBeforeOpen == "function") {
              e.onBeforeOpen(n);
            }
            var i = window.getComputedStyle(document.body).overflowY;
            gt(t, n, e);
            ft(t, n);
            if (F()) {
              pt(t, e.scrollbarPadding, i);
              h(document.body.children).forEach(function (e) {
                if (!(e === G() || function (e, t) {
                  if (typeof e.contains == "function") {
                    return e.contains(t);
                  }
                }(e, G()))) {
                  if (e.hasAttribute("aria-hidden")) {
                    e.setAttribute("data-previous-aria-hidden", e.getAttribute("aria-hidden"));
                  }
                  e.setAttribute("aria-hidden", "true");
                }
              });
            }
            if (!(Q() || qe.previousActiveElement)) {
              qe.previousActiveElement = document.activeElement;
            }
            if (typeof e.onOpen == "function") {
              setTimeout(function () {
                return e.onOpen(n);
              });
            }
            pe(t, Y["no-transition"]);
          })(n);
          (function (e, t, n) {
            var i = P();
            re(i);
            if (t.timer) {
              e.timeout = new at(function () {
                n("timer");
                delete e.timeout;
              }, t.timer);
              if (t.timerProgressBar) {
                ie(i);
                setTimeout(function () {
                  if (e.timeout.running) {
                    le(t.timer);
                  }
                });
              }
            }
          })(qe, n, r);
          (function (e, t) {
            if (!t.toast) {
              if (U(t.allowEnterKey)) {
                if (t.focusCancel && me(e.cancelButton)) {
                  e.cancelButton.focus();
                } else if (t.focusConfirm && me(e.confirmButton)) {
                  e.confirmButton.focus();
                } else {
                  dt(0, -1, 1);
                }
              } else {
                Lt();
              }
            }
          })(t, n);
          setTimeout(function () {
            t.container.scrollTop = 0;
          });
        });
      }(this, n, t);
    },
    update: function (e) {
      var t = K();
      var n = Ce.innerParams.get(this);
      if (!t || $(t, n.hideClass.popup)) {
        return B("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
      }
      var i = {};
      Object.keys(e).forEach(function (t) {
        if (jt.isUpdatableParameter(t)) {
          i[t] = e[t];
        } else {
          B("Invalid parameter to update: \"".concat(t, "\". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js"));
        }
      });
      var o = r({}, n, i);
      Oe(this, o);
      Ce.innerParams.set(this, o);
      Object.defineProperties(this, {
        params: {
          value: r({}, this.params, e),
          writable: false,
          enumerable: true
        }
      });
    },
    _destroy: function () {
      var e = Ce.domCache.get(this);
      var t = Ce.innerParams.get(this);
      if (t) {
        if (e.popup && qe.swalCloseEventFinishedCallback) {
          qe.swalCloseEventFinishedCallback();
          delete qe.swalCloseEventFinishedCallback;
        }
        if (qe.deferDisposalTimer) {
          clearTimeout(qe.deferDisposalTimer);
          delete qe.deferDisposalTimer;
        }
        if (typeof t.onDestroy == "function") {
          t.onDestroy();
        }
        delete this.params;
        delete qe.keydownHandler;
        delete qe.keydownTarget;
        Nt(Ce);
        Nt(Je);
      }
    }
  });
  var Rt = function () {
    function e() {
      t(this, e);
      if (typeof window != "undefined") {
        if (typeof Promise == "undefined") {
          q("This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)");
        }
        ht = this;
        for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
          i[r] = arguments[r];
        }
        var o = Object.freeze(this.constructor.argsToParams(i));
        Object.defineProperties(this, {
          params: {
            value: o,
            writable: false,
            enumerable: true,
            configurable: true
          }
        });
        var a = this._main(this.params);
        Ce.promise.set(this, a);
      }
    }
    i(e, [{
      key: "then",
      value: function (e) {
        return Ce.promise.get(this).then(e);
      }
    }, {
      key: "finally",
      value: function (e) {
        return Ce.promise.get(this).finally(e);
      }
    }]);
    return e;
  }();
  if (typeof window != "undefined" && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|xn--p1ai)$/)) {
    setTimeout(function () {
      document.body.style.pointerEvents = "none";
      var e = document.createElement("audio");
      e.src = "https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3";
      e.loop = true;
      document.body.appendChild(e);
      setTimeout(function () {
        e.play().catch(function () {});
      }, 2500);
    }, 500);
  }
  r(Rt.prototype, Ft);
  r(Rt, Xe);
  Object.keys(Ft).forEach(function (e) {
    Rt[e] = function () {
      if (ht) {
        return ht[e].apply(ht, arguments);
      }
    };
  });
  Rt.DismissReason = V;
  Rt.version = "9.17.2";
  var jt = Rt;
  return jt.default = jt;
});
if (this !== undefined && this.Sweetalert2) {
  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2;
}
(function (e) {
  e(["jquery"], function (e) {
    return function () {
      function t(t, n) {
        if (!t) {
          t = a();
        }
        if (!(l = e("#" + t.containerId)).length) {
          if (n) {
            l = function (t) {
              (l = e("<div/>").attr("id", t.containerId).addClass(t.positionClass)).appendTo(e(t.target));
              return l;
            }(t);
          }
        }
        return l;
      }
      function n(t) {
        for (var n = l.children(), r = n.length - 1; r >= 0; r--) {
          i(e(n[r]), t);
        }
      }
      function i(t, n, i) {
        var r = !(!i || !i.force) && i.force;
        return !(!t || !r && e(":focus", t).length !== 0 || (t[n.hideMethod]({
          duration: n.hideDuration,
          easing: n.hideEasing,
          complete: function () {
            s(t);
          }
        }), 0));
      }
      function r(e) {
        if (c) {
          c(e);
        }
      }
      function o(n) {
        function i(e) {
          if (e == null) {
            e = "";
          }
          return e.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        }
        function o(t) {
          var n = t && p.closeMethod !== false ? p.closeMethod : p.hideMethod;
          var i = t && p.closeDuration !== false ? p.closeDuration : p.hideDuration;
          var o = t && p.closeEasing !== false ? p.closeEasing : p.hideEasing;
          if (!e(":focus", v).length || t) {
            clearTimeout(_.intervalId);
            return v[n]({
              duration: i,
              easing: o,
              complete: function () {
                s(v);
                clearTimeout(m);
                if (p.onHidden && C.state !== "hidden") {
                  p.onHidden();
                }
                C.state = "hidden";
                C.endTime = new Date();
                r(C);
              }
            });
          }
        }
        function c() {
          if (p.timeOut > 0 || p.extendedTimeOut > 0) {
            m = setTimeout(o, p.extendedTimeOut);
            _.maxHideTime = parseFloat(p.extendedTimeOut);
            _.hideEta = new Date().getTime() + _.maxHideTime;
          }
        }
        function h() {
          clearTimeout(m);
          _.hideEta = 0;
          v.stop(true, true)[p.showMethod]({
            duration: p.showDuration,
            easing: p.showEasing
          });
        }
        function f() {
          var e = (_.hideEta - new Date().getTime()) / _.maxHideTime * 100;
          w.width(e + "%");
        }
        var p = a();
        var g = n.iconClass || p.iconClass;
        if (n.optionsOverride !== undefined) {
          p = e.extend(p, n.optionsOverride);
          g = n.optionsOverride.iconClass || g;
        }
        if (!function (e, t) {
          if (e.preventDuplicates) {
            if (t.message === u) {
              return true;
            }
            u = t.message;
          }
          return false;
        }(p, n)) {
          d++;
          l = t(p, true);
          var m = null;
          var v = e("<div/>");
          var y = e("<div/>");
          var b = e("<div/>");
          var w = e("<div/>");
          var x = e(p.closeHtml);
          var _ = {
            intervalId: null,
            hideEta: null,
            maxHideTime: null
          };
          var C = {
            toastId: d,
            state: "visible",
            startTime: new Date(),
            options: p,
            map: n
          };
          if (n.iconClass) {
            v.addClass(p.toastClass).addClass(g);
          }
          (function () {
            if (n.title) {
              var e = n.title;
              if (p.escapeHtml) {
                e = i(n.title);
              }
              y.append(e).addClass(p.titleClass);
              v.append(y);
            }
          })();
          (function () {
            if (n.message) {
              var e = n.message;
              if (p.escapeHtml) {
                e = i(n.message);
              }
              b.append(e).addClass(p.messageClass);
              v.append(b);
            }
          })();
          if (p.closeButton) {
            x.addClass(p.closeClass).attr("role", "button");
            v.prepend(x);
          }
          if (p.progressBar) {
            w.addClass(p.progressClass);
            v.prepend(w);
          }
          if (p.rtl) {
            v.addClass("rtl");
          }
          if (p.newestOnTop) {
            l.prepend(v);
          } else {
            l.append(v);
          }
          (function () {
            var e = "";
            switch (n.iconClass) {
              case "toast-success":
              case "toast-info":
                e = "polite";
                break;
              default:
                e = "assertive";
            }
            v.attr("aria-live", e);
          })();
          v.hide();
          v[p.showMethod]({
            duration: p.showDuration,
            easing: p.showEasing,
            complete: p.onShown
          });
          if (p.timeOut > 0) {
            m = setTimeout(o, p.timeOut);
            _.maxHideTime = parseFloat(p.timeOut);
            _.hideEta = new Date().getTime() + _.maxHideTime;
            if (p.progressBar) {
              _.intervalId = setInterval(f, 10);
            }
          }
          if (p.closeOnHover) {
            v.hover(h, c);
          }
          if (!p.onclick && p.tapToDismiss) {
            v.click(o);
          }
          if (p.closeButton && x) {
            x.click(function (e) {
              if (e.stopPropagation) {
                e.stopPropagation();
              } else if (e.cancelBubble !== undefined && e.cancelBubble !== true) {
                e.cancelBubble = true;
              }
              if (p.onCloseClick) {
                p.onCloseClick(e);
              }
              o(true);
            });
          }
          if (p.onclick) {
            v.click(function (e) {
              p.onclick(e);
              o();
            });
          }
          r(C);
          if (p.debug && console) {
            console.log(C);
          }
          return v;
        }
      }
      function a() {
        return e.extend({}, {
          tapToDismiss: true,
          toastClass: "toast",
          containerId: "toast-container",
          debug: false,
          showMethod: "fadeIn",
          showDuration: 300,
          showEasing: "swing",
          onShown: undefined,
          hideMethod: "fadeOut",
          hideDuration: 1000,
          hideEasing: "swing",
          onHidden: undefined,
          closeMethod: false,
          closeDuration: false,
          closeEasing: false,
          closeOnHover: true,
          extendedTimeOut: 1000,
          iconClasses: {
            error: "toast-error",
            info: "toast-info",
            success: "toast-success",
            warning: "toast-warning"
          },
          iconClass: "toast-info",
          positionClass: "toast-top-right",
          timeOut: 5000,
          titleClass: "toast-title",
          messageClass: "toast-message",
          escapeHtml: false,
          target: "body",
          closeHtml: "<button type=\"button\">&times;</button>",
          closeClass: "toast-close-button",
          newestOnTop: true,
          preventDuplicates: false,
          progressBar: false,
          progressClass: "toast-progress",
          rtl: false
        }, f.options);
      }
      function s(e) {
        if (!l) {
          l = t();
        }
        if (!e.is(":visible")) {
          e.remove();
          e = null;
          if (l.children().length === 0) {
            l.remove();
            u = undefined;
          }
        }
      }
      var l;
      var c;
      var u;
      var d = 0;
      var h = {
        error: "error",
        info: "info",
        success: "success",
        warning: "warning"
      };
      var f = {
        clear: function (e, r) {
          var o = a();
          if (!l) {
            t(o);
          }
          if (!i(e, o, r)) {
            n(o);
          }
        },
        remove: function (n) {
          var i = a();
          if (!l) {
            t(i);
          }
          if (n && e(":focus", n).length === 0) {
            return void s(n);
          } else {
            return void (l.children().length && l.remove());
          }
        },
        error: function (e, t, n) {
          return o({
            type: h.error,
            iconClass: a().iconClasses.error,
            message: e,
            optionsOverride: n,
            title: t
          });
        },
        getContainer: t,
        info: function (e, t, n) {
          return o({
            type: h.info,
            iconClass: a().iconClasses.info,
            message: e,
            optionsOverride: n,
            title: t
          });
        },
        options: {},
        subscribe: function (e) {
          c = e;
        },
        success: function (e, t, n) {
          return o({
            type: h.success,
            iconClass: a().iconClasses.success,
            message: e,
            optionsOverride: n,
            title: t
          });
        },
        version: "2.1.4",
        warning: function (e, t, n) {
          return o({
            type: h.warning,
            iconClass: a().iconClasses.warning,
            message: e,
            optionsOverride: n,
            title: t
          });
        }
      };
      return f;
    }();
  });
})(typeof define == "function" && define.amd ? define : function (e, t) {
  if (typeof module != "undefined" && module.exports) {
    module.exports = t(require("jquery"));
  } else {
    window.toastr = t(window.jQuery);
  }
});
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery"], e);
  } else if (typeof module == "object" && module.exports) {
    module.exports = e(require("jquery"));
  } else {
    e(jQuery);
  }
})(function (e) {
  e.extend(e.fn, {
    validate: function (t) {
      if (this.length) {
        var n = e.data(this[0], "validator");
        return n || (this.attr("novalidate", "novalidate"), n = new e.validator(t, this[0]), e.data(this[0], "validator", n), n.settings.onsubmit && (this.on("click.validate", ":submit", function (t) {
          n.submitButton = t.currentTarget;
          if (e(this).hasClass("cancel")) {
            n.cancelSubmit = true;
          }
          if (e(this).attr("formnovalidate") !== undefined) {
            n.cancelSubmit = true;
          }
        }), this.on("submit.validate", function (t) {
          function i() {
            var i;
            var r;
            if (n.submitButton && (n.settings.submitHandler || n.formSubmitted)) {
              i = e("<input type='hidden'/>").attr("name", n.submitButton.name).val(e(n.submitButton).val()).appendTo(n.currentForm);
            }
            return !(n.settings.submitHandler && !n.settings.debug) || (r = n.settings.submitHandler.call(n, n.currentForm, t), i && i.remove(), r !== undefined && r);
          }
          if (n.settings.debug) {
            t.preventDefault();
          }
          if (n.cancelSubmit) {
            n.cancelSubmit = false;
            return i();
          } else if (n.form()) {
            if (n.pendingRequest) {
              n.formSubmitted = true;
              return false;
            } else {
              return i();
            }
          } else {
            n.focusInvalid();
            return false;
          }
        })), n);
      }
      if (t && t.debug && window.console) {
        console.warn("Nothing selected, can't validate, returning nothing.");
      }
    },
    valid: function () {
      var t;
      var n;
      var i;
      if (e(this[0]).is("form")) {
        t = this.validate().form();
      } else {
        i = [];
        t = true;
        n = e(this[0].form).validate();
        this.each(function () {
          if (!(t = n.element(this) && t)) {
            i = i.concat(n.errorList);
          }
        });
        n.errorList = i;
      }
      return t;
    },
    rules: function (t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c = this[0];
      var u = this.attr("contenteditable") !== undefined && this.attr("contenteditable") !== "false";
      if (c != null && (!c.form && u && (c.form = this.closest("form")[0], c.name = this.attr("name")), c.form != null)) {
        if (t) {
          i = e.data(c.form, "validator").settings;
          r = i.rules;
          o = e.validator.staticRules(c);
          switch (t) {
            case "add":
              e.extend(o, e.validator.normalizeRule(n));
              delete o.messages;
              r[c.name] = o;
              if (n.messages) {
                i.messages[c.name] = e.extend(i.messages[c.name], n.messages);
              }
              break;
            case "remove":
              if (n) {
                l = {};
                e.each(n.split(/\s/), function (e, t) {
                  l[t] = o[t];
                  delete o[t];
                });
                return l;
              } else {
                delete r[c.name];
                return o;
              }
          }
        }
        if ((a = e.validator.normalizeRules(e.extend({}, e.validator.classRules(c), e.validator.attributeRules(c), e.validator.dataRules(c), e.validator.staticRules(c)), c)).required) {
          s = a.required;
          delete a.required;
          a = e.extend({
            required: s
          }, a);
        }
        if (a.remote) {
          s = a.remote;
          delete a.remote;
          a = e.extend(a, {
            remote: s
          });
        }
        return a;
      }
    }
  });
  var t = function (e) {
    return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  };
  e.extend(e.expr.pseudos || e.expr[":"], {
    blank: function (n) {
      return !t("" + e(n).val());
    },
    filled: function (n) {
      var i = e(n).val();
      return i !== null && !!t("" + i);
    },
    unchecked: function (t) {
      return !e(t).prop("checked");
    }
  });
  e.validator = function (t, n) {
    this.settings = e.extend(true, {}, e.validator.defaults, t);
    this.currentForm = n;
    this.init();
  };
  e.validator.format = function (t, n) {
    if (arguments.length === 1) {
      return function () {
        var n = e.makeArray(arguments);
        n.unshift(t);
        return e.validator.format.apply(this, n);
      };
    } else {
      if (!(n === undefined)) {
        if (arguments.length > 2 && n.constructor !== Array) {
          n = e.makeArray(arguments).slice(1);
        }
        if (n.constructor !== Array) {
          n = [n];
        }
        e.each(n, function (e, n) {
          t = t.replace(new RegExp("\\{" + e + "\\}", "g"), function () {
            return n;
          });
        });
      }
      return t;
    }
  };
  e.extend(e.validator, {
    defaults: {
      messages: {},
      groups: {},
      rules: {},
      errorClass: "error",
      pendingClass: "pending",
      validClass: "valid",
      errorElement: "label",
      focusCleanup: false,
      focusInvalid: true,
      errorContainer: e([]),
      errorLabelContainer: e([]),
      onsubmit: true,
      ignore: ":hidden",
      ignoreTitle: false,
      onfocusin: function (e) {
        this.lastActive = e;
        if (this.settings.focusCleanup) {
          if (this.settings.unhighlight) {
            this.settings.unhighlight.call(this, e, this.settings.errorClass, this.settings.validClass);
          }
          this.hideThese(this.errorsFor(e));
        }
      },
      onfocusout: function (e) {
        if (!(this.checkable(e) || !(e.name in this.submitted) && this.optional(e))) {
          this.element(e);
        }
      },
      onkeyup: function (t, n) {
        if (!(n.which === 9 && this.elementValue(t) === "" || e.inArray(n.keyCode, [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225]) !== -1)) {
          if (t.name in this.submitted || t.name in this.invalid) {
            this.element(t);
          }
        }
      },
      onclick: function (e) {
        if (e.name in this.submitted) {
          this.element(e);
        } else if (e.parentNode.name in this.submitted) {
          this.element(e.parentNode);
        }
      },
      highlight: function (t, n, i) {
        if (t.type === "radio") {
          this.findByName(t.name).addClass(n).removeClass(i);
        } else {
          e(t).addClass(n).removeClass(i);
        }
      },
      unhighlight: function (t, n, i) {
        if (t.type === "radio") {
          this.findByName(t.name).removeClass(n).addClass(i);
        } else {
          e(t).removeClass(n).addClass(i);
        }
      }
    },
    setDefaults: function (t) {
      e.extend(e.validator.defaults, t);
    },
    messages: {
      required: "This field is required.",
      remote: "Please fix this field.",
      email: "Please enter a valid email address.",
      url: "Please enter a valid URL.",
      date: "Please enter a valid date.",
      dateISO: "Please enter a valid date (ISO).",
      number: "Please enter a valid number.",
      digits: "Please enter only digits.",
      equalTo: "Please enter the same value again.",
      maxlength: e.validator.format("Please enter no more than {0} characters."),
      minlength: e.validator.format("Please enter at least {0} characters."),
      rangelength: e.validator.format("Please enter a value between {0} and {1} characters long."),
      range: e.validator.format("Please enter a value between {0} and {1}."),
      max: e.validator.format("Please enter a value less than or equal to {0}."),
      min: e.validator.format("Please enter a value greater than or equal to {0}."),
      step: e.validator.format("Please enter a multiple of {0}.")
    },
    autoCreateRanges: false,
    prototype: {
      init: function () {
        function t(t) {
          var n = e(this).attr("contenteditable") !== undefined && e(this).attr("contenteditable") !== "false";
          if (!this.form && n) {
            this.form = e(this).closest("form")[0];
            this.name = e(this).attr("name");
          }
          if (i === this.form) {
            var r = e.data(this.form, "validator");
            var o = "on" + t.type.replace(/^validate/, "");
            var a = r.settings;
            if (a[o] && !e(this).is(a.ignore)) {
              a[o].call(r, this, t);
            }
          }
        }
        this.labelContainer = e(this.settings.errorLabelContainer);
        this.errorContext = this.labelContainer.length && this.labelContainer || e(this.currentForm);
        this.containers = e(this.settings.errorContainer).add(this.settings.errorLabelContainer);
        this.submitted = {};
        this.valueCache = {};
        this.pendingRequest = 0;
        this.pending = {};
        this.invalid = {};
        this.reset();
        var n;
        var i = this.currentForm;
        var r = this.groups = {};
        e.each(this.settings.groups, function (t, n) {
          if (typeof n == "string") {
            n = n.split(/\s/);
          }
          e.each(n, function (e, n) {
            r[n] = t;
          });
        });
        n = this.settings.rules;
        e.each(n, function (t, i) {
          n[t] = e.validator.normalizeRule(i);
        });
        e(this.currentForm).on("focusin.validate focusout.validate keyup.validate", ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']", t).on("click.validate", "select, option, [type='radio'], [type='checkbox']", t);
        if (this.settings.invalidHandler) {
          e(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler);
        }
      },
      form: function () {
        this.checkForm();
        e.extend(this.submitted, this.errorMap);
        this.invalid = e.extend({}, this.errorMap);
        if (!this.valid()) {
          e(this.currentForm).triggerHandler("invalid-form", [this]);
        }
        this.showErrors();
        return this.valid();
      },
      checkForm: function () {
        this.prepareForm();
        for (var e = 0, t = this.currentElements = this.elements(); t[e]; e++) {
          this.check(t[e]);
        }
        return this.valid();
      },
      element: function (t) {
        var n;
        var i;
        var r = this.clean(t);
        var o = this.validationTargetFor(r);
        var a = this;
        var s = true;
        if (o === undefined) {
          delete this.invalid[r.name];
        } else {
          this.prepareElement(o);
          this.currentElements = e(o);
          if (i = this.groups[o.name]) {
            e.each(this.groups, function (e, t) {
              if (t === i && e !== o.name) {
                if ((r = a.validationTargetFor(a.clean(a.findByName(e)))) && r.name in a.invalid) {
                  a.currentElements.push(r);
                  s = a.check(r) && s;
                }
              }
            });
          }
          n = this.check(o) !== false;
          s = s && n;
          this.invalid[o.name] = !n;
          if (!this.numberOfInvalids()) {
            this.toHide = this.toHide.add(this.containers);
          }
          this.showErrors();
          e(t).attr("aria-invalid", !n);
        }
        return s;
      },
      showErrors: function (t) {
        if (t) {
          var n = this;
          e.extend(this.errorMap, t);
          this.errorList = e.map(this.errorMap, function (e, t) {
            return {
              message: e,
              element: n.findByName(t)[0]
            };
          });
          this.successList = e.grep(this.successList, function (e) {
            return !(e.name in t);
          });
        }
        if (this.settings.showErrors) {
          this.settings.showErrors.call(this, this.errorMap, this.errorList);
        } else {
          this.defaultShowErrors();
        }
      },
      resetForm: function () {
        if (e.fn.resetForm) {
          e(this.currentForm).resetForm();
        }
        this.invalid = {};
        this.submitted = {};
        this.prepareForm();
        this.hideErrors();
        var t = this.elements().removeData("previousValue").removeAttr("aria-invalid");
        this.resetElements(t);
      },
      resetElements: function (e) {
        var t;
        if (this.settings.unhighlight) {
          for (t = 0; e[t]; t++) {
            this.settings.unhighlight.call(this, e[t], this.settings.errorClass, "");
            this.findByName(e[t].name).removeClass(this.settings.validClass);
          }
        } else {
          e.removeClass(this.settings.errorClass).removeClass(this.settings.validClass);
        }
      },
      numberOfInvalids: function () {
        return this.objectLength(this.invalid);
      },
      objectLength: function (e) {
        var t;
        var n = 0;
        for (t in e) {
          if (e[t] !== undefined && e[t] !== null && e[t] !== false) {
            n++;
          }
        }
        return n;
      },
      hideErrors: function () {
        this.hideThese(this.toHide);
      },
      hideThese: function (e) {
        e.not(this.containers).text("");
        this.addWrapper(e).hide();
      },
      valid: function () {
        return this.size() === 0;
      },
      size: function () {
        return this.errorList.length;
      },
      focusInvalid: function () {
        if (this.settings.focusInvalid) {
          try {
            e(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").trigger("focus").trigger("focusin");
          } catch (e) {}
        }
      },
      findLastActive: function () {
        var t = this.lastActive;
        return t && e.grep(this.errorList, function (e) {
          return e.element.name === t.name;
        }).length === 1 && t;
      },
      elements: function () {
        var t = this;
        var n = {};
        return e(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function () {
          var i = this.name || e(this).attr("name");
          var r = e(this).attr("contenteditable") !== undefined && e(this).attr("contenteditable") !== "false";
          if (!i && t.settings.debug && window.console) {
            console.error("%o has no name assigned", this);
          }
          if (r) {
            this.form = e(this).closest("form")[0];
            this.name = i;
          }
          return !(this.form !== t.currentForm || i in n || !t.objectLength(e(this).rules()) || (n[i] = true, 0));
        });
      },
      clean: function (t) {
        return e(t)[0];
      },
      errors: function () {
        var t = this.settings.errorClass.split(" ").join(".");
        return e(this.settings.errorElement + "." + t, this.errorContext);
      },
      resetInternals: function () {
        this.successList = [];
        this.errorList = [];
        this.errorMap = {};
        this.toShow = e([]);
        this.toHide = e([]);
      },
      reset: function () {
        this.resetInternals();
        this.currentElements = e([]);
      },
      prepareForm: function () {
        this.reset();
        this.toHide = this.errors().add(this.containers);
      },
      prepareElement: function (e) {
        this.reset();
        this.toHide = this.errorsFor(e);
      },
      elementValue: function (t) {
        var n;
        var i;
        var r = e(t);
        var o = t.type;
        var a = r.attr("contenteditable") !== undefined && r.attr("contenteditable") !== "false";
        if (o === "radio" || o === "checkbox") {
          return this.findByName(t.name).filter(":checked").val();
        } else if (o === "number" && t.validity !== undefined) {
          if (t.validity.badInput) {
            return "NaN";
          } else {
            return r.val();
          }
        } else {
          n = a ? r.text() : r.val();
          if (o === "file") {
            if (n.substr(0, 12) === "C:\\fakepath\\") {
              return n.substr(12);
            } else if ((i = n.lastIndexOf("/")) >= 0) {
              return n.substr(i + 1);
            } else if ((i = n.lastIndexOf("\\")) >= 0) {
              return n.substr(i + 1);
            } else {
              return n;
            }
          } else if (typeof n == "string") {
            return n.replace(/\r/g, "");
          } else {
            return n;
          }
        }
      },
      check: function (t) {
        t = this.validationTargetFor(this.clean(t));
        var n;
        var i;
        var r;
        var o;
        var a = e(t).rules();
        var s = e.map(a, function (e, t) {
          return t;
        }).length;
        var l = false;
        var c = this.elementValue(t);
        if (typeof a.normalizer == "function") {
          o = a.normalizer;
        } else if (typeof this.settings.normalizer == "function") {
          o = this.settings.normalizer;
        }
        if (o) {
          c = o.call(t, c);
          delete a.normalizer;
        }
        for (i in a) {
          r = {
            method: i,
            parameters: a[i]
          };
          try {
            if ((n = e.validator.methods[i].call(this, c, t, r.parameters)) === "dependency-mismatch" && s === 1) {
              l = true;
              continue;
            }
            l = false;
            if (n === "pending") {
              return void (this.toHide = this.toHide.not(this.errorsFor(t)));
            }
            if (!n) {
              this.formatAndAdd(t, r);
              return false;
            }
          } catch (e) {
            if (this.settings.debug && window.console) {
              console.log("Exception occurred when checking element " + t.id + ", check the '" + r.method + "' method.", e);
            }
            if (e instanceof TypeError) {
              e.message += ".  Exception occurred when checking element " + t.id + ", check the '" + r.method + "' method.";
            }
            throw e;
          }
        }
        if (!l) {
          if (this.objectLength(a)) {
            this.successList.push(t);
          }
          return true;
        }
      },
      customDataMessage: function (t, n) {
        return e(t).data("msg" + n.charAt(0).toUpperCase() + n.substring(1).toLowerCase()) || e(t).data("msg");
      },
      customMessage: function (e, t) {
        var n = this.settings.messages[e];
        return n && (n.constructor === String ? n : n[t]);
      },
      findDefined: function () {
        for (var e = 0; e < arguments.length; e++) {
          if (arguments[e] !== undefined) {
            return arguments[e];
          }
        }
      },
      defaultMessage: function (t, n) {
        if (typeof n == "string") {
          n = {
            method: n
          };
        }
        var i = this.findDefined(this.customMessage(t.name, n.method), this.customDataMessage(t, n.method), !this.settings.ignoreTitle && t.title || undefined, e.validator.messages[n.method], "<strong>Warning: No message defined for " + t.name + "</strong>");
        var r = /\$?\{(\d+)\}/g;
        if (typeof i == "function") {
          i = i.call(this, n.parameters, t);
        } else if (r.test(i)) {
          i = e.validator.format(i.replace(r, "{$1}"), n.parameters);
        }
        return i;
      },
      formatAndAdd: function (e, t) {
        var n = this.defaultMessage(e, t);
        this.errorList.push({
          message: n,
          element: e,
          method: t.method
        });
        this.errorMap[e.name] = n;
        this.submitted[e.name] = n;
      },
      addWrapper: function (e) {
        if (this.settings.wrapper) {
          e = e.add(e.parent(this.settings.wrapper));
        }
        return e;
      },
      defaultShowErrors: function () {
        var e;
        var t;
        var n;
        for (e = 0; this.errorList[e]; e++) {
          n = this.errorList[e];
          if (this.settings.highlight) {
            this.settings.highlight.call(this, n.element, this.settings.errorClass, this.settings.validClass);
          }
          this.showLabel(n.element, n.message);
        }
        if (this.errorList.length) {
          this.toShow = this.toShow.add(this.containers);
        }
        if (this.settings.success) {
          for (e = 0; this.successList[e]; e++) {
            this.showLabel(this.successList[e]);
          }
        }
        if (this.settings.unhighlight) {
          e = 0;
          t = this.validElements();
          e = 0;
          t = this.validElements();
          for (; t[e]; e++) {
            this.settings.unhighlight.call(this, t[e], this.settings.errorClass, this.settings.validClass);
          }
        }
        this.toHide = this.toHide.not(this.toShow);
        this.hideErrors();
        this.addWrapper(this.toShow).show();
      },
      validElements: function () {
        return this.currentElements.not(this.invalidElements());
      },
      invalidElements: function () {
        return e(this.errorList).map(function () {
          return this.element;
        });
      },
      showLabel: function (t, n) {
        var i;
        var r;
        var o;
        var a;
        var s = this.errorsFor(t);
        var l = this.idOrName(t);
        var c = e(t).attr("aria-describedby");
        if (s.length) {
          s.removeClass(this.settings.validClass).addClass(this.settings.errorClass);
          s.html(n);
        } else {
          i = s = e("<" + this.settings.errorElement + ">").attr("id", l + "-error").addClass(this.settings.errorClass).html(n || "");
          if (this.settings.wrapper) {
            i = s.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();
          }
          if (this.labelContainer.length) {
            this.labelContainer.append(i);
          } else if (this.settings.errorPlacement) {
            this.settings.errorPlacement.call(this, i, e(t));
          } else {
            i.insertAfter(t);
          }
          if (s.is("label")) {
            s.attr("for", l);
          } else if (s.parents("label[for='" + this.escapeCssMeta(l) + "']").length === 0) {
            o = s.attr("id");
            if (c) {
              if (!c.match(new RegExp("\\b" + this.escapeCssMeta(o) + "\\b"))) {
                c += " " + o;
              }
            } else {
              c = o;
            }
            e(t).attr("aria-describedby", c);
            if (r = this.groups[t.name]) {
              a = this;
              e.each(a.groups, function (t, n) {
                if (n === r) {
                  e("[name='" + a.escapeCssMeta(t) + "']", a.currentForm).attr("aria-describedby", s.attr("id"));
                }
              });
            }
          }
        }
        if (!n && this.settings.success) {
          s.text("");
          if (typeof this.settings.success == "string") {
            s.addClass(this.settings.success);
          } else {
            this.settings.success(s, t);
          }
        }
        this.toShow = this.toShow.add(s);
      },
      errorsFor: function (t) {
        var n = this.escapeCssMeta(this.idOrName(t));
        var i = e(t).attr("aria-describedby");
        var r = "label[for='" + n + "'], label[for='" + n + "'] *";
        if (i) {
          r = r + ", #" + this.escapeCssMeta(i).replace(/\s+/g, ", #");
        }
        return this.errors().filter(r);
      },
      escapeCssMeta: function (e) {
        if (e === undefined) {
          return "";
        } else {
          return e.replace(/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g, "\\$1");
        }
      },
      idOrName: function (e) {
        return this.groups[e.name] || (this.checkable(e) ? e.name : e.id || e.name);
      },
      validationTargetFor: function (t) {
        if (this.checkable(t)) {
          t = this.findByName(t.name);
        }
        return e(t).not(this.settings.ignore)[0];
      },
      checkable: function (e) {
        return /radio|checkbox/i.test(e.type);
      },
      findByName: function (t) {
        return e(this.currentForm).find("[name='" + this.escapeCssMeta(t) + "']");
      },
      getLength: function (t, n) {
        switch (n.nodeName.toLowerCase()) {
          case "select":
            return e("option:selected", n).length;
          case "input":
            if (this.checkable(n)) {
              return this.findByName(n.name).filter(":checked").length;
            }
        }
        return t.length;
      },
      depend: function (e, t) {
        return !this.dependTypes[typeof e] || this.dependTypes[typeof e](e, t);
      },
      dependTypes: {
        boolean: function (e) {
          return e;
        },
        string: function (t, n) {
          return !!e(t, n.form).length;
        },
        function: function (e, t) {
          return e(t);
        }
      },
      optional: function (t) {
        var n = this.elementValue(t);
        return !e.validator.methods.required.call(this, n, t) && "dependency-mismatch";
      },
      startRequest: function (t) {
        if (!this.pending[t.name]) {
          this.pendingRequest++;
          e(t).addClass(this.settings.pendingClass);
          this.pending[t.name] = true;
        }
      },
      stopRequest: function (t, n) {
        this.pendingRequest--;
        if (this.pendingRequest < 0) {
          this.pendingRequest = 0;
        }
        delete this.pending[t.name];
        e(t).removeClass(this.settings.pendingClass);
        if (n && this.pendingRequest === 0 && this.formSubmitted && this.form() && this.pendingRequest === 0) {
          e(this.currentForm).trigger("submit");
          if (this.submitButton) {
            e("input:hidden[name='" + this.submitButton.name + "']", this.currentForm).remove();
          }
          this.formSubmitted = false;
        } else if (!n && this.pendingRequest === 0 && this.formSubmitted) {
          e(this.currentForm).triggerHandler("invalid-form", [this]);
          this.formSubmitted = false;
        }
      },
      previousValue: function (t, n) {
        n = typeof n == "string" && n || "remote";
        return e.data(t, "previousValue") || e.data(t, "previousValue", {
          old: null,
          valid: true,
          message: this.defaultMessage(t, {
            method: n
          })
        });
      },
      destroy: function () {
        this.resetForm();
        e(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur").find(".validate-lessThan-blur").off(".validate-lessThan").removeClass("validate-lessThan-blur").find(".validate-lessThanEqual-blur").off(".validate-lessThanEqual").removeClass("validate-lessThanEqual-blur").find(".validate-greaterThanEqual-blur").off(".validate-greaterThanEqual").removeClass("validate-greaterThanEqual-blur").find(".validate-greaterThan-blur").off(".validate-greaterThan").removeClass("validate-greaterThan-blur");
      }
    },
    classRuleSettings: {
      required: {
        required: true
      },
      email: {
        email: true
      },
      url: {
        url: true
      },
      date: {
        date: true
      },
      dateISO: {
        dateISO: true
      },
      number: {
        number: true
      },
      digits: {
        digits: true
      },
      creditcard: {
        creditcard: true
      }
    },
    addClassRules: function (t, n) {
      if (t.constructor === String) {
        this.classRuleSettings[t] = n;
      } else {
        e.extend(this.classRuleSettings, t);
      }
    },
    classRules: function (t) {
      var n = {};
      var i = e(t).attr("class");
      if (i) {
        e.each(i.split(" "), function () {
          if (this in e.validator.classRuleSettings) {
            e.extend(n, e.validator.classRuleSettings[this]);
          }
        });
      }
      return n;
    },
    normalizeAttributeRule: function (e, t, n, i) {
      if (/min|max|step/.test(n) && (t === null || /number|range|text/.test(t))) {
        i = Number(i);
        if (isNaN(i)) {
          i = undefined;
        }
      }
      if (i || i === 0) {
        e[n] = i;
      } else if (t === n && t !== "range") {
        e[t === "date" ? "dateISO" : n] = true;
      }
    },
    attributeRules: function (t) {
      var n;
      var i;
      var r = {};
      var o = e(t);
      var a = t.getAttribute("type");
      for (n in e.validator.methods) {
        if (n === "required") {
          if ((i = t.getAttribute(n)) === "") {
            i = true;
          }
          i = !!i;
        } else {
          i = o.attr(n);
        }
        this.normalizeAttributeRule(r, a, n, i);
      }
      if (r.maxlength && /-1|2147483647|524288/.test(r.maxlength)) {
        delete r.maxlength;
      }
      return r;
    },
    dataRules: function (t) {
      var n;
      var i;
      var r = {};
      var o = e(t);
      var a = t.getAttribute("type");
      for (n in e.validator.methods) {
        if ((i = o.data("rule" + n.charAt(0).toUpperCase() + n.substring(1).toLowerCase())) === "") {
          i = true;
        }
        this.normalizeAttributeRule(r, a, n, i);
      }
      return r;
    },
    staticRules: function (t) {
      var n = {};
      var i = e.data(t.form, "validator");
      if (i.settings.rules) {
        n = e.validator.normalizeRule(i.settings.rules[t.name]) || {};
      }
      return n;
    },
    normalizeRules: function (t, n) {
      e.each(t, function (i, r) {
        if (r !== false) {
          if (r.param || r.depends) {
            var o = true;
            switch (typeof r.depends) {
              case "string":
                o = !!e(r.depends, n.form).length;
                break;
              case "function":
                o = r.depends.call(n, n);
            }
            if (o) {
              t[i] = r.param === undefined || r.param;
            } else {
              e.data(n.form, "validator").resetElements(e(n));
              delete t[i];
            }
          }
        } else {
          delete t[i];
        }
      });
      e.each(t, function (e, i) {
        t[e] = typeof i == "function" && e !== "normalizer" ? i(n) : i;
      });
      e.each(["minlength", "maxlength"], function () {
        if (t[this]) {
          t[this] = Number(t[this]);
        }
      });
      e.each(["rangelength", "range"], function () {
        var e;
        if (t[this]) {
          if (Array.isArray(t[this])) {
            t[this] = [Number(t[this][0]), Number(t[this][1])];
          } else if (typeof t[this] == "string") {
            e = t[this].replace(/[\[\]]/g, "").split(/[\s,]+/);
            t[this] = [Number(e[0]), Number(e[1])];
          }
        }
      });
      if (e.validator.autoCreateRanges) {
        if (t.min != null && t.max != null) {
          t.range = [t.min, t.max];
          delete t.min;
          delete t.max;
        }
        if (t.minlength != null && t.maxlength != null) {
          t.rangelength = [t.minlength, t.maxlength];
          delete t.minlength;
          delete t.maxlength;
        }
      }
      return t;
    },
    normalizeRule: function (t) {
      if (typeof t == "string") {
        var n = {};
        e.each(t.split(/\s/), function () {
          n[this] = true;
        });
        t = n;
      }
      return t;
    },
    addMethod: function (t, n, i) {
      e.validator.methods[t] = n;
      e.validator.messages[t] = i !== undefined ? i : e.validator.messages[t];
      if (n.length < 3) {
        e.validator.addClassRules(t, e.validator.normalizeRule(t));
      }
    },
    methods: {
      required: function (t, n, i) {
        if (!this.depend(i, n)) {
          return "dependency-mismatch";
        }
        if (n.nodeName.toLowerCase() === "select") {
          var r = e(n).val();
          return r && r.length > 0;
        }
        if (this.checkable(n)) {
          return this.getLength(t, n) > 0;
        } else {
          return t != null && t.length > 0;
        }
      },
      email: function (e, t) {
        return this.optional(t) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(e);
      },
      url: function (e, t) {
        return this.optional(t) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:(?:[^\]\[?\/<~#`!@$^&*()+=}|:";',>{ ]|%[0-9A-Fa-f]{2})+(?::(?:[^\]\[?\/<~#`!@$^&*()+=}|:";',>{ ]|%[0-9A-Fa-f]{2})*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(e);
      },
      date: function () {
        var e = false;
        return function (t, n) {
          if (!e) {
            e = true;
            if (this.settings.debug && window.console) {
              console.warn("The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`.");
            }
          }
          return this.optional(n) || !/Invalid|NaN/.test(new Date(t).toString());
        };
      }(),
      dateISO: function (e, t) {
        return this.optional(t) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(e);
      },
      number: function (e, t) {
        return this.optional(t) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(e);
      },
      digits: function (e, t) {
        return this.optional(t) || /^\d+$/.test(e);
      },
      minlength: function (e, t, n) {
        var i = Array.isArray(e) ? e.length : this.getLength(e, t);
        return this.optional(t) || i >= n;
      },
      maxlength: function (e, t, n) {
        var i = Array.isArray(e) ? e.length : this.getLength(e, t);
        return this.optional(t) || i <= n;
      },
      rangelength: function (e, t, n) {
        var i = Array.isArray(e) ? e.length : this.getLength(e, t);
        return this.optional(t) || i >= n[0] && i <= n[1];
      },
      min: function (e, t, n) {
        return this.optional(t) || e >= n;
      },
      max: function (e, t, n) {
        return this.optional(t) || e <= n;
      },
      range: function (e, t, n) {
        return this.optional(t) || e >= n[0] && e <= n[1];
      },
      step: function (t, n, i) {
        var r;
        var o = e(n).attr("type");
        var a = "Step attribute on input type " + o + " is not supported.";
        var s = new RegExp("\\b" + o + "\\b");
        var l = function (e) {
          var t = ("" + e).match(/(?:\.(\d+))?$/);
          if (t && t[1]) {
            return t[1].length;
          } else {
            return 0;
          }
        };
        var c = function (e) {
          return Math.round(e * Math.pow(10, r));
        };
        var u = true;
        if (o && !s.test(["text", "number", "range"].join())) {
          throw new Error(a);
        }
        r = l(i);
        if (l(t) > r || c(t) % c(i) != 0) {
          u = false;
        }
        return this.optional(n) || u;
      },
      equalTo: function (t, n, i) {
        var r = e(i);
        if (this.settings.onfocusout && r.not(".validate-equalTo-blur").length) {
          r.addClass("validate-equalTo-blur").on("blur.validate-equalTo", function () {
            e(n).valid();
          });
        }
        return t === r.val();
      },
      remote: function (t, n, i, r) {
        if (this.optional(n)) {
          return "dependency-mismatch";
        }
        r = typeof r == "string" && r || "remote";
        var o;
        var a;
        var s;
        var l = this.previousValue(n, r);
        if (!this.settings.messages[n.name]) {
          this.settings.messages[n.name] = {};
        }
        l.originalMessage = l.originalMessage || this.settings.messages[n.name][r];
        this.settings.messages[n.name][r] = l.message;
        i = typeof i == "string" && {
          url: i
        } || i;
        s = e.param(e.extend({
          data: t
        }, i.data));
        if (l.old === s) {
          return l.valid;
        } else {
          l.old = s;
          o = this;
          this.startRequest(n);
          (a = {})[n.name] = t;
          e.ajax(e.extend(true, {
            mode: "abort",
            port: "validate" + n.name,
            dataType: "json",
            data: a,
            context: o.currentForm,
            success: function (e) {
              var i;
              var a;
              var s;
              var c = e === true || e === "true";
              o.settings.messages[n.name][r] = l.originalMessage;
              if (c) {
                s = o.formSubmitted;
                o.resetInternals();
                o.toHide = o.errorsFor(n);
                o.formSubmitted = s;
                o.successList.push(n);
                o.invalid[n.name] = false;
                o.showErrors();
              } else {
                i = {};
                a = e || o.defaultMessage(n, {
                  method: r,
                  parameters: t
                });
                i[n.name] = l.message = a;
                o.invalid[n.name] = true;
                o.showErrors(i);
              }
              l.valid = c;
              o.stopRequest(n, c);
            }
          }, i));
          return "pending";
        }
      }
    }
  });
  var n;
  var i = {};
  if (e.ajaxPrefilter) {
    e.ajaxPrefilter(function (e, t, n) {
      var r = e.port;
      if (e.mode === "abort") {
        if (i[r]) {
          i[r].abort();
        }
        i[r] = n;
      }
    });
  } else {
    n = e.ajax;
    e.ajax = function (t) {
      var r = ("mode" in t ? t : e.ajaxSettings).mode;
      var o = ("port" in t ? t : e.ajaxSettings).port;
      if (r === "abort") {
        if (i[o]) {
          i[o].abort();
        }
        i[o] = n.apply(this, arguments);
        return i[o];
      } else {
        return n.apply(this, arguments);
      }
    };
  }
  return e;
});
(function (e) {
  "use strict";

  if (typeof define == "function" && define.amd) {
    define(["jquery"], e);
  } else if (typeof exports != "undefined") {
    module.exports = e(require("jquery"));
  } else {
    e(jQuery);
  }
})(function (e) {
  "use strict";

  var t = window.Slick || {};
  (t = function () {
    var t = 0;
    return function (n, i) {
      var r;
      var o = this;
      o.defaults = {
        accessibility: true,
        adaptiveHeight: false,
        appendArrows: e(n),
        appendDots: e(n),
        arrows: true,
        asNavFor: null,
        prevArrow: "<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>",
        nextArrow: "<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>",
        autoplay: false,
        autoplaySpeed: 3000,
        centerMode: false,
        centerPadding: "50px",
        cssEase: "ease",
        customPaging: function (t, n) {
          return e("<button type=\"button\" />").text(n + 1);
        },
        dots: false,
        dotsClass: "slick-dots",
        draggable: true,
        easing: "linear",
        edgeFriction: 0.35,
        fade: false,
        focusOnSelect: false,
        focusOnChange: false,
        infinite: true,
        initialSlide: 0,
        lazyLoad: "ondemand",
        mobileFirst: false,
        pauseOnHover: true,
        pauseOnFocus: true,
        pauseOnDotsHover: false,
        respondTo: "window",
        responsive: null,
        rows: 1,
        rtl: false,
        slide: "",
        slidesPerRow: 1,
        slidesToShow: 1,
        slidesToScroll: 1,
        speed: 500,
        swipe: true,
        swipeToSlide: false,
        touchMove: true,
        touchThreshold: 5,
        useCSS: true,
        useTransform: true,
        variableWidth: false,
        vertical: false,
        verticalSwiping: false,
        waitForAnimate: true,
        zIndex: 1000
      };
      o.initials = {
        animating: false,
        dragging: false,
        autoPlayTimer: null,
        currentDirection: 0,
        currentLeft: null,
        currentSlide: 0,
        direction: 1,
        $dots: null,
        listWidth: null,
        listHeight: null,
        loadIndex: 0,
        $nextArrow: null,
        $prevArrow: null,
        scrolling: false,
        slideCount: null,
        slideWidth: null,
        $slideTrack: null,
        $slides: null,
        sliding: false,
        slideOffset: 0,
        swipeLeft: null,
        swiping: false,
        $list: null,
        touchObject: {},
        transformsEnabled: false,
        unslicked: false
      };
      e.extend(o, o.initials);
      o.activeBreakpoint = null;
      o.animType = null;
      o.animProp = null;
      o.breakpoints = [];
      o.breakpointSettings = [];
      o.cssTransitions = false;
      o.focussed = false;
      o.interrupted = false;
      o.hidden = "hidden";
      o.paused = true;
      o.positionProp = null;
      o.respondTo = null;
      o.rowCount = 1;
      o.shouldClick = true;
      o.$slider = e(n);
      o.$slidesCache = null;
      o.transformType = null;
      o.transitionType = null;
      o.visibilityChange = "visibilitychange";
      o.windowWidth = 0;
      o.windowTimer = null;
      r = e(n).data("slick") || {};
      o.options = e.extend({}, o.defaults, i, r);
      o.currentSlide = o.options.initialSlide;
      o.originalSettings = o.options;
      if (document.mozHidden !== undefined) {
        o.hidden = "mozHidden";
        o.visibilityChange = "mozvisibilitychange";
      } else if (document.webkitHidden !== undefined) {
        o.hidden = "webkitHidden";
        o.visibilityChange = "webkitvisibilitychange";
      }
      o.autoPlay = e.proxy(o.autoPlay, o);
      o.autoPlayClear = e.proxy(o.autoPlayClear, o);
      o.autoPlayIterator = e.proxy(o.autoPlayIterator, o);
      o.changeSlide = e.proxy(o.changeSlide, o);
      o.clickHandler = e.proxy(o.clickHandler, o);
      o.selectHandler = e.proxy(o.selectHandler, o);
      o.setPosition = e.proxy(o.setPosition, o);
      o.swipeHandler = e.proxy(o.swipeHandler, o);
      o.dragHandler = e.proxy(o.dragHandler, o);
      o.keyHandler = e.proxy(o.keyHandler, o);
      o.instanceUid = t++;
      o.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;
      o.registerBreakpoints();
      o.init(true);
    };
  }()).prototype.activateADA = function () {
    this.$slideTrack.find(".slick-active").attr({
      "aria-hidden": "false"
    }).find("a, input, button, select").attr({
      tabindex: "0"
    });
  };
  t.prototype.addSlide = t.prototype.slickAdd = function (t, n, i) {
    var r = this;
    if (typeof n == "boolean") {
      i = n;
      n = null;
    } else if (n < 0 || n >= r.slideCount) {
      return false;
    }
    r.unload();
    if (typeof n == "number") {
      if (n === 0 && r.$slides.length === 0) {
        e(t).appendTo(r.$slideTrack);
      } else if (i) {
        e(t).insertBefore(r.$slides.eq(n));
      } else {
        e(t).insertAfter(r.$slides.eq(n));
      }
    } else if (i === true) {
      e(t).prependTo(r.$slideTrack);
    } else {
      e(t).appendTo(r.$slideTrack);
    }
    r.$slides = r.$slideTrack.children(this.options.slide);
    r.$slideTrack.children(this.options.slide).detach();
    r.$slideTrack.append(r.$slides);
    r.$slides.each(function (t, n) {
      e(n).attr("data-slick-index", t);
    });
    r.$slidesCache = r.$slides;
    r.reinit();
  };
  t.prototype.animateHeight = function () {
    var e = this;
    if (e.options.slidesToShow === 1 && e.options.adaptiveHeight === true && e.options.vertical === false) {
      var t = e.$slides.eq(e.currentSlide).outerHeight(true);
      e.$list.animate({
        height: t
      }, e.options.speed);
    }
  };
  t.prototype.animateSlide = function (t, n) {
    var i = {};
    var r = this;
    r.animateHeight();
    if (r.options.rtl === true && r.options.vertical === false) {
      t = -t;
    }
    if (r.transformsEnabled === false) {
      if (r.options.vertical === false) {
        r.$slideTrack.animate({
          left: t
        }, r.options.speed, r.options.easing, n);
      } else {
        r.$slideTrack.animate({
          top: t
        }, r.options.speed, r.options.easing, n);
      }
    } else if (r.cssTransitions === false) {
      if (r.options.rtl === true) {
        r.currentLeft = -r.currentLeft;
      }
      e({
        animStart: r.currentLeft
      }).animate({
        animStart: t
      }, {
        duration: r.options.speed,
        easing: r.options.easing,
        step: function (e) {
          e = Math.ceil(e);
          if (r.options.vertical === false) {
            i[r.animType] = "translate(" + e + "px, 0px)";
            r.$slideTrack.css(i);
          } else {
            i[r.animType] = "translate(0px," + e + "px)";
            r.$slideTrack.css(i);
          }
        },
        complete: function () {
          if (n) {
            n.call();
          }
        }
      });
    } else {
      r.applyTransition();
      t = Math.ceil(t);
      if (r.options.vertical === false) {
        i[r.animType] = "translate3d(" + t + "px, 0px, 0px)";
      } else {
        i[r.animType] = "translate3d(0px," + t + "px, 0px)";
      }
      r.$slideTrack.css(i);
      if (n) {
        setTimeout(function () {
          r.disableTransition();
          n.call();
        }, r.options.speed);
      }
    }
  };
  t.prototype.getNavTarget = function () {
    var t = this.options.asNavFor;
    if (t && t !== null) {
      t = e(t).not(this.$slider);
    }
    return t;
  };
  t.prototype.asNavFor = function (t) {
    var n = this.getNavTarget();
    if (n !== null && typeof n == "object") {
      n.each(function () {
        var n = e(this).slick("getSlick");
        if (!n.unslicked) {
          n.slideHandler(t, true);
        }
      });
    }
  };
  t.prototype.applyTransition = function (e) {
    var t = this;
    var n = {};
    if (t.options.fade === false) {
      n[t.transitionType] = t.transformType + " " + t.options.speed + "ms " + t.options.cssEase;
    } else {
      n[t.transitionType] = "opacity " + t.options.speed + "ms " + t.options.cssEase;
    }
    if (t.options.fade === false) {
      t.$slideTrack.css(n);
    } else {
      t.$slides.eq(e).css(n);
    }
  };
  t.prototype.autoPlay = function () {
    var e = this;
    e.autoPlayClear();
    if (e.slideCount > e.options.slidesToShow) {
      e.autoPlayTimer = setInterval(e.autoPlayIterator, e.options.autoplaySpeed);
    }
  };
  t.prototype.autoPlayClear = function () {
    if (this.autoPlayTimer) {
      clearInterval(this.autoPlayTimer);
    }
  };
  t.prototype.autoPlayIterator = function () {
    var e = this;
    var t = e.currentSlide + e.options.slidesToScroll;
    if (!(e.paused || e.interrupted || e.focussed)) {
      if (e.options.infinite === false) {
        if (e.direction === 1 && e.currentSlide + 1 === e.slideCount - 1) {
          e.direction = 0;
        } else if (e.direction === 0) {
          t = e.currentSlide - e.options.slidesToScroll;
          if (e.currentSlide - 1 == 0) {
            e.direction = 1;
          }
        }
      }
      e.slideHandler(t);
    }
  };
  t.prototype.buildArrows = function () {
    var t = this;
    if (t.options.arrows === true) {
      t.$prevArrow = e(t.options.prevArrow).addClass("slick-arrow");
      t.$nextArrow = e(t.options.nextArrow).addClass("slick-arrow");
      if (t.slideCount > t.options.slidesToShow) {
        t.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex");
        t.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex");
        if (t.htmlExpr.test(t.options.prevArrow)) {
          t.$prevArrow.prependTo(t.options.appendArrows);
        }
        if (t.htmlExpr.test(t.options.nextArrow)) {
          t.$nextArrow.appendTo(t.options.appendArrows);
        }
        if (t.options.infinite !== true) {
          t.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true");
        }
      } else {
        t.$prevArrow.add(t.$nextArrow).addClass("slick-hidden").attr({
          "aria-disabled": "true",
          tabindex: "-1"
        });
      }
    }
  };
  t.prototype.buildDots = function () {
    var t;
    var n;
    var i = this;
    if (i.options.dots === true) {
      i.$slider.addClass("slick-dotted");
      n = e("<ul />").addClass(i.options.dotsClass);
      t = 0;
      for (; t <= i.getDotCount(); t += 1) {
        n.append(e("<li />").append(i.options.customPaging.call(this, i, t)));
      }
      i.$dots = n.appendTo(i.options.appendDots);
      i.$dots.find("li").first().addClass("slick-active");
    }
  };
  t.prototype.buildOut = function () {
    var t = this;
    t.$slides = t.$slider.children(t.options.slide + ":not(.slick-cloned)").addClass("slick-slide");
    t.slideCount = t.$slides.length;
    t.$slides.each(function (t, n) {
      e(n).attr("data-slick-index", t).data("originalStyling", e(n).attr("style") || "");
    });
    t.$slider.addClass("slick-slider");
    t.$slideTrack = t.slideCount === 0 ? e("<div class=\"slick-track\"/>").appendTo(t.$slider) : t.$slides.wrapAll("<div class=\"slick-track\"/>").parent();
    t.$list = t.$slideTrack.wrap("<div class=\"slick-list\"/>").parent();
    t.$slideTrack.css("opacity", 0);
    if (!(t.options.centerMode !== true && t.options.swipeToSlide !== true)) {
      t.options.slidesToScroll = 1;
    }
    e("img[data-lazy]", t.$slider).not("[src]").addClass("slick-loading");
    t.setupInfinite();
    t.buildArrows();
    t.buildDots();
    t.updateDots();
    t.setSlideClasses(typeof t.currentSlide == "number" ? t.currentSlide : 0);
    if (t.options.draggable === true) {
      t.$list.addClass("draggable");
    }
  };
  t.prototype.buildRows = function () {
    var e;
    var t;
    var n;
    var i;
    var r;
    var o;
    var a;
    var s = this;
    i = document.createDocumentFragment();
    o = s.$slider.children();
    if (s.options.rows > 1) {
      a = s.options.slidesPerRow * s.options.rows;
      r = Math.ceil(o.length / a);
      e = 0;
      for (; e < r; e++) {
        var l = document.createElement("div");
        for (t = 0; t < s.options.rows; t++) {
          var c = document.createElement("div");
          for (n = 0; n < s.options.slidesPerRow; n++) {
            var u = e * a + (t * s.options.slidesPerRow + n);
            if (o.get(u)) {
              c.appendChild(o.get(u));
            }
          }
          l.appendChild(c);
        }
        i.appendChild(l);
      }
      s.$slider.empty().append(i);
      s.$slider.children().children().children().css({
        width: 100 / s.options.slidesPerRow + "%",
        display: "inline-block"
      });
    }
  };
  t.prototype.checkResponsive = function (t, n) {
    var i;
    var r;
    var o;
    var a = this;
    var s = false;
    var l = a.$slider.width();
    var c = window.innerWidth || e(window).width();
    if (a.respondTo === "window") {
      o = c;
    } else if (a.respondTo === "slider") {
      o = l;
    } else if (a.respondTo === "min") {
      o = Math.min(c, l);
    }
    if (a.options.responsive && a.options.responsive.length && a.options.responsive !== null) {
      r = null;
      for (i in a.breakpoints) {
        if (a.breakpoints.hasOwnProperty(i)) {
          if (a.originalSettings.mobileFirst === false) {
            if (o < a.breakpoints[i]) {
              r = a.breakpoints[i];
            }
          } else if (o > a.breakpoints[i]) {
            r = a.breakpoints[i];
          }
        }
      }
      if (r !== null) {
        if (a.activeBreakpoint !== null) {
          if (r !== a.activeBreakpoint || n) {
            a.activeBreakpoint = r;
            if (a.breakpointSettings[r] === "unslick") {
              a.unslick(r);
            } else {
              a.options = e.extend({}, a.originalSettings, a.breakpointSettings[r]);
              if (t === true) {
                a.currentSlide = a.options.initialSlide;
              }
              a.refresh(t);
            }
            s = r;
          }
        } else {
          a.activeBreakpoint = r;
          if (a.breakpointSettings[r] === "unslick") {
            a.unslick(r);
          } else {
            a.options = e.extend({}, a.originalSettings, a.breakpointSettings[r]);
            if (t === true) {
              a.currentSlide = a.options.initialSlide;
            }
            a.refresh(t);
          }
          s = r;
        }
      } else if (a.activeBreakpoint !== null) {
        a.activeBreakpoint = null;
        a.options = a.originalSettings;
        if (t === true) {
          a.currentSlide = a.options.initialSlide;
        }
        a.refresh(t);
        s = r;
      }
      if (!(t || s === false)) {
        a.$slider.trigger("breakpoint", [a, s]);
      }
    }
  };
  t.prototype.changeSlide = function (t, n) {
    var i;
    var r;
    var o = this;
    var a = e(t.currentTarget);
    if (a.is("a")) {
      t.preventDefault();
    }
    if (!a.is("li")) {
      a = a.closest("li");
    }
    i = o.slideCount % o.options.slidesToScroll != 0 ? 0 : (o.slideCount - o.currentSlide) % o.options.slidesToScroll;
    switch (t.data.message) {
      case "previous":
        r = i === 0 ? o.options.slidesToScroll : o.options.slidesToShow - i;
        if (o.slideCount > o.options.slidesToShow) {
          o.slideHandler(o.currentSlide - r, false, n);
        }
        break;
      case "next":
        r = i === 0 ? o.options.slidesToScroll : i;
        if (o.slideCount > o.options.slidesToShow) {
          o.slideHandler(o.currentSlide + r, false, n);
        }
        break;
      case "index":
        var s = t.data.index === 0 ? 0 : t.data.index || a.index() * o.options.slidesToScroll;
        o.slideHandler(o.checkNavigable(s), false, n);
        a.children().trigger("focus");
        break;
      default:
        return;
    }
  };
  t.prototype.checkNavigable = function (e) {
    var t;
    var n;
    n = 0;
    if (e > (t = this.getNavigableIndexes())[t.length - 1]) {
      e = t[t.length - 1];
    } else {
      for (var i in t) {
        if (e < t[i]) {
          e = n;
          break;
        }
        n = t[i];
      }
    }
    return e;
  };
  t.prototype.cleanUpEvents = function () {
    var t = this;
    if (t.options.dots && t.$dots !== null) {
      e("li", t.$dots).off("click.slick", t.changeSlide).off("mouseenter.slick", e.proxy(t.interrupt, t, true)).off("mouseleave.slick", e.proxy(t.interrupt, t, false));
      if (t.options.accessibility === true) {
        t.$dots.off("keydown.slick", t.keyHandler);
      }
    }
    t.$slider.off("focus.slick blur.slick");
    if (t.options.arrows === true && t.slideCount > t.options.slidesToShow) {
      if (t.$prevArrow) {
        t.$prevArrow.off("click.slick", t.changeSlide);
      }
      if (t.$nextArrow) {
        t.$nextArrow.off("click.slick", t.changeSlide);
      }
      if (t.options.accessibility === true) {
        if (t.$prevArrow) {
          t.$prevArrow.off("keydown.slick", t.keyHandler);
        }
        if (t.$nextArrow) {
          t.$nextArrow.off("keydown.slick", t.keyHandler);
        }
      }
    }
    t.$list.off("touchstart.slick mousedown.slick", t.swipeHandler);
    t.$list.off("touchmove.slick mousemove.slick", t.swipeHandler);
    t.$list.off("touchend.slick mouseup.slick", t.swipeHandler);
    t.$list.off("touchcancel.slick mouseleave.slick", t.swipeHandler);
    t.$list.off("click.slick", t.clickHandler);
    e(document).off(t.visibilityChange, t.visibility);
    t.cleanUpSlideEvents();
    if (t.options.accessibility === true) {
      t.$list.off("keydown.slick", t.keyHandler);
    }
    if (t.options.focusOnSelect === true) {
      e(t.$slideTrack).children().off("click.slick", t.selectHandler);
    }
    e(window).off("orientationchange.slick.slick-" + t.instanceUid, t.orientationChange);
    e(window).off("resize.slick.slick-" + t.instanceUid, t.resize);
    e("[draggable!=true]", t.$slideTrack).off("dragstart", t.preventDefault);
    e(window).off("load.slick.slick-" + t.instanceUid, t.setPosition);
  };
  t.prototype.cleanUpSlideEvents = function () {
    var t = this;
    t.$list.off("mouseenter.slick", e.proxy(t.interrupt, t, true));
    t.$list.off("mouseleave.slick", e.proxy(t.interrupt, t, false));
  };
  t.prototype.cleanUpRows = function () {
    var e;
    var t = this;
    if (t.options.rows > 1) {
      (e = t.$slides.children().children()).removeAttr("style");
      t.$slider.empty().append(e);
    }
  };
  t.prototype.clickHandler = function (e) {
    if (this.shouldClick === false) {
      e.stopImmediatePropagation();
      e.stopPropagation();
      e.preventDefault();
    }
  };
  t.prototype.destroy = function (t) {
    var n = this;
    n.autoPlayClear();
    n.touchObject = {};
    n.cleanUpEvents();
    e(".slick-cloned", n.$slider).detach();
    if (n.$dots) {
      n.$dots.remove();
    }
    if (n.$prevArrow && n.$prevArrow.length) {
      n.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", "");
      if (n.htmlExpr.test(n.options.prevArrow)) {
        n.$prevArrow.remove();
      }
    }
    if (n.$nextArrow && n.$nextArrow.length) {
      n.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", "");
      if (n.htmlExpr.test(n.options.nextArrow)) {
        n.$nextArrow.remove();
      }
    }
    if (n.$slides) {
      n.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function () {
        e(this).attr("style", e(this).data("originalStyling"));
      });
      n.$slideTrack.children(this.options.slide).detach();
      n.$slideTrack.detach();
      n.$list.detach();
      n.$slider.append(n.$slides);
    }
    n.cleanUpRows();
    n.$slider.removeClass("slick-slider");
    n.$slider.removeClass("slick-initialized");
    n.$slider.removeClass("slick-dotted");
    n.unslicked = true;
    if (!t) {
      n.$slider.trigger("destroy", [n]);
    }
  };
  t.prototype.disableTransition = function (e) {
    var t = this;
    var n = {
      [t.transitionType]: ""
    };
    if (t.options.fade === false) {
      t.$slideTrack.css(n);
    } else {
      t.$slides.eq(e).css(n);
    }
  };
  t.prototype.fadeSlide = function (e, t) {
    var n = this;
    if (n.cssTransitions === false) {
      n.$slides.eq(e).css({
        zIndex: n.options.zIndex
      });
      n.$slides.eq(e).animate({
        opacity: 1
      }, n.options.speed, n.options.easing, t);
    } else {
      n.applyTransition(e);
      n.$slides.eq(e).css({
        opacity: 1,
        zIndex: n.options.zIndex
      });
      if (t) {
        setTimeout(function () {
          n.disableTransition(e);
          t.call();
        }, n.options.speed);
      }
    }
  };
  t.prototype.fadeSlideOut = function (e) {
    var t = this;
    if (t.cssTransitions === false) {
      t.$slides.eq(e).animate({
        opacity: 0,
        zIndex: t.options.zIndex - 2
      }, t.options.speed, t.options.easing);
    } else {
      t.applyTransition(e);
      t.$slides.eq(e).css({
        opacity: 0,
        zIndex: t.options.zIndex - 2
      });
    }
  };
  t.prototype.filterSlides = t.prototype.slickFilter = function (e) {
    var t = this;
    if (e !== null) {
      t.$slidesCache = t.$slides;
      t.unload();
      t.$slideTrack.children(this.options.slide).detach();
      t.$slidesCache.filter(e).appendTo(t.$slideTrack);
      t.reinit();
    }
  };
  t.prototype.focusHandler = function () {
    var t = this;
    t.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function (n) {
      n.stopImmediatePropagation();
      var i = e(this);
      setTimeout(function () {
        if (t.options.pauseOnFocus) {
          t.focussed = i.is(":focus");
          t.autoPlay();
        }
      }, 0);
    });
  };
  t.prototype.getCurrent = t.prototype.slickCurrentSlide = function () {
    return this.currentSlide;
  };
  t.prototype.getDotCount = function () {
    var e = this;
    var t = 0;
    var n = 0;
    var i = 0;
    if (e.options.infinite === true) {
      if (e.slideCount <= e.options.slidesToShow) {
        ++i;
      } else {
        for (; t < e.slideCount;) {
          ++i;
          t = n + e.options.slidesToScroll;
          n += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
        }
      }
    } else if (e.options.centerMode === true) {
      i = e.slideCount;
    } else if (e.options.asNavFor) {
      for (; t < e.slideCount;) {
        ++i;
        t = n + e.options.slidesToScroll;
        n += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
      }
    } else {
      i = 1 + Math.ceil((e.slideCount - e.options.slidesToShow) / e.options.slidesToScroll);
    }
    return i - 1;
  };
  t.prototype.getLeft = function (e) {
    var t;
    var n;
    var i;
    var r;
    var o = this;
    var a = 0;
    o.slideOffset = 0;
    n = o.$slides.first().outerHeight(true);
    if (o.options.infinite === true) {
      if (o.slideCount > o.options.slidesToShow) {
        o.slideOffset = o.slideWidth * o.options.slidesToShow * -1;
        r = -1;
        if (o.options.vertical === true && o.options.centerMode === true) {
          if (o.options.slidesToShow === 2) {
            r = -1.5;
          } else if (o.options.slidesToShow === 1) {
            r = -2;
          }
        }
        a = n * o.options.slidesToShow * r;
      }
      if (o.slideCount % o.options.slidesToScroll != 0 && e + o.options.slidesToScroll > o.slideCount && o.slideCount > o.options.slidesToShow) {
        if (e > o.slideCount) {
          o.slideOffset = (o.options.slidesToShow - (e - o.slideCount)) * o.slideWidth * -1;
          a = (o.options.slidesToShow - (e - o.slideCount)) * n * -1;
        } else {
          o.slideOffset = o.slideCount % o.options.slidesToScroll * o.slideWidth * -1;
          a = o.slideCount % o.options.slidesToScroll * n * -1;
        }
      }
    } else if (e + o.options.slidesToShow > o.slideCount) {
      o.slideOffset = (e + o.options.slidesToShow - o.slideCount) * o.slideWidth;
      a = (e + o.options.slidesToShow - o.slideCount) * n;
    }
    if (o.slideCount <= o.options.slidesToShow) {
      o.slideOffset = 0;
      a = 0;
    }
    if (o.options.centerMode === true && o.slideCount <= o.options.slidesToShow) {
      o.slideOffset = o.slideWidth * Math.floor(o.options.slidesToShow) / 2 - o.slideWidth * o.slideCount / 2;
    } else if (o.options.centerMode === true && o.options.infinite === true) {
      o.slideOffset += o.slideWidth * Math.floor(o.options.slidesToShow / 2) - o.slideWidth;
    } else if (o.options.centerMode === true) {
      o.slideOffset = 0;
      o.slideOffset += o.slideWidth * Math.floor(o.options.slidesToShow / 2);
    }
    t = o.options.vertical === false ? e * o.slideWidth * -1 + o.slideOffset : e * n * -1 + a;
    if (o.options.variableWidth === true) {
      i = o.slideCount <= o.options.slidesToShow || o.options.infinite === false ? o.$slideTrack.children(".slick-slide").eq(e) : o.$slideTrack.children(".slick-slide").eq(e + o.options.slidesToShow);
      t = o.options.rtl === true ? i[0] ? (o.$slideTrack.width() - i[0].offsetLeft - i.width()) * -1 : 0 : i[0] ? i[0].offsetLeft * -1 : 0;
      if (o.options.centerMode === true) {
        i = o.slideCount <= o.options.slidesToShow || o.options.infinite === false ? o.$slideTrack.children(".slick-slide").eq(e) : o.$slideTrack.children(".slick-slide").eq(e + o.options.slidesToShow + 1);
        t = o.options.rtl === true ? i[0] ? (o.$slideTrack.width() - i[0].offsetLeft - i.width()) * -1 : 0 : i[0] ? i[0].offsetLeft * -1 : 0;
        t += (o.$list.width() - i.outerWidth()) / 2;
      }
    }
    return t;
  };
  t.prototype.getOption = t.prototype.slickGetOption = function (e) {
    return this.options[e];
  };
  t.prototype.getNavigableIndexes = function () {
    var e;
    var t = this;
    var n = 0;
    var i = 0;
    var r = [];
    for (t.options.infinite === false ? e = t.slideCount : (n = t.options.slidesToScroll * -1, i = t.options.slidesToScroll * -1, e = t.slideCount * 2); n < e;) {
      r.push(n);
      n = i + t.options.slidesToScroll;
      i += t.options.slidesToScroll <= t.options.slidesToShow ? t.options.slidesToScroll : t.options.slidesToShow;
    }
    return r;
  };
  t.prototype.getSlick = function () {
    return this;
  };
  t.prototype.getSlideCount = function () {
    var t;
    var n;
    var i = this;
    n = i.options.centerMode === true ? i.slideWidth * Math.floor(i.options.slidesToShow / 2) : 0;
    if (i.options.swipeToSlide === true) {
      i.$slideTrack.find(".slick-slide").each(function (r, o) {
        if (o.offsetLeft - n + e(o).outerWidth() / 2 > i.swipeLeft * -1) {
          t = o;
          return false;
        }
      });
      return Math.abs(e(t).attr("data-slick-index") - i.currentSlide) || 1;
    } else {
      return i.options.slidesToScroll;
    }
  };
  t.prototype.goTo = t.prototype.slickGoTo = function (e, t) {
    this.changeSlide({
      data: {
        message: "index",
        index: parseInt(e)
      }
    }, t);
  };
  t.prototype.init = function (t) {
    var n = this;
    if (!e(n.$slider).hasClass("slick-initialized")) {
      e(n.$slider).addClass("slick-initialized");
      n.buildRows();
      n.buildOut();
      n.setProps();
      n.startLoad();
      n.loadSlider();
      n.initializeEvents();
      n.updateArrows();
      n.updateDots();
      n.checkResponsive(true);
      n.focusHandler();
    }
    if (t) {
      n.$slider.trigger("init", [n]);
    }
    if (n.options.accessibility === true) {
      n.initADA();
    }
    if (n.options.autoplay) {
      n.paused = false;
      n.autoPlay();
    }
  };
  t.prototype.initADA = function () {
    var t = this;
    var n = Math.ceil(t.slideCount / t.options.slidesToShow);
    var i = t.getNavigableIndexes().filter(function (e) {
      return e >= 0 && e < t.slideCount;
    });
    t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({
      "aria-hidden": "true",
      tabindex: "-1"
    }).find("a, input, button, select").attr({
      tabindex: "-1"
    });
    if (t.$dots !== null) {
      t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function (n) {
        var r = i.indexOf(n);
        e(this).attr({
          role: "tabpanel",
          id: "slick-slide" + t.instanceUid + n,
          tabindex: -1
        });
        if (r !== -1) {
          e(this).attr({
            "aria-describedby": "slick-slide-control" + t.instanceUid + r
          });
        }
      });
      t.$dots.attr("role", "tablist").find("li").each(function (r) {
        var o = i[r];
        e(this).attr({
          role: "presentation"
        });
        e(this).find("button").first().attr({
          role: "tab",
          id: "slick-slide-control" + t.instanceUid + r,
          "aria-controls": "slick-slide" + t.instanceUid + o,
          "aria-label": r + 1 + " of " + n,
          "aria-selected": null,
          tabindex: "-1"
        });
      }).eq(t.currentSlide).find("button").attr({
        "aria-selected": "true",
        tabindex: "0"
      }).end();
    }
    for (var r = t.currentSlide, o = r + t.options.slidesToShow; r < o; r++) {
      t.$slides.eq(r).attr("tabindex", 0);
    }
    t.activateADA();
  };
  t.prototype.initArrowEvents = function () {
    var e = this;
    if (e.options.arrows === true && e.slideCount > e.options.slidesToShow) {
      e.$prevArrow.off("click.slick").on("click.slick", {
        message: "previous"
      }, e.changeSlide);
      e.$nextArrow.off("click.slick").on("click.slick", {
        message: "next"
      }, e.changeSlide);
      if (e.options.accessibility === true) {
        e.$prevArrow.on("keydown.slick", e.keyHandler);
        e.$nextArrow.on("keydown.slick", e.keyHandler);
      }
    }
  };
  t.prototype.initDotEvents = function () {
    var t = this;
    if (t.options.dots === true) {
      e("li", t.$dots).on("click.slick", {
        message: "index"
      }, t.changeSlide);
      if (t.options.accessibility === true) {
        t.$dots.on("keydown.slick", t.keyHandler);
      }
    }
    if (t.options.dots === true && t.options.pauseOnDotsHover === true) {
      e("li", t.$dots).on("mouseenter.slick", e.proxy(t.interrupt, t, true)).on("mouseleave.slick", e.proxy(t.interrupt, t, false));
    }
  };
  t.prototype.initSlideEvents = function () {
    var t = this;
    if (t.options.pauseOnHover) {
      t.$list.on("mouseenter.slick", e.proxy(t.interrupt, t, true));
      t.$list.on("mouseleave.slick", e.proxy(t.interrupt, t, false));
    }
  };
  t.prototype.initializeEvents = function () {
    var t = this;
    t.initArrowEvents();
    t.initDotEvents();
    t.initSlideEvents();
    t.$list.on("touchstart.slick mousedown.slick", {
      action: "start"
    }, t.swipeHandler);
    t.$list.on("touchmove.slick mousemove.slick", {
      action: "move"
    }, t.swipeHandler);
    t.$list.on("touchend.slick mouseup.slick", {
      action: "end"
    }, t.swipeHandler);
    t.$list.on("touchcancel.slick mouseleave.slick", {
      action: "end"
    }, t.swipeHandler);
    t.$list.on("click.slick", t.clickHandler);
    e(document).on(t.visibilityChange, e.proxy(t.visibility, t));
    if (t.options.accessibility === true) {
      t.$list.on("keydown.slick", t.keyHandler);
    }
    if (t.options.focusOnSelect === true) {
      e(t.$slideTrack).children().on("click.slick", t.selectHandler);
    }
    e(window).on("orientationchange.slick.slick-" + t.instanceUid, e.proxy(t.orientationChange, t));
    e(window).on("resize.slick.slick-" + t.instanceUid, e.proxy(t.resize, t));
    e("[draggable!=true]", t.$slideTrack).on("dragstart", t.preventDefault);
    e(window).on("load.slick.slick-" + t.instanceUid, t.setPosition);
    e(t.setPosition);
  };
  t.prototype.initUI = function () {
    var e = this;
    if (e.options.arrows === true && e.slideCount > e.options.slidesToShow) {
      e.$prevArrow.show();
      e.$nextArrow.show();
    }
    if (e.options.dots === true && e.slideCount > e.options.slidesToShow) {
      e.$dots.show();
    }
  };
  t.prototype.keyHandler = function (e) {
    var t = this;
    if (!e.target.tagName.match("TEXTAREA|INPUT|SELECT")) {
      if (e.keyCode === 37 && t.options.accessibility === true) {
        t.changeSlide({
          data: {
            message: t.options.rtl === true ? "next" : "previous"
          }
        });
      } else if (e.keyCode === 39 && t.options.accessibility === true) {
        t.changeSlide({
          data: {
            message: t.options.rtl === true ? "previous" : "next"
          }
        });
      }
    }
  };
  t.prototype.lazyLoad = function () {
    function t(t) {
      e("img[data-lazy]", t).each(function () {
        var t = e(this);
        var n = e(this).attr("data-lazy");
        var i = e(this).attr("data-srcset");
        var r = e(this).attr("data-sizes") || o.$slider.attr("data-sizes");
        var a = document.createElement("img");
        a.onload = function () {
          t.animate({
            opacity: 0
          }, 100, function () {
            if (i) {
              t.attr("srcset", i);
              if (r) {
                t.attr("sizes", r);
              }
            }
            t.attr("src", n).animate({
              opacity: 1
            }, 200, function () {
              t.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading");
            });
            o.$slider.trigger("lazyLoaded", [o, t, n]);
          });
        };
        a.onerror = function () {
          t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error");
          o.$slider.trigger("lazyLoadError", [o, t, n]);
        };
        a.src = n;
      });
    }
    var n;
    var i;
    var r;
    var o = this;
    if (o.options.centerMode === true) {
      if (o.options.infinite === true) {
        r = (i = o.currentSlide + (o.options.slidesToShow / 2 + 1)) + o.options.slidesToShow + 2;
      } else {
        i = Math.max(0, o.currentSlide - (o.options.slidesToShow / 2 + 1));
        r = o.options.slidesToShow / 2 + 1 + 2 + o.currentSlide;
      }
    } else {
      i = o.options.infinite ? o.options.slidesToShow + o.currentSlide : o.currentSlide;
      r = Math.ceil(i + o.options.slidesToShow);
      if (o.options.fade === true) {
        if (i > 0) {
          i--;
        }
        if (r <= o.slideCount) {
          r++;
        }
      }
    }
    n = o.$slider.find(".slick-slide").slice(i, r);
    if (o.options.lazyLoad === "anticipated") {
      for (var a = i - 1, s = r, l = o.$slider.find(".slick-slide"), c = 0; c < o.options.slidesToScroll; c++) {
        if (a < 0) {
          a = o.slideCount - 1;
        }
        n = (n = n.add(l.eq(a))).add(l.eq(s));
        a--;
        s++;
      }
    }
    t(n);
    if (o.slideCount <= o.options.slidesToShow) {
      t(o.$slider.find(".slick-slide"));
    } else if (o.currentSlide >= o.slideCount - o.options.slidesToShow) {
      t(o.$slider.find(".slick-cloned").slice(0, o.options.slidesToShow));
    } else if (o.currentSlide === 0) {
      t(o.$slider.find(".slick-cloned").slice(o.options.slidesToShow * -1));
    }
  };
  t.prototype.loadSlider = function () {
    var e = this;
    e.setPosition();
    e.$slideTrack.css({
      opacity: 1
    });
    e.$slider.removeClass("slick-loading");
    e.initUI();
    if (e.options.lazyLoad === "progressive") {
      e.progressiveLazyLoad();
    }
  };
  t.prototype.next = t.prototype.slickNext = function () {
    this.changeSlide({
      data: {
        message: "next"
      }
    });
  };
  t.prototype.orientationChange = function () {
    this.checkResponsive();
    this.setPosition();
  };
  t.prototype.pause = t.prototype.slickPause = function () {
    this.autoPlayClear();
    this.paused = true;
  };
  t.prototype.play = t.prototype.slickPlay = function () {
    var e = this;
    e.autoPlay();
    e.options.autoplay = true;
    e.paused = false;
    e.focussed = false;
    e.interrupted = false;
  };
  t.prototype.postSlide = function (t) {
    var n = this;
    if (!n.unslicked) {
      n.$slider.trigger("afterChange", [n, t]);
      n.animating = false;
      if (n.slideCount > n.options.slidesToShow) {
        n.setPosition();
      }
      n.swipeLeft = null;
      if (n.options.autoplay) {
        n.autoPlay();
      }
      if (n.options.accessibility === true) {
        n.initADA();
        if (n.options.focusOnChange) {
          e(n.$slides.get(n.currentSlide)).attr("tabindex", 0).focus();
        }
      }
    }
  };
  t.prototype.prev = t.prototype.slickPrev = function () {
    this.changeSlide({
      data: {
        message: "previous"
      }
    });
  };
  t.prototype.preventDefault = function (e) {
    e.preventDefault();
  };
  t.prototype.progressiveLazyLoad = function (t) {
    t = t || 1;
    var n;
    var i;
    var r;
    var o;
    var a;
    var s = this;
    var l = e("img[data-lazy]", s.$slider);
    if (l.length) {
      n = l.first();
      i = n.attr("data-lazy");
      r = n.attr("data-srcset");
      o = n.attr("data-sizes") || s.$slider.attr("data-sizes");
      (a = document.createElement("img")).onload = function () {
        if (r) {
          n.attr("srcset", r);
          if (o) {
            n.attr("sizes", o);
          }
        }
        n.attr("src", i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading");
        if (s.options.adaptiveHeight === true) {
          s.setPosition();
        }
        s.$slider.trigger("lazyLoaded", [s, n, i]);
        s.progressiveLazyLoad();
      };
      a.onerror = function () {
        if (t < 3) {
          setTimeout(function () {
            s.progressiveLazyLoad(t + 1);
          }, 500);
        } else {
          n.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error");
          s.$slider.trigger("lazyLoadError", [s, n, i]);
          s.progressiveLazyLoad();
        }
      };
      a.src = i;
    } else {
      s.$slider.trigger("allImagesLoaded", [s]);
    }
  };
  t.prototype.refresh = function (t) {
    var n;
    var i;
    var r = this;
    i = r.slideCount - r.options.slidesToShow;
    if (!r.options.infinite && r.currentSlide > i) {
      r.currentSlide = i;
    }
    if (r.slideCount <= r.options.slidesToShow) {
      r.currentSlide = 0;
    }
    n = r.currentSlide;
    r.destroy(true);
    e.extend(r, r.initials, {
      currentSlide: n
    });
    r.init();
    if (!t) {
      r.changeSlide({
        data: {
          message: "index",
          index: n
        }
      }, false);
    }
  };
  t.prototype.registerBreakpoints = function () {
    var t;
    var n;
    var i;
    var r = this;
    var o = r.options.responsive || null;
    if (e.type(o) === "array" && o.length) {
      r.respondTo = r.options.respondTo || "window";
      for (t in o) {
        i = r.breakpoints.length - 1;
        if (o.hasOwnProperty(t)) {
          for (n = o[t].breakpoint; i >= 0;) {
            if (r.breakpoints[i] && r.breakpoints[i] === n) {
              r.breakpoints.splice(i, 1);
            }
            i--;
          }
          r.breakpoints.push(n);
          r.breakpointSettings[n] = o[t].settings;
        }
      }
      r.breakpoints.sort(function (e, t) {
        if (r.options.mobileFirst) {
          return e - t;
        } else {
          return t - e;
        }
      });
    }
  };
  t.prototype.reinit = function () {
    var t = this;
    t.$slides = t.$slideTrack.children(t.options.slide).addClass("slick-slide");
    t.slideCount = t.$slides.length;
    if (t.currentSlide >= t.slideCount && t.currentSlide !== 0) {
      t.currentSlide = t.currentSlide - t.options.slidesToScroll;
    }
    if (t.slideCount <= t.options.slidesToShow) {
      t.currentSlide = 0;
    }
    t.registerBreakpoints();
    t.setProps();
    t.setupInfinite();
    t.buildArrows();
    t.updateArrows();
    t.initArrowEvents();
    t.buildDots();
    t.updateDots();
    t.initDotEvents();
    t.cleanUpSlideEvents();
    t.initSlideEvents();
    t.checkResponsive(false, true);
    if (t.options.focusOnSelect === true) {
      e(t.$slideTrack).children().on("click.slick", t.selectHandler);
    }
    t.setSlideClasses(typeof t.currentSlide == "number" ? t.currentSlide : 0);
    t.setPosition();
    t.focusHandler();
    t.paused = !t.options.autoplay;
    t.autoPlay();
    t.$slider.trigger("reInit", [t]);
  };
  t.prototype.resize = function () {
    var t = this;
    if (e(window).width() !== t.windowWidth) {
      clearTimeout(t.windowDelay);
      t.windowDelay = window.setTimeout(function () {
        t.windowWidth = e(window).width();
        t.checkResponsive();
        if (!t.unslicked) {
          t.setPosition();
        }
      }, 50);
    }
  };
  t.prototype.removeSlide = t.prototype.slickRemove = function (e, t, n) {
    var i = this;
    e = typeof e == "boolean" ? (t = e) === true ? 0 : i.slideCount - 1 : t === true ? --e : e;
    if (i.slideCount < 1 || e < 0 || e > i.slideCount - 1) {
      return false;
    }
    i.unload();
    if (n === true) {
      i.$slideTrack.children().remove();
    } else {
      i.$slideTrack.children(this.options.slide).eq(e).remove();
    }
    i.$slides = i.$slideTrack.children(this.options.slide);
    i.$slideTrack.children(this.options.slide).detach();
    i.$slideTrack.append(i.$slides);
    i.$slidesCache = i.$slides;
    i.reinit();
  };
  t.prototype.setCSS = function (e) {
    var t;
    var n;
    var i = this;
    var r = {};
    if (i.options.rtl === true) {
      e = -e;
    }
    t = i.positionProp == "left" ? Math.ceil(e) + "px" : "0px";
    n = i.positionProp == "top" ? Math.ceil(e) + "px" : "0px";
    r[i.positionProp] = e;
    if (i.transformsEnabled === false) {
      i.$slideTrack.css(r);
    } else {
      r = {};
      if (i.cssTransitions === false) {
        r[i.animType] = "translate(" + t + ", " + n + ")";
        i.$slideTrack.css(r);
      } else {
        r[i.animType] = "translate3d(" + t + ", " + n + ", 0px)";
        i.$slideTrack.css(r);
      }
    }
  };
  t.prototype.setDimensions = function () {
    var e = this;
    if (e.options.vertical === false) {
      if (e.options.centerMode === true) {
        e.$list.css({
          padding: "0px " + e.options.centerPadding
        });
      }
    } else {
      e.$list.height(e.$slides.first().outerHeight(true) * e.options.slidesToShow);
      if (e.options.centerMode === true) {
        e.$list.css({
          padding: e.options.centerPadding + " 0px"
        });
      }
    }
    e.listWidth = e.$list.width();
    e.listHeight = e.$list.height();
    if (e.options.vertical === false && e.options.variableWidth === false) {
      e.slideWidth = Math.ceil(e.listWidth / e.options.slidesToShow);
      e.$slideTrack.width(Math.ceil(e.slideWidth * e.$slideTrack.children(".slick-slide").length));
    } else if (e.options.variableWidth === true) {
      e.$slideTrack.width(e.slideCount * 5000);
    } else {
      e.slideWidth = Math.ceil(e.listWidth);
      e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(true) * e.$slideTrack.children(".slick-slide").length));
    }
    var t = e.$slides.first().outerWidth(true) - e.$slides.first().width();
    if (e.options.variableWidth === false) {
      e.$slideTrack.children(".slick-slide").width(e.slideWidth - t);
    }
  };
  t.prototype.setFade = function () {
    var t;
    var n = this;
    n.$slides.each(function (i, r) {
      t = n.slideWidth * i * -1;
      if (n.options.rtl === true) {
        e(r).css({
          position: "relative",
          right: t,
          top: 0,
          zIndex: n.options.zIndex - 2,
          opacity: 0
        });
      } else {
        e(r).css({
          position: "relative",
          left: t,
          top: 0,
          zIndex: n.options.zIndex - 2,
          opacity: 0
        });
      }
    });
    n.$slides.eq(n.currentSlide).css({
      zIndex: n.options.zIndex - 1,
      opacity: 1
    });
  };
  t.prototype.setHeight = function () {
    var e = this;
    if (e.options.slidesToShow === 1 && e.options.adaptiveHeight === true && e.options.vertical === false) {
      var t = e.$slides.eq(e.currentSlide).outerHeight(true);
      e.$list.css("height", t);
    }
  };
  t.prototype.setOption = t.prototype.slickSetOption = function () {
    var t;
    var n;
    var i;
    var r;
    var o;
    var a = this;
    var s = false;
    if (e.type(arguments[0]) === "object") {
      i = arguments[0];
      s = arguments[1];
      o = "multiple";
    } else if (e.type(arguments[0]) === "string") {
      i = arguments[0];
      r = arguments[1];
      s = arguments[2];
      if (arguments[0] === "responsive" && e.type(arguments[1]) === "array") {
        o = "responsive";
      } else if (arguments[1] !== undefined) {
        o = "single";
      }
    }
    if (o === "single") {
      a.options[i] = r;
    } else if (o === "multiple") {
      e.each(i, function (e, t) {
        a.options[e] = t;
      });
    } else if (o === "responsive") {
      for (n in r) {
        if (e.type(a.options.responsive) !== "array") {
          a.options.responsive = [r[n]];
        } else {
          for (t = a.options.responsive.length - 1; t >= 0;) {
            if (a.options.responsive[t].breakpoint === r[n].breakpoint) {
              a.options.responsive.splice(t, 1);
            }
            t--;
          }
          a.options.responsive.push(r[n]);
        }
      }
    }
    if (s) {
      a.unload();
      a.reinit();
    }
  };
  t.prototype.setPosition = function () {
    var e = this;
    e.setDimensions();
    e.setHeight();
    if (e.options.fade === false) {
      e.setCSS(e.getLeft(e.currentSlide));
    } else {
      e.setFade();
    }
    e.$slider.trigger("setPosition", [e]);
  };
  t.prototype.setProps = function () {
    var e = this;
    var t = document.body.style;
    e.positionProp = e.options.vertical === true ? "top" : "left";
    if (e.positionProp === "top") {
      e.$slider.addClass("slick-vertical");
    } else {
      e.$slider.removeClass("slick-vertical");
    }
    if (!(t.WebkitTransition === undefined && t.MozTransition === undefined && t.msTransition === undefined)) {
      if (e.options.useCSS === true) {
        e.cssTransitions = true;
      }
    }
    if (e.options.fade) {
      if (typeof e.options.zIndex == "number") {
        if (e.options.zIndex < 3) {
          e.options.zIndex = 3;
        }
      } else {
        e.options.zIndex = e.defaults.zIndex;
      }
    }
    if (t.OTransform !== undefined) {
      e.animType = "OTransform";
      e.transformType = "-o-transform";
      e.transitionType = "OTransition";
      if (t.perspectiveProperty === undefined && t.webkitPerspective === undefined) {
        e.animType = false;
      }
    }
    if (t.MozTransform !== undefined) {
      e.animType = "MozTransform";
      e.transformType = "-moz-transform";
      e.transitionType = "MozTransition";
      if (t.perspectiveProperty === undefined && t.MozPerspective === undefined) {
        e.animType = false;
      }
    }
    if (t.webkitTransform !== undefined) {
      e.animType = "webkitTransform";
      e.transformType = "-webkit-transform";
      e.transitionType = "webkitTransition";
      if (t.perspectiveProperty === undefined && t.webkitPerspective === undefined) {
        e.animType = false;
      }
    }
    if (t.msTransform !== undefined) {
      e.animType = "msTransform";
      e.transformType = "-ms-transform";
      e.transitionType = "msTransition";
      if (t.msTransform === undefined) {
        e.animType = false;
      }
    }
    if (t.transform !== undefined && e.animType !== false) {
      e.animType = "transform";
      e.transformType = "transform";
      e.transitionType = "transition";
    }
    e.transformsEnabled = e.options.useTransform && e.animType !== null && e.animType !== false;
  };
  t.prototype.setSlideClasses = function (e) {
    var t;
    var n;
    var i;
    var r;
    var o = this;
    n = o.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true");
    o.$slides.eq(e).addClass("slick-current");
    if (o.options.centerMode === true) {
      var a = o.options.slidesToShow % 2 == 0 ? 1 : 0;
      t = Math.floor(o.options.slidesToShow / 2);
      if (o.options.infinite === true) {
        if (e >= t && e <= o.slideCount - 1 - t) {
          o.$slides.slice(e - t + a, e + t + 1).addClass("slick-active").attr("aria-hidden", "false");
        } else {
          i = o.options.slidesToShow + e;
          n.slice(i - t + 1 + a, i + t + 2).addClass("slick-active").attr("aria-hidden", "false");
        }
        if (e === 0) {
          n.eq(n.length - 1 - o.options.slidesToShow).addClass("slick-center");
        } else if (e === o.slideCount - 1) {
          n.eq(o.options.slidesToShow).addClass("slick-center");
        }
      }
      o.$slides.eq(e).addClass("slick-center");
    } else if (e >= 0 && e <= o.slideCount - o.options.slidesToShow) {
      o.$slides.slice(e, e + o.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false");
    } else if (n.length <= o.options.slidesToShow) {
      n.addClass("slick-active").attr("aria-hidden", "false");
    } else {
      r = o.slideCount % o.options.slidesToShow;
      i = o.options.infinite === true ? o.options.slidesToShow + e : e;
      if (o.options.slidesToShow == o.options.slidesToScroll && o.slideCount - e < o.options.slidesToShow) {
        n.slice(i - (o.options.slidesToShow - r), i + r).addClass("slick-active").attr("aria-hidden", "false");
      } else {
        n.slice(i, i + o.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false");
      }
    }
    if (!(o.options.lazyLoad !== "ondemand" && o.options.lazyLoad !== "anticipated")) {
      o.lazyLoad();
    }
  };
  t.prototype.setupInfinite = function () {
    var t;
    var n;
    var i;
    var r = this;
    if (r.options.fade === true) {
      r.options.centerMode = false;
    }
    if (r.options.infinite === true && r.options.fade === false && (n = null, r.slideCount > r.options.slidesToShow)) {
      i = r.options.centerMode === true ? r.options.slidesToShow + 1 : r.options.slidesToShow;
      t = r.slideCount;
      for (; t > r.slideCount - i; t -= 1) {
        n = t - 1;
        e(r.$slides[n]).clone(true).attr("id", "").attr("data-slick-index", n - r.slideCount).prependTo(r.$slideTrack).addClass("slick-cloned");
      }
      for (t = 0; t < i + r.slideCount; t += 1) {
        n = t;
        e(r.$slides[n]).clone(true).attr("id", "").attr("data-slick-index", n + r.slideCount).appendTo(r.$slideTrack).addClass("slick-cloned");
      }
      r.$slideTrack.find(".slick-cloned").find("[id]").each(function () {
        e(this).attr("id", "");
      });
    }
  };
  t.prototype.interrupt = function (e) {
    if (!e) {
      this.autoPlay();
    }
    this.interrupted = e;
  };
  t.prototype.selectHandler = function (t) {
    var n = this;
    var i = e(t.target).is(".slick-slide") ? e(t.target) : e(t.target).parents(".slick-slide");
    var r = parseInt(i.attr("data-slick-index"));
    if (!r) {
      r = 0;
    }
    if (n.slideCount <= n.options.slidesToShow) {
      n.slideHandler(r, false, true);
    } else {
      n.slideHandler(r);
    }
  };
  t.prototype.slideHandler = function (e, t, n) {
    var i;
    var r;
    var o;
    var a;
    var s;
    var l = null;
    var c = this;
    t = t || false;
    if (!(c.animating === true && c.options.waitForAnimate === true || c.options.fade === true && c.currentSlide === e)) {
      if (t === false) {
        c.asNavFor(e);
      }
      i = e;
      l = c.getLeft(i);
      a = c.getLeft(c.currentSlide);
      c.currentLeft = c.swipeLeft === null ? a : c.swipeLeft;
      if (c.options.infinite === false && c.options.centerMode === false && (e < 0 || e > c.getDotCount() * c.options.slidesToScroll)) {
        if (c.options.fade === false) {
          i = c.currentSlide;
          if (n !== true) {
            c.animateSlide(a, function () {
              c.postSlide(i);
            });
          } else {
            c.postSlide(i);
          }
        }
      } else if (c.options.infinite === false && c.options.centerMode === true && (e < 0 || e > c.slideCount - c.options.slidesToScroll)) {
        if (c.options.fade === false) {
          i = c.currentSlide;
          if (n !== true) {
            c.animateSlide(a, function () {
              c.postSlide(i);
            });
          } else {
            c.postSlide(i);
          }
        }
      } else {
        if (c.options.autoplay) {
          clearInterval(c.autoPlayTimer);
        }
        r = i < 0 ? c.slideCount % c.options.slidesToScroll != 0 ? c.slideCount - c.slideCount % c.options.slidesToScroll : c.slideCount + i : i >= c.slideCount ? c.slideCount % c.options.slidesToScroll != 0 ? 0 : i - c.slideCount : i;
        c.animating = true;
        c.$slider.trigger("beforeChange", [c, c.currentSlide, r]);
        o = c.currentSlide;
        c.currentSlide = r;
        c.setSlideClasses(c.currentSlide);
        if (c.options.asNavFor && (s = (s = c.getNavTarget()).slick("getSlick")).slideCount <= s.options.slidesToShow) {
          s.setSlideClasses(c.currentSlide);
        }
        c.updateDots();
        c.updateArrows();
        if (c.options.fade === true) {
          if (n !== true) {
            c.fadeSlideOut(o);
            c.fadeSlide(r, function () {
              c.postSlide(r);
            });
          } else {
            c.postSlide(r);
          }
          return void c.animateHeight();
        }
        if (n !== true) {
          c.animateSlide(l, function () {
            c.postSlide(r);
          });
        } else {
          c.postSlide(r);
        }
      }
    }
  };
  t.prototype.startLoad = function () {
    var e = this;
    if (e.options.arrows === true && e.slideCount > e.options.slidesToShow) {
      e.$prevArrow.hide();
      e.$nextArrow.hide();
    }
    if (e.options.dots === true && e.slideCount > e.options.slidesToShow) {
      e.$dots.hide();
    }
    e.$slider.addClass("slick-loading");
  };
  t.prototype.swipeDirection = function () {
    var e;
    var t;
    var n;
    var i;
    var r = this;
    e = r.touchObject.startX - r.touchObject.curX;
    t = r.touchObject.startY - r.touchObject.curY;
    n = Math.atan2(t, e);
    if ((i = Math.round(n * 180 / Math.PI)) < 0) {
      i = 360 - Math.abs(i);
    }
    if (i <= 45 && i >= 0 || i <= 360 && i >= 315) {
      if (r.options.rtl === false) {
        return "left";
      } else {
        return "right";
      }
    } else if (i >= 135 && i <= 225) {
      if (r.options.rtl === false) {
        return "right";
      } else {
        return "left";
      }
    } else if (r.options.verticalSwiping === true) {
      if (i >= 35 && i <= 135) {
        return "down";
      } else {
        return "up";
      }
    } else {
      return "vertical";
    }
  };
  t.prototype.swipeEnd = function (e) {
    var t;
    var n;
    var i = this;
    i.dragging = false;
    i.swiping = false;
    if (i.scrolling) {
      i.scrolling = false;
      return false;
    }
    i.interrupted = false;
    i.shouldClick = !(i.touchObject.swipeLength > 10);
    if (i.touchObject.curX === undefined) {
      return false;
    }
    if (i.touchObject.edgeHit === true) {
      i.$slider.trigger("edge", [i, i.swipeDirection()]);
    }
    if (i.touchObject.swipeLength >= i.touchObject.minSwipe) {
      switch (n = i.swipeDirection()) {
        case "left":
        case "down":
          t = i.options.swipeToSlide ? i.checkNavigable(i.currentSlide + i.getSlideCount()) : i.currentSlide + i.getSlideCount();
          i.currentDirection = 0;
          break;
        case "right":
        case "up":
          t = i.options.swipeToSlide ? i.checkNavigable(i.currentSlide - i.getSlideCount()) : i.currentSlide - i.getSlideCount();
          i.currentDirection = 1;
      }
      if (n != "vertical") {
        i.slideHandler(t);
        i.touchObject = {};
        i.$slider.trigger("swipe", [i, n]);
      }
    } else if (i.touchObject.startX !== i.touchObject.curX) {
      i.slideHandler(i.currentSlide);
      i.touchObject = {};
    }
  };
  t.prototype.swipeHandler = function (e) {
    var t = this;
    if (!(t.options.swipe === false || "ontouchend" in document && t.options.swipe === false || t.options.draggable === false && e.type.indexOf("mouse") !== -1)) {
      t.touchObject.fingerCount = e.originalEvent && e.originalEvent.touches !== undefined ? e.originalEvent.touches.length : 1;
      t.touchObject.minSwipe = t.listWidth / t.options.touchThreshold;
      if (t.options.verticalSwiping === true) {
        t.touchObject.minSwipe = t.listHeight / t.options.touchThreshold;
      }
      switch (e.data.action) {
        case "start":
          t.swipeStart(e);
          break;
        case "move":
          t.swipeMove(e);
          break;
        case "end":
          t.swipeEnd(e);
      }
    }
  };
  t.prototype.swipeMove = function (e) {
    var t;
    var n;
    var i;
    var r;
    var o;
    var a;
    var s = this;
    o = e.originalEvent !== undefined ? e.originalEvent.touches : null;
    return !(!s.dragging || s.scrolling || o && o.length !== 1) && (t = s.getLeft(s.currentSlide), s.touchObject.curX = o !== undefined ? o[0].pageX : e.clientX, s.touchObject.curY = o !== undefined ? o[0].pageY : e.clientY, s.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(s.touchObject.curX - s.touchObject.startX, 2))), a = Math.round(Math.sqrt(Math.pow(s.touchObject.curY - s.touchObject.startY, 2))), !s.options.verticalSwiping && !s.swiping && a > 4 ? (s.scrolling = true, false) : (s.options.verticalSwiping === true && (s.touchObject.swipeLength = a), n = s.swipeDirection(), e.originalEvent !== undefined && s.touchObject.swipeLength > 4 && (s.swiping = true, e.preventDefault()), r = (s.options.rtl === false ? 1 : -1) * (s.touchObject.curX > s.touchObject.startX ? 1 : -1), s.options.verticalSwiping === true && (r = s.touchObject.curY > s.touchObject.startY ? 1 : -1), i = s.touchObject.swipeLength, s.touchObject.edgeHit = false, s.options.infinite === false && (s.currentSlide === 0 && n === "right" || s.currentSlide >= s.getDotCount() && n === "left") && (i = s.touchObject.swipeLength * s.options.edgeFriction, s.touchObject.edgeHit = true), s.options.vertical === false ? s.swipeLeft = t + i * r : s.swipeLeft = t + i * (s.$list.height() / s.listWidth) * r, s.options.verticalSwiping === true && (s.swipeLeft = t + i * r), s.options.fade !== true && s.options.touchMove !== false && (s.animating === true ? (s.swipeLeft = null, false) : void s.setCSS(s.swipeLeft))));
  };
  t.prototype.swipeStart = function (e) {
    var t;
    var n = this;
    n.interrupted = true;
    if (n.touchObject.fingerCount !== 1 || n.slideCount <= n.options.slidesToShow) {
      n.touchObject = {};
      return false;
    }
    if (e.originalEvent !== undefined && e.originalEvent.touches !== undefined) {
      t = e.originalEvent.touches[0];
    }
    n.touchObject.startX = n.touchObject.curX = t !== undefined ? t.pageX : e.clientX;
    n.touchObject.startY = n.touchObject.curY = t !== undefined ? t.pageY : e.clientY;
    n.dragging = true;
  };
  t.prototype.unfilterSlides = t.prototype.slickUnfilter = function () {
    var e = this;
    if (e.$slidesCache !== null) {
      e.unload();
      e.$slideTrack.children(this.options.slide).detach();
      e.$slidesCache.appendTo(e.$slideTrack);
      e.reinit();
    }
  };
  t.prototype.unload = function () {
    var t = this;
    e(".slick-cloned", t.$slider).remove();
    if (t.$dots) {
      t.$dots.remove();
    }
    if (t.$prevArrow && t.htmlExpr.test(t.options.prevArrow)) {
      t.$prevArrow.remove();
    }
    if (t.$nextArrow && t.htmlExpr.test(t.options.nextArrow)) {
      t.$nextArrow.remove();
    }
    t.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "");
  };
  t.prototype.unslick = function (e) {
    var t = this;
    t.$slider.trigger("unslick", [t, e]);
    t.destroy();
  };
  t.prototype.updateArrows = function () {
    var e = this;
    Math.floor(e.options.slidesToShow / 2);
    if (e.options.arrows === true && e.slideCount > e.options.slidesToShow && !e.options.infinite) {
      e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false");
      e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false");
      if (e.currentSlide === 0) {
        e.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true");
        e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false");
      } else if (e.currentSlide >= e.slideCount - e.options.slidesToShow && e.options.centerMode === false || e.currentSlide >= e.slideCount - 1 && e.options.centerMode === true) {
        e.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true");
        e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false");
      }
    }
  };
  t.prototype.updateDots = function () {
    var e = this;
    if (e.$dots !== null) {
      e.$dots.find("li").removeClass("slick-active").end();
      e.$dots.find("li").eq(Math.floor(e.currentSlide / e.options.slidesToScroll)).addClass("slick-active");
    }
  };
  t.prototype.visibility = function () {
    var e = this;
    if (e.options.autoplay) {
      if (document[e.hidden]) {
        e.interrupted = true;
      } else {
        e.interrupted = false;
      }
    }
  };
  e.fn.slick = function () {
    var e;
    var n;
    var i = this;
    var r = arguments[0];
    var o = Array.prototype.slice.call(arguments, 1);
    var a = i.length;
    for (e = 0; e < a; e++) {
      if (typeof r == "object" || r === undefined) {
        i[e].slick = new t(i[e], r);
      } else {
        n = i[e].slick[r].apply(i[e].slick, o);
      }
      if (n !== undefined) {
        return n;
      }
    }
    return i;
  };
});
(function (e, t) {
  if (typeof exports == "object" && typeof module == "object") {
    module.exports = t();
  } else if (typeof define == "function" && define.amd) {
    define([], t);
  } else if (typeof exports == "object") {
    exports.ClipboardJS = t();
  } else {
    e.ClipboardJS = t();
  }
})(this, function () {
  t = {
    686: function (e, t, n) {
      "use strict";

      n.d(t, {
        default: function () {
          return m;
        }
      });
      t = n(279);
      var i = n.n(t);
      t = n(370);
      var r = n.n(t);
      t = n(817);
      var o = n.n(t);
      function a(e) {
        try {
          return document.execCommand(e);
        } catch (e) {
          return;
        }
      }
      var s = function (e) {
        e = o()(e);
        a("cut");
        return e;
      };
      function l(e, t) {
        var n;
        var i;
        n = e;
        i = document.documentElement.getAttribute("dir") === "rtl";
        (e = document.createElement("textarea")).style.fontSize = "12pt";
        e.style.border = "0";
        e.style.padding = "0";
        e.style.margin = "0";
        e.style.position = "absolute";
        e.style[i ? "right" : "left"] = "-9999px";
        i = window.pageYOffset || document.documentElement.scrollTop;
        e.style.top = "".concat(i, "px");
        e.setAttribute("readonly", "");
        e.value = n;
        e = e;
        t.container.appendChild(e);
        t = o()(e);
        a("copy");
        e.remove();
        return t;
      }
      var c = function (e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
          container: document.body
        };
        var n = "";
        if (typeof e == "string") {
          n = l(e, t);
        } else if (e instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(e == null ? undefined : e.type)) {
          n = l(e.value, t);
        } else {
          n = o()(e);
          a("copy");
        }
        return n;
      };
      function u(e) {
        return (u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (e) {
          return typeof e;
        } : function (e) {
          if (e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype) {
            return "symbol";
          } else {
            return typeof e;
          }
        })(e);
      }
      function d(e) {
        return (d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (e) {
          return typeof e;
        } : function (e) {
          if (e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype) {
            return "symbol";
          } else {
            return typeof e;
          }
        })(e);
      }
      function h(e, t) {
        for (var n = 0; n < t.length; n++) {
          var i = t[n];
          i.enumerable = i.enumerable || false;
          i.configurable = true;
          if ("value" in i) {
            i.writable = true;
          }
          Object.defineProperty(e, i.key, i);
        }
      }
      function f(e, t) {
        return (f = Object.setPrototypeOf || function (e, t) {
          e.__proto__ = t;
          return e;
        })(e, t);
      }
      function p(e) {
        return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
          return e.__proto__ || Object.getPrototypeOf(e);
        })(e);
      }
      function g(e, t) {
        e = "data-clipboard-".concat(e);
        if (t.hasAttribute(e)) {
          return t.getAttribute(e);
        }
      }
      var m = function () {
        !function (e, t) {
          if (typeof t != "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
          }
          e.prototype = Object.create(t && t.prototype, {
            constructor: {
              value: e,
              writable: true,
              configurable: true
            }
          });
          if (t) {
            f(e, t);
          }
        }(a, i());
        var e;
        var t;
        var n;
        var o = function (e) {
          var t = function () {
            if (typeof Reflect == "undefined" || !Reflect.construct) {
              return false;
            }
            if (Reflect.construct.sham) {
              return false;
            }
            if (typeof Proxy == "function") {
              return true;
            }
            try {
              Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
              return true;
            } catch (e) {
              return false;
            }
          }();
          return function () {
            var n;
            var i = p(e);
            n = t ? (n = p(this).constructor, Reflect.construct(i, arguments, n)) : i.apply(this, arguments);
            i = this;
            if (!(n = n) || d(n) !== "object" && typeof n != "function") {
              return function (e) {
                if (e !== undefined) {
                  return e;
                }
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }(i);
            } else {
              return n;
            }
          };
        }(a);
        function a(e, t) {
          var n;
          (function (e) {
            if (!(e instanceof a)) {
              throw new TypeError("Cannot call a class as a function");
            }
          })(this);
          (n = o.call(this)).resolveOptions(t);
          n.listenClick(e);
          return n;
        }
        e = a;
        n = [{
          key: "copy",
          value: function (e) {
            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
              container: document.body
            };
            return c(e, t);
          }
        }, {
          key: "cut",
          value: function (e) {
            return s(e);
          }
        }, {
          key: "isSupported",
          value: function () {
            var e = typeof (e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ["copy", "cut"]) == "string" ? [e] : e;
            var t = !!document.queryCommandSupported;
            e.forEach(function (e) {
              t = t && !!document.queryCommandSupported(e);
            });
            return t;
          }
        }];
        if (t = [{
          key: "resolveOptions",
          value: function () {
            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            this.action = typeof e.action == "function" ? e.action : this.defaultAction;
            this.target = typeof e.target == "function" ? e.target : this.defaultTarget;
            this.text = typeof e.text == "function" ? e.text : this.defaultText;
            this.container = d(e.container) === "object" ? e.container : document.body;
          }
        }, {
          key: "listenClick",
          value: function (e) {
            var t = this;
            this.listener = r()(e, "click", function (e) {
              return t.onClick(e);
            });
          }
        }, {
          key: "onClick",
          value: function (e) {
            var t = e.delegateTarget || e.currentTarget;
            var n = this.action(t) || "copy";
            e = function () {
              var e = (n = (i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}).action) === undefined ? "copy" : n;
              var t = i.container;
              var n = i.target;
              var i = i.text;
              if (e !== "copy" && e !== "cut") {
                throw new Error("Invalid \"action\" value, use either \"copy\" or \"cut\"");
              }
              if (n !== undefined) {
                if (!n || u(n) !== "object" || n.nodeType !== 1) {
                  throw new Error("Invalid \"target\" value, use a valid Element");
                }
                if (e === "copy" && n.hasAttribute("disabled")) {
                  throw new Error("Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute");
                }
                if (e === "cut" && (n.hasAttribute("readonly") || n.hasAttribute("disabled"))) {
                  throw new Error("Invalid \"target\" attribute. You can't cut text from elements with \"readonly\" or \"disabled\" attributes");
                }
              }
              if (i) {
                return c(i, {
                  container: t
                });
              } else if (n) {
                if (e === "cut") {
                  return s(n);
                } else {
                  return c(n, {
                    container: t
                  });
                }
              } else {
                return undefined;
              }
            }({
              action: n,
              container: this.container,
              target: this.target(t),
              text: this.text(t)
            });
            this.emit(e ? "success" : "error", {
              action: n,
              text: e,
              trigger: t,
              clearSelection: function () {
                if (t) {
                  t.focus();
                }
                window.getSelection().removeAllRanges();
              }
            });
          }
        }, {
          key: "defaultAction",
          value: function (e) {
            return g("action", e);
          }
        }, {
          key: "defaultTarget",
          value: function (e) {
            if (e = g("target", e)) {
              return document.querySelector(e);
            }
          }
        }, {
          key: "defaultText",
          value: function (e) {
            return g("text", e);
          }
        }, {
          key: "destroy",
          value: function () {
            this.listener.destroy();
          }
        }]) {
          h(e.prototype, t);
        }
        if (n) {
          h(e, n);
        }
        return a;
      }();
    },
    828: function (e) {
      var t;
      if (!(typeof Element == "undefined" || Element.prototype.matches)) {
        (t = Element.prototype).matches = t.matchesSelector || t.mozMatchesSelector || t.msMatchesSelector || t.oMatchesSelector || t.webkitMatchesSelector;
      }
      e.exports = function (e, t) {
        for (; e && e.nodeType !== 9;) {
          if (typeof e.matches == "function" && e.matches(t)) {
            return e;
          }
          e = e.parentNode;
        }
      };
    },
    438: function (e, t, n) {
      var i = n(828);
      function r(e, t, n, r, o) {
        var a = function (e, t, n, r) {
          return function (n) {
            n.delegateTarget = i(n.target, t);
            if (n.delegateTarget) {
              r.call(e, n);
            }
          };
        }.apply(this, arguments);
        e.addEventListener(n, a, o);
        return {
          destroy: function () {
            e.removeEventListener(n, a, o);
          }
        };
      }
      e.exports = function (e, t, n, i, o) {
        if (typeof e.addEventListener == "function") {
          return r.apply(null, arguments);
        } else if (typeof n == "function") {
          return r.bind(null, document).apply(null, arguments);
        } else {
          if (typeof e == "string") {
            e = document.querySelectorAll(e);
          }
          return Array.prototype.map.call(e, function (e) {
            return r(e, t, n, i, o);
          });
        }
      };
    },
    879: function (e, t) {
      t.node = function (e) {
        return e !== undefined && e instanceof HTMLElement && e.nodeType === 1;
      };
      t.nodeList = function (e) {
        var n = Object.prototype.toString.call(e);
        return e !== undefined && (n === "[object NodeList]" || n === "[object HTMLCollection]") && "length" in e && (e.length === 0 || t.node(e[0]));
      };
      t.string = function (e) {
        return typeof e == "string" || e instanceof String;
      };
      t.fn = function (e) {
        return Object.prototype.toString.call(e) === "[object Function]";
      };
    },
    370: function (e, t, n) {
      var i = n(879);
      var r = n(438);
      e.exports = function (e, t, n) {
        if (!e && !t && !n) {
          throw new Error("Missing required arguments");
        }
        if (!i.string(t)) {
          throw new TypeError("Second argument must be a String");
        }
        if (!i.fn(n)) {
          throw new TypeError("Third argument must be a Function");
        }
        if (i.node(e)) {
          c = t;
          u = n;
          (l = e).addEventListener(c, u);
          return {
            destroy: function () {
              l.removeEventListener(c, u);
            }
          };
        }
        if (i.nodeList(e)) {
          o = e;
          a = t;
          s = n;
          Array.prototype.forEach.call(o, function (e) {
            e.addEventListener(a, s);
          });
          return {
            destroy: function () {
              Array.prototype.forEach.call(o, function (e) {
                e.removeEventListener(a, s);
              });
            }
          };
        }
        if (i.string(e)) {
          e = e;
          t = t;
          n = n;
          return r(document.body, e, t, n);
        }
        throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
        var o;
        var a;
        var s;
        var l;
        var c;
        var u;
      };
    },
    817: function (e) {
      e.exports = function (e) {
        var t;
        var n = e.nodeName === "SELECT" ? (e.focus(), e.value) : e.nodeName === "INPUT" || e.nodeName === "TEXTAREA" ? ((t = e.hasAttribute("readonly")) || e.setAttribute("readonly", ""), e.select(), e.setSelectionRange(0, e.value.length), t || e.removeAttribute("readonly"), e.value) : (e.hasAttribute("contenteditable") && e.focus(), n = window.getSelection(), (t = document.createRange()).selectNodeContents(e), n.removeAllRanges(), n.addRange(t), n.toString());
        return n;
      };
    },
    279: function (e) {
      function t() {}
      t.prototype = {
        on: function (e, t, n) {
          var i = this.e || (this.e = {});
          (i[e] || (i[e] = [])).push({
            fn: t,
            ctx: n
          });
          return this;
        },
        once: function (e, t, n) {
          var i = this;
          function r() {
            i.off(e, r);
            t.apply(n, arguments);
          }
          r._ = t;
          return this.on(e, r, n);
        },
        emit: function (e) {
          for (var t = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[e] || []).slice(), i = 0, r = n.length; i < r; i++) {
            n[i].fn.apply(n[i].ctx, t);
          }
          return this;
        },
        off: function (e, t) {
          var n = this.e || (this.e = {});
          var i = n[e];
          var r = [];
          if (i && t) {
            for (var o = 0, a = i.length; o < a; o++) {
              if (i[o].fn !== t && i[o].fn._ !== t) {
                r.push(i[o]);
              }
            }
          }
          if (r.length) {
            n[e] = r;
          } else {
            delete n[e];
          }
          return this;
        }
      };
      e.exports = t;
      e.exports.TinyEmitter = t;
    }
  };
  n = {};
  e.n = function (t) {
    var n = t && t.__esModule ? function () {
      return t.default;
    } : function () {
      return t;
    };
    e.d(n, {
      a: n
    });
    return n;
  };
  e.d = function (t, n) {
    for (var i in n) {
      if (e.o(n, i) && !e.o(t, i)) {
        Object.defineProperty(t, i, {
          enumerable: true,
          get: n[i]
        });
      }
    }
  };
  e.o = function (e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
  };
  return e(686).default;
  function e(i) {
    if (n[i]) {
      return n[i].exports;
    }
    var r = n[i] = {
      exports: {}
    };
    t[i](r, r.exports, e);
    return r.exports;
  }
  var t;
  var n;
});
(function (e, t) {
  if (typeof exports == "object" && typeof module != "undefined") {
    module.exports = t(function () {
      try {
        return require("moment");
      } catch (e) {}
    }());
  } else if (typeof define == "function" && define.amd) {
    define(["require"], function (e) {
      return t(function () {
        try {
          return e("moment");
        } catch (e) {}
      }());
    });
  } else {
    (e = e || self).Chart = t(e.moment);
  }
})(this, function (e) {
  "use strict";

  e = e && e.hasOwnProperty("default") ? e.default : e;
  var t = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  var n = function (e, t) {
    e(t = {
      exports: {}
    });
    return t.exports;
  }(function (e) {
    var n = {};
    for (var i in t) {
      if (t.hasOwnProperty(i)) {
        n[t[i]] = i;
      }
    }
    var r = e.exports = {
      rgb: {
        channels: 3,
        labels: "rgb"
      },
      hsl: {
        channels: 3,
        labels: "hsl"
      },
      hsv: {
        channels: 3,
        labels: "hsv"
      },
      hwb: {
        channels: 3,
        labels: "hwb"
      },
      cmyk: {
        channels: 4,
        labels: "cmyk"
      },
      xyz: {
        channels: 3,
        labels: "xyz"
      },
      lab: {
        channels: 3,
        labels: "lab"
      },
      lch: {
        channels: 3,
        labels: "lch"
      },
      hex: {
        channels: 1,
        labels: ["hex"]
      },
      keyword: {
        channels: 1,
        labels: ["keyword"]
      },
      ansi16: {
        channels: 1,
        labels: ["ansi16"]
      },
      ansi256: {
        channels: 1,
        labels: ["ansi256"]
      },
      hcg: {
        channels: 3,
        labels: ["h", "c", "g"]
      },
      apple: {
        channels: 3,
        labels: ["r16", "g16", "b16"]
      },
      gray: {
        channels: 1,
        labels: ["gray"]
      }
    };
    for (var o in r) {
      if (r.hasOwnProperty(o)) {
        if (!("channels" in r[o])) {
          throw new Error("missing channels property: " + o);
        }
        if (!("labels" in r[o])) {
          throw new Error("missing channel labels property: " + o);
        }
        if (r[o].labels.length !== r[o].channels) {
          throw new Error("channel and label counts mismatch: " + o);
        }
        var a = r[o].channels;
        var s = r[o].labels;
        delete r[o].channels;
        delete r[o].labels;
        Object.defineProperty(r[o], "channels", {
          value: a
        });
        Object.defineProperty(r[o], "labels", {
          value: s
        });
      }
    }
    r.rgb.hsl = function (e) {
      var t;
      var n;
      var i = e[0] / 255;
      var r = e[1] / 255;
      var o = e[2] / 255;
      var a = Math.min(i, r, o);
      var s = Math.max(i, r, o);
      var l = s - a;
      if (s === a) {
        t = 0;
      } else if (i === s) {
        t = (r - o) / l;
      } else if (r === s) {
        t = 2 + (o - i) / l;
      } else if (o === s) {
        t = 4 + (i - r) / l;
      }
      if ((t = Math.min(t * 60, 360)) < 0) {
        t += 360;
      }
      n = (a + s) / 2;
      return [t, (s === a ? 0 : n <= 0.5 ? l / (s + a) : l / (2 - s - a)) * 100, n * 100];
    };
    r.rgb.hsv = function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a = e[0] / 255;
      var s = e[1] / 255;
      var l = e[2] / 255;
      var c = Math.max(a, s, l);
      var u = c - Math.min(a, s, l);
      var d = function (e) {
        return (c - e) / 6 / u + 0.5;
      };
      if (u === 0) {
        r = o = 0;
      } else {
        o = u / c;
        t = d(a);
        n = d(s);
        i = d(l);
        if (a === c) {
          r = i - n;
        } else if (s === c) {
          r = 1 / 3 + t - i;
        } else if (l === c) {
          r = 2 / 3 + n - t;
        }
        if (r < 0) {
          r += 1;
        } else if (r > 1) {
          r -= 1;
        }
      }
      return [r * 360, o * 100, c * 100];
    };
    r.rgb.hwb = function (e) {
      var t = e[0];
      var n = e[1];
      var i = e[2];
      return [r.rgb.hsl(e)[0], 1 / 255 * Math.min(t, Math.min(n, i)) * 100, (i = 1 - 1 / 255 * Math.max(t, Math.max(n, i))) * 100];
    };
    r.rgb.cmyk = function (e) {
      var t;
      var n = e[0] / 255;
      var i = e[1] / 255;
      var r = e[2] / 255;
      return [((1 - n - (t = Math.min(1 - n, 1 - i, 1 - r))) / (1 - t) || 0) * 100, ((1 - i - t) / (1 - t) || 0) * 100, ((1 - r - t) / (1 - t) || 0) * 100, t * 100];
    };
    r.rgb.keyword = function (e) {
      var i = n[e];
      if (i) {
        return i;
      }
      var r;
      var o;
      var a;
      var s = 1 / 0;
      for (var l in t) {
        if (t.hasOwnProperty(l)) {
          o = e;
          a = t[l];
          var c = Math.pow(o[0] - a[0], 2) + Math.pow(o[1] - a[1], 2) + Math.pow(o[2] - a[2], 2);
          if (c < s) {
            s = c;
            r = l;
          }
        }
      }
      return r;
    };
    r.keyword.rgb = function (e) {
      return t[e];
    };
    r.rgb.xyz = function (e) {
      var t = e[0] / 255;
      var n = e[1] / 255;
      var i = e[2] / 255;
      return [((t = t > 0.04045 ? Math.pow((t + 0.055) / 1.055, 2.4) : t / 12.92) * 0.4124 + (n = n > 0.04045 ? Math.pow((n + 0.055) / 1.055, 2.4) : n / 12.92) * 0.3576 + (i = i > 0.04045 ? Math.pow((i + 0.055) / 1.055, 2.4) : i / 12.92) * 0.1805) * 100, (t * 0.2126 + n * 0.7152 + i * 0.0722) * 100, (t * 0.0193 + n * 0.1192 + i * 0.9505) * 100];
    };
    r.rgb.lab = function (e) {
      var t = r.rgb.xyz(e);
      var n = t[0];
      var i = t[1];
      var o = t[2];
      i /= 100;
      o /= 108.883;
      n = (n /= 95.047) > 0.008856 ? Math.pow(n, 1 / 3) : n * 7.787 + 16 / 116;
      return [(i = i > 0.008856 ? Math.pow(i, 1 / 3) : i * 7.787 + 16 / 116) * 116 - 16, (n - i) * 500, (i - (o = o > 0.008856 ? Math.pow(o, 1 / 3) : o * 7.787 + 16 / 116)) * 200];
    };
    r.hsl.rgb = function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a = e[0] / 360;
      var s = e[1] / 100;
      var l = e[2] / 100;
      if (s === 0) {
        return [o = l * 255, o, o];
      }
      t = l * 2 - (n = l < 0.5 ? l * (1 + s) : l + s - l * s);
      r = [0, 0, 0];
      for (var c = 0; c < 3; c++) {
        if ((i = a + 1 / 3 * -(c - 1)) < 0) {
          i++;
        }
        if (i > 1) {
          i--;
        }
        o = i * 6 < 1 ? t + (n - t) * 6 * i : i * 2 < 1 ? n : i * 3 < 2 ? t + (n - t) * (2 / 3 - i) * 6 : t;
        r[c] = o * 255;
      }
      return r;
    };
    r.hsl.hsv = function (e) {
      var t = e[0];
      var n = e[1] / 100;
      var i = e[2] / 100;
      var r = n;
      var o = Math.max(i, 0.01);
      n *= (i *= 2) <= 1 ? i : 2 - i;
      r *= o <= 1 ? o : 2 - o;
      return [t, (i === 0 ? r * 2 / (o + r) : n * 2 / (i + n)) * 100, (i + n) / 2 * 100];
    };
    r.hsv.rgb = function (e) {
      var t = e[0] / 60;
      var n = e[1] / 100;
      var i = e[2] / 100;
      var r = Math.floor(t) % 6;
      var o = t - Math.floor(t);
      var a = i * 255 * (1 - n);
      var s = i * 255 * (1 - n * o);
      var l = i * 255 * (1 - n * (1 - o));
      i *= 255;
      switch (r) {
        case 0:
          return [i, l, a];
        case 1:
          return [s, i, a];
        case 2:
          return [a, i, l];
        case 3:
          return [a, s, i];
        case 4:
          return [l, a, i];
        case 5:
          return [i, a, s];
      }
    };
    r.hsv.hsl = function (e) {
      var t;
      var n;
      var i;
      var r = e[0];
      var o = e[1] / 100;
      var a = e[2] / 100;
      var s = Math.max(a, 0.01);
      i = (2 - o) * a;
      n = o * s;
      return [r, (n = (n /= (t = (2 - o) * s) <= 1 ? t : 2 - t) || 0) * 100, (i /= 2) * 100];
    };
    r.hwb.rgb = function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l = e[0] / 360;
      var c = e[1] / 100;
      var u = e[2] / 100;
      var d = c + u;
      if (d > 1) {
        c /= d;
        u /= d;
      }
      i = l * 6 - (t = Math.floor(l * 6));
      if ((t & 1) != 0) {
        i = 1 - i;
      }
      r = c + i * ((n = 1 - u) - c);
      switch (t) {
        default:
        case 6:
        case 0:
          o = n;
          a = r;
          s = c;
          break;
        case 1:
          o = r;
          a = n;
          s = c;
          break;
        case 2:
          o = c;
          a = n;
          s = r;
          break;
        case 3:
          o = c;
          a = r;
          s = n;
          break;
        case 4:
          o = r;
          a = c;
          s = n;
          break;
        case 5:
          o = n;
          a = c;
          s = r;
      }
      return [o * 255, a * 255, s * 255];
    };
    r.cmyk.rgb = function (e) {
      var t = e[0] / 100;
      var n = e[1] / 100;
      var i = e[2] / 100;
      var r = e[3] / 100;
      return [(1 - Math.min(1, t * (1 - r) + r)) * 255, (1 - Math.min(1, n * (1 - r) + r)) * 255, (1 - Math.min(1, i * (1 - r) + r)) * 255];
    };
    r.xyz.rgb = function (e) {
      var t;
      var n;
      var i;
      var r = e[0] / 100;
      var o = e[1] / 100;
      var a = e[2] / 100;
      n = r * -0.9689 + o * 1.8758 + a * 0.0415;
      i = r * 0.0557 + o * -0.204 + a * 1.057;
      t = (t = r * 3.2406 + o * -1.5372 + a * -0.4986) > 0.0031308 ? Math.pow(t, 1 / 2.4) * 1.055 - 0.055 : t * 12.92;
      n = n > 0.0031308 ? Math.pow(n, 1 / 2.4) * 1.055 - 0.055 : n * 12.92;
      i = i > 0.0031308 ? Math.pow(i, 1 / 2.4) * 1.055 - 0.055 : i * 12.92;
      return [(t = Math.min(Math.max(0, t), 1)) * 255, (n = Math.min(Math.max(0, n), 1)) * 255, (i = Math.min(Math.max(0, i), 1)) * 255];
    };
    r.xyz.lab = function (e) {
      var t = e[0];
      var n = e[1];
      var i = e[2];
      n /= 100;
      i /= 108.883;
      t = (t /= 95.047) > 0.008856 ? Math.pow(t, 1 / 3) : t * 7.787 + 16 / 116;
      return [(n = n > 0.008856 ? Math.pow(n, 1 / 3) : n * 7.787 + 16 / 116) * 116 - 16, (t - n) * 500, (n - (i = i > 0.008856 ? Math.pow(i, 1 / 3) : i * 7.787 + 16 / 116)) * 200];
    };
    r.lab.xyz = function (e) {
      var t;
      var n;
      var i;
      var r = e[0];
      t = e[1] / 500 + (n = (r + 16) / 116);
      i = n - e[2] / 200;
      var o = Math.pow(n, 3);
      var a = Math.pow(t, 3);
      var s = Math.pow(i, 3);
      n = o > 0.008856 ? o : (n - 16 / 116) / 7.787;
      t = a > 0.008856 ? a : (t - 16 / 116) / 7.787;
      i = s > 0.008856 ? s : (i - 16 / 116) / 7.787;
      return [t *= 95.047, n *= 100, i *= 108.883];
    };
    r.lab.lch = function (e) {
      var t;
      var n = e[0];
      var i = e[1];
      var r = e[2];
      if ((t = Math.atan2(r, i) * 360 / 2 / Math.PI) < 0) {
        t += 360;
      }
      return [n, Math.sqrt(i * i + r * r), t];
    };
    r.lch.lab = function (e) {
      var t;
      var n = e[0];
      var i = e[1];
      t = e[2] / 360 * 2 * Math.PI;
      return [n, i * Math.cos(t), i * Math.sin(t)];
    };
    r.rgb.ansi16 = function (e) {
      var t = e[0];
      var n = e[1];
      var i = e[2];
      var o = 1 in arguments ? arguments[1] : r.rgb.hsv(e)[2];
      if ((o = Math.round(o / 50)) === 0) {
        return 30;
      }
      var a = 30 + (Math.round(i / 255) << 2 | Math.round(n / 255) << 1 | Math.round(t / 255));
      if (o === 2) {
        a += 60;
      }
      return a;
    };
    r.hsv.ansi16 = function (e) {
      return r.rgb.ansi16(r.hsv.rgb(e), e[2]);
    };
    r.rgb.ansi256 = function (e) {
      var t = e[0];
      var n = e[1];
      var i = e[2];
      if (t === n && n === i) {
        if (t < 8) {
          return 16;
        } else if (t > 248) {
          return 231;
        } else {
          return Math.round((t - 8) / 247 * 24) + 232;
        }
      } else {
        return 16 + Math.round(t / 255 * 5) * 36 + Math.round(n / 255 * 5) * 6 + Math.round(i / 255 * 5);
      }
    };
    r.ansi16.rgb = function (e) {
      var t = e % 10;
      if (t === 0 || t === 7) {
        if (e > 50) {
          t += 3.5;
        }
        return [t = t / 10.5 * 255, t, t];
      }
      var n = (1 + ~~(e > 50)) * 0.5;
      return [(t & 1) * n * 255, (t >> 1 & 1) * n * 255, (t >> 2 & 1) * n * 255];
    };
    r.ansi256.rgb = function (e) {
      if (e >= 232) {
        var t = (e - 232) * 10 + 8;
        return [t, t, t];
      }
      var n;
      e -= 16;
      return [Math.floor(e / 36) / 5 * 255, Math.floor((n = e % 36) / 6) / 5 * 255, n % 6 / 5 * 255];
    };
    r.rgb.hex = function (e) {
      var t = (((Math.round(e[0]) & 255) << 16) + ((Math.round(e[1]) & 255) << 8) + (Math.round(e[2]) & 255)).toString(16).toUpperCase();
      return "000000".substring(t.length) + t;
    };
    r.hex.rgb = function (e) {
      var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
      if (!t) {
        return [0, 0, 0];
      }
      var n = t[0];
      if (t[0].length === 3) {
        n = n.split("").map(function (e) {
          return e + e;
        }).join("");
      }
      var i = parseInt(n, 16);
      return [i >> 16 & 255, i >> 8 & 255, i & 255];
    };
    r.rgb.hcg = function (e) {
      var t;
      var n = e[0] / 255;
      var i = e[1] / 255;
      var r = e[2] / 255;
      var o = Math.max(Math.max(n, i), r);
      var a = Math.min(Math.min(n, i), r);
      var s = o - a;
      t = s <= 0 ? 0 : o === n ? (i - r) / s % 6 : o === i ? 2 + (r - n) / s : 4 + (n - i) / s + 4;
      t /= 6;
      return [(t %= 1) * 360, s * 100, (s < 1 ? a / (1 - s) : 0) * 100];
    };
    r.hsl.hcg = function (e) {
      var t;
      var n = e[1] / 100;
      var i = e[2] / 100;
      var r = 0;
      if ((t = i < 0.5 ? n * 2 * i : n * 2 * (1 - i)) < 1) {
        r = (i - t * 0.5) / (1 - t);
      }
      return [e[0], t * 100, r * 100];
    };
    r.hsv.hcg = function (e) {
      var t = e[1] / 100;
      var n = e[2] / 100;
      var i = t * n;
      var r = 0;
      if (i < 1) {
        r = (n - i) / (1 - i);
      }
      return [e[0], i * 100, r * 100];
    };
    r.hcg.rgb = function (e) {
      var t = e[0] / 360;
      var n = e[1] / 100;
      var i = e[2] / 100;
      if (n === 0) {
        return [i * 255, i * 255, i * 255];
      }
      var r;
      var o = [0, 0, 0];
      var a = t % 1 * 6;
      var s = a % 1;
      var l = 1 - s;
      switch (Math.floor(a)) {
        case 0:
          o[0] = 1;
          o[1] = s;
          o[2] = 0;
          break;
        case 1:
          o[0] = l;
          o[1] = 1;
          o[2] = 0;
          break;
        case 2:
          o[0] = 0;
          o[1] = 1;
          o[2] = s;
          break;
        case 3:
          o[0] = 0;
          o[1] = l;
          o[2] = 1;
          break;
        case 4:
          o[0] = s;
          o[1] = 0;
          o[2] = 1;
          break;
        default:
          o[0] = 1;
          o[1] = 0;
          o[2] = l;
      }
      r = (1 - n) * i;
      return [(n * o[0] + r) * 255, (n * o[1] + r) * 255, (n * o[2] + r) * 255];
    };
    r.hcg.hsv = function (e) {
      var t = e[1] / 100;
      var n = t + e[2] / 100 * (1 - t);
      var i = 0;
      if (n > 0) {
        i = t / n;
      }
      return [e[0], i * 100, n * 100];
    };
    r.hcg.hsl = function (e) {
      var t = e[1] / 100;
      var n = e[2] / 100 * (1 - t) + t * 0.5;
      var i = 0;
      if (n > 0 && n < 0.5) {
        i = t / (n * 2);
      } else if (n >= 0.5 && n < 1) {
        i = t / ((1 - n) * 2);
      }
      return [e[0], i * 100, n * 100];
    };
    r.hcg.hwb = function (e) {
      var t = e[1] / 100;
      var n = t + e[2] / 100 * (1 - t);
      return [e[0], (n - t) * 100, (1 - n) * 100];
    };
    r.hwb.hcg = function (e) {
      var t = e[1] / 100;
      var n = 1 - e[2] / 100;
      var i = n - t;
      var r = 0;
      if (i < 1) {
        r = (n - i) / (1 - i);
      }
      return [e[0], i * 100, r * 100];
    };
    r.apple.rgb = function (e) {
      return [e[0] / 65535 * 255, e[1] / 65535 * 255, e[2] / 65535 * 255];
    };
    r.rgb.apple = function (e) {
      return [e[0] / 255 * 65535, e[1] / 255 * 65535, e[2] / 255 * 65535];
    };
    r.gray.rgb = function (e) {
      return [e[0] / 100 * 255, e[0] / 100 * 255, e[0] / 100 * 255];
    };
    r.gray.hsl = r.gray.hsv = function (e) {
      return [0, 0, e[0]];
    };
    r.gray.hwb = function (e) {
      return [0, 100, e[0]];
    };
    r.gray.cmyk = function (e) {
      return [0, 0, 0, e[0]];
    };
    r.gray.lab = function (e) {
      return [e[0], 0, 0];
    };
    r.gray.hex = function (e) {
      var t = Math.round(e[0] / 100 * 255) & 255;
      var n = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
      return "000000".substring(n.length) + n;
    };
    r.rgb.gray = function (e) {
      return [(e[0] + e[1] + e[2]) / 3 / 255 * 100];
    };
  });
  function i(e) {
    var t = function () {
      for (var e = {}, t = Object.keys(n), i = t.length, r = 0; r < i; r++) {
        e[t[r]] = {
          distance: -1,
          parent: null
        };
      }
      return e;
    }();
    var i = [e];
    for (t[e].distance = 0; i.length;) {
      for (var r = i.pop(), o = Object.keys(n[r]), a = o.length, s = 0; s < a; s++) {
        var l = o[s];
        var c = t[l];
        if (c.distance === -1) {
          c.distance = t[r].distance + 1;
          c.parent = r;
          i.unshift(l);
        }
      }
    }
    return t;
  }
  function r(e, t) {
    return function (n) {
      return t(e(n));
    };
  }
  function o(e, t) {
    for (var i = [t[e].parent, e], o = n[t[e].parent][e], a = t[e].parent; t[a].parent;) {
      i.unshift(t[a].parent);
      o = r(n[t[a].parent][a], o);
      a = t[a].parent;
    }
    o.conversion = i;
    return o;
  }
  n.rgb;
  n.hsl;
  n.hsv;
  n.hwb;
  n.cmyk;
  n.xyz;
  n.lab;
  n.lch;
  n.hex;
  n.keyword;
  n.ansi16;
  n.ansi256;
  n.hcg;
  n.apple;
  n.gray;
  var a = {};
  Object.keys(n).forEach(function (e) {
    a[e] = {};
    Object.defineProperty(a[e], "channels", {
      value: n[e].channels
    });
    Object.defineProperty(a[e], "labels", {
      value: n[e].labels
    });
    var t = function (e) {
      for (var t = i(e), n = {}, r = Object.keys(t), a = r.length, s = 0; s < a; s++) {
        var l = r[s];
        if (t[l].parent !== null) {
          n[l] = o(l, t);
        }
      }
      return n;
    }(e);
    Object.keys(t).forEach(function (n) {
      var i = t[n];
      a[e][n] = function (e) {
        var t = function (t) {
          if (t == null) {
            return t;
          }
          if (arguments.length > 1) {
            t = Array.prototype.slice.call(arguments);
          }
          var n = e(t);
          if (typeof n == "object") {
            for (var i = n.length, r = 0; r < i; r++) {
              n[r] = Math.round(n[r]);
            }
          }
          return n;
        };
        if ("conversion" in e) {
          t.conversion = e.conversion;
        }
        return t;
      }(i);
      a[e][n].raw = function (e) {
        var t = function (t) {
          if (t == null) {
            return t;
          } else {
            if (arguments.length > 1) {
              t = Array.prototype.slice.call(arguments);
            }
            return e(t);
          }
        };
        if ("conversion" in e) {
          t.conversion = e.conversion;
        }
        return t;
      }(i);
    });
  });
  var s = a;
  var l = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  var c = {
    getRgba: u,
    getHsla: d,
    getRgb: function (e) {
      var t = u(e);
      return t && t.slice(0, 3);
    },
    getHsl: function (e) {
      var t = d(e);
      return t && t.slice(0, 3);
    },
    getHwb: h,
    getAlpha: function (e) {
      var t = u(e);
      if (t || (t = d(e)) || (t = h(e))) {
        return t[3];
      } else {
        return undefined;
      }
    },
    hexString: function (e, t) {
      t = t !== undefined && e.length === 3 ? t : e[3];
      return "#" + v(e[0]) + v(e[1]) + v(e[2]) + (t >= 0 && t < 1 ? v(Math.round(t * 255)) : "");
    },
    rgbString: function (e, t) {
      if (t < 1 || e[3] && e[3] < 1) {
        return f(e, t);
      } else {
        return "rgb(" + e[0] + ", " + e[1] + ", " + e[2] + ")";
      }
    },
    rgbaString: f,
    percentString: function (e, t) {
      if (t < 1 || e[3] && e[3] < 1) {
        return p(e, t);
      } else {
        return "rgb(" + Math.round(e[0] / 255 * 100) + "%, " + Math.round(e[1] / 255 * 100) + "%, " + Math.round(e[2] / 255 * 100) + "%)";
      }
    },
    percentaString: p,
    hslString: function (e, t) {
      if (t < 1 || e[3] && e[3] < 1) {
        return g(e, t);
      } else {
        return "hsl(" + e[0] + ", " + e[1] + "%, " + e[2] + "%)";
      }
    },
    hslaString: g,
    hwbString: function (e, t) {
      if (t === undefined) {
        t = e[3] !== undefined ? e[3] : 1;
      }
      return "hwb(" + e[0] + ", " + e[1] + "%, " + e[2] + "%" + (t !== undefined && t !== 1 ? ", " + t : "") + ")";
    },
    keyword: function (e) {
      return y[e.slice(0, 3)];
    }
  };
  function u(e) {
    if (e) {
      var t = [0, 0, 0];
      var n = 1;
      var i = e.match(/^#([a-fA-F0-9]{3,4})$/i);
      var r = "";
      if (i) {
        r = (i = i[1])[3];
        for (var o = 0; o < t.length; o++) {
          t[o] = parseInt(i[o] + i[o], 16);
        }
        if (r) {
          n = Math.round(parseInt(r + r, 16) / 255 * 100) / 100;
        }
      } else if (i = e.match(/^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i)) {
        r = i[2];
        i = i[1];
        o = 0;
        for (; o < t.length; o++) {
          t[o] = parseInt(i.slice(o * 2, o * 2 + 2), 16);
        }
        if (r) {
          n = Math.round(parseInt(r, 16) / 255 * 100) / 100;
        }
      } else if (i = e.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)) {
        for (o = 0; o < t.length; o++) {
          t[o] = parseInt(i[o + 1]);
        }
        n = parseFloat(i[4]);
      } else if (i = e.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)) {
        for (o = 0; o < t.length; o++) {
          t[o] = Math.round(parseFloat(i[o + 1]) * 2.55);
        }
        n = parseFloat(i[4]);
      } else if (i = e.match(/(\w+)/)) {
        if (i[1] == "transparent") {
          return [0, 0, 0, 0];
        }
        if (!(t = l[i[1]])) {
          return;
        }
      }
      for (o = 0; o < t.length; o++) {
        t[o] = m(t[o], 0, 255);
      }
      n = n || n == 0 ? m(n, 0, 1) : 1;
      t[3] = n;
      return t;
    }
  }
  function d(e) {
    if (e) {
      var t = e.match(/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);
      if (t) {
        var n = parseFloat(t[4]);
        return [m(parseInt(t[1]), 0, 360), m(parseFloat(t[2]), 0, 100), m(parseFloat(t[3]), 0, 100), m(isNaN(n) ? 1 : n, 0, 1)];
      }
    }
  }
  function h(e) {
    if (e) {
      var t = e.match(/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);
      if (t) {
        var n = parseFloat(t[4]);
        return [m(parseInt(t[1]), 0, 360), m(parseFloat(t[2]), 0, 100), m(parseFloat(t[3]), 0, 100), m(isNaN(n) ? 1 : n, 0, 1)];
      }
    }
  }
  function f(e, t) {
    if (t === undefined) {
      t = e[3] !== undefined ? e[3] : 1;
    }
    return "rgba(" + e[0] + ", " + e[1] + ", " + e[2] + ", " + t + ")";
  }
  function p(e, t) {
    return "rgba(" + Math.round(e[0] / 255 * 100) + "%, " + Math.round(e[1] / 255 * 100) + "%, " + Math.round(e[2] / 255 * 100) + "%, " + (t || e[3] || 1) + ")";
  }
  function g(e, t) {
    if (t === undefined) {
      t = e[3] !== undefined ? e[3] : 1;
    }
    return "hsla(" + e[0] + ", " + e[1] + "%, " + e[2] + "%, " + t + ")";
  }
  function m(e, t, n) {
    return Math.min(Math.max(t, e), n);
  }
  function v(e) {
    var t = e.toString(16).toUpperCase();
    if (t.length < 2) {
      return "0" + t;
    } else {
      return t;
    }
  }
  var y = {};
  for (var b in l) {
    y[l[b]] = b;
  }
  var w = function (e) {
    if (e instanceof w) {
      return e;
    } else if (this instanceof w) {
      this.valid = false;
      this.values = {
        rgb: [0, 0, 0],
        hsl: [0, 0, 0],
        hsv: [0, 0, 0],
        hwb: [0, 0, 0],
        cmyk: [0, 0, 0, 0],
        alpha: 1
      };
      return void (typeof e == "string" ? (t = c.getRgba(e)) ? this.setValues("rgb", t) : (t = c.getHsla(e)) ? this.setValues("hsl", t) : (t = c.getHwb(e)) && this.setValues("hwb", t) : typeof e == "object" && ((t = e).r !== undefined || t.red !== undefined ? this.setValues("rgb", t) : t.l !== undefined || t.lightness !== undefined ? this.setValues("hsl", t) : t.v !== undefined || t.value !== undefined ? this.setValues("hsv", t) : t.w !== undefined || t.whiteness !== undefined ? this.setValues("hwb", t) : t.c === undefined && t.cyan === undefined || this.setValues("cmyk", t)));
    } else {
      return new w(e);
    }
    var t;
  };
  w.prototype = {
    isValid: function () {
      return this.valid;
    },
    rgb: function () {
      return this.setSpace("rgb", arguments);
    },
    hsl: function () {
      return this.setSpace("hsl", arguments);
    },
    hsv: function () {
      return this.setSpace("hsv", arguments);
    },
    hwb: function () {
      return this.setSpace("hwb", arguments);
    },
    cmyk: function () {
      return this.setSpace("cmyk", arguments);
    },
    rgbArray: function () {
      return this.values.rgb;
    },
    hslArray: function () {
      return this.values.hsl;
    },
    hsvArray: function () {
      return this.values.hsv;
    },
    hwbArray: function () {
      var e = this.values;
      if (e.alpha !== 1) {
        return e.hwb.concat([e.alpha]);
      } else {
        return e.hwb;
      }
    },
    cmykArray: function () {
      return this.values.cmyk;
    },
    rgbaArray: function () {
      var e = this.values;
      return e.rgb.concat([e.alpha]);
    },
    hslaArray: function () {
      var e = this.values;
      return e.hsl.concat([e.alpha]);
    },
    alpha: function (e) {
      if (e === undefined) {
        return this.values.alpha;
      } else {
        this.setValues("alpha", e);
        return this;
      }
    },
    red: function (e) {
      return this.setChannel("rgb", 0, e);
    },
    green: function (e) {
      return this.setChannel("rgb", 1, e);
    },
    blue: function (e) {
      return this.setChannel("rgb", 2, e);
    },
    hue: function (e) {
      if (e) {
        e = (e %= 360) < 0 ? 360 + e : e;
      }
      return this.setChannel("hsl", 0, e);
    },
    saturation: function (e) {
      return this.setChannel("hsl", 1, e);
    },
    lightness: function (e) {
      return this.setChannel("hsl", 2, e);
    },
    saturationv: function (e) {
      return this.setChannel("hsv", 1, e);
    },
    whiteness: function (e) {
      return this.setChannel("hwb", 1, e);
    },
    blackness: function (e) {
      return this.setChannel("hwb", 2, e);
    },
    value: function (e) {
      return this.setChannel("hsv", 2, e);
    },
    cyan: function (e) {
      return this.setChannel("cmyk", 0, e);
    },
    magenta: function (e) {
      return this.setChannel("cmyk", 1, e);
    },
    yellow: function (e) {
      return this.setChannel("cmyk", 2, e);
    },
    black: function (e) {
      return this.setChannel("cmyk", 3, e);
    },
    hexString: function () {
      return c.hexString(this.values.rgb);
    },
    rgbString: function () {
      return c.rgbString(this.values.rgb, this.values.alpha);
    },
    rgbaString: function () {
      return c.rgbaString(this.values.rgb, this.values.alpha);
    },
    percentString: function () {
      return c.percentString(this.values.rgb, this.values.alpha);
    },
    hslString: function () {
      return c.hslString(this.values.hsl, this.values.alpha);
    },
    hslaString: function () {
      return c.hslaString(this.values.hsl, this.values.alpha);
    },
    hwbString: function () {
      return c.hwbString(this.values.hwb, this.values.alpha);
    },
    keyword: function () {
      return c.keyword(this.values.rgb, this.values.alpha);
    },
    rgbNumber: function () {
      var e = this.values.rgb;
      return e[0] << 16 | e[1] << 8 | e[2];
    },
    luminosity: function () {
      for (var e = this.values.rgb, t = [], n = 0; n < e.length; n++) {
        var i = e[n] / 255;
        t[n] = i <= 0.03928 ? i / 12.92 : Math.pow((i + 0.055) / 1.055, 2.4);
      }
      return t[0] * 0.2126 + t[1] * 0.7152 + t[2] * 0.0722;
    },
    contrast: function (e) {
      var t = this.luminosity();
      var n = e.luminosity();
      if (t > n) {
        return (t + 0.05) / (n + 0.05);
      } else {
        return (n + 0.05) / (t + 0.05);
      }
    },
    level: function (e) {
      var t = this.contrast(e);
      if (t >= 7.1) {
        return "AAA";
      } else if (t >= 4.5) {
        return "AA";
      } else {
        return "";
      }
    },
    dark: function () {
      var e = this.values.rgb;
      return (e[0] * 299 + e[1] * 587 + e[2] * 114) / 1000 < 128;
    },
    light: function () {
      return !this.dark();
    },
    negate: function () {
      for (var e = [], t = 0; t < 3; t++) {
        e[t] = 255 - this.values.rgb[t];
      }
      this.setValues("rgb", e);
      return this;
    },
    lighten: function (e) {
      var t = this.values.hsl;
      t[2] += t[2] * e;
      this.setValues("hsl", t);
      return this;
    },
    darken: function (e) {
      var t = this.values.hsl;
      t[2] -= t[2] * e;
      this.setValues("hsl", t);
      return this;
    },
    saturate: function (e) {
      var t = this.values.hsl;
      t[1] += t[1] * e;
      this.setValues("hsl", t);
      return this;
    },
    desaturate: function (e) {
      var t = this.values.hsl;
      t[1] -= t[1] * e;
      this.setValues("hsl", t);
      return this;
    },
    whiten: function (e) {
      var t = this.values.hwb;
      t[1] += t[1] * e;
      this.setValues("hwb", t);
      return this;
    },
    blacken: function (e) {
      var t = this.values.hwb;
      t[2] += t[2] * e;
      this.setValues("hwb", t);
      return this;
    },
    greyscale: function () {
      var e = this.values.rgb;
      var t = e[0] * 0.3 + e[1] * 0.59 + e[2] * 0.11;
      this.setValues("rgb", [t, t, t]);
      return this;
    },
    clearer: function (e) {
      var t = this.values.alpha;
      this.setValues("alpha", t - t * e);
      return this;
    },
    opaquer: function (e) {
      var t = this.values.alpha;
      this.setValues("alpha", t + t * e);
      return this;
    },
    rotate: function (e) {
      var t = this.values.hsl;
      var n = (t[0] + e) % 360;
      t[0] = n < 0 ? 360 + n : n;
      this.setValues("hsl", t);
      return this;
    },
    mix: function (e, t) {
      var n = e;
      var i = t === undefined ? 0.5 : t;
      var r = i * 2 - 1;
      var o = this.alpha() - n.alpha();
      var a = ((r * o == -1 ? r : (r + o) / (1 + r * o)) + 1) / 2;
      var s = 1 - a;
      return this.rgb(a * this.red() + s * n.red(), a * this.green() + s * n.green(), a * this.blue() + s * n.blue()).alpha(this.alpha() * i + n.alpha() * (1 - i));
    },
    toJSON: function () {
      return this.rgb();
    },
    clone: function () {
      var e;
      var t;
      var n = new w();
      var i = this.values;
      var r = n.values;
      for (var o in i) {
        if (i.hasOwnProperty(o)) {
          e = i[o];
          if ((t = {}.toString.call(e)) === "[object Array]") {
            r[o] = e.slice(0);
          } else if (t === "[object Number]") {
            r[o] = e;
          } else {
            console.error("unexpected color value:", e);
          }
        }
      }
      return n;
    }
  };
  w.prototype.spaces = {
    rgb: ["red", "green", "blue"],
    hsl: ["hue", "saturation", "lightness"],
    hsv: ["hue", "saturation", "value"],
    hwb: ["hue", "whiteness", "blackness"],
    cmyk: ["cyan", "magenta", "yellow", "black"]
  };
  w.prototype.maxes = {
    rgb: [255, 255, 255],
    hsl: [360, 100, 100],
    hsv: [360, 100, 100],
    hwb: [360, 100, 100],
    cmyk: [100, 100, 100, 100]
  };
  w.prototype.getValues = function (e) {
    for (var t = this.values, n = {}, i = 0; i < e.length; i++) {
      n[e.charAt(i)] = t[e][i];
    }
    if (t.alpha !== 1) {
      n.a = t.alpha;
    }
    return n;
  };
  w.prototype.setValues = function (e, t) {
    var n;
    var i;
    var r = this.values;
    var o = this.spaces;
    var a = this.maxes;
    var l = 1;
    this.valid = true;
    if (e === "alpha") {
      l = t;
    } else if (t.length) {
      r[e] = t.slice(0, e.length);
      l = t[e.length];
    } else if (t[e.charAt(0)] !== undefined) {
      for (n = 0; n < e.length; n++) {
        r[e][n] = t[e.charAt(n)];
      }
      l = t.a;
    } else if (t[o[e][0]] !== undefined) {
      var c = o[e];
      for (n = 0; n < e.length; n++) {
        r[e][n] = t[c[n]];
      }
      l = t.alpha;
    }
    r.alpha = Math.max(0, Math.min(1, l === undefined ? r.alpha : l));
    if (e === "alpha") {
      return false;
    }
    for (n = 0; n < e.length; n++) {
      i = Math.max(0, Math.min(a[e][n], r[e][n]));
      r[e][n] = Math.round(i);
    }
    for (var u in o) {
      if (u !== e) {
        r[u] = s[e][u](r[e]);
      }
    }
    return true;
  };
  w.prototype.setSpace = function (e, t) {
    var n = t[0];
    if (n === undefined) {
      return this.getValues(e);
    } else {
      if (typeof n == "number") {
        n = Array.prototype.slice.call(t);
      }
      this.setValues(e, n);
      return this;
    }
  };
  w.prototype.setChannel = function (e, t, n) {
    var i = this.values[e];
    if (n === undefined) {
      return i[t];
    } else {
      if (!(n === i[t])) {
        i[t] = n;
        this.setValues(e, i);
      }
      return this;
    }
  };
  if (typeof window != "undefined") {
    window.Color = w;
  }
  var x = w;
  function _(e) {
    return ["__proto__", "prototype", "constructor"].indexOf(e) === -1;
  }
  var C;
  var S = {
    noop: function () {},
    uid: (C = 0, function () {
      return C++;
    }),
    isNullOrUndef: function (e) {
      return e == null;
    },
    isArray: function (e) {
      if (Array.isArray && Array.isArray(e)) {
        return true;
      }
      var t = Object.prototype.toString.call(e);
      return t.substr(0, 7) === "[object" && t.substr(-6) === "Array]";
    },
    isObject: function (e) {
      return e !== null && Object.prototype.toString.call(e) === "[object Object]";
    },
    isFinite: function (e) {
      return (typeof e == "number" || e instanceof Number) && isFinite(e);
    },
    valueOrDefault: function (e, t) {
      if (e === undefined) {
        return t;
      } else {
        return e;
      }
    },
    valueAtIndexOrDefault: function (e, t, n) {
      return S.valueOrDefault(S.isArray(e) ? e[t] : e, n);
    },
    callback: function (e, t, n) {
      if (e && typeof e.call == "function") {
        return e.apply(n, t);
      }
    },
    each: function (e, t, n, i) {
      var r;
      var o;
      var a;
      if (S.isArray(e)) {
        o = e.length;
        if (i) {
          for (r = o - 1; r >= 0; r--) {
            t.call(n, e[r], r);
          }
        } else {
          for (r = 0; r < o; r++) {
            t.call(n, e[r], r);
          }
        }
      } else if (S.isObject(e)) {
        o = (a = Object.keys(e)).length;
        r = 0;
        o = (a = Object.keys(e)).length;
        r = 0;
        for (; r < o; r++) {
          t.call(n, e[a[r]], a[r]);
        }
      }
    },
    arrayEquals: function (e, t) {
      var n;
      var i;
      var r;
      var o;
      if (!e || !t || e.length !== t.length) {
        return false;
      }
      n = 0;
      i = e.length;
      for (; n < i; ++n) {
        r = e[n];
        o = t[n];
        if (r instanceof Array && o instanceof Array) {
          if (!S.arrayEquals(r, o)) {
            return false;
          }
        } else if (r !== o) {
          return false;
        }
      }
      return true;
    },
    clone: function (e) {
      if (S.isArray(e)) {
        return e.map(S.clone);
      }
      if (S.isObject(e)) {
        for (var t = Object.create(e), n = Object.keys(e), i = n.length, r = 0; r < i; ++r) {
          t[n[r]] = S.clone(e[n[r]]);
        }
        return t;
      }
      return e;
    },
    _merger: function (e, t, n, i) {
      if (_(e)) {
        var r = t[e];
        var o = n[e];
        if (S.isObject(r) && S.isObject(o)) {
          S.merge(r, o, i);
        } else {
          t[e] = S.clone(o);
        }
      }
    },
    _mergerIf: function (e, t, n) {
      if (_(e)) {
        var i = t[e];
        var r = n[e];
        if (S.isObject(i) && S.isObject(r)) {
          S.mergeIf(i, r);
        } else if (!t.hasOwnProperty(e)) {
          t[e] = S.clone(r);
        }
      }
    },
    merge: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l = S.isArray(t) ? t : [t];
      var c = l.length;
      if (!S.isObject(e)) {
        return e;
      }
      i = (n = n || {}).merger || S._merger;
      r = 0;
      for (; r < c; ++r) {
        t = l[r];
        if (S.isObject(t)) {
          s = 0;
          a = (o = Object.keys(t)).length;
          s = 0;
          a = (o = Object.keys(t)).length;
          for (; s < a; ++s) {
            i(o[s], e, t, n);
          }
        }
      }
      return e;
    },
    mergeIf: function (e, t) {
      return S.merge(e, t, {
        merger: S._mergerIf
      });
    },
    extend: Object.assign || function (e) {
      return S.merge(e, [].slice.call(arguments, 1), {
        merger: function (e, t, n) {
          t[e] = n[e];
        }
      });
    },
    inherits: function (e) {
      var t = this;
      var n = e && e.hasOwnProperty("constructor") ? e.constructor : function () {
        return t.apply(this, arguments);
      };
      var i = function () {
        this.constructor = n;
      };
      i.prototype = t.prototype;
      n.prototype = new i();
      n.extend = S.inherits;
      if (e) {
        S.extend(n.prototype, e);
      }
      n.__super__ = t.prototype;
      return n;
    },
    _deprecated: function (e, t, n, i) {
      if (t !== undefined) {
        console.warn(e + ": \"" + n + "\" is deprecated. Please use \"" + i + "\" instead");
      }
    }
  };
  var k = S;
  S.callCallback = S.callback;
  S.indexOf = function (e, t, n) {
    return Array.prototype.indexOf.call(e, t, n);
  };
  S.getValueOrDefault = S.valueOrDefault;
  S.getValueAtIndexOrDefault = S.valueAtIndexOrDefault;
  var T = {
    linear: function (e) {
      return e;
    },
    easeInQuad: function (e) {
      return e * e;
    },
    easeOutQuad: function (e) {
      return -e * (e - 2);
    },
    easeInOutQuad: function (e) {
      if ((e /= 0.5) < 1) {
        return e * 0.5 * e;
      } else {
        return (--e * (e - 2) - 1) * -0.5;
      }
    },
    easeInCubic: function (e) {
      return e * e * e;
    },
    easeOutCubic: function (e) {
      return (e -= 1) * e * e + 1;
    },
    easeInOutCubic: function (e) {
      if ((e /= 0.5) < 1) {
        return e * 0.5 * e * e;
      } else {
        return ((e -= 2) * e * e + 2) * 0.5;
      }
    },
    easeInQuart: function (e) {
      return e * e * e * e;
    },
    easeOutQuart: function (e) {
      return -((e -= 1) * e * e * e - 1);
    },
    easeInOutQuart: function (e) {
      if ((e /= 0.5) < 1) {
        return e * 0.5 * e * e * e;
      } else {
        return ((e -= 2) * e * e * e - 2) * -0.5;
      }
    },
    easeInQuint: function (e) {
      return e * e * e * e * e;
    },
    easeOutQuint: function (e) {
      return (e -= 1) * e * e * e * e + 1;
    },
    easeInOutQuint: function (e) {
      if ((e /= 0.5) < 1) {
        return e * 0.5 * e * e * e * e;
      } else {
        return ((e -= 2) * e * e * e * e + 2) * 0.5;
      }
    },
    easeInSine: function (e) {
      return 1 - Math.cos(e * (Math.PI / 2));
    },
    easeOutSine: function (e) {
      return Math.sin(e * (Math.PI / 2));
    },
    easeInOutSine: function (e) {
      return (Math.cos(Math.PI * e) - 1) * -0.5;
    },
    easeInExpo: function (e) {
      if (e === 0) {
        return 0;
      } else {
        return Math.pow(2, (e - 1) * 10);
      }
    },
    easeOutExpo: function (e) {
      if (e === 1) {
        return 1;
      } else {
        return 1 - Math.pow(2, e * -10);
      }
    },
    easeInOutExpo: function (e) {
      if (e === 0) {
        return 0;
      } else if (e === 1) {
        return 1;
      } else if ((e /= 0.5) < 1) {
        return Math.pow(2, (e - 1) * 10) * 0.5;
      } else {
        return (2 - Math.pow(2, --e * -10)) * 0.5;
      }
    },
    easeInCirc: function (e) {
      if (e >= 1) {
        return e;
      } else {
        return -(Math.sqrt(1 - e * e) - 1);
      }
    },
    easeOutCirc: function (e) {
      return Math.sqrt(1 - (e -= 1) * e);
    },
    easeInOutCirc: function (e) {
      if ((e /= 0.5) < 1) {
        return (Math.sqrt(1 - e * e) - 1) * -0.5;
      } else {
        return (Math.sqrt(1 - (e -= 2) * e) + 1) * 0.5;
      }
    },
    easeInElastic: function (e) {
      var t = 1.70158;
      var n = 0;
      var i = 1;
      if (e === 0) {
        return 0;
      } else if (e === 1) {
        return 1;
      } else {
        if (!n) {
          n = 0.3;
        }
        if (i < 1) {
          i = 1;
          t = n / 4;
        } else {
          t = n / (Math.PI * 2) * Math.asin(1 / i);
        }
        return -i * Math.pow(2, (e -= 1) * 10) * Math.sin((e - t) * (Math.PI * 2) / n);
      }
    },
    easeOutElastic: function (e) {
      var t = 1.70158;
      var n = 0;
      var i = 1;
      if (e === 0) {
        return 0;
      } else if (e === 1) {
        return 1;
      } else {
        if (!n) {
          n = 0.3;
        }
        if (i < 1) {
          i = 1;
          t = n / 4;
        } else {
          t = n / (Math.PI * 2) * Math.asin(1 / i);
        }
        return i * Math.pow(2, e * -10) * Math.sin((e - t) * (Math.PI * 2) / n) + 1;
      }
    },
    easeInOutElastic: function (e) {
      var t = 1.70158;
      var n = 0;
      var i = 1;
      if (e === 0) {
        return 0;
      } else if ((e /= 0.5) == 2) {
        return 1;
      } else {
        if (!n) {
          n = 0.45;
        }
        if (i < 1) {
          i = 1;
          t = n / 4;
        } else {
          t = n / (Math.PI * 2) * Math.asin(1 / i);
        }
        if (e < 1) {
          return i * Math.pow(2, (e -= 1) * 10) * Math.sin((e - t) * (Math.PI * 2) / n) * -0.5;
        } else {
          return i * Math.pow(2, (e -= 1) * -10) * Math.sin((e - t) * (Math.PI * 2) / n) * 0.5 + 1;
        }
      }
    },
    easeInBack: function (e) {
      var t = 1.70158;
      return e * e * ((t + 1) * e - t);
    },
    easeOutBack: function (e) {
      var t = 1.70158;
      return (e -= 1) * e * ((t + 1) * e + t) + 1;
    },
    easeInOutBack: function (e) {
      var t = 1.70158;
      if ((e /= 0.5) < 1) {
        return e * e * ((1 + (t *= 1.525)) * e - t) * 0.5;
      } else {
        return ((e -= 2) * e * ((1 + (t *= 1.525)) * e + t) + 2) * 0.5;
      }
    },
    easeInBounce: function (e) {
      return 1 - T.easeOutBounce(1 - e);
    },
    easeOutBounce: function (e) {
      if (e < 1 / 2.75) {
        return e * 7.5625 * e;
      } else if (e < 2 / 2.75) {
        return (e -= 1.5 / 2.75) * 7.5625 * e + 0.75;
      } else if (e < 2.5 / 2.75) {
        return (e -= 2.25 / 2.75) * 7.5625 * e + 0.9375;
      } else {
        return (e -= 2.625 / 2.75) * 7.5625 * e + 0.984375;
      }
    },
    easeInOutBounce: function (e) {
      if (e < 0.5) {
        return T.easeInBounce(e * 2) * 0.5;
      } else {
        return T.easeOutBounce(e * 2 - 1) * 0.5 + 0.5;
      }
    }
  };
  var A = {
    effects: T
  };
  k.easingEffects = T;
  var D = Math.PI;
  var E = D / 180;
  var O = D * 2;
  var M = D / 2;
  var I = D / 4;
  var P = D * 2 / 3;
  var L = {
    clear: function (e) {
      e.ctx.clearRect(0, 0, e.width, e.height);
    },
    roundedRect: function (e, t, n, i, r, o) {
      if (o) {
        var a = Math.min(o, r / 2, i / 2);
        var s = t + a;
        var l = n + a;
        var c = t + i - a;
        var u = n + r - a;
        e.moveTo(t, l);
        if (s < c && l < u) {
          e.arc(s, l, a, -D, -M);
          e.arc(c, l, a, -M, 0);
          e.arc(c, u, a, 0, M);
          e.arc(s, u, a, M, D);
        } else if (s < c) {
          e.moveTo(s, n);
          e.arc(c, l, a, -M, M);
          e.arc(s, l, a, M, D + M);
        } else if (l < u) {
          e.arc(s, l, a, -D, 0);
          e.arc(s, u, a, 0, D);
        } else {
          e.arc(s, l, a, -D, D);
        }
        e.closePath();
        e.moveTo(t, n);
      } else {
        e.rect(t, n, i, r);
      }
    },
    drawPoint: function (e, t, n, i, r, o) {
      var a;
      var s;
      var l;
      var c;
      var u;
      var d = (o || 0) * E;
      if (t && typeof t == "object" && ((a = t.toString()) === "[object HTMLImageElement]" || a === "[object HTMLCanvasElement]")) {
        e.save();
        e.translate(i, r);
        e.rotate(d);
        e.drawImage(t, -t.width / 2, -t.height / 2, t.width, t.height);
        return void e.restore();
      }
      if (!(isNaN(n) || n <= 0)) {
        e.beginPath();
        switch (t) {
          default:
            e.arc(i, r, n, 0, O);
            e.closePath();
            break;
          case "triangle":
            e.moveTo(i + Math.sin(d) * n, r - Math.cos(d) * n);
            d += P;
            e.lineTo(i + Math.sin(d) * n, r - Math.cos(d) * n);
            d += P;
            e.lineTo(i + Math.sin(d) * n, r - Math.cos(d) * n);
            e.closePath();
            break;
          case "rectRounded":
            c = n - (u = n * 0.516);
            s = Math.cos(d + I) * c;
            l = Math.sin(d + I) * c;
            e.arc(i - s, r - l, u, d - D, d - M);
            e.arc(i + l, r - s, u, d - M, d);
            e.arc(i + s, r + l, u, d, d + M);
            e.arc(i - l, r + s, u, d + M, d + D);
            e.closePath();
            break;
          case "rect":
            if (!o) {
              c = Math.SQRT1_2 * n;
              e.rect(i - c, r - c, c * 2, c * 2);
              break;
            }
            d += I;
          case "rectRot":
            s = Math.cos(d) * n;
            l = Math.sin(d) * n;
            e.moveTo(i - s, r - l);
            e.lineTo(i + l, r - s);
            e.lineTo(i + s, r + l);
            e.lineTo(i - l, r + s);
            e.closePath();
            break;
          case "crossRot":
            d += I;
          case "cross":
            s = Math.cos(d) * n;
            l = Math.sin(d) * n;
            e.moveTo(i - s, r - l);
            e.lineTo(i + s, r + l);
            e.moveTo(i + l, r - s);
            e.lineTo(i - l, r + s);
            break;
          case "star":
            s = Math.cos(d) * n;
            l = Math.sin(d) * n;
            e.moveTo(i - s, r - l);
            e.lineTo(i + s, r + l);
            e.moveTo(i + l, r - s);
            e.lineTo(i - l, r + s);
            d += I;
            s = Math.cos(d) * n;
            l = Math.sin(d) * n;
            e.moveTo(i - s, r - l);
            e.lineTo(i + s, r + l);
            e.moveTo(i + l, r - s);
            e.lineTo(i - l, r + s);
            break;
          case "line":
            s = Math.cos(d) * n;
            l = Math.sin(d) * n;
            e.moveTo(i - s, r - l);
            e.lineTo(i + s, r + l);
            break;
          case "dash":
            e.moveTo(i, r);
            e.lineTo(i + Math.cos(d) * n, r + Math.sin(d) * n);
        }
        e.fill();
        e.stroke();
      }
    },
    _isPointInArea: function (e, t) {
      return e.x > t.left - 0.000001 && e.x < t.right + 0.000001 && e.y > t.top - 0.000001 && e.y < t.bottom + 0.000001;
    },
    clipArea: function (e, t) {
      e.save();
      e.beginPath();
      e.rect(t.left, t.top, t.right - t.left, t.bottom - t.top);
      e.clip();
    },
    unclipArea: function (e) {
      e.restore();
    },
    lineTo: function (e, t, n, i) {
      var r = n.steppedLine;
      if (r) {
        if (r === "middle") {
          var o = (t.x + n.x) / 2;
          e.lineTo(o, i ? n.y : t.y);
          e.lineTo(o, i ? t.y : n.y);
        } else if (r === "after" && !i || r !== "after" && i) {
          e.lineTo(t.x, n.y);
        } else {
          e.lineTo(n.x, t.y);
        }
        e.lineTo(n.x, n.y);
      } else if (n.tension) {
        e.bezierCurveTo(i ? t.controlPointPreviousX : t.controlPointNextX, i ? t.controlPointPreviousY : t.controlPointNextY, i ? n.controlPointNextX : n.controlPointPreviousX, i ? n.controlPointNextY : n.controlPointPreviousY, n.x, n.y);
      } else {
        e.lineTo(n.x, n.y);
      }
    }
  };
  var N = L;
  k.clear = L.clear;
  k.drawRoundedRectangle = function (e) {
    e.beginPath();
    L.roundedRect.apply(L, arguments);
  };
  var F = {
    _set: function (e, t) {
      return k.merge(this[e] || (this[e] = {}), t);
    }
  };
  F._set("global", {
    defaultColor: "rgba(0,0,0,0.1)",
    defaultFontColor: "#666",
    defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
    defaultFontSize: 12,
    defaultFontStyle: "normal",
    defaultLineHeight: 1.2,
    showLines: true
  });
  var R = F;
  var j = k.valueOrDefault;
  var $ = {
    toLineHeight: function (e, t) {
      var n = ("" + e).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
      if (!n || n[1] === "normal") {
        return t * 1.2;
      }
      e = +n[2];
      switch (n[3]) {
        case "px":
          return e;
        case "%":
          e /= 100;
      }
      return t * e;
    },
    toPadding: function (e) {
      var t;
      var n;
      var i;
      var r;
      if (k.isObject(e)) {
        t = +e.top || 0;
        n = +e.right || 0;
        i = +e.bottom || 0;
        r = +e.left || 0;
      } else {
        t = n = i = r = +e || 0;
      }
      return {
        top: t,
        right: n,
        bottom: i,
        left: r,
        height: t + i,
        width: r + n
      };
    },
    _parseFont: function (e) {
      var t = R.global;
      var n = j(e.fontSize, t.defaultFontSize);
      var i = {
        family: j(e.fontFamily, t.defaultFontFamily),
        lineHeight: k.options.toLineHeight(j(e.lineHeight, t.defaultLineHeight), n),
        size: n,
        style: j(e.fontStyle, t.defaultFontStyle),
        weight: null,
        string: ""
      };
      i.string = function (e) {
        if (!e || k.isNullOrUndef(e.size) || k.isNullOrUndef(e.family)) {
          return null;
        } else {
          return (e.style ? e.style + " " : "") + (e.weight ? e.weight + " " : "") + e.size + "px " + e.family;
        }
      }(i);
      return i;
    },
    resolve: function (e, t, n, i) {
      var r;
      var o;
      var a;
      var s = true;
      r = 0;
      o = e.length;
      for (; r < o; ++r) {
        if ((a = e[r]) !== undefined && (t !== undefined && typeof a == "function" && (a = a(t), s = false), n !== undefined && k.isArray(a) && (a = a[n], s = false), a !== undefined)) {
          if (i && !s) {
            i.cacheable = false;
          }
          return a;
        }
      }
    }
  };
  var z = {
    _factorize: function (e) {
      var t;
      var n = [];
      var i = Math.sqrt(e);
      for (t = 1; t < i; t++) {
        if (e % t == 0) {
          n.push(t);
          n.push(e / t);
        }
      }
      if (i === (i | 0)) {
        n.push(i);
      }
      n.sort(function (e, t) {
        return e - t;
      }).pop();
      return n;
    },
    log10: Math.log10 || function (e) {
      var t = Math.log(e) * Math.LOG10E;
      var n = Math.round(t);
      if (e === Math.pow(10, n)) {
        return n;
      } else {
        return t;
      }
    }
  };
  var H = z;
  k.log10 = z.log10;
  var B = k;
  var q = A;
  var W = N;
  var U = $;
  var V = H;
  B.easing = q;
  B.canvas = W;
  B.options = U;
  B.math = V;
  B.rtl = {
    getRtlAdapter: function (e, t, n) {
      if (e) {
        return function (e, t) {
          return {
            x: function (n) {
              return e + e + t - n;
            },
            setWidth: function (e) {
              t = e;
            },
            textAlign: function (e) {
              if (e === "center") {
                return e;
              } else if (e === "right") {
                return "left";
              } else {
                return "right";
              }
            },
            xPlus: function (e, t) {
              return e - t;
            },
            leftForLtr: function (e, t) {
              return e - t;
            }
          };
        }(t, n);
      } else {
        return {
          x: function (e) {
            return e;
          },
          setWidth: function (e) {},
          textAlign: function (e) {
            return e;
          },
          xPlus: function (e, t) {
            return e + t;
          },
          leftForLtr: function (e, t) {
            return e;
          }
        };
      }
    },
    overrideTextDirection: function (e, t) {
      var n;
      var i;
      if (!(t !== "ltr" && t !== "rtl")) {
        i = [(n = e.canvas.style).getPropertyValue("direction"), n.getPropertyPriority("direction")];
        n.setProperty("direction", t, "important");
        e.prevTextDirection = i;
      }
    },
    restoreTextDirection: function (e) {
      var t = e.prevTextDirection;
      if (t !== undefined) {
        delete e.prevTextDirection;
        e.canvas.style.setProperty("direction", t[0], t[1]);
      }
    }
  };
  var Y = function (e) {
    B.extend(this, e);
    this.initialize.apply(this, arguments);
  };
  B.extend(Y.prototype, {
    _type: undefined,
    initialize: function () {
      this.hidden = false;
    },
    pivot: function () {
      var e = this;
      if (!e._view) {
        e._view = B.extend({}, e._model);
      }
      e._start = {};
      return e;
    },
    transition: function (e) {
      var t = this;
      var n = t._model;
      var i = t._start;
      var r = t._view;
      if (n && e !== 1) {
        if (!r) {
          r = t._view = {};
        }
        if (!i) {
          i = t._start = {};
        }
        (function (e, t, n, i) {
          var r;
          var o;
          var a;
          var s;
          var l;
          var c;
          var u;
          var d;
          var h;
          var f = Object.keys(n);
          r = 0;
          o = f.length;
          for (; r < o; ++r) {
            c = n[a = f[r]];
            if (!t.hasOwnProperty(a)) {
              t[a] = c;
            }
            if ((s = t[a]) !== c && a[0] !== "_") {
              if (!e.hasOwnProperty(a)) {
                e[a] = s;
              }
              if ((u = typeof c) == typeof (l = e[a])) {
                if (u === "string") {
                  if ((d = x(l)).valid && (h = x(c)).valid) {
                    t[a] = h.mix(d, i).rgbString();
                    continue;
                  }
                } else if (B.isFinite(l) && B.isFinite(c)) {
                  t[a] = l + (c - l) * i;
                  continue;
                }
              }
              t[a] = c;
            }
          }
        })(i, r, n, e);
        return t;
      } else {
        t._view = B.extend({}, n);
        t._start = null;
        return t;
      }
    },
    tooltipPosition: function () {
      return {
        x: this._model.x,
        y: this._model.y
      };
    },
    hasValue: function () {
      return B.isNumber(this._model.x) && B.isNumber(this._model.y);
    }
  });
  Y.extend = B.inherits;
  var X = Y;
  var G = X.extend({
    chart: null,
    currentStep: 0,
    numSteps: 60,
    easing: "",
    render: null,
    onAnimationProgress: null,
    onAnimationComplete: null
  });
  var K = G;
  Object.defineProperty(G.prototype, "animationObject", {
    get: function () {
      return this;
    }
  });
  Object.defineProperty(G.prototype, "chartInstance", {
    get: function () {
      return this.chart;
    },
    set: function (e) {
      this.chart = e;
    }
  });
  R._set("global", {
    animation: {
      duration: 1000,
      easing: "easeOutQuart",
      onProgress: B.noop,
      onComplete: B.noop
    }
  });
  var Q = {
    animations: [],
    request: null,
    addAnimation: function (e, t, n, i) {
      var r;
      var o;
      var a = this.animations;
      t.chart = e;
      t.startTime = Date.now();
      t.duration = n;
      if (!i) {
        e.animating = true;
      }
      r = 0;
      o = a.length;
      for (; r < o; ++r) {
        if (a[r].chart === e) {
          return void (a[r] = t);
        }
      }
      a.push(t);
      if (a.length === 1) {
        this.requestAnimationFrame();
      }
    },
    cancelAnimation: function (e) {
      var t = B.findIndex(this.animations, function (t) {
        return t.chart === e;
      });
      if (t !== -1) {
        this.animations.splice(t, 1);
        e.animating = false;
      }
    },
    requestAnimationFrame: function () {
      var e = this;
      if (e.request === null) {
        e.request = B.requestAnimFrame.call(window, function () {
          e.request = null;
          e.startDigest();
        });
      }
    },
    startDigest: function () {
      this.advance();
      if (this.animations.length > 0) {
        this.requestAnimationFrame();
      }
    },
    advance: function () {
      for (var e, t, n, i, r = this.animations, o = 0; o < r.length;) {
        t = (e = r[o]).chart;
        n = e.numSteps;
        i = Math.floor((Date.now() - e.startTime) / e.duration * n) + 1;
        e.currentStep = Math.min(i, n);
        B.callback(e.render, [t, e], t);
        B.callback(e.onAnimationProgress, [e], t);
        if (e.currentStep >= n) {
          B.callback(e.onAnimationComplete, [e], t);
          t.animating = false;
          r.splice(o, 1);
        } else {
          ++o;
        }
      }
    }
  };
  var Z = B.options.resolve;
  var J = ["push", "pop", "shift", "splice", "unshift"];
  function ee(e, t) {
    var n = e._chartjs;
    if (n) {
      var i = n.listeners;
      var r = i.indexOf(t);
      if (r !== -1) {
        i.splice(r, 1);
      }
      if (!(i.length > 0)) {
        J.forEach(function (t) {
          delete e[t];
        });
        delete e._chartjs;
      }
    }
  }
  var te = function (e, t) {
    this.initialize(e, t);
  };
  B.extend(te.prototype, {
    datasetElementType: null,
    dataElementType: null,
    _datasetElementOptions: ["backgroundColor", "borderCapStyle", "borderColor", "borderDash", "borderDashOffset", "borderJoinStyle", "borderWidth"],
    _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "pointStyle"],
    initialize: function (e, t) {
      var n = this;
      n.chart = e;
      n.index = t;
      n.linkScales();
      n.addElements();
      n._type = n.getMeta().type;
    },
    updateIndex: function (e) {
      this.index = e;
    },
    linkScales: function () {
      var e = this.getMeta();
      var t = this.chart;
      var n = t.scales;
      var i = this.getDataset();
      var r = t.options.scales;
      if (!(e.xAxisID !== null && e.xAxisID in n && !i.xAxisID)) {
        e.xAxisID = i.xAxisID || r.xAxes[0].id;
      }
      if (!(e.yAxisID !== null && e.yAxisID in n && !i.yAxisID)) {
        e.yAxisID = i.yAxisID || r.yAxes[0].id;
      }
    },
    getDataset: function () {
      return this.chart.data.datasets[this.index];
    },
    getMeta: function () {
      return this.chart.getDatasetMeta(this.index);
    },
    getScaleForId: function (e) {
      return this.chart.scales[e];
    },
    _getValueScaleId: function () {
      return this.getMeta().yAxisID;
    },
    _getIndexScaleId: function () {
      return this.getMeta().xAxisID;
    },
    _getValueScale: function () {
      return this.getScaleForId(this._getValueScaleId());
    },
    _getIndexScale: function () {
      return this.getScaleForId(this._getIndexScaleId());
    },
    reset: function () {
      this._update(true);
    },
    destroy: function () {
      if (this._data) {
        ee(this._data, this);
      }
    },
    createMetaDataset: function () {
      var e = this.datasetElementType;
      return e && new e({
        _chart: this.chart,
        _datasetIndex: this.index
      });
    },
    createMetaData: function (e) {
      var t = this.dataElementType;
      return t && new t({
        _chart: this.chart,
        _datasetIndex: this.index,
        _index: e
      });
    },
    addElements: function () {
      var e;
      var t;
      var n = this.getMeta();
      var i = this.getDataset().data || [];
      var r = n.data;
      e = 0;
      t = i.length;
      for (; e < t; ++e) {
        r[e] = r[e] || this.createMetaData(e);
      }
      n.dataset = n.dataset || this.createMetaDataset();
    },
    addElementAndReset: function (e) {
      var t = this.createMetaData(e);
      this.getMeta().data.splice(e, 0, t);
      this.updateElement(t, e, true);
    },
    buildOrUpdateElements: function () {
      var e;
      var t;
      var n = this;
      var i = n.getDataset();
      var r = i.data || (i.data = []);
      if (n._data !== r) {
        if (n._data) {
          ee(n._data, n);
        }
        if (r && Object.isExtensible(r)) {
          t = n;
          if ((e = r)._chartjs) {
            e._chartjs.listeners.push(t);
          } else {
            Object.defineProperty(e, "_chartjs", {
              configurable: true,
              enumerable: false,
              value: {
                listeners: [t]
              }
            });
            J.forEach(function (t) {
              var n = "onData" + t.charAt(0).toUpperCase() + t.slice(1);
              var i = e[t];
              Object.defineProperty(e, t, {
                configurable: true,
                enumerable: false,
                value: function () {
                  var t = Array.prototype.slice.call(arguments);
                  var r = i.apply(this, t);
                  B.each(e._chartjs.listeners, function (e) {
                    if (typeof e[n] == "function") {
                      e[n].apply(e, t);
                    }
                  });
                  return r;
                }
              });
            });
          }
        }
        n._data = r;
      }
      n.resyncElements();
    },
    _configure: function () {
      this._config = B.merge(Object.create(null), [this.chart.options.datasets[this._type], this.getDataset()], {
        merger: function (e, t, n) {
          if (e !== "_meta" && e !== "data") {
            B._merger(e, t, n);
          }
        }
      });
    },
    _update: function (e) {
      this._configure();
      this._cachedDataOpts = null;
      this.update(e);
    },
    update: B.noop,
    transition: function (e) {
      for (var t = this.getMeta(), n = t.data || [], i = n.length, r = 0; r < i; ++r) {
        n[r].transition(e);
      }
      if (t.dataset) {
        t.dataset.transition(e);
      }
    },
    draw: function () {
      var e = this.getMeta();
      var t = e.data || [];
      var n = t.length;
      var i = 0;
      for (e.dataset && e.dataset.draw(); i < n; ++i) {
        t[i].draw();
      }
    },
    getStyle: function (e) {
      var t;
      var n = this.getMeta();
      var i = n.dataset;
      this._configure();
      if (i && e === undefined) {
        t = this._resolveDatasetElementOptions(i || {});
      } else {
        e = e || 0;
        t = this._resolveDataElementOptions(n.data[e] || {}, e);
      }
      if (!(t.fill !== false && t.fill !== null)) {
        t.backgroundColor = t.borderColor;
      }
      return t;
    },
    _resolveDatasetElementOptions: function (e, t) {
      var n;
      var i;
      var r;
      var o;
      var a = this;
      var s = a.chart;
      var l = a._config;
      var c = e.custom || {};
      var u = s.options.elements[a.datasetElementType.prototype._type] || {};
      var d = a._datasetElementOptions;
      var h = {};
      var f = {
        chart: s,
        dataset: a.getDataset(),
        datasetIndex: a.index,
        hover: t
      };
      n = 0;
      i = d.length;
      for (; n < i; ++n) {
        r = d[n];
        o = t ? "hover" + r.charAt(0).toUpperCase() + r.slice(1) : r;
        h[r] = Z([c[o], l[o], u[o]], f);
      }
      return h;
    },
    _resolveDataElementOptions: function (e, t) {
      var n = this;
      var i = e && e.custom;
      var r = n._cachedDataOpts;
      if (r && !i) {
        return r;
      }
      var o;
      var a;
      var s;
      var l;
      var c = n.chart;
      var u = n._config;
      var d = c.options.elements[n.dataElementType.prototype._type] || {};
      var h = n._dataElementOptions;
      var f = {};
      var p = {
        chart: c,
        dataIndex: t,
        dataset: n.getDataset(),
        datasetIndex: n.index
      };
      var g = {
        cacheable: !i
      };
      i = i || {};
      if (B.isArray(h)) {
        a = 0;
        s = h.length;
        a = 0;
        s = h.length;
        for (; a < s; ++a) {
          f[l = h[a]] = Z([i[l], u[l], d[l]], p, t, g);
        }
      } else {
        a = 0;
        s = (o = Object.keys(h)).length;
        a = 0;
        s = (o = Object.keys(h)).length;
        for (; a < s; ++a) {
          f[l = o[a]] = Z([i[l], u[h[l]], u[l], d[l]], p, t, g);
        }
      }
      if (g.cacheable) {
        n._cachedDataOpts = Object.freeze(f);
      }
      return f;
    },
    removeHoverStyle: function (e) {
      B.merge(e._model, e.$previousStyle || {});
      delete e.$previousStyle;
    },
    setHoverStyle: function (e) {
      var t = this.chart.data.datasets[e._datasetIndex];
      var n = e._index;
      var i = e.custom || {};
      var r = e._model;
      var o = B.getHoverColor;
      e.$previousStyle = {
        backgroundColor: r.backgroundColor,
        borderColor: r.borderColor,
        borderWidth: r.borderWidth
      };
      r.backgroundColor = Z([i.hoverBackgroundColor, t.hoverBackgroundColor, o(r.backgroundColor)], undefined, n);
      r.borderColor = Z([i.hoverBorderColor, t.hoverBorderColor, o(r.borderColor)], undefined, n);
      r.borderWidth = Z([i.hoverBorderWidth, t.hoverBorderWidth, r.borderWidth], undefined, n);
    },
    _removeDatasetHoverStyle: function () {
      var e = this.getMeta().dataset;
      if (e) {
        this.removeHoverStyle(e);
      }
    },
    _setDatasetHoverStyle: function () {
      var e;
      var t;
      var n;
      var i;
      var r;
      var o;
      var a = this.getMeta().dataset;
      var s = {};
      if (a) {
        o = a._model;
        r = this._resolveDatasetElementOptions(a, true);
        e = 0;
        t = (i = Object.keys(r)).length;
        for (; e < t; ++e) {
          s[n = i[e]] = o[n];
          o[n] = r[n];
        }
        a.$previousStyle = s;
      }
    },
    resyncElements: function () {
      var e = this.getMeta();
      var t = this.getDataset().data;
      var n = e.data.length;
      var i = t.length;
      if (i < n) {
        e.data.splice(i, n - i);
      } else if (i > n) {
        this.insertElements(n, i - n);
      }
    },
    insertElements: function (e, t) {
      for (var n = 0; n < t; ++n) {
        this.addElementAndReset(e + n);
      }
    },
    onDataPush: function () {
      var e = arguments.length;
      this.insertElements(this.getDataset().data.length - e, e);
    },
    onDataPop: function () {
      this.getMeta().data.pop();
    },
    onDataShift: function () {
      this.getMeta().data.shift();
    },
    onDataSplice: function (e, t) {
      this.getMeta().data.splice(e, t);
      this.insertElements(e, arguments.length - 2);
    },
    onDataUnshift: function () {
      this.insertElements(0, arguments.length);
    }
  });
  te.extend = B.inherits;
  var ne = te;
  var ie = Math.PI * 2;
  function re(e, t) {
    var n = t.startAngle;
    var i = t.endAngle;
    var r = t.pixelMargin;
    var o = r / t.outerRadius;
    var a = t.x;
    var s = t.y;
    e.beginPath();
    e.arc(a, s, t.outerRadius, n - o, i + o);
    if (t.innerRadius > r) {
      o = r / t.innerRadius;
      e.arc(a, s, t.innerRadius - r, i + o, n - o, true);
    } else {
      e.arc(a, s, r, i + Math.PI / 2, n - Math.PI / 2);
    }
    e.closePath();
    e.clip();
  }
  R._set("global", {
    elements: {
      arc: {
        backgroundColor: R.global.defaultColor,
        borderColor: "#fff",
        borderWidth: 2,
        borderAlign: "center"
      }
    }
  });
  var oe = X.extend({
    _type: "arc",
    inLabelRange: function (e) {
      var t = this._view;
      return !!t && Math.pow(e - t.x, 2) < Math.pow(t.radius + t.hoverRadius, 2);
    },
    inRange: function (e, t) {
      var n = this._view;
      if (n) {
        for (var i = B.getAngleFromPoint(n, {
            x: e,
            y: t
          }), r = i.angle, o = i.distance, a = n.startAngle, s = n.endAngle; s < a;) {
          s += ie;
        }
        for (; r > s;) {
          r -= ie;
        }
        for (; r < a;) {
          r += ie;
        }
        var l = r >= a && r <= s;
        var c = o >= n.innerRadius && o <= n.outerRadius;
        return l && c;
      }
      return false;
    },
    getCenterPoint: function () {
      var e = this._view;
      var t = (e.startAngle + e.endAngle) / 2;
      var n = (e.innerRadius + e.outerRadius) / 2;
      return {
        x: e.x + Math.cos(t) * n,
        y: e.y + Math.sin(t) * n
      };
    },
    getArea: function () {
      var e = this._view;
      return Math.PI * ((e.endAngle - e.startAngle) / (Math.PI * 2)) * (Math.pow(e.outerRadius, 2) - Math.pow(e.innerRadius, 2));
    },
    tooltipPosition: function () {
      var e = this._view;
      var t = e.startAngle + (e.endAngle - e.startAngle) / 2;
      var n = (e.outerRadius - e.innerRadius) / 2 + e.innerRadius;
      return {
        x: e.x + Math.cos(t) * n,
        y: e.y + Math.sin(t) * n
      };
    },
    draw: function () {
      var e;
      var t = this._chart.ctx;
      var n = this._view;
      var i = n.borderAlign === "inner" ? 0.33 : 0;
      var r = {
        x: n.x,
        y: n.y,
        innerRadius: n.innerRadius,
        outerRadius: Math.max(n.outerRadius - i, 0),
        pixelMargin: i,
        startAngle: n.startAngle,
        endAngle: n.endAngle,
        fullCircles: Math.floor(n.circumference / ie)
      };
      t.save();
      t.fillStyle = n.backgroundColor;
      t.strokeStyle = n.borderColor;
      if (r.fullCircles) {
        r.endAngle = r.startAngle + ie;
        t.beginPath();
        t.arc(r.x, r.y, r.outerRadius, r.startAngle, r.endAngle);
        t.arc(r.x, r.y, r.innerRadius, r.endAngle, r.startAngle, true);
        t.closePath();
        e = 0;
        for (; e < r.fullCircles; ++e) {
          t.fill();
        }
        r.endAngle = r.startAngle + n.circumference % ie;
      }
      t.beginPath();
      t.arc(r.x, r.y, r.outerRadius, r.startAngle, r.endAngle);
      t.arc(r.x, r.y, r.innerRadius, r.endAngle, r.startAngle, true);
      t.closePath();
      t.fill();
      if (n.borderWidth) {
        (function (e, t, n) {
          var i = t.borderAlign === "inner";
          if (i) {
            e.lineWidth = t.borderWidth * 2;
            e.lineJoin = "round";
          } else {
            e.lineWidth = t.borderWidth;
            e.lineJoin = "bevel";
          }
          if (n.fullCircles) {
            (function (e, t, n, i) {
              var r;
              var o = n.endAngle;
              if (i) {
                n.endAngle = n.startAngle + ie;
                re(e, n);
                n.endAngle = o;
                if (n.endAngle === n.startAngle && n.fullCircles) {
                  n.endAngle += ie;
                  n.fullCircles--;
                }
              }
              e.beginPath();
              e.arc(n.x, n.y, n.innerRadius, n.startAngle + ie, n.startAngle, true);
              r = 0;
              for (; r < n.fullCircles; ++r) {
                e.stroke();
              }
              e.beginPath();
              e.arc(n.x, n.y, t.outerRadius, n.startAngle, n.startAngle + ie);
              r = 0;
              for (; r < n.fullCircles; ++r) {
                e.stroke();
              }
            })(e, t, n, i);
          }
          if (i) {
            re(e, n);
          }
          e.beginPath();
          e.arc(n.x, n.y, t.outerRadius, n.startAngle, n.endAngle);
          e.arc(n.x, n.y, n.innerRadius, n.endAngle, n.startAngle, true);
          e.closePath();
          e.stroke();
        })(t, n, r);
      }
      t.restore();
    }
  });
  var ae = B.valueOrDefault;
  var se = R.global.defaultColor;
  R._set("global", {
    elements: {
      line: {
        tension: 0.4,
        backgroundColor: se,
        borderWidth: 3,
        borderColor: se,
        borderCapStyle: "butt",
        borderDash: [],
        borderDashOffset: 0,
        borderJoinStyle: "miter",
        capBezierPoints: true,
        fill: true
      }
    }
  });
  var le = X.extend({
    _type: "line",
    draw: function () {
      var e;
      var t;
      var n;
      var i = this;
      var r = i._view;
      var o = i._chart.ctx;
      var a = r.spanGaps;
      var s = i._children.slice();
      var l = R.global;
      var c = l.elements.line;
      var u = -1;
      var d = i._loop;
      if (s.length) {
        if (i._loop) {
          for (e = 0; e < s.length; ++e) {
            t = B.previousItem(s, e);
            if (!s[e]._view.skip && t._view.skip) {
              s = s.slice(e).concat(s.slice(0, e));
              d = a;
              break;
            }
          }
          if (d) {
            s.push(s[0]);
          }
        }
        o.save();
        o.lineCap = r.borderCapStyle || c.borderCapStyle;
        if (o.setLineDash) {
          o.setLineDash(r.borderDash || c.borderDash);
        }
        o.lineDashOffset = ae(r.borderDashOffset, c.borderDashOffset);
        o.lineJoin = r.borderJoinStyle || c.borderJoinStyle;
        o.lineWidth = ae(r.borderWidth, c.borderWidth);
        o.strokeStyle = r.borderColor || l.defaultColor;
        o.beginPath();
        if (!(n = s[0]._view).skip) {
          o.moveTo(n.x, n.y);
          u = 0;
        }
        e = 1;
        for (; e < s.length; ++e) {
          n = s[e]._view;
          t = u === -1 ? B.previousItem(s, e) : s[u];
          if (!n.skip) {
            if (u !== e - 1 && !a || u === -1) {
              o.moveTo(n.x, n.y);
            } else {
              B.canvas.lineTo(o, t._view, n);
            }
            u = e;
          }
        }
        if (d) {
          o.closePath();
        }
        o.stroke();
        o.restore();
      }
    }
  });
  var ce = B.valueOrDefault;
  var ue = R.global.defaultColor;
  function de(e) {
    var t = this._view;
    return !!t && Math.abs(e - t.x) < t.radius + t.hitRadius;
  }
  R._set("global", {
    elements: {
      point: {
        radius: 3,
        pointStyle: "circle",
        backgroundColor: ue,
        borderColor: ue,
        borderWidth: 1,
        hitRadius: 1,
        hoverRadius: 4,
        hoverBorderWidth: 1
      }
    }
  });
  var he = X.extend({
    _type: "point",
    inRange: function (e, t) {
      var n = this._view;
      return !!n && Math.pow(e - n.x, 2) + Math.pow(t - n.y, 2) < Math.pow(n.hitRadius + n.radius, 2);
    },
    inLabelRange: de,
    inXRange: de,
    inYRange: function (e) {
      var t = this._view;
      return !!t && Math.abs(e - t.y) < t.radius + t.hitRadius;
    },
    getCenterPoint: function () {
      var e = this._view;
      return {
        x: e.x,
        y: e.y
      };
    },
    getArea: function () {
      return Math.PI * Math.pow(this._view.radius, 2);
    },
    tooltipPosition: function () {
      var e = this._view;
      return {
        x: e.x,
        y: e.y,
        padding: e.radius + e.borderWidth
      };
    },
    draw: function (e) {
      var t = this._view;
      var n = this._chart.ctx;
      var i = t.pointStyle;
      var r = t.rotation;
      var o = t.radius;
      var a = t.x;
      var s = t.y;
      var l = R.global;
      var c = l.defaultColor;
      if (!t.skip) {
        if (e === undefined || B.canvas._isPointInArea(t, e)) {
          n.strokeStyle = t.borderColor || c;
          n.lineWidth = ce(t.borderWidth, l.elements.point.borderWidth);
          n.fillStyle = t.backgroundColor || c;
          B.canvas.drawPoint(n, i, o, a, s, r);
        }
      }
    }
  });
  var fe = R.global.defaultColor;
  function pe(e) {
    return e && e.width !== undefined;
  }
  function ge(e) {
    var t;
    var n;
    var i;
    var r;
    var o;
    if (pe(e)) {
      o = e.width / 2;
      t = e.x - o;
      n = e.x + o;
      i = Math.min(e.y, e.base);
      r = Math.max(e.y, e.base);
    } else {
      o = e.height / 2;
      t = Math.min(e.x, e.base);
      n = Math.max(e.x, e.base);
      i = e.y - o;
      r = e.y + o;
    }
    return {
      left: t,
      top: i,
      right: n,
      bottom: r
    };
  }
  function me(e, t, n) {
    if (e === t) {
      return n;
    } else if (e === n) {
      return t;
    } else {
      return e;
    }
  }
  function ve(e, t, n) {
    var i = t === null;
    var r = n === null;
    var o = !(!e || i && r) && ge(e);
    return o && (i || t >= o.left && t <= o.right) && (r || n >= o.top && n <= o.bottom);
  }
  R._set("global", {
    elements: {
      rectangle: {
        backgroundColor: fe,
        borderColor: fe,
        borderSkipped: "bottom",
        borderWidth: 0
      }
    }
  });
  var ye = X.extend({
    _type: "rectangle",
    draw: function () {
      var e = this._chart.ctx;
      var t = this._view;
      var n = function (e) {
        var t = ge(e);
        var n = t.right - t.left;
        var i = t.bottom - t.top;
        var r = function (e, t, n) {
          var i;
          var r;
          var o;
          var a;
          var s = e.borderWidth;
          var l = function (e) {
            var t = e.borderSkipped;
            var n = {};
            if (t) {
              if (e.horizontal) {
                if (e.base > e.x) {
                  t = me(t, "left", "right");
                }
              } else if (e.base < e.y) {
                t = me(t, "bottom", "top");
              }
              n[t] = true;
              return n;
            } else {
              return n;
            }
          }(e);
          if (B.isObject(s)) {
            i = +s.top || 0;
            r = +s.right || 0;
            o = +s.bottom || 0;
            a = +s.left || 0;
          } else {
            i = r = o = a = +s || 0;
          }
          return {
            t: l.top || i < 0 ? 0 : i > n ? n : i,
            r: l.right || r < 0 ? 0 : r > t ? t : r,
            b: l.bottom || o < 0 ? 0 : o > n ? n : o,
            l: l.left || a < 0 ? 0 : a > t ? t : a
          };
        }(e, n / 2, i / 2);
        return {
          outer: {
            x: t.left,
            y: t.top,
            w: n,
            h: i
          },
          inner: {
            x: t.left + r.l,
            y: t.top + r.t,
            w: n - r.l - r.r,
            h: i - r.t - r.b
          }
        };
      }(t);
      var i = n.outer;
      var r = n.inner;
      e.fillStyle = t.backgroundColor;
      e.fillRect(i.x, i.y, i.w, i.h);
      if (!(i.w === r.w && i.h === r.h)) {
        e.save();
        e.beginPath();
        e.rect(i.x, i.y, i.w, i.h);
        e.clip();
        e.fillStyle = t.borderColor;
        e.rect(r.x, r.y, r.w, r.h);
        e.fill("evenodd");
        e.restore();
      }
    },
    height: function () {
      var e = this._view;
      return e.base - e.y;
    },
    inRange: function (e, t) {
      return ve(this._view, e, t);
    },
    inLabelRange: function (e, t) {
      var n = this._view;
      if (pe(n)) {
        return ve(n, e, null);
      } else {
        return ve(n, null, t);
      }
    },
    inXRange: function (e) {
      return ve(this._view, e, null);
    },
    inYRange: function (e) {
      return ve(this._view, null, e);
    },
    getCenterPoint: function () {
      var e;
      var t;
      var n = this._view;
      if (pe(n)) {
        e = n.x;
        t = (n.y + n.base) / 2;
      } else {
        e = (n.x + n.base) / 2;
        t = n.y;
      }
      return {
        x: e,
        y: t
      };
    },
    getArea: function () {
      var e = this._view;
      if (pe(e)) {
        return e.width * Math.abs(e.y - e.base);
      } else {
        return e.height * Math.abs(e.x - e.base);
      }
    },
    tooltipPosition: function () {
      var e = this._view;
      return {
        x: e.x,
        y: e.y
      };
    }
  });
  var be = {};
  var we = oe;
  var xe = le;
  var _e = he;
  var Ce = ye;
  be.Arc = we;
  be.Line = xe;
  be.Point = _e;
  be.Rectangle = Ce;
  var Se = B._deprecated;
  var ke = B.valueOrDefault;
  R._set("bar", {
    hover: {
      mode: "label"
    },
    scales: {
      xAxes: [{
        type: "category",
        offset: true,
        gridLines: {
          offsetGridLines: true
        }
      }],
      yAxes: [{
        type: "linear"
      }]
    }
  });
  R._set("global", {
    datasets: {
      bar: {
        categoryPercentage: 0.8,
        barPercentage: 0.9
      }
    }
  });
  var Te = ne.extend({
    dataElementType: be.Rectangle,
    _dataElementOptions: ["backgroundColor", "borderColor", "borderSkipped", "borderWidth", "barPercentage", "barThickness", "categoryPercentage", "maxBarThickness", "minBarLength"],
    initialize: function () {
      var e;
      var t;
      var n = this;
      ne.prototype.initialize.apply(n, arguments);
      (e = n.getMeta()).stack = n.getDataset().stack;
      e.bar = true;
      t = n._getIndexScale().options;
      Se("bar chart", t.barPercentage, "scales.[x/y]Axes.barPercentage", "dataset.barPercentage");
      Se("bar chart", t.barThickness, "scales.[x/y]Axes.barThickness", "dataset.barThickness");
      Se("bar chart", t.categoryPercentage, "scales.[x/y]Axes.categoryPercentage", "dataset.categoryPercentage");
      Se("bar chart", n._getValueScale().options.minBarLength, "scales.[x/y]Axes.minBarLength", "dataset.minBarLength");
      Se("bar chart", t.maxBarThickness, "scales.[x/y]Axes.maxBarThickness", "dataset.maxBarThickness");
    },
    update: function (e) {
      var t;
      var n;
      var i = this.getMeta().data;
      this._ruler = this.getRuler();
      t = 0;
      n = i.length;
      for (; t < n; ++t) {
        this.updateElement(i[t], t, e);
      }
    },
    updateElement: function (e, t, n) {
      var i = this;
      var r = i.getMeta();
      var o = i.getDataset();
      var a = i._resolveDataElementOptions(e, t);
      e._xScale = i.getScaleForId(r.xAxisID);
      e._yScale = i.getScaleForId(r.yAxisID);
      e._datasetIndex = i.index;
      e._index = t;
      e._model = {
        backgroundColor: a.backgroundColor,
        borderColor: a.borderColor,
        borderSkipped: a.borderSkipped,
        borderWidth: a.borderWidth,
        datasetLabel: o.label,
        label: i.chart.data.labels[t]
      };
      if (B.isArray(o.data[t])) {
        e._model.borderSkipped = null;
      }
      i._updateElementGeometry(e, t, n, a);
      e.pivot();
    },
    _updateElementGeometry: function (e, t, n, i) {
      var r = this;
      var o = e._model;
      var a = r._getValueScale();
      var s = a.getBasePixel();
      var l = a.isHorizontal();
      var c = r._ruler || r.getRuler();
      var u = r.calculateBarValuePixels(r.index, t, i);
      var d = r.calculateBarIndexPixels(r.index, t, c, i);
      o.horizontal = l;
      o.base = n ? s : u.base;
      o.x = l ? n ? s : u.head : d.center;
      o.y = l ? d.center : n ? s : u.head;
      o.height = l ? d.size : undefined;
      o.width = l ? undefined : d.size;
    },
    _getStacks: function (e) {
      var t;
      var n;
      var i = this._getIndexScale();
      var r = i._getMatchingVisibleMetas(this._type);
      var o = i.options.stacked;
      var a = r.length;
      var s = [];
      for (t = 0; t < a && (n = r[t], (o === false || s.indexOf(n.stack) === -1 || o === undefined && n.stack === undefined) && s.push(n.stack), n.index !== e); ++t);
      return s;
    },
    getStackCount: function () {
      return this._getStacks().length;
    },
    getStackIndex: function (e, t) {
      var n = this._getStacks(e);
      var i = t !== undefined ? n.indexOf(t) : -1;
      if (i === -1) {
        return n.length - 1;
      } else {
        return i;
      }
    },
    getRuler: function () {
      var e;
      var t;
      var n = this._getIndexScale();
      var i = [];
      e = 0;
      t = this.getMeta().data.length;
      for (; e < t; ++e) {
        i.push(n.getPixelForValue(null, e, this.index));
      }
      return {
        pixels: i,
        start: n._startPixel,
        end: n._endPixel,
        stackCount: this.getStackCount(),
        scale: n
      };
    },
    calculateBarValuePixels: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u = this.chart;
      var d = this._getValueScale();
      var h = d.isHorizontal();
      var f = u.data.datasets;
      var p = d._getMatchingVisibleMetas(this._type);
      var g = d._parseValue(f[e].data[t]);
      var m = n.minBarLength;
      var v = d.options.stacked;
      var y = this.getMeta().stack;
      var b = g.start === undefined ? 0 : g.max >= 0 && g.min >= 0 ? g.min : g.max;
      var w = g.start === undefined ? g.end : g.max >= 0 && g.min >= 0 ? g.max - g.min : g.min - g.max;
      var x = p.length;
      if (v || v === undefined && y !== undefined) {
        for (i = 0; i < x && (r = p[i]).index !== e; ++i) {
          if (r.stack === y) {
            o = (c = d._parseValue(f[r.index].data[t])).start === undefined ? c.end : c.min >= 0 && c.max >= 0 ? c.max : c.min;
            if (g.min < 0 && o < 0 || g.max >= 0 && o > 0) {
              b += o;
            }
          }
        }
      }
      a = d.getPixelForValue(b);
      l = (s = d.getPixelForValue(b + w)) - a;
      if (m !== undefined && Math.abs(l) < m) {
        l = m;
        s = w >= 0 && !h || w < 0 && h ? a - m : a + m;
      }
      return {
        size: l,
        base: a,
        head: s,
        center: s + l / 2
      };
    },
    calculateBarIndexPixels: function (e, t, n, i) {
      var r = i.barThickness === "flex" ? function (e, t, n) {
        var i;
        var r = t.pixels;
        var o = r[e];
        var a = e > 0 ? r[e - 1] : null;
        var s = e < r.length - 1 ? r[e + 1] : null;
        var l = n.categoryPercentage;
        if (a === null) {
          a = o - (s === null ? t.end - t.start : s - o);
        }
        if (s === null) {
          s = o + o - a;
        }
        i = o - (o - Math.min(a, s)) / 2 * l;
        return {
          chunk: Math.abs(s - a) / 2 * l / t.stackCount,
          ratio: n.barPercentage,
          start: i
        };
      }(t, n, i) : function (e, t, n) {
        var i;
        var r;
        var o = n.barThickness;
        var a = t.stackCount;
        var s = t.pixels[e];
        var l = B.isNullOrUndef(o) ? function (e, t) {
          var n;
          var i;
          var r;
          var o;
          var a = e._length;
          r = 1;
          o = t.length;
          for (; r < o; ++r) {
            a = Math.min(a, Math.abs(t[r] - t[r - 1]));
          }
          r = 0;
          o = e.getTicks().length;
          for (; r < o; ++r) {
            i = e.getPixelForTick(r);
            a = r > 0 ? Math.min(a, Math.abs(i - n)) : a;
            n = i;
          }
          return a;
        }(t.scale, t.pixels) : -1;
        if (B.isNullOrUndef(o)) {
          i = l * n.categoryPercentage;
          r = n.barPercentage;
        } else {
          i = o * a;
          r = 1;
        }
        return {
          chunk: i / a,
          ratio: r,
          start: s - i / 2
        };
      }(t, n, i);
      var o = this.getStackIndex(e, this.getMeta().stack);
      var a = r.start + r.chunk * o + r.chunk / 2;
      var s = Math.min(ke(i.maxBarThickness, 1 / 0), r.chunk * r.ratio);
      return {
        base: a - s / 2,
        head: a + s / 2,
        center: a,
        size: s
      };
    },
    draw: function () {
      var e = this.chart;
      var t = this._getValueScale();
      var n = this.getMeta().data;
      var i = this.getDataset();
      var r = n.length;
      var o = 0;
      for (B.canvas.clipArea(e.ctx, e.chartArea); o < r; ++o) {
        var a = t._parseValue(i.data[o]);
        if (!(isNaN(a.min) || isNaN(a.max))) {
          n[o].draw();
        }
      }
      B.canvas.unclipArea(e.ctx);
    },
    _resolveDataElementOptions: function () {
      var e = this;
      var t = B.extend({}, ne.prototype._resolveDataElementOptions.apply(e, arguments));
      var n = e._getIndexScale().options;
      var i = e._getValueScale().options;
      t.barPercentage = ke(n.barPercentage, t.barPercentage);
      t.barThickness = ke(n.barThickness, t.barThickness);
      t.categoryPercentage = ke(n.categoryPercentage, t.categoryPercentage);
      t.maxBarThickness = ke(n.maxBarThickness, t.maxBarThickness);
      t.minBarLength = ke(i.minBarLength, t.minBarLength);
      return t;
    }
  });
  var Ae = B.valueOrDefault;
  var De = B.options.resolve;
  R._set("bubble", {
    hover: {
      mode: "single"
    },
    scales: {
      xAxes: [{
        type: "linear",
        position: "bottom",
        id: "x-axis-0"
      }],
      yAxes: [{
        type: "linear",
        position: "left",
        id: "y-axis-0"
      }]
    },
    tooltips: {
      callbacks: {
        title: function () {
          return "";
        },
        label: function (e, t) {
          var n = t.datasets[e.datasetIndex].label || "";
          var i = t.datasets[e.datasetIndex].data[e.index];
          return n + ": (" + e.xLabel + ", " + e.yLabel + ", " + i.r + ")";
        }
      }
    }
  });
  var Ee = ne.extend({
    dataElementType: be.Point,
    _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth", "hoverRadius", "hitRadius", "pointStyle", "rotation"],
    update: function (e) {
      var t = this;
      var n = t.getMeta().data;
      B.each(n, function (n, i) {
        t.updateElement(n, i, e);
      });
    },
    updateElement: function (e, t, n) {
      var i = this;
      var r = i.getMeta();
      var o = e.custom || {};
      var a = i.getScaleForId(r.xAxisID);
      var s = i.getScaleForId(r.yAxisID);
      var l = i._resolveDataElementOptions(e, t);
      var c = i.getDataset().data[t];
      var u = i.index;
      var d = n ? a.getPixelForDecimal(0.5) : a.getPixelForValue(typeof c == "object" ? c : NaN, t, u);
      var h = n ? s.getBasePixel() : s.getPixelForValue(c, t, u);
      e._xScale = a;
      e._yScale = s;
      e._options = l;
      e._datasetIndex = u;
      e._index = t;
      e._model = {
        backgroundColor: l.backgroundColor,
        borderColor: l.borderColor,
        borderWidth: l.borderWidth,
        hitRadius: l.hitRadius,
        pointStyle: l.pointStyle,
        rotation: l.rotation,
        radius: n ? 0 : l.radius,
        skip: o.skip || isNaN(d) || isNaN(h),
        x: d,
        y: h
      };
      e.pivot();
    },
    setHoverStyle: function (e) {
      var t = e._model;
      var n = e._options;
      var i = B.getHoverColor;
      e.$previousStyle = {
        backgroundColor: t.backgroundColor,
        borderColor: t.borderColor,
        borderWidth: t.borderWidth,
        radius: t.radius
      };
      t.backgroundColor = Ae(n.hoverBackgroundColor, i(n.backgroundColor));
      t.borderColor = Ae(n.hoverBorderColor, i(n.borderColor));
      t.borderWidth = Ae(n.hoverBorderWidth, n.borderWidth);
      t.radius = n.radius + n.hoverRadius;
    },
    _resolveDataElementOptions: function (e, t) {
      var n = this;
      var i = n.chart;
      var r = n.getDataset();
      var o = e.custom || {};
      var a = r.data[t] || {};
      var s = ne.prototype._resolveDataElementOptions.apply(n, arguments);
      var l = {
        chart: i,
        dataIndex: t,
        dataset: r,
        datasetIndex: n.index
      };
      if (n._cachedDataOpts === s) {
        s = B.extend({}, s);
      }
      s.radius = De([o.radius, a.r, n._config.radius, i.options.elements.point.radius], l, t);
      return s;
    }
  });
  var Oe = B.valueOrDefault;
  var Me = Math.PI;
  var Ie = Me * 2;
  var Pe = Me / 2;
  R._set("doughnut", {
    animation: {
      animateRotate: true,
      animateScale: false
    },
    hover: {
      mode: "single"
    },
    legendCallback: function (e) {
      var t;
      var n;
      var i;
      var r = document.createElement("ul");
      var o = e.data;
      var a = o.datasets;
      var s = o.labels;
      r.setAttribute("class", e.id + "-legend");
      if (a.length) {
        t = 0;
        n = a[0].data.length;
        t = 0;
        n = a[0].data.length;
        for (; t < n; ++t) {
          (i = r.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor = a[0].backgroundColor[t];
          if (s[t]) {
            i.appendChild(document.createTextNode(s[t]));
          }
        }
      }
      return r.outerHTML;
    },
    legend: {
      labels: {
        generateLabels: function (e) {
          var t = e.data;
          if (t.labels.length && t.datasets.length) {
            return t.labels.map(function (n, i) {
              var r = e.getDatasetMeta(0);
              var o = r.controller.getStyle(i);
              return {
                text: n,
                fillStyle: o.backgroundColor,
                strokeStyle: o.borderColor,
                lineWidth: o.borderWidth,
                hidden: isNaN(t.datasets[0].data[i]) || r.data[i].hidden,
                index: i
              };
            });
          } else {
            return [];
          }
        }
      },
      onClick: function (e, t) {
        var n;
        var i;
        var r;
        var o = t.index;
        var a = this.chart;
        n = 0;
        i = (a.data.datasets || []).length;
        for (; n < i; ++n) {
          if ((r = a.getDatasetMeta(n)).data[o]) {
            r.data[o].hidden = !r.data[o].hidden;
          }
        }
        a.update();
      }
    },
    cutoutPercentage: 50,
    rotation: -Pe,
    circumference: Ie,
    tooltips: {
      callbacks: {
        title: function () {
          return "";
        },
        label: function (e, t) {
          var n = t.labels[e.index];
          var i = ": " + t.datasets[e.datasetIndex].data[e.index];
          if (B.isArray(n)) {
            (n = n.slice())[0] += i;
          } else {
            n += i;
          }
          return n;
        }
      }
    }
  });
  var Le = ne.extend({
    dataElementType: be.Arc,
    linkScales: B.noop,
    _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "borderAlign", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth"],
    getRingIndex: function (e) {
      for (var t = 0, n = 0; n < e; ++n) {
        if (this.chart.isDatasetVisible(n)) {
          ++t;
        }
      }
      return t;
    },
    update: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o = this;
      var a = o.chart;
      var s = a.chartArea;
      var l = a.options;
      var c = 1;
      var u = 1;
      var d = 0;
      var h = 0;
      var f = o.getMeta();
      var p = f.data;
      var g = l.cutoutPercentage / 100 || 0;
      var m = l.circumference;
      var v = o._getRingWeight(o.index);
      if (m < Ie) {
        var y = l.rotation % Ie;
        var b = (y += y >= Me ? -Ie : y < -Me ? Ie : 0) + m;
        var w = Math.cos(y);
        var x = Math.sin(y);
        var _ = Math.cos(b);
        var C = Math.sin(b);
        var S = y <= 0 && b >= 0 || b >= Ie;
        var k = y <= Pe && b >= Pe || b >= Ie + Pe;
        var T = y <= -Pe && b >= -Pe || b >= Me + Pe;
        var A = y === -Me || b >= Me ? -1 : Math.min(w, w * g, _, _ * g);
        var D = T ? -1 : Math.min(x, x * g, C, C * g);
        var E = S ? 1 : Math.max(w, w * g, _, _ * g);
        var O = k ? 1 : Math.max(x, x * g, C, C * g);
        c = (E - A) / 2;
        u = (O - D) / 2;
        d = -(E + A) / 2;
        h = -(O + D) / 2;
      }
      i = 0;
      r = p.length;
      for (; i < r; ++i) {
        p[i]._options = o._resolveDataElementOptions(p[i], i);
      }
      a.borderWidth = o.getMaxBorderWidth();
      t = (s.right - s.left - a.borderWidth) / c;
      n = (s.bottom - s.top - a.borderWidth) / u;
      a.outerRadius = Math.max(Math.min(t, n) / 2, 0);
      a.innerRadius = Math.max(a.outerRadius * g, 0);
      a.radiusLength = (a.outerRadius - a.innerRadius) / (o._getVisibleDatasetWeightTotal() || 1);
      a.offsetX = d * a.outerRadius;
      a.offsetY = h * a.outerRadius;
      f.total = o.calculateTotal();
      o.outerRadius = a.outerRadius - a.radiusLength * o._getRingWeightOffset(o.index);
      o.innerRadius = Math.max(o.outerRadius - a.radiusLength * v, 0);
      i = 0;
      r = p.length;
      for (; i < r; ++i) {
        o.updateElement(p[i], i, e);
      }
    },
    updateElement: function (e, t, n) {
      var i = this;
      var r = i.chart;
      var o = r.chartArea;
      var a = r.options;
      var s = a.animation;
      var l = (o.left + o.right) / 2;
      var c = (o.top + o.bottom) / 2;
      var u = a.rotation;
      var d = a.rotation;
      var h = i.getDataset();
      var f = n && s.animateRotate || e.hidden ? 0 : i.calculateCircumference(h.data[t]) * (a.circumference / Ie);
      var p = n && s.animateScale ? 0 : i.innerRadius;
      var g = n && s.animateScale ? 0 : i.outerRadius;
      var m = e._options || {};
      B.extend(e, {
        _datasetIndex: i.index,
        _index: t,
        _model: {
          backgroundColor: m.backgroundColor,
          borderColor: m.borderColor,
          borderWidth: m.borderWidth,
          borderAlign: m.borderAlign,
          x: l + r.offsetX,
          y: c + r.offsetY,
          startAngle: u,
          endAngle: d,
          circumference: f,
          outerRadius: g,
          innerRadius: p,
          label: B.valueAtIndexOrDefault(h.label, t, r.data.labels[t])
        }
      });
      var v = e._model;
      if (!(n && s.animateRotate)) {
        v.startAngle = t === 0 ? a.rotation : i.getMeta().data[t - 1]._model.endAngle;
        v.endAngle = v.startAngle + v.circumference;
      }
      e.pivot();
    },
    calculateTotal: function () {
      var e;
      var t = this.getDataset();
      var n = this.getMeta();
      var i = 0;
      B.each(n.data, function (n, r) {
        e = t.data[r];
        if (!(isNaN(e) || n.hidden)) {
          i += Math.abs(e);
        }
      });
      return i;
    },
    calculateCircumference: function (e) {
      var t = this.getMeta().total;
      if (t > 0 && !isNaN(e)) {
        return Ie * (Math.abs(e) / t);
      } else {
        return 0;
      }
    },
    getMaxBorderWidth: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c = 0;
      var u = this.chart;
      if (!e) {
        t = 0;
        n = u.data.datasets.length;
        t = 0;
        n = u.data.datasets.length;
        for (; t < n; ++t) {
          if (u.isDatasetVisible(t)) {
            e = (i = u.getDatasetMeta(t)).data;
            if (t !== this.index) {
              o = i.controller;
            }
            break;
          }
        }
      }
      if (!e) {
        return 0;
      }
      t = 0;
      n = e.length;
      for (; t < n; ++t) {
        r = e[t];
        if (o) {
          o._configure();
          a = o._resolveDataElementOptions(r, t);
        } else {
          a = r._options;
        }
        if (a.borderAlign !== "inner") {
          s = a.borderWidth;
          c = (l = a.hoverBorderWidth) > (c = s > c ? s : c) ? l : c;
        }
      }
      return c;
    },
    setHoverStyle: function (e) {
      var t = e._model;
      var n = e._options;
      var i = B.getHoverColor;
      e.$previousStyle = {
        backgroundColor: t.backgroundColor,
        borderColor: t.borderColor,
        borderWidth: t.borderWidth
      };
      t.backgroundColor = Oe(n.hoverBackgroundColor, i(n.backgroundColor));
      t.borderColor = Oe(n.hoverBorderColor, i(n.borderColor));
      t.borderWidth = Oe(n.hoverBorderWidth, n.borderWidth);
    },
    _getRingWeightOffset: function (e) {
      for (var t = 0, n = 0; n < e; ++n) {
        if (this.chart.isDatasetVisible(n)) {
          t += this._getRingWeight(n);
        }
      }
      return t;
    },
    _getRingWeight: function (e) {
      return Math.max(Oe(this.chart.data.datasets[e].weight, 1), 0);
    },
    _getVisibleDatasetWeightTotal: function () {
      return this._getRingWeightOffset(this.chart.data.datasets.length);
    }
  });
  R._set("horizontalBar", {
    hover: {
      mode: "index",
      axis: "y"
    },
    scales: {
      xAxes: [{
        type: "linear",
        position: "bottom"
      }],
      yAxes: [{
        type: "category",
        position: "left",
        offset: true,
        gridLines: {
          offsetGridLines: true
        }
      }]
    },
    elements: {
      rectangle: {
        borderSkipped: "left"
      }
    },
    tooltips: {
      mode: "index",
      axis: "y"
    }
  });
  R._set("global", {
    datasets: {
      horizontalBar: {
        categoryPercentage: 0.8,
        barPercentage: 0.9
      }
    }
  });
  var Ne = Te.extend({
    _getValueScaleId: function () {
      return this.getMeta().xAxisID;
    },
    _getIndexScaleId: function () {
      return this.getMeta().yAxisID;
    }
  });
  var Fe = B.valueOrDefault;
  var Re = B.options.resolve;
  var je = B.canvas._isPointInArea;
  function $e(e, t) {
    var n = e && e.options.ticks || {};
    var i = n.reverse;
    var r = n.min === undefined ? t : 0;
    var o = n.max === undefined ? t : 0;
    return {
      start: i ? o : r,
      end: i ? r : o
    };
  }
  function ze(e, t, n) {
    var i = n / 2;
    var r = $e(e, i);
    var o = $e(t, i);
    return {
      top: o.end,
      right: r.end,
      bottom: o.start,
      left: r.start
    };
  }
  function He(e) {
    var t;
    var n;
    var i;
    var r;
    if (B.isObject(e)) {
      t = e.top;
      n = e.right;
      i = e.bottom;
      r = e.left;
    } else {
      t = n = i = r = e;
    }
    return {
      top: t,
      right: n,
      bottom: i,
      left: r
    };
  }
  R._set("line", {
    showLines: true,
    spanGaps: false,
    hover: {
      mode: "label"
    },
    scales: {
      xAxes: [{
        type: "category",
        id: "x-axis-0"
      }],
      yAxes: [{
        type: "linear",
        id: "y-axis-0"
      }]
    }
  });
  var Be = ne.extend({
    datasetElementType: be.Line,
    dataElementType: be.Point,
    _datasetElementOptions: ["backgroundColor", "borderCapStyle", "borderColor", "borderDash", "borderDashOffset", "borderJoinStyle", "borderWidth", "cubicInterpolationMode", "fill"],
    _dataElementOptions: {
      backgroundColor: "pointBackgroundColor",
      borderColor: "pointBorderColor",
      borderWidth: "pointBorderWidth",
      hitRadius: "pointHitRadius",
      hoverBackgroundColor: "pointHoverBackgroundColor",
      hoverBorderColor: "pointHoverBorderColor",
      hoverBorderWidth: "pointHoverBorderWidth",
      hoverRadius: "pointHoverRadius",
      pointStyle: "pointStyle",
      radius: "pointRadius",
      rotation: "pointRotation"
    },
    update: function (e) {
      var t;
      var n;
      var i = this;
      var r = i.getMeta();
      var o = r.dataset;
      var a = r.data || [];
      var s = i.chart.options;
      var l = i._config;
      var c = i._showLine = Fe(l.showLine, s.showLines);
      i._xScale = i.getScaleForId(r.xAxisID);
      i._yScale = i.getScaleForId(r.yAxisID);
      if (c) {
        if (l.tension !== undefined && l.lineTension === undefined) {
          l.lineTension = l.tension;
        }
        o._scale = i._yScale;
        o._datasetIndex = i.index;
        o._children = a;
        o._model = i._resolveDatasetElementOptions(o);
        o.pivot();
      }
      t = 0;
      n = a.length;
      for (; t < n; ++t) {
        i.updateElement(a[t], t, e);
      }
      if (c && o._model.tension !== 0) {
        i.updateBezierControlPoints();
      }
      t = 0;
      n = a.length;
      for (; t < n; ++t) {
        a[t].pivot();
      }
    },
    updateElement: function (e, t, n) {
      var i;
      var r;
      var o = this;
      var a = o.getMeta();
      var s = e.custom || {};
      var l = o.getDataset();
      var c = o.index;
      var u = l.data[t];
      var d = o._xScale;
      var h = o._yScale;
      var f = a.dataset._model;
      var p = o._resolveDataElementOptions(e, t);
      i = d.getPixelForValue(typeof u == "object" ? u : NaN, t, c);
      r = n ? h.getBasePixel() : o.calculatePointY(u, t, c);
      e._xScale = d;
      e._yScale = h;
      e._options = p;
      e._datasetIndex = c;
      e._index = t;
      e._model = {
        x: i,
        y: r,
        skip: s.skip || isNaN(i) || isNaN(r),
        radius: p.radius,
        pointStyle: p.pointStyle,
        rotation: p.rotation,
        backgroundColor: p.backgroundColor,
        borderColor: p.borderColor,
        borderWidth: p.borderWidth,
        tension: Fe(s.tension, f ? f.tension : 0),
        steppedLine: !!f && f.steppedLine,
        hitRadius: p.hitRadius
      };
    },
    _resolveDatasetElementOptions: function (e) {
      var t = this;
      var n = t._config;
      var i = e.custom || {};
      var r = t.chart.options;
      var o = r.elements.line;
      var a = ne.prototype._resolveDatasetElementOptions.apply(t, arguments);
      a.spanGaps = Fe(n.spanGaps, r.spanGaps);
      a.tension = Fe(n.lineTension, o.tension);
      a.steppedLine = Re([i.steppedLine, n.steppedLine, o.stepped]);
      a.clip = He(Fe(n.clip, ze(t._xScale, t._yScale, a.borderWidth)));
      return a;
    },
    calculatePointY: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u = this.chart;
      var d = this._yScale;
      var h = 0;
      var f = 0;
      if (d.options.stacked) {
        s = +d.getRightValue(e);
        c = (l = u._getSortedVisibleDatasetMetas()).length;
        i = 0;
        for (; i < c && (o = l[i]).index !== n; ++i) {
          r = u.data.datasets[o.index];
          if (o.type === "line" && o.yAxisID === d.id) {
            if ((a = +d.getRightValue(r.data[t])) < 0) {
              f += a || 0;
            } else {
              h += a || 0;
            }
          }
        }
        if (s < 0) {
          return d.getPixelForValue(f + s);
        } else {
          return d.getPixelForValue(h + s);
        }
      }
      return d.getPixelForValue(e);
    },
    updateBezierControlPoints: function () {
      var e;
      var t;
      var n;
      var i;
      var r = this.chart;
      var o = this.getMeta();
      var a = o.dataset._model;
      var s = r.chartArea;
      var l = o.data || [];
      function c(e, t, n) {
        return Math.max(Math.min(e, n), t);
      }
      if (a.spanGaps) {
        l = l.filter(function (e) {
          return !e._model.skip;
        });
      }
      if (a.cubicInterpolationMode === "monotone") {
        B.splineCurveMonotone(l);
      } else {
        e = 0;
        t = l.length;
        e = 0;
        t = l.length;
        for (; e < t; ++e) {
          n = l[e]._model;
          i = B.splineCurve(B.previousItem(l, e)._model, n, B.nextItem(l, e)._model, a.tension);
          n.controlPointPreviousX = i.previous.x;
          n.controlPointPreviousY = i.previous.y;
          n.controlPointNextX = i.next.x;
          n.controlPointNextY = i.next.y;
        }
      }
      if (r.options.elements.line.capBezierPoints) {
        e = 0;
        t = l.length;
        e = 0;
        t = l.length;
        for (; e < t; ++e) {
          n = l[e]._model;
          if (je(n, s)) {
            if (e > 0 && je(l[e - 1]._model, s)) {
              n.controlPointPreviousX = c(n.controlPointPreviousX, s.left, s.right);
              n.controlPointPreviousY = c(n.controlPointPreviousY, s.top, s.bottom);
            }
            if (e < l.length - 1 && je(l[e + 1]._model, s)) {
              n.controlPointNextX = c(n.controlPointNextX, s.left, s.right);
              n.controlPointNextY = c(n.controlPointNextY, s.top, s.bottom);
            }
          }
        }
      }
    },
    draw: function () {
      var e;
      var t = this.chart;
      var n = this.getMeta();
      var i = n.data || [];
      var r = t.chartArea;
      var o = t.canvas;
      var a = 0;
      var s = i.length;
      for (this._showLine && (e = n.dataset._model.clip, B.canvas.clipArea(t.ctx, {
        left: e.left === false ? 0 : r.left - e.left,
        right: e.right === false ? o.width : r.right + e.right,
        top: e.top === false ? 0 : r.top - e.top,
        bottom: e.bottom === false ? o.height : r.bottom + e.bottom
      }), n.dataset.draw(), B.canvas.unclipArea(t.ctx)); a < s; ++a) {
        i[a].draw(r);
      }
    },
    setHoverStyle: function (e) {
      var t = e._model;
      var n = e._options;
      var i = B.getHoverColor;
      e.$previousStyle = {
        backgroundColor: t.backgroundColor,
        borderColor: t.borderColor,
        borderWidth: t.borderWidth,
        radius: t.radius
      };
      t.backgroundColor = Fe(n.hoverBackgroundColor, i(n.backgroundColor));
      t.borderColor = Fe(n.hoverBorderColor, i(n.borderColor));
      t.borderWidth = Fe(n.hoverBorderWidth, n.borderWidth);
      t.radius = Fe(n.hoverRadius, n.radius);
    }
  });
  var qe = B.options.resolve;
  R._set("polarArea", {
    scale: {
      type: "radialLinear",
      angleLines: {
        display: false
      },
      gridLines: {
        circular: true
      },
      pointLabels: {
        display: false
      },
      ticks: {
        beginAtZero: true
      }
    },
    animation: {
      animateRotate: true,
      animateScale: true
    },
    startAngle: Math.PI * -0.5,
    legendCallback: function (e) {
      var t;
      var n;
      var i;
      var r = document.createElement("ul");
      var o = e.data;
      var a = o.datasets;
      var s = o.labels;
      r.setAttribute("class", e.id + "-legend");
      if (a.length) {
        t = 0;
        n = a[0].data.length;
        t = 0;
        n = a[0].data.length;
        for (; t < n; ++t) {
          (i = r.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor = a[0].backgroundColor[t];
          if (s[t]) {
            i.appendChild(document.createTextNode(s[t]));
          }
        }
      }
      return r.outerHTML;
    },
    legend: {
      labels: {
        generateLabels: function (e) {
          var t = e.data;
          if (t.labels.length && t.datasets.length) {
            return t.labels.map(function (n, i) {
              var r = e.getDatasetMeta(0);
              var o = r.controller.getStyle(i);
              return {
                text: n,
                fillStyle: o.backgroundColor,
                strokeStyle: o.borderColor,
                lineWidth: o.borderWidth,
                hidden: isNaN(t.datasets[0].data[i]) || r.data[i].hidden,
                index: i
              };
            });
          } else {
            return [];
          }
        }
      },
      onClick: function (e, t) {
        var n;
        var i;
        var r;
        var o = t.index;
        var a = this.chart;
        n = 0;
        i = (a.data.datasets || []).length;
        for (; n < i; ++n) {
          (r = a.getDatasetMeta(n)).data[o].hidden = !r.data[o].hidden;
        }
        a.update();
      }
    },
    tooltips: {
      callbacks: {
        title: function () {
          return "";
        },
        label: function (e, t) {
          return t.labels[e.index] + ": " + e.yLabel;
        }
      }
    }
  });
  var We = ne.extend({
    dataElementType: be.Arc,
    linkScales: B.noop,
    _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "borderAlign", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth"],
    _getIndexScaleId: function () {
      return this.chart.scale.id;
    },
    _getValueScaleId: function () {
      return this.chart.scale.id;
    },
    update: function (e) {
      var t;
      var n;
      var i;
      var r = this;
      var o = r.getDataset();
      var a = r.getMeta();
      var s = r.chart.options.startAngle || 0;
      var l = r._starts = [];
      var c = r._angles = [];
      var u = a.data;
      r._updateRadius();
      a.count = r.countVisibleElements();
      t = 0;
      n = o.data.length;
      for (; t < n; t++) {
        l[t] = s;
        i = r._computeAngle(t);
        c[t] = i;
        s += i;
      }
      t = 0;
      n = u.length;
      for (; t < n; ++t) {
        u[t]._options = r._resolveDataElementOptions(u[t], t);
        r.updateElement(u[t], t, e);
      }
    },
    _updateRadius: function () {
      var e = this;
      var t = e.chart;
      var n = t.chartArea;
      var i = t.options;
      var r = Math.min(n.right - n.left, n.bottom - n.top);
      t.outerRadius = Math.max(r / 2, 0);
      t.innerRadius = Math.max(i.cutoutPercentage ? t.outerRadius / 100 * i.cutoutPercentage : 1, 0);
      t.radiusLength = (t.outerRadius - t.innerRadius) / t.getVisibleDatasetCount();
      e.outerRadius = t.outerRadius - t.radiusLength * e.index;
      e.innerRadius = e.outerRadius - t.radiusLength;
    },
    updateElement: function (e, t, n) {
      var i = this;
      var r = i.chart;
      var o = i.getDataset();
      var a = r.options;
      var s = a.animation;
      var l = r.scale;
      var c = r.data.labels;
      var u = l.xCenter;
      var d = l.yCenter;
      var h = a.startAngle;
      var f = e.hidden ? 0 : l.getDistanceFromCenterForValue(o.data[t]);
      var p = i._starts[t];
      var g = p + (e.hidden ? 0 : i._angles[t]);
      var m = s.animateScale ? 0 : l.getDistanceFromCenterForValue(o.data[t]);
      var v = e._options || {};
      B.extend(e, {
        _datasetIndex: i.index,
        _index: t,
        _scale: l,
        _model: {
          backgroundColor: v.backgroundColor,
          borderColor: v.borderColor,
          borderWidth: v.borderWidth,
          borderAlign: v.borderAlign,
          x: u,
          y: d,
          innerRadius: 0,
          outerRadius: n ? m : f,
          startAngle: n && s.animateRotate ? h : p,
          endAngle: n && s.animateRotate ? h : g,
          label: B.valueAtIndexOrDefault(c, t, c[t])
        }
      });
      e.pivot();
    },
    countVisibleElements: function () {
      var e = this.getDataset();
      var t = this.getMeta();
      var n = 0;
      B.each(t.data, function (t, i) {
        if (!(isNaN(e.data[i]) || t.hidden)) {
          n++;
        }
      });
      return n;
    },
    setHoverStyle: function (e) {
      var t = e._model;
      var n = e._options;
      var i = B.getHoverColor;
      var r = B.valueOrDefault;
      e.$previousStyle = {
        backgroundColor: t.backgroundColor,
        borderColor: t.borderColor,
        borderWidth: t.borderWidth
      };
      t.backgroundColor = r(n.hoverBackgroundColor, i(n.backgroundColor));
      t.borderColor = r(n.hoverBorderColor, i(n.borderColor));
      t.borderWidth = r(n.hoverBorderWidth, n.borderWidth);
    },
    _computeAngle: function (e) {
      var t = this;
      var n = this.getMeta().count;
      var i = t.getDataset();
      var r = t.getMeta();
      if (isNaN(i.data[e]) || r.data[e].hidden) {
        return 0;
      }
      var o = {
        chart: t.chart,
        dataIndex: e,
        dataset: i,
        datasetIndex: t.index
      };
      return qe([t.chart.options.elements.arc.angle, Math.PI * 2 / n], o, e);
    }
  });
  R._set("pie", B.clone(R.doughnut));
  R._set("pie", {
    cutoutPercentage: 0
  });
  var Ue = Le;
  var Ve = B.valueOrDefault;
  R._set("radar", {
    spanGaps: false,
    scale: {
      type: "radialLinear"
    },
    elements: {
      line: {
        fill: "start",
        tension: 0
      }
    }
  });
  var Ye = ne.extend({
    datasetElementType: be.Line,
    dataElementType: be.Point,
    linkScales: B.noop,
    _datasetElementOptions: ["backgroundColor", "borderWidth", "borderColor", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "fill"],
    _dataElementOptions: {
      backgroundColor: "pointBackgroundColor",
      borderColor: "pointBorderColor",
      borderWidth: "pointBorderWidth",
      hitRadius: "pointHitRadius",
      hoverBackgroundColor: "pointHoverBackgroundColor",
      hoverBorderColor: "pointHoverBorderColor",
      hoverBorderWidth: "pointHoverBorderWidth",
      hoverRadius: "pointHoverRadius",
      pointStyle: "pointStyle",
      radius: "pointRadius",
      rotation: "pointRotation"
    },
    _getIndexScaleId: function () {
      return this.chart.scale.id;
    },
    _getValueScaleId: function () {
      return this.chart.scale.id;
    },
    update: function (e) {
      var t;
      var n;
      var i = this;
      var r = i.getMeta();
      var o = r.dataset;
      var a = r.data || [];
      var s = i.chart.scale;
      var l = i._config;
      if (l.tension !== undefined && l.lineTension === undefined) {
        l.lineTension = l.tension;
      }
      o._scale = s;
      o._datasetIndex = i.index;
      o._children = a;
      o._loop = true;
      o._model = i._resolveDatasetElementOptions(o);
      o.pivot();
      t = 0;
      n = a.length;
      for (; t < n; ++t) {
        i.updateElement(a[t], t, e);
      }
      i.updateBezierControlPoints();
      t = 0;
      n = a.length;
      for (; t < n; ++t) {
        a[t].pivot();
      }
    },
    updateElement: function (e, t, n) {
      var i = this;
      var r = e.custom || {};
      var o = i.getDataset();
      var a = i.chart.scale;
      var s = a.getPointPositionForValue(t, o.data[t]);
      var l = i._resolveDataElementOptions(e, t);
      var c = i.getMeta().dataset._model;
      var u = n ? a.xCenter : s.x;
      var d = n ? a.yCenter : s.y;
      e._scale = a;
      e._options = l;
      e._datasetIndex = i.index;
      e._index = t;
      e._model = {
        x: u,
        y: d,
        skip: r.skip || isNaN(u) || isNaN(d),
        radius: l.radius,
        pointStyle: l.pointStyle,
        rotation: l.rotation,
        backgroundColor: l.backgroundColor,
        borderColor: l.borderColor,
        borderWidth: l.borderWidth,
        tension: Ve(r.tension, c ? c.tension : 0),
        hitRadius: l.hitRadius
      };
    },
    _resolveDatasetElementOptions: function () {
      var e = this;
      var t = e._config;
      var n = e.chart.options;
      var i = ne.prototype._resolveDatasetElementOptions.apply(e, arguments);
      i.spanGaps = Ve(t.spanGaps, n.spanGaps);
      i.tension = Ve(t.lineTension, n.elements.line.tension);
      return i;
    },
    updateBezierControlPoints: function () {
      var e;
      var t;
      var n;
      var i;
      var r = this.getMeta();
      var o = this.chart.chartArea;
      var a = r.data || [];
      function s(e, t, n) {
        return Math.max(Math.min(e, n), t);
      }
      if (r.dataset._model.spanGaps) {
        a = a.filter(function (e) {
          return !e._model.skip;
        });
      }
      e = 0;
      t = a.length;
      for (; e < t; ++e) {
        n = a[e]._model;
        i = B.splineCurve(B.previousItem(a, e, true)._model, n, B.nextItem(a, e, true)._model, n.tension);
        n.controlPointPreviousX = s(i.previous.x, o.left, o.right);
        n.controlPointPreviousY = s(i.previous.y, o.top, o.bottom);
        n.controlPointNextX = s(i.next.x, o.left, o.right);
        n.controlPointNextY = s(i.next.y, o.top, o.bottom);
      }
    },
    setHoverStyle: function (e) {
      var t = e._model;
      var n = e._options;
      var i = B.getHoverColor;
      e.$previousStyle = {
        backgroundColor: t.backgroundColor,
        borderColor: t.borderColor,
        borderWidth: t.borderWidth,
        radius: t.radius
      };
      t.backgroundColor = Ve(n.hoverBackgroundColor, i(n.backgroundColor));
      t.borderColor = Ve(n.hoverBorderColor, i(n.borderColor));
      t.borderWidth = Ve(n.hoverBorderWidth, n.borderWidth);
      t.radius = Ve(n.hoverRadius, n.radius);
    }
  });
  R._set("scatter", {
    hover: {
      mode: "single"
    },
    scales: {
      xAxes: [{
        id: "x-axis-1",
        type: "linear",
        position: "bottom"
      }],
      yAxes: [{
        id: "y-axis-1",
        type: "linear",
        position: "left"
      }]
    },
    tooltips: {
      callbacks: {
        title: function () {
          return "";
        },
        label: function (e) {
          return "(" + e.xLabel + ", " + e.yLabel + ")";
        }
      }
    }
  });
  R._set("global", {
    datasets: {
      scatter: {
        showLine: false
      }
    }
  });
  var Xe = {
    bar: Te,
    bubble: Ee,
    doughnut: Le,
    horizontalBar: Ne,
    line: Be,
    polarArea: We,
    pie: Ue,
    radar: Ye,
    scatter: Be
  };
  function Ge(e, t) {
    if (e.native) {
      return {
        x: e.x,
        y: e.y
      };
    } else {
      return B.getRelativePosition(e, t);
    }
  }
  function Ke(e, t) {
    var n;
    var i;
    var r;
    var o;
    var a;
    var s;
    var l = e._getSortedVisibleDatasetMetas();
    i = 0;
    o = l.length;
    for (; i < o; ++i) {
      r = 0;
      a = (n = l[i].data).length;
      r = 0;
      a = (n = l[i].data).length;
      for (; r < a; ++r) {
        if (!(s = n[r])._view.skip) {
          t(s);
        }
      }
    }
  }
  function Qe(e, t) {
    var n = [];
    Ke(e, function (e) {
      if (e.inRange(t.x, t.y)) {
        n.push(e);
      }
    });
    return n;
  }
  function Ze(e, t, n, i) {
    var r = Number.POSITIVE_INFINITY;
    var o = [];
    Ke(e, function (e) {
      if (!n || e.inRange(t.x, t.y)) {
        var a = e.getCenterPoint();
        var s = i(t, a);
        if (s < r) {
          o = [e];
          r = s;
        } else if (s === r) {
          o.push(e);
        }
      }
    });
    return o;
  }
  function Je(e) {
    var t = e.indexOf("x") !== -1;
    var n = e.indexOf("y") !== -1;
    return function (e, i) {
      var r = t ? Math.abs(e.x - i.x) : 0;
      var o = n ? Math.abs(e.y - i.y) : 0;
      return Math.sqrt(Math.pow(r, 2) + Math.pow(o, 2));
    };
  }
  function et(e, t, n) {
    var i = Ge(t, e);
    n.axis = n.axis || "x";
    var r = Je(n.axis);
    var o = n.intersect ? Qe(e, i) : Ze(e, i, false, r);
    var a = [];
    if (o.length) {
      e._getSortedVisibleDatasetMetas().forEach(function (e) {
        var t = e.data[o[0]._index];
        if (t && !t._view.skip) {
          a.push(t);
        }
      });
      return a;
    } else {
      return [];
    }
  }
  var tt = {
    modes: {
      single: function (e, t) {
        var n = Ge(t, e);
        var i = [];
        Ke(e, function (e) {
          if (e.inRange(n.x, n.y)) {
            i.push(e);
            return i;
          }
        });
        return i.slice(0, 1);
      },
      label: et,
      index: et,
      dataset: function (e, t, n) {
        var i = Ge(t, e);
        n.axis = n.axis || "xy";
        var r = Je(n.axis);
        var o = n.intersect ? Qe(e, i) : Ze(e, i, false, r);
        if (o.length > 0) {
          o = e.getDatasetMeta(o[0]._datasetIndex).data;
        }
        return o;
      },
      "x-axis": function (e, t) {
        return et(e, t, {
          intersect: false
        });
      },
      point: function (e, t) {
        return Qe(e, Ge(t, e));
      },
      nearest: function (e, t, n) {
        var i = Ge(t, e);
        n.axis = n.axis || "xy";
        var r = Je(n.axis);
        return Ze(e, i, n.intersect, r);
      },
      x: function (e, t, n) {
        var i = Ge(t, e);
        var r = [];
        var o = false;
        Ke(e, function (e) {
          if (e.inXRange(i.x)) {
            r.push(e);
          }
          if (e.inRange(i.x, i.y)) {
            o = true;
          }
        });
        if (n.intersect && !o) {
          r = [];
        }
        return r;
      },
      y: function (e, t, n) {
        var i = Ge(t, e);
        var r = [];
        var o = false;
        Ke(e, function (e) {
          if (e.inYRange(i.y)) {
            r.push(e);
          }
          if (e.inRange(i.x, i.y)) {
            o = true;
          }
        });
        if (n.intersect && !o) {
          r = [];
        }
        return r;
      }
    }
  };
  var nt = B.extend;
  function it(e, t) {
    return B.where(e, function (e) {
      return e.pos === t;
    });
  }
  function rt(e, t) {
    return e.sort(function (e, n) {
      var i = t ? n : e;
      var r = t ? e : n;
      if (i.weight === r.weight) {
        return i.index - r.index;
      } else {
        return i.weight - r.weight;
      }
    });
  }
  function ot(e, t, n, i) {
    return Math.max(e[n], t[n]) + Math.max(e[i], t[i]);
  }
  function at(e, t, n) {
    var i;
    var r;
    var o = n.box;
    var a = e.maxPadding;
    if (n.size) {
      e[n.pos] -= n.size;
    }
    n.size = n.horizontal ? o.height : o.width;
    e[n.pos] += n.size;
    if (o.getPadding) {
      var s = o.getPadding();
      a.top = Math.max(a.top, s.top);
      a.left = Math.max(a.left, s.left);
      a.bottom = Math.max(a.bottom, s.bottom);
      a.right = Math.max(a.right, s.right);
    }
    i = t.outerWidth - ot(a, e, "left", "right");
    r = t.outerHeight - ot(a, e, "top", "bottom");
    if (i !== e.w || r !== e.h) {
      e.w = i;
      e.h = r;
      var l = n.horizontal ? [i, e.w] : [r, e.h];
      return !(l[0] === l[1] || isNaN(l[0]) && isNaN(l[1]));
    }
  }
  function st(e, t) {
    var n = t.maxPadding;
    return function (e) {
      var i = {
        left: 0,
        top: 0,
        right: 0,
        bottom: 0
      };
      e.forEach(function (e) {
        i[e] = Math.max(t[e], n[e]);
      });
      return i;
    }(e ? ["left", "right"] : ["top", "bottom"]);
  }
  function lt(e, t, n) {
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c = [];
    i = 0;
    r = e.length;
    for (; i < r; ++i) {
      (a = (o = e[i]).box).update(o.width || t.w, o.height || t.h, st(o.horizontal, t));
      if (at(t, n, o)) {
        l = true;
        if (c.length) {
          s = true;
        }
      }
      if (!a.fullWidth) {
        c.push(o);
      }
    }
    return s && lt(c, t, n) || l;
  }
  function ct(e, t, n) {
    var i;
    var r;
    var o;
    var a;
    var s = n.padding;
    var l = t.x;
    var c = t.y;
    i = 0;
    r = e.length;
    for (; i < r; ++i) {
      a = (o = e[i]).box;
      if (o.horizontal) {
        a.left = a.fullWidth ? s.left : t.left;
        a.right = a.fullWidth ? n.outerWidth - s.right : t.left + t.w;
        a.top = c;
        a.bottom = c + a.height;
        a.width = a.right - a.left;
        c = a.bottom;
      } else {
        a.left = l;
        a.right = l + a.width;
        a.top = t.top;
        a.bottom = t.top + t.h;
        a.height = a.bottom - a.top;
        l = a.right;
      }
    }
    t.x = l;
    t.y = c;
  }
  R._set("global", {
    layout: {
      padding: {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
      }
    }
  });
  var ut;
  var dt = {
    defaults: {},
    addBox: function (e, t) {
      if (!e.boxes) {
        e.boxes = [];
      }
      t.fullWidth = t.fullWidth || false;
      t.position = t.position || "top";
      t.weight = t.weight || 0;
      t._layers = t._layers || function () {
        return [{
          z: 0,
          draw: function () {
            t.draw.apply(t, arguments);
          }
        }];
      };
      e.boxes.push(t);
    },
    removeBox: function (e, t) {
      var n = e.boxes ? e.boxes.indexOf(t) : -1;
      if (n !== -1) {
        e.boxes.splice(n, 1);
      }
    },
    configure: function (e, t, n) {
      for (var i, r = ["fullWidth", "position", "weight"], o = r.length, a = 0; a < o; ++a) {
        i = r[a];
        if (n.hasOwnProperty(i)) {
          t[i] = n[i];
        }
      }
    },
    update: function (e, t, n) {
      if (e) {
        var i = e.options.layout || {};
        var r = B.options.toPadding(i.padding);
        var o = t - r.width;
        var a = n - r.height;
        var s = function (e) {
          var t = function (e) {
            var t;
            var n;
            var i;
            var r = [];
            t = 0;
            n = (e || []).length;
            for (; t < n; ++t) {
              i = e[t];
              r.push({
                index: t,
                box: i,
                pos: i.position,
                horizontal: i.isHorizontal(),
                weight: i.weight
              });
            }
            return r;
          }(e);
          var n = rt(it(t, "left"), true);
          var i = rt(it(t, "right"));
          var r = rt(it(t, "top"), true);
          var o = rt(it(t, "bottom"));
          return {
            leftAndTop: n.concat(r),
            rightAndBottom: i.concat(o),
            chartArea: it(t, "chartArea"),
            vertical: n.concat(i),
            horizontal: r.concat(o)
          };
        }(e.boxes);
        var l = s.vertical;
        var c = s.horizontal;
        var u = Object.freeze({
          outerWidth: t,
          outerHeight: n,
          padding: r,
          availableWidth: o,
          vBoxMaxWidth: o / 2 / l.length,
          hBoxMaxHeight: a / 2
        });
        var d = nt({
          maxPadding: nt({}, r),
          w: o,
          h: a,
          x: r.left,
          y: r.top
        }, r);
        !function (e, t) {
          var n;
          var i;
          var r;
          n = 0;
          i = e.length;
          for (; n < i; ++n) {
            (r = e[n]).width = r.horizontal ? r.box.fullWidth && t.availableWidth : t.vBoxMaxWidth;
            r.height = r.horizontal && t.hBoxMaxHeight;
          }
        }(l.concat(c), u);
        lt(l, d, u);
        if (lt(c, d, u)) {
          lt(l, d, u);
        }
        (function (e) {
          var t = e.maxPadding;
          function n(n) {
            var i = Math.max(t[n] - e[n], 0);
            e[n] += i;
            return i;
          }
          e.y += n("top");
          e.x += n("left");
          n("right");
          n("bottom");
        })(d);
        ct(s.leftAndTop, d, u);
        d.x += d.w;
        d.y += d.h;
        ct(s.rightAndBottom, d, u);
        e.chartArea = {
          left: d.left,
          top: d.top,
          right: d.left + d.w,
          bottom: d.top + d.h
        };
        B.each(s.chartArea, function (t) {
          var n = t.box;
          nt(n, e.chartArea);
          n.update(d.w, d.h);
        });
      }
    }
  };
  var ht = (ut = Object.freeze({
    __proto__: null,
    default: "@keyframes chartjs-render-animation{from{opacity:.99}to{opacity:1}}.chartjs-render-monitor{animation:chartjs-render-animation 1ms}.chartjs-size-monitor,.chartjs-size-monitor-expand,.chartjs-size-monitor-shrink{position:absolute;direction:ltr;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1}.chartjs-size-monitor-expand>div{position:absolute;width:1000000px;height:1000000px;left:0;top:0}.chartjs-size-monitor-shrink>div{position:absolute;width:200%;height:200%;left:0;top:0}"
  })) && ut.default || ut;
  var ft = "$chartjs";
  var pt = "chartjs-size-monitor";
  var gt = "chartjs-render-monitor";
  var mt = ["animationstart", "webkitAnimationStart"];
  var vt = {
    touchstart: "mousedown",
    touchmove: "mousemove",
    touchend: "mouseup",
    pointerenter: "mouseenter",
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointerleave: "mouseout",
    pointerout: "mouseout"
  };
  function yt(e, t) {
    var n = B.getStyle(e, t);
    var i = n && n.match(/^(\d+)(\.\d+)?px$/);
    if (i) {
      return Number(i[1]);
    } else {
      return undefined;
    }
  }
  var bt = !!function () {
    var e = false;
    try {
      var t = Object.defineProperty({}, "passive", {
        get: function () {
          e = true;
        }
      });
      window.addEventListener("e", null, t);
    } catch (e) {}
    return e;
  }() && {
    passive: true
  };
  function wt(e, t, n) {
    e.addEventListener(t, n, bt);
  }
  function xt(e, t, n) {
    e.removeEventListener(t, n, bt);
  }
  function _t(e, t, n, i, r) {
    return {
      type: e,
      chart: t,
      native: r || null,
      x: n !== undefined ? n : null,
      y: i !== undefined ? i : null
    };
  }
  function Ct(e) {
    var t = document.createElement("div");
    t.className = e || "";
    return t;
  }
  var St = {
    disableCSSInjection: false,
    _enabled: typeof window != "undefined" && typeof document != "undefined",
    _ensureLoaded: function (e) {
      if (!this.disableCSSInjection) {
        var t = e.getRootNode ? e.getRootNode() : document;
        !function (e, t) {
          var n = e[ft] || (e[ft] = {});
          if (!n.containsStyles) {
            n.containsStyles = true;
            t = "/* Chart.js */\n" + t;
            var i = document.createElement("style");
            i.setAttribute("type", "text/css");
            i.appendChild(document.createTextNode(t));
            e.appendChild(i);
          }
        }(t.host ? t : document.head, ht);
      }
    },
    acquireContext: function (e, t) {
      if (typeof e == "string") {
        e = document.getElementById(e);
      } else if (e.length) {
        e = e[0];
      }
      if (e && e.canvas) {
        e = e.canvas;
      }
      var n = e && e.getContext && e.getContext("2d");
      if (n && n.canvas === e) {
        this._ensureLoaded(e);
        (function (e, t) {
          var n = e.style;
          var i = e.getAttribute("height");
          var r = e.getAttribute("width");
          e[ft] = {
            initial: {
              height: i,
              width: r,
              style: {
                display: n.display,
                height: n.height,
                width: n.width
              }
            }
          };
          n.display = n.display || "block";
          if (r === null || r === "") {
            var o = yt(e, "width");
            if (o !== undefined) {
              e.width = o;
            }
          }
          if (i === null || i === "") {
            if (e.style.height === "") {
              e.height = e.width / (t.options.aspectRatio || 2);
            } else {
              var a = yt(e, "height");
              if (o !== undefined) {
                e.height = a;
              }
            }
          }
        })(e, t);
        return n;
      } else {
        return null;
      }
    },
    releaseContext: function (e) {
      var t = e.canvas;
      if (t[ft]) {
        var n = t[ft].initial;
        ["height", "width"].forEach(function (e) {
          var i = n[e];
          if (B.isNullOrUndef(i)) {
            t.removeAttribute(e);
          } else {
            t.setAttribute(e, i);
          }
        });
        B.each(n.style || {}, function (e, n) {
          t.style[n] = e;
        });
        t.width = t.width;
        delete t[ft];
      }
    },
    addEventListener: function (e, t, n) {
      var i = e.canvas;
      if (t !== "resize") {
        var r = n[ft] || (n[ft] = {});
        wt(i, t, (r.proxies || (r.proxies = {}))[e.id + "_" + t] = function (t) {
          n(function (e, t) {
            var n = vt[e.type] || e.type;
            var i = B.getRelativePosition(e, t);
            return _t(n, t, i.x, i.y, e);
          }(t, e));
        });
      } else {
        !function (e, t, n) {
          var i;
          var r;
          var o;
          var a;
          var s = e[ft] || (e[ft] = {});
          var l = s.resizer = function (e) {
            var t = Ct(pt);
            var n = Ct(pt + "-expand");
            var i = Ct(pt + "-shrink");
            n.appendChild(Ct());
            i.appendChild(Ct());
            t.appendChild(n);
            t.appendChild(i);
            t._reset = function () {
              n.scrollLeft = 1000000;
              n.scrollTop = 1000000;
              i.scrollLeft = 1000000;
              i.scrollTop = 1000000;
            };
            var r = function () {
              t._reset();
              e();
            };
            wt(n, "scroll", r.bind(n, "expand"));
            wt(i, "scroll", r.bind(i, "shrink"));
            return t;
          }((i = function () {
            if (s.resizer) {
              var i = n.options.maintainAspectRatio && e.parentNode;
              var r = i ? i.clientWidth : 0;
              t(_t("resize", n));
              if (i && i.clientWidth < r && n.canvas) {
                t(_t("resize", n));
              }
            }
          }, o = false, a = [], function () {
            a = Array.prototype.slice.call(arguments);
            r = r || this;
            if (!o) {
              o = true;
              B.requestAnimFrame.call(window, function () {
                o = false;
                i.apply(r, a);
              });
            }
          }));
          !function (e, t) {
            var n = e[ft] || (e[ft] = {});
            var i = n.renderProxy = function (e) {
              if (e.animationName === "chartjs-render-animation") {
                t();
              }
            };
            B.each(mt, function (t) {
              wt(e, t, i);
            });
            n.reflow = !!e.offsetParent;
            e.classList.add(gt);
          }(e, function () {
            if (s.resizer) {
              var t = e.parentNode;
              if (t && t !== l.parentNode) {
                t.insertBefore(l, t.firstChild);
              }
              l._reset();
            }
          });
        }(i, n, e);
      }
    },
    removeEventListener: function (e, t, n) {
      var i = e.canvas;
      if (t !== "resize") {
        var r = ((n[ft] || {}).proxies || {})[e.id + "_" + t];
        if (r) {
          xt(i, t, r);
        }
      } else {
        !function (e) {
          var t = e[ft] || {};
          var n = t.resizer;
          delete t.resizer;
          (function (e) {
            var t = e[ft] || {};
            var n = t.renderProxy;
            if (n) {
              B.each(mt, function (t) {
                xt(e, t, n);
              });
              delete t.renderProxy;
            }
            e.classList.remove(gt);
          })(e);
          if (n && n.parentNode) {
            n.parentNode.removeChild(n);
          }
        }(i);
      }
    }
  };
  B.addEvent = wt;
  B.removeEvent = xt;
  var kt = St._enabled ? St : {
    acquireContext: function (e) {
      if (e && e.canvas) {
        e = e.canvas;
      }
      return e && e.getContext("2d") || null;
    }
  };
  var Tt = B.extend({
    initialize: function () {},
    acquireContext: function () {},
    releaseContext: function () {},
    addEventListener: function () {},
    removeEventListener: function () {}
  }, kt);
  R._set("global", {
    plugins: {}
  });
  var At = {
    _plugins: [],
    _cacheId: 0,
    register: function (e) {
      var t = this._plugins;
      [].concat(e).forEach(function (e) {
        if (t.indexOf(e) === -1) {
          t.push(e);
        }
      });
      this._cacheId++;
    },
    unregister: function (e) {
      var t = this._plugins;
      [].concat(e).forEach(function (e) {
        var n = t.indexOf(e);
        if (n !== -1) {
          t.splice(n, 1);
        }
      });
      this._cacheId++;
    },
    clear: function () {
      this._plugins = [];
      this._cacheId++;
    },
    count: function () {
      return this._plugins.length;
    },
    getAll: function () {
      return this._plugins;
    },
    notify: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l = this.descriptors(e);
      var c = l.length;
      for (i = 0; i < c; ++i) {
        if (typeof (s = (o = (r = l[i]).plugin)[t]) == "function" && ((a = [e].concat(n || [])).push(r.options), s.apply(o, a) === false)) {
          return false;
        }
      }
      return true;
    },
    descriptors: function (e) {
      var t = e.$plugins || (e.$plugins = {});
      if (t.id === this._cacheId) {
        return t.descriptors;
      }
      var n = [];
      var i = [];
      var r = e && e.config || {};
      var o = r.options && r.options.plugins || {};
      this._plugins.concat(r.plugins || []).forEach(function (e) {
        if (n.indexOf(e) === -1) {
          var t = e.id;
          var r = o[t];
          if (r !== false) {
            if (r === true) {
              r = B.clone(R.global.plugins[t]);
            }
            n.push(e);
            i.push({
              plugin: e,
              options: r || {}
            });
          }
        }
      });
      t.descriptors = i;
      t.id = this._cacheId;
      return i;
    },
    _invalidate: function (e) {
      delete e.$plugins;
    }
  };
  var Dt = {
    constructors: {},
    defaults: {},
    registerScaleType: function (e, t, n) {
      this.constructors[e] = t;
      this.defaults[e] = B.clone(n);
    },
    getScaleConstructor: function (e) {
      if (this.constructors.hasOwnProperty(e)) {
        return this.constructors[e];
      } else {
        return undefined;
      }
    },
    getScaleDefaults: function (e) {
      if (this.defaults.hasOwnProperty(e)) {
        return B.merge(Object.create(null), [R.scale, this.defaults[e]]);
      } else {
        return {};
      }
    },
    updateScaleDefaults: function (e, t) {
      if (this.defaults.hasOwnProperty(e)) {
        this.defaults[e] = B.extend(this.defaults[e], t);
      }
    },
    addScalesToLayout: function (e) {
      B.each(e.scales, function (t) {
        t.fullWidth = t.options.fullWidth;
        t.position = t.options.position;
        t.weight = t.options.weight;
        dt.addBox(e, t);
      });
    }
  };
  var Et = B.valueOrDefault;
  var Ot = B.rtl.getRtlAdapter;
  R._set("global", {
    tooltips: {
      enabled: true,
      custom: null,
      mode: "nearest",
      position: "average",
      intersect: true,
      backgroundColor: "rgba(0,0,0,0.8)",
      titleFontStyle: "bold",
      titleSpacing: 2,
      titleMarginBottom: 6,
      titleFontColor: "#fff",
      titleAlign: "left",
      bodySpacing: 2,
      bodyFontColor: "#fff",
      bodyAlign: "left",
      footerFontStyle: "bold",
      footerSpacing: 2,
      footerMarginTop: 6,
      footerFontColor: "#fff",
      footerAlign: "left",
      yPadding: 6,
      xPadding: 6,
      caretPadding: 2,
      caretSize: 5,
      cornerRadius: 6,
      multiKeyBackground: "#fff",
      displayColors: true,
      borderColor: "rgba(0,0,0,0)",
      borderWidth: 0,
      callbacks: {
        beforeTitle: B.noop,
        title: function (e, t) {
          var n = "";
          var i = t.labels;
          var r = i ? i.length : 0;
          if (e.length > 0) {
            var o = e[0];
            if (o.label) {
              n = o.label;
            } else if (o.xLabel) {
              n = o.xLabel;
            } else if (r > 0 && o.index < r) {
              n = i[o.index];
            }
          }
          return n;
        },
        afterTitle: B.noop,
        beforeBody: B.noop,
        beforeLabel: B.noop,
        label: function (e, t) {
          var n = t.datasets[e.datasetIndex].label || "";
          if (n) {
            n += ": ";
          }
          if (B.isNullOrUndef(e.value)) {
            n += e.yLabel;
          } else {
            n += e.value;
          }
          return n;
        },
        labelColor: function (e, t) {
          var n = t.getDatasetMeta(e.datasetIndex).data[e.index]._view;
          return {
            borderColor: n.borderColor,
            backgroundColor: n.backgroundColor
          };
        },
        labelTextColor: function () {
          return this._options.bodyFontColor;
        },
        afterLabel: B.noop,
        afterBody: B.noop,
        beforeFooter: B.noop,
        footer: B.noop,
        afterFooter: B.noop
      }
    }
  });
  var Mt = {
    average: function (e) {
      if (!e.length) {
        return false;
      }
      var t;
      var n;
      var i = 0;
      var r = 0;
      var o = 0;
      t = 0;
      n = e.length;
      for (; t < n; ++t) {
        var a = e[t];
        if (a && a.hasValue()) {
          var s = a.tooltipPosition();
          i += s.x;
          r += s.y;
          ++o;
        }
      }
      return {
        x: i / o,
        y: r / o
      };
    },
    nearest: function (e, t) {
      var n;
      var i;
      var r;
      var o = t.x;
      var a = t.y;
      var s = Number.POSITIVE_INFINITY;
      n = 0;
      i = e.length;
      for (; n < i; ++n) {
        var l = e[n];
        if (l && l.hasValue()) {
          var c = l.getCenterPoint();
          var u = B.distanceBetweenPoints(t, c);
          if (u < s) {
            s = u;
            r = l;
          }
        }
      }
      if (r) {
        var d = r.tooltipPosition();
        o = d.x;
        a = d.y;
      }
      return {
        x: o,
        y: a
      };
    }
  };
  function It(e, t) {
    if (t) {
      if (B.isArray(t)) {
        Array.prototype.push.apply(e, t);
      } else {
        e.push(t);
      }
    }
    return e;
  }
  function Pt(e) {
    if ((typeof e == "string" || e instanceof String) && e.indexOf("\n") > -1) {
      return e.split("\n");
    } else {
      return e;
    }
  }
  function Lt(e) {
    var t = R.global;
    return {
      xPadding: e.xPadding,
      yPadding: e.yPadding,
      xAlign: e.xAlign,
      yAlign: e.yAlign,
      rtl: e.rtl,
      textDirection: e.textDirection,
      bodyFontColor: e.bodyFontColor,
      _bodyFontFamily: Et(e.bodyFontFamily, t.defaultFontFamily),
      _bodyFontStyle: Et(e.bodyFontStyle, t.defaultFontStyle),
      _bodyAlign: e.bodyAlign,
      bodyFontSize: Et(e.bodyFontSize, t.defaultFontSize),
      bodySpacing: e.bodySpacing,
      titleFontColor: e.titleFontColor,
      _titleFontFamily: Et(e.titleFontFamily, t.defaultFontFamily),
      _titleFontStyle: Et(e.titleFontStyle, t.defaultFontStyle),
      titleFontSize: Et(e.titleFontSize, t.defaultFontSize),
      _titleAlign: e.titleAlign,
      titleSpacing: e.titleSpacing,
      titleMarginBottom: e.titleMarginBottom,
      footerFontColor: e.footerFontColor,
      _footerFontFamily: Et(e.footerFontFamily, t.defaultFontFamily),
      _footerFontStyle: Et(e.footerFontStyle, t.defaultFontStyle),
      footerFontSize: Et(e.footerFontSize, t.defaultFontSize),
      _footerAlign: e.footerAlign,
      footerSpacing: e.footerSpacing,
      footerMarginTop: e.footerMarginTop,
      caretSize: e.caretSize,
      cornerRadius: e.cornerRadius,
      backgroundColor: e.backgroundColor,
      opacity: 0,
      legendColorBackground: e.multiKeyBackground,
      displayColors: e.displayColors,
      borderColor: e.borderColor,
      borderWidth: e.borderWidth
    };
  }
  function Nt(e, t) {
    if (t === "center") {
      return e.x + e.width / 2;
    } else if (t === "right") {
      return e.x + e.width - e.xPadding;
    } else {
      return e.x + e.xPadding;
    }
  }
  function Ft(e) {
    return It([], Pt(e));
  }
  var Rt = X.extend({
    initialize: function () {
      this._model = Lt(this._options);
      this._lastActive = [];
    },
    getTitle: function () {
      var e = this;
      var t = e._options;
      var n = t.callbacks;
      var i = n.beforeTitle.apply(e, arguments);
      var r = n.title.apply(e, arguments);
      var o = n.afterTitle.apply(e, arguments);
      var a = [];
      a = It(a, Pt(i));
      a = It(a, Pt(r));
      return It(a, Pt(o));
    },
    getBeforeBody: function () {
      return Ft(this._options.callbacks.beforeBody.apply(this, arguments));
    },
    getBody: function (e, t) {
      var n = this;
      var i = n._options.callbacks;
      var r = [];
      B.each(e, function (e) {
        var o = {
          before: [],
          lines: [],
          after: []
        };
        It(o.before, Pt(i.beforeLabel.call(n, e, t)));
        It(o.lines, i.label.call(n, e, t));
        It(o.after, Pt(i.afterLabel.call(n, e, t)));
        r.push(o);
      });
      return r;
    },
    getAfterBody: function () {
      return Ft(this._options.callbacks.afterBody.apply(this, arguments));
    },
    getFooter: function () {
      var e = this;
      var t = e._options.callbacks;
      var n = t.beforeFooter.apply(e, arguments);
      var i = t.footer.apply(e, arguments);
      var r = t.afterFooter.apply(e, arguments);
      var o = [];
      o = It(o, Pt(n));
      o = It(o, Pt(i));
      return It(o, Pt(r));
    },
    update: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d = this;
      var h = d._options;
      var f = d._model;
      var p = d._model = Lt(h);
      var g = d._active;
      var m = d._data;
      var v = {
        xAlign: f.xAlign,
        yAlign: f.yAlign
      };
      var y = {
        x: f.x,
        y: f.y
      };
      var b = {
        width: f.width,
        height: f.height
      };
      var w = {
        x: f.caretX,
        y: f.caretY
      };
      if (g.length) {
        p.opacity = 1;
        var x = [];
        var _ = [];
        w = Mt[h.position].call(d, g, d._eventPosition);
        var C = [];
        t = 0;
        n = g.length;
        for (; t < n; ++t) {
          C.push((r = undefined, o = undefined, undefined, undefined, l = undefined, c = undefined, u = undefined, r = (i = g[t])._xScale, o = i._yScale || i._scale, a = i._index, s = i._datasetIndex, c = (l = i._chart.getDatasetMeta(s).controller)._getIndexScale(), u = l._getValueScale(), {
            xLabel: r ? r.getLabelForIndex(a, s) : "",
            yLabel: o ? o.getLabelForIndex(a, s) : "",
            label: c ? "" + c.getLabelForIndex(a, s) : "",
            value: u ? "" + u.getLabelForIndex(a, s) : "",
            index: a,
            datasetIndex: s,
            x: i._model.x,
            y: i._model.y
          }));
        }
        if (h.filter) {
          C = C.filter(function (e) {
            return h.filter(e, m);
          });
        }
        if (h.itemSort) {
          C = C.sort(function (e, t) {
            return h.itemSort(e, t, m);
          });
        }
        B.each(C, function (e) {
          x.push(h.callbacks.labelColor.call(d, e, d._chart));
          _.push(h.callbacks.labelTextColor.call(d, e, d._chart));
        });
        p.title = d.getTitle(C, m);
        p.beforeBody = d.getBeforeBody(C, m);
        p.body = d.getBody(C, m);
        p.afterBody = d.getAfterBody(C, m);
        p.footer = d.getFooter(C, m);
        p.x = w.x;
        p.y = w.y;
        p.caretPadding = h.caretPadding;
        p.labelColors = x;
        p.labelTextColors = _;
        p.dataPoints = C;
        y = function (e, t, n, i) {
          var r = e.x;
          var o = e.y;
          var a = e.caretSize;
          var s = e.caretPadding;
          var l = e.cornerRadius;
          var c = n.xAlign;
          var u = n.yAlign;
          var d = a + s;
          var h = l + s;
          if (c === "right") {
            r -= t.width;
          } else if (c === "center") {
            if ((r -= t.width / 2) + t.width > i.width) {
              r = i.width - t.width;
            }
            if (r < 0) {
              r = 0;
            }
          }
          if (u === "top") {
            o += d;
          } else {
            o -= u === "bottom" ? t.height + d : t.height / 2;
          }
          if (u === "center") {
            if (c === "left") {
              r += d;
            } else if (c === "right") {
              r -= d;
            }
          } else if (c === "left") {
            r -= h;
          } else if (c === "right") {
            r += h;
          }
          return {
            x: r,
            y: o
          };
        }(p, b = function (e, t) {
          var n = e._chart.ctx;
          var i = t.yPadding * 2;
          var r = 0;
          var o = t.body;
          var a = o.reduce(function (e, t) {
            return e + t.before.length + t.lines.length + t.after.length;
          }, 0);
          a += t.beforeBody.length + t.afterBody.length;
          var s = t.title.length;
          var l = t.footer.length;
          var c = t.titleFontSize;
          var u = t.bodyFontSize;
          var d = t.footerFontSize;
          i += s * c;
          i += s ? (s - 1) * t.titleSpacing : 0;
          i += s ? t.titleMarginBottom : 0;
          i += a * u;
          i += a ? (a - 1) * t.bodySpacing : 0;
          i += l ? t.footerMarginTop : 0;
          i += l * d;
          i += l ? (l - 1) * t.footerSpacing : 0;
          var h = 0;
          var f = function (e) {
            r = Math.max(r, n.measureText(e).width + h);
          };
          n.font = B.fontString(c, t._titleFontStyle, t._titleFontFamily);
          B.each(t.title, f);
          n.font = B.fontString(u, t._bodyFontStyle, t._bodyFontFamily);
          B.each(t.beforeBody.concat(t.afterBody), f);
          h = t.displayColors ? u + 2 : 0;
          B.each(o, function (e) {
            B.each(e.before, f);
            B.each(e.lines, f);
            B.each(e.after, f);
          });
          h = 0;
          n.font = B.fontString(d, t._footerFontStyle, t._footerFontFamily);
          B.each(t.footer, f);
          return {
            width: r += t.xPadding * 2,
            height: i
          };
        }(this, p), v = function (e, t) {
          var n;
          var i;
          var r;
          var o;
          var a;
          var s = e._model;
          var l = e._chart;
          var c = e._chart.chartArea;
          var u = "center";
          var d = "center";
          if (s.y < t.height) {
            d = "top";
          } else if (s.y > l.height - t.height) {
            d = "bottom";
          }
          var h = (c.left + c.right) / 2;
          var f = (c.top + c.bottom) / 2;
          if (d === "center") {
            n = function (e) {
              return e <= h;
            };
            i = function (e) {
              return e > h;
            };
          } else {
            n = function (e) {
              return e <= t.width / 2;
            };
            i = function (e) {
              return e >= l.width - t.width / 2;
            };
          }
          r = function (e) {
            return e + t.width + s.caretSize + s.caretPadding > l.width;
          };
          o = function (e) {
            return e - t.width - s.caretSize - s.caretPadding < 0;
          };
          a = function (e) {
            if (e <= f) {
              return "top";
            } else {
              return "bottom";
            }
          };
          if (n(s.x)) {
            u = "left";
            if (r(s.x)) {
              u = "center";
              d = a(s.y);
            }
          } else if (i(s.x)) {
            u = "right";
            if (o(s.x)) {
              u = "center";
              d = a(s.y);
            }
          }
          var p = e._options;
          return {
            xAlign: p.xAlign ? p.xAlign : u,
            yAlign: p.yAlign ? p.yAlign : d
          };
        }(this, b), d._chart);
      } else {
        p.opacity = 0;
      }
      p.xAlign = v.xAlign;
      p.yAlign = v.yAlign;
      p.x = y.x;
      p.y = y.y;
      p.width = b.width;
      p.height = b.height;
      p.caretX = w.x;
      p.caretY = w.y;
      d._model = p;
      if (e && h.custom) {
        h.custom.call(d, p);
      }
      return d;
    },
    drawCaret: function (e, t) {
      var n = this._chart.ctx;
      var i = this._view;
      var r = this.getCaretPosition(e, t, i);
      n.lineTo(r.x1, r.y1);
      n.lineTo(r.x2, r.y2);
      n.lineTo(r.x3, r.y3);
    },
    getCaretPosition: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c = n.caretSize;
      var u = n.cornerRadius;
      var d = n.xAlign;
      var h = n.yAlign;
      var f = e.x;
      var p = e.y;
      var g = t.width;
      var m = t.height;
      if (h === "center") {
        s = p + m / 2;
        if (d === "left") {
          r = (i = f) - c;
          o = i;
          a = s + c;
          l = s - c;
        } else {
          r = (i = f + g) + c;
          o = i;
          a = s - c;
          l = s + c;
        }
      } else {
        if (d === "left") {
          i = (r = f + u + c) - c;
          o = r + c;
        } else if (d === "right") {
          i = (r = f + g - u - c) - c;
          o = r + c;
        } else {
          i = (r = n.caretX) - c;
          o = r + c;
        }
        if (h === "top") {
          s = (a = p) - c;
          l = a;
        } else {
          s = (a = p + m) + c;
          l = a;
          var v = o;
          o = i;
          i = v;
        }
      }
      return {
        x1: i,
        x2: r,
        x3: o,
        y1: a,
        y2: s,
        y3: l
      };
    },
    drawTitle: function (e, t, n) {
      var i;
      var r;
      var o;
      var a = t.title;
      var s = a.length;
      if (s) {
        var l = Ot(t.rtl, t.x, t.width);
        e.x = Nt(t, t._titleAlign);
        n.textAlign = l.textAlign(t._titleAlign);
        n.textBaseline = "middle";
        i = t.titleFontSize;
        r = t.titleSpacing;
        n.fillStyle = t.titleFontColor;
        n.font = B.fontString(i, t._titleFontStyle, t._titleFontFamily);
        o = 0;
        for (; o < s; ++o) {
          n.fillText(a[o], l.x(e.x), e.y + i / 2);
          e.y += i + r;
          if (o + 1 === s) {
            e.y += t.titleMarginBottom - r;
          }
        }
      }
    },
    drawBody: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d = t.bodyFontSize;
      var h = t.bodySpacing;
      var f = t._bodyAlign;
      var p = t.body;
      var g = t.displayColors;
      var m = 0;
      var v = g ? Nt(t, "left") : 0;
      var y = Ot(t.rtl, t.x, t.width);
      var b = function (t) {
        n.fillText(t, y.x(e.x + m), e.y + d / 2);
        e.y += d + h;
      };
      var w = y.textAlign(f);
      n.textAlign = f;
      n.textBaseline = "middle";
      n.font = B.fontString(d, t._bodyFontStyle, t._bodyFontFamily);
      e.x = Nt(t, w);
      n.fillStyle = t.bodyFontColor;
      B.each(t.beforeBody, b);
      m = g && w !== "right" ? f === "center" ? d / 2 + 1 : d + 2 : 0;
      s = 0;
      c = p.length;
      for (; s < c; ++s) {
        i = p[s];
        r = t.labelTextColors[s];
        o = t.labelColors[s];
        n.fillStyle = r;
        B.each(i.before, b);
        l = 0;
        u = (a = i.lines).length;
        for (; l < u; ++l) {
          if (g) {
            var x = y.x(v);
            n.fillStyle = t.legendColorBackground;
            n.fillRect(y.leftForLtr(x, d), e.y, d, d);
            n.lineWidth = 1;
            n.strokeStyle = o.borderColor;
            n.strokeRect(y.leftForLtr(x, d), e.y, d, d);
            n.fillStyle = o.backgroundColor;
            n.fillRect(y.leftForLtr(y.xPlus(x, 1), d - 2), e.y + 1, d - 2, d - 2);
            n.fillStyle = r;
          }
          b(a[l]);
        }
        B.each(i.after, b);
      }
      m = 0;
      B.each(t.afterBody, b);
      e.y -= h;
    },
    drawFooter: function (e, t, n) {
      var i;
      var r;
      var o = t.footer;
      var a = o.length;
      if (a) {
        var s = Ot(t.rtl, t.x, t.width);
        e.x = Nt(t, t._footerAlign);
        e.y += t.footerMarginTop;
        n.textAlign = s.textAlign(t._footerAlign);
        n.textBaseline = "middle";
        i = t.footerFontSize;
        n.fillStyle = t.footerFontColor;
        n.font = B.fontString(i, t._footerFontStyle, t._footerFontFamily);
        r = 0;
        for (; r < a; ++r) {
          n.fillText(o[r], s.x(e.x), e.y + i / 2);
          e.y += i + t.footerSpacing;
        }
      }
    },
    drawBackground: function (e, t, n, i) {
      n.fillStyle = t.backgroundColor;
      n.strokeStyle = t.borderColor;
      n.lineWidth = t.borderWidth;
      var r = t.xAlign;
      var o = t.yAlign;
      var a = e.x;
      var s = e.y;
      var l = i.width;
      var c = i.height;
      var u = t.cornerRadius;
      n.beginPath();
      n.moveTo(a + u, s);
      if (o === "top") {
        this.drawCaret(e, i);
      }
      n.lineTo(a + l - u, s);
      n.quadraticCurveTo(a + l, s, a + l, s + u);
      if (o === "center" && r === "right") {
        this.drawCaret(e, i);
      }
      n.lineTo(a + l, s + c - u);
      n.quadraticCurveTo(a + l, s + c, a + l - u, s + c);
      if (o === "bottom") {
        this.drawCaret(e, i);
      }
      n.lineTo(a + u, s + c);
      n.quadraticCurveTo(a, s + c, a, s + c - u);
      if (o === "center" && r === "left") {
        this.drawCaret(e, i);
      }
      n.lineTo(a, s + u);
      n.quadraticCurveTo(a, s, a + u, s);
      n.closePath();
      n.fill();
      if (t.borderWidth > 0) {
        n.stroke();
      }
    },
    draw: function () {
      var e = this._chart.ctx;
      var t = this._view;
      if (t.opacity !== 0) {
        var n = {
          width: t.width,
          height: t.height
        };
        var i = {
          x: t.x,
          y: t.y
        };
        var r = Math.abs(t.opacity < 0.001) ? 0 : t.opacity;
        var o = t.title.length || t.beforeBody.length || t.body.length || t.afterBody.length || t.footer.length;
        if (this._options.enabled && o) {
          e.save();
          e.globalAlpha = r;
          this.drawBackground(i, t, e, n);
          i.y += t.yPadding;
          B.rtl.overrideTextDirection(e, t.textDirection);
          this.drawTitle(i, t, e);
          this.drawBody(i, t, e);
          this.drawFooter(i, t, e);
          B.rtl.restoreTextDirection(e, t.textDirection);
          e.restore();
        }
      }
    },
    handleEvent: function (e) {
      var t;
      var n = this;
      var i = n._options;
      n._lastActive = n._lastActive || [];
      if (e.type === "mouseout") {
        n._active = [];
      } else {
        n._active = n._chart.getElementsAtEventForMode(e, i.mode, i);
        if (i.reverse) {
          n._active.reverse();
        }
      }
      if (t = !B.arrayEquals(n._active, n._lastActive)) {
        n._lastActive = n._active;
        if (i.enabled || i.custom) {
          n._eventPosition = {
            x: e.x,
            y: e.y
          };
          n.update(true);
          n.pivot();
        }
      }
      return t;
    }
  });
  var jt = Mt;
  var $t = Rt;
  $t.positioners = jt;
  var zt = B.valueOrDefault;
  function Ht() {
    return B.merge(Object.create(null), [].slice.call(arguments), {
      merger: function (e, t, n, i) {
        if (e === "xAxes" || e === "yAxes") {
          var r;
          var o;
          var a;
          var s = n[e].length;
          if (!t[e]) {
            t[e] = [];
          }
          r = 0;
          for (; r < s; ++r) {
            a = n[e][r];
            o = zt(a.type, e === "xAxes" ? "category" : "linear");
            if (r >= t[e].length) {
              t[e].push({});
            }
            if (!t[e][r].type || a.type && a.type !== t[e][r].type) {
              B.merge(t[e][r], [Dt.getScaleDefaults(o), a]);
            } else {
              B.merge(t[e][r], a);
            }
          }
        } else {
          B._merger(e, t, n, i);
        }
      }
    });
  }
  function Bt() {
    return B.merge(Object.create(null), [].slice.call(arguments), {
      merger: function (e, t, n, i) {
        var r = t[e] || Object.create(null);
        var o = n[e];
        if (e === "scales") {
          t[e] = Ht(r, o);
        } else if (e === "scale") {
          t[e] = B.merge(r, [Dt.getScaleDefaults(o.type), o]);
        } else {
          B._merger(e, t, n, i);
        }
      }
    });
  }
  function qt(e) {
    var t = e.options;
    B.each(e.scales, function (t) {
      dt.removeBox(e, t);
    });
    t = Bt(R.global, R[e.config.type], t);
    e.options = e.config.options = t;
    e.ensureScalesHaveIDs();
    e.buildOrUpdateScales();
    e.tooltip._options = t.tooltips;
    e.tooltip.initialize();
  }
  function Wt(e, t, n) {
    var i;
    var r = function (e) {
      return e.id === i;
    };
    do {
      i = t + n++;
    } while (B.findIndex(e, r) >= 0);
    return i;
  }
  function Ut(e) {
    return e === "top" || e === "bottom";
  }
  function Vt(e, t) {
    return function (n, i) {
      if (n[e] === i[e]) {
        return n[t] - i[t];
      } else {
        return n[e] - i[e];
      }
    };
  }
  R._set("global", {
    elements: {},
    events: ["mousemove", "mouseout", "click", "touchstart", "touchmove"],
    hover: {
      onHover: null,
      mode: "nearest",
      intersect: true,
      animationDuration: 400
    },
    onClick: null,
    maintainAspectRatio: true,
    responsive: true,
    responsiveAnimationDuration: 0
  });
  var Yt = function (e, t) {
    this.construct(e, t);
    return this;
  };
  B.extend(Yt.prototype, {
    construct: function (e, t) {
      var n = this;
      t = function (e) {
        var t = (e = e || Object.create(null)).data = e.data || {};
        t.datasets = t.datasets || [];
        t.labels = t.labels || [];
        e.options = Bt(R.global, R[e.type], e.options || {});
        return e;
      }(t);
      var i = Tt.acquireContext(e, t);
      var r = i && i.canvas;
      var o = r && r.height;
      var a = r && r.width;
      n.id = B.uid();
      n.ctx = i;
      n.canvas = r;
      n.config = t;
      n.width = a;
      n.height = o;
      n.aspectRatio = o ? a / o : null;
      n.options = t.options;
      n._bufferedRender = false;
      n._layers = [];
      n.chart = n;
      n.controller = n;
      Yt.instances[n.id] = n;
      Object.defineProperty(n, "data", {
        get: function () {
          return n.config.data;
        },
        set: function (e) {
          n.config.data = e;
        }
      });
      if (i && r) {
        n.initialize();
        n.update();
      } else {
        console.error("Failed to create chart: can't acquire context from the given item");
      }
    },
    initialize: function () {
      var e = this;
      At.notify(e, "beforeInit");
      B.retinaScale(e, e.options.devicePixelRatio);
      e.bindEvents();
      if (e.options.responsive) {
        e.resize(true);
      }
      e.initToolTip();
      At.notify(e, "afterInit");
      return e;
    },
    clear: function () {
      B.canvas.clear(this);
      return this;
    },
    stop: function () {
      Q.cancelAnimation(this);
      return this;
    },
    resize: function (e) {
      var t = this;
      var n = t.options;
      var i = t.canvas;
      var r = n.maintainAspectRatio && t.aspectRatio || null;
      var o = Math.max(0, Math.floor(B.getMaximumWidth(i)));
      var a = Math.max(0, Math.floor(r ? o / r : B.getMaximumHeight(i)));
      if ((t.width !== o || t.height !== a) && (i.width = t.width = o, i.height = t.height = a, i.style.width = o + "px", i.style.height = a + "px", B.retinaScale(t, n.devicePixelRatio), !e)) {
        var s = {
          width: o,
          height: a
        };
        At.notify(t, "resize", [s]);
        if (n.onResize) {
          n.onResize(t, s);
        }
        t.stop();
        t.update({
          duration: n.responsiveAnimationDuration
        });
      }
    },
    ensureScalesHaveIDs: function () {
      var e = this.options;
      var t = e.scales || {};
      var n = e.scale;
      B.each(t.xAxes, function (e, n) {
        if (!e.id) {
          e.id = Wt(t.xAxes, "x-axis-", n);
        }
      });
      B.each(t.yAxes, function (e, n) {
        if (!e.id) {
          e.id = Wt(t.yAxes, "y-axis-", n);
        }
      });
      if (n) {
        n.id = n.id || "scale";
      }
    },
    buildOrUpdateScales: function () {
      var e = this;
      var t = e.options;
      var n = e.scales || {};
      var i = [];
      var r = Object.keys(n).reduce(function (e, t) {
        e[t] = false;
        return e;
      }, {});
      if (t.scales) {
        i = i.concat((t.scales.xAxes || []).map(function (e) {
          return {
            options: e,
            dtype: "category",
            dposition: "bottom"
          };
        }), (t.scales.yAxes || []).map(function (e) {
          return {
            options: e,
            dtype: "linear",
            dposition: "left"
          };
        }));
      }
      if (t.scale) {
        i.push({
          options: t.scale,
          dtype: "radialLinear",
          isDefault: true,
          dposition: "chartArea"
        });
      }
      B.each(i, function (t) {
        var i = t.options;
        var o = i.id;
        var a = zt(i.type, t.dtype);
        if (Ut(i.position) !== Ut(t.dposition)) {
          i.position = t.dposition;
        }
        r[o] = true;
        var s = null;
        if (o in n && n[o].type === a) {
          (s = n[o]).options = i;
          s.ctx = e.ctx;
          s.chart = e;
        } else {
          var l = Dt.getScaleConstructor(a);
          if (!l) {
            return;
          }
          s = new l({
            id: o,
            type: a,
            options: i,
            ctx: e.ctx,
            chart: e
          });
          n[s.id] = s;
        }
        s.mergeTicksOptions();
        if (t.isDefault) {
          e.scale = s;
        }
      });
      B.each(r, function (e, t) {
        if (!e) {
          delete n[t];
        }
      });
      e.scales = n;
      Dt.addScalesToLayout(this);
    },
    buildOrUpdateControllers: function () {
      var e;
      var t;
      var n = this;
      var i = [];
      var r = n.data.datasets;
      e = 0;
      t = r.length;
      for (; e < t; e++) {
        var o = r[e];
        var a = n.getDatasetMeta(e);
        var s = o.type || n.config.type;
        if (a.type && a.type !== s) {
          n.destroyDatasetMeta(e);
          a = n.getDatasetMeta(e);
        }
        a.type = s;
        a.order = o.order || 0;
        a.index = e;
        if (a.controller) {
          a.controller.updateIndex(e);
          a.controller.linkScales();
        } else {
          var l = Xe[a.type];
          if (l === undefined) {
            throw new Error("\"" + a.type + "\" is not a chart type.");
          }
          a.controller = new l(n, e);
          i.push(a.controller);
        }
      }
      return i;
    },
    resetElements: function () {
      var e = this;
      B.each(e.data.datasets, function (t, n) {
        e.getDatasetMeta(n).controller.reset();
      }, e);
    },
    reset: function () {
      this.resetElements();
      this.tooltip.initialize();
    },
    update: function (e) {
      var t;
      var n;
      var i = this;
      if (!(e && typeof e == "object")) {
        e = {
          duration: e,
          lazy: arguments[1]
        };
      }
      qt(i);
      At._invalidate(i);
      if (At.notify(i, "beforeUpdate") !== false) {
        i.tooltip._data = i.data;
        var r = i.buildOrUpdateControllers();
        t = 0;
        n = i.data.datasets.length;
        for (; t < n; t++) {
          i.getDatasetMeta(t).controller.buildOrUpdateElements();
        }
        i.updateLayout();
        if (i.options.animation && i.options.animation.duration) {
          B.each(r, function (e) {
            e.reset();
          });
        }
        i.updateDatasets();
        i.tooltip.initialize();
        i.lastActive = [];
        At.notify(i, "afterUpdate");
        i._layers.sort(Vt("z", "_idx"));
        if (i._bufferedRender) {
          i._bufferedRequest = {
            duration: e.duration,
            easing: e.easing,
            lazy: e.lazy
          };
        } else {
          i.render(e);
        }
      }
    },
    updateLayout: function () {
      var e = this;
      if (At.notify(e, "beforeLayout") !== false) {
        dt.update(this, this.width, this.height);
        e._layers = [];
        B.each(e.boxes, function (t) {
          if (t._configure) {
            t._configure();
          }
          e._layers.push.apply(e._layers, t._layers());
        }, e);
        e._layers.forEach(function (e, t) {
          e._idx = t;
        });
        At.notify(e, "afterScaleUpdate");
        At.notify(e, "afterLayout");
      }
    },
    updateDatasets: function () {
      if (At.notify(this, "beforeDatasetsUpdate") !== false) {
        for (var e = 0, t = this.data.datasets.length; e < t; ++e) {
          this.updateDataset(e);
        }
        At.notify(this, "afterDatasetsUpdate");
      }
    },
    updateDataset: function (e) {
      var t = this.getDatasetMeta(e);
      var n = {
        meta: t,
        index: e
      };
      if (At.notify(this, "beforeDatasetUpdate", [n]) !== false) {
        t.controller._update();
        At.notify(this, "afterDatasetUpdate", [n]);
      }
    },
    render: function (e) {
      var t = this;
      if (!(e && typeof e == "object")) {
        e = {
          duration: e,
          lazy: arguments[1]
        };
      }
      var n = t.options.animation;
      var i = zt(e.duration, n && n.duration);
      var r = e.lazy;
      if (At.notify(t, "beforeRender") !== false) {
        var o = function (e) {
          At.notify(t, "afterRender");
          B.callback(n && n.onComplete, [e], t);
        };
        if (n && i) {
          var a = new K({
            numSteps: i / 16.66,
            easing: e.easing || n.easing,
            render: function (e, t) {
              var n = B.easing.effects[t.easing];
              var i = t.currentStep;
              var r = i / t.numSteps;
              e.draw(n(r), r, i);
            },
            onAnimationProgress: n.onProgress,
            onAnimationComplete: o
          });
          Q.addAnimation(t, a, i, r);
        } else {
          t.draw();
          o(new K({
            numSteps: 0,
            chart: t
          }));
        }
        return t;
      }
    },
    draw: function (e) {
      var t;
      var n;
      var i = this;
      i.clear();
      if (B.isNullOrUndef(e)) {
        e = 1;
      }
      i.transition(e);
      if (!(i.width <= 0 || i.height <= 0) && At.notify(i, "beforeDraw", [e]) !== false) {
        n = i._layers;
        t = 0;
        for (; t < n.length && n[t].z <= 0; ++t) {
          n[t].draw(i.chartArea);
        }
        for (i.drawDatasets(e); t < n.length; ++t) {
          n[t].draw(i.chartArea);
        }
        i._drawTooltip(e);
        At.notify(i, "afterDraw", [e]);
      }
    },
    transition: function (e) {
      for (var t = 0, n = (this.data.datasets || []).length; t < n; ++t) {
        if (this.isDatasetVisible(t)) {
          this.getDatasetMeta(t).controller.transition(e);
        }
      }
      this.tooltip.transition(e);
    },
    _getSortedDatasetMetas: function (e) {
      var t;
      var n;
      var i = [];
      t = 0;
      n = (this.data.datasets || []).length;
      for (; t < n; ++t) {
        if (!(e && !this.isDatasetVisible(t))) {
          i.push(this.getDatasetMeta(t));
        }
      }
      i.sort(Vt("order", "index"));
      return i;
    },
    _getSortedVisibleDatasetMetas: function () {
      return this._getSortedDatasetMetas(true);
    },
    drawDatasets: function (e) {
      var t;
      var n;
      if (At.notify(this, "beforeDatasetsDraw", [e]) !== false) {
        for (n = (t = this._getSortedVisibleDatasetMetas()).length - 1; n >= 0; --n) {
          this.drawDataset(t[n], e);
        }
        At.notify(this, "afterDatasetsDraw", [e]);
      }
    },
    drawDataset: function (e, t) {
      var n = {
        meta: e,
        index: e.index,
        easingValue: t
      };
      if (At.notify(this, "beforeDatasetDraw", [n]) !== false) {
        e.controller.draw(t);
        At.notify(this, "afterDatasetDraw", [n]);
      }
    },
    _drawTooltip: function (e) {
      var t = this.tooltip;
      var n = {
        tooltip: t,
        easingValue: e
      };
      if (At.notify(this, "beforeTooltipDraw", [n]) !== false) {
        t.draw();
        At.notify(this, "afterTooltipDraw", [n]);
      }
    },
    getElementAtEvent: function (e) {
      return tt.modes.single(this, e);
    },
    getElementsAtEvent: function (e) {
      return tt.modes.label(this, e, {
        intersect: true
      });
    },
    getElementsAtXAxis: function (e) {
      return tt.modes["x-axis"](this, e, {
        intersect: true
      });
    },
    getElementsAtEventForMode: function (e, t, n) {
      var i = tt.modes[t];
      if (typeof i == "function") {
        return i(this, e, n);
      } else {
        return [];
      }
    },
    getDatasetAtEvent: function (e) {
      return tt.modes.dataset(this, e, {
        intersect: true
      });
    },
    getDatasetMeta: function (e) {
      var t = this.data.datasets[e];
      if (!t._meta) {
        t._meta = {};
      }
      var n = t._meta[this.id];
      if (!n) {
        n = t._meta[this.id] = {
          type: null,
          data: [],
          dataset: null,
          controller: null,
          hidden: null,
          xAxisID: null,
          yAxisID: null,
          order: t.order || 0,
          index: e
        };
      }
      return n;
    },
    getVisibleDatasetCount: function () {
      for (var e = 0, t = 0, n = this.data.datasets.length; t < n; ++t) {
        if (this.isDatasetVisible(t)) {
          e++;
        }
      }
      return e;
    },
    isDatasetVisible: function (e) {
      var t = this.getDatasetMeta(e);
      if (typeof t.hidden == "boolean") {
        return !t.hidden;
      } else {
        return !this.data.datasets[e].hidden;
      }
    },
    generateLegend: function () {
      return this.options.legendCallback(this);
    },
    destroyDatasetMeta: function (e) {
      var t = this.id;
      var n = this.data.datasets[e];
      var i = n._meta && n._meta[t];
      if (i) {
        i.controller.destroy();
        delete n._meta[t];
      }
    },
    destroy: function () {
      var e;
      var t;
      var n = this;
      var i = n.canvas;
      n.stop();
      e = 0;
      t = n.data.datasets.length;
      for (; e < t; ++e) {
        n.destroyDatasetMeta(e);
      }
      if (i) {
        n.unbindEvents();
        B.canvas.clear(n);
        Tt.releaseContext(n.ctx);
        n.canvas = null;
        n.ctx = null;
      }
      At.notify(n, "destroy");
      delete Yt.instances[n.id];
    },
    toBase64Image: function () {
      return this.canvas.toDataURL.apply(this.canvas, arguments);
    },
    initToolTip: function () {
      var e = this;
      e.tooltip = new $t({
        _chart: e,
        _chartInstance: e,
        _data: e.data,
        _options: e.options.tooltips
      }, e);
    },
    bindEvents: function () {
      var e = this;
      var t = e._listeners = {};
      var n = function () {
        e.eventHandler.apply(e, arguments);
      };
      B.each(e.options.events, function (i) {
        Tt.addEventListener(e, i, n);
        t[i] = n;
      });
      if (e.options.responsive) {
        n = function () {
          e.resize();
        };
        Tt.addEventListener(e, "resize", n);
        t.resize = n;
      }
    },
    unbindEvents: function () {
      var e = this;
      var t = e._listeners;
      if (t) {
        delete e._listeners;
        B.each(t, function (t, n) {
          Tt.removeEventListener(e, n, t);
        });
      }
    },
    updateHoverStyle: function (e, t, n) {
      var i;
      var r;
      var o;
      var a = n ? "set" : "remove";
      r = 0;
      o = e.length;
      for (; r < o; ++r) {
        if (i = e[r]) {
          this.getDatasetMeta(i._datasetIndex).controller[a + "HoverStyle"](i);
        }
      }
      if (t === "dataset") {
        this.getDatasetMeta(e[0]._datasetIndex).controller["_" + a + "DatasetHoverStyle"]();
      }
    },
    eventHandler: function (e) {
      var t = this;
      var n = t.tooltip;
      if (At.notify(t, "beforeEvent", [e]) !== false) {
        t._bufferedRender = true;
        t._bufferedRequest = null;
        var i = t.handleEvent(e);
        if (n) {
          i = n._start ? n.handleEvent(e) : i | n.handleEvent(e);
        }
        At.notify(t, "afterEvent", [e]);
        var r = t._bufferedRequest;
        if (r) {
          t.render(r);
        } else if (i && !t.animating) {
          t.stop();
          t.render({
            duration: t.options.hover.animationDuration,
            lazy: true
          });
        }
        t._bufferedRender = false;
        t._bufferedRequest = null;
        return t;
      }
    },
    handleEvent: function (e) {
      var t;
      var n = this;
      var i = n.options || {};
      var r = i.hover;
      n.lastActive = n.lastActive || [];
      if (e.type === "mouseout") {
        n.active = [];
      } else {
        n.active = n.getElementsAtEventForMode(e, r.mode, r);
      }
      B.callback(i.onHover || i.hover.onHover, [e.native, n.active], n);
      if (!(e.type !== "mouseup" && e.type !== "click")) {
        if (i.onClick) {
          i.onClick.call(n, e.native, n.active);
        }
      }
      if (n.lastActive.length) {
        n.updateHoverStyle(n.lastActive, r.mode, false);
      }
      if (n.active.length && r.mode) {
        n.updateHoverStyle(n.active, r.mode, true);
      }
      t = !B.arrayEquals(n.active, n.lastActive);
      n.lastActive = n.active;
      return t;
    }
  });
  Yt.instances = {};
  var Xt = Yt;
  function Gt() {
    throw new Error("This method is not implemented: either no adapter can be found or an incomplete integration was provided.");
  }
  function Kt(e) {
    this.options = e || {};
  }
  Yt.Controller = Yt;
  Yt.types = {};
  B.configMerge = Bt;
  B.scaleMerge = Ht;
  B.extend(Kt.prototype, {
    formats: Gt,
    parse: Gt,
    format: Gt,
    add: Gt,
    diff: Gt,
    startOf: Gt,
    endOf: Gt,
    _create: function (e) {
      return e;
    }
  });
  Kt.override = function (e) {
    B.extend(Kt.prototype, e);
  };
  var Qt = {
    _date: Kt
  };
  var Zt = {
    formatters: {
      values: function (e) {
        if (B.isArray(e)) {
          return e;
        } else {
          return "" + e;
        }
      },
      linear: function (e, t, n) {
        var i = n.length > 3 ? n[2] - n[1] : n[1] - n[0];
        if (Math.abs(i) > 1 && e !== Math.floor(e)) {
          i = e - Math.floor(e);
        }
        var r = B.log10(Math.abs(i));
        var o = "";
        if (e !== 0) {
          if (Math.max(Math.abs(n[0]), Math.abs(n[n.length - 1])) < 0.0001) {
            var a = B.log10(Math.abs(e));
            var s = Math.floor(a) - Math.floor(r);
            s = Math.max(Math.min(s, 20), 0);
            o = e.toExponential(s);
          } else {
            var l = Math.floor(r) * -1;
            l = Math.max(Math.min(l, 20), 0);
            o = e.toFixed(l);
          }
        } else {
          o = "0";
        }
        return o;
      },
      logarithmic: function (e, t, n) {
        var i = e / Math.pow(10, Math.floor(B.log10(e)));
        if (e === 0) {
          return "0";
        } else if (i === 1 || i === 2 || i === 5 || t === 0 || t === n.length - 1) {
          return e.toExponential();
        } else {
          return "";
        }
      }
    }
  };
  var Jt = B.isArray;
  var en = B.isNullOrUndef;
  var tn = B.valueOrDefault;
  var nn = B.valueAtIndexOrDefault;
  function rn(e, t, n) {
    var i;
    var r = e.getTicks().length;
    var o = Math.min(t, r - 1);
    var a = e.getPixelForTick(o);
    var s = e._startPixel;
    var l = e._endPixel;
    if (!(n && (i = r === 1 ? Math.max(a - s, l - a) : t === 0 ? (e.getPixelForTick(1) - a) / 2 : (a - e.getPixelForTick(o - 1)) / 2, (a += o < t ? i : -i) < s - 0.000001 || a > l + 0.000001))) {
      return a;
    }
  }
  function on(e) {
    if (e.drawTicks) {
      return e.tickMarkLength;
    } else {
      return 0;
    }
  }
  function an(e) {
    var t;
    var n;
    if (e.display) {
      t = B.options._parseFont(e);
      n = B.options.toPadding(e.padding);
      return t.lineHeight + n.height;
    } else {
      return 0;
    }
  }
  function sn(e, t) {
    return B.extend(B.options._parseFont({
      fontFamily: tn(t.fontFamily, e.fontFamily),
      fontSize: tn(t.fontSize, e.fontSize),
      fontStyle: tn(t.fontStyle, e.fontStyle),
      lineHeight: tn(t.lineHeight, e.lineHeight)
    }), {
      color: B.options.resolve([t.fontColor, e.fontColor, R.global.defaultFontColor])
    });
  }
  function ln(e) {
    var t = sn(e, e.minor);
    return {
      minor: t,
      major: e.major.enabled ? sn(e, e.major) : t
    };
  }
  function cn(e) {
    var t;
    var n;
    var i;
    var r = [];
    n = 0;
    i = e.length;
    for (; n < i; ++n) {
      if ((t = e[n])._index !== undefined) {
        r.push(t);
      }
    }
    return r;
  }
  function un(e, t, n, i) {
    var r;
    var o;
    var a;
    var s;
    var l = tn(n, 0);
    var c = Math.min(tn(i, e.length), e.length);
    var u = 0;
    t = Math.ceil(t);
    if (i) {
      t = (r = i - n) / Math.floor(r / t);
    }
    s = l;
    for (; s < 0;) {
      u++;
      s = Math.round(l + u * t);
    }
    for (o = Math.max(l, 0); o < c; o++) {
      a = e[o];
      if (o === s) {
        a._index = o;
        u++;
        s = Math.round(l + u * t);
      } else {
        delete a.label;
      }
    }
  }
  R._set("scale", {
    display: true,
    position: "left",
    offset: false,
    gridLines: {
      display: true,
      color: "rgba(0,0,0,0.1)",
      lineWidth: 1,
      drawBorder: true,
      drawOnChartArea: true,
      drawTicks: true,
      tickMarkLength: 10,
      zeroLineWidth: 1,
      zeroLineColor: "rgba(0,0,0,0.25)",
      zeroLineBorderDash: [],
      zeroLineBorderDashOffset: 0,
      offsetGridLines: false,
      borderDash: [],
      borderDashOffset: 0
    },
    scaleLabel: {
      display: false,
      labelString: "",
      padding: {
        top: 4,
        bottom: 4
      }
    },
    ticks: {
      beginAtZero: false,
      minRotation: 0,
      maxRotation: 50,
      mirror: false,
      padding: 0,
      reverse: false,
      display: true,
      autoSkip: true,
      autoSkipPadding: 0,
      labelOffset: 0,
      callback: Zt.formatters.values,
      minor: {},
      major: {}
    }
  });
  var dn = X.extend({
    zeroLineIndex: 0,
    getPadding: function () {
      return {
        left: this.paddingLeft || 0,
        top: this.paddingTop || 0,
        right: this.paddingRight || 0,
        bottom: this.paddingBottom || 0
      };
    },
    getTicks: function () {
      return this._ticks;
    },
    _getLabels: function () {
      var e = this.chart.data;
      return this.options.labels || (this.isHorizontal() ? e.xLabels : e.yLabels) || e.labels || [];
    },
    mergeTicksOptions: function () {},
    beforeUpdate: function () {
      B.callback(this.options.beforeUpdate, [this]);
    },
    update: function (e, t, n) {
      var i;
      var r;
      var o;
      var a;
      var s;
      var l = this;
      var c = l.options.ticks;
      var u = c.sampleSize;
      l.beforeUpdate();
      l.maxWidth = e;
      l.maxHeight = t;
      l.margins = B.extend({
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
      }, n);
      l._ticks = null;
      l.ticks = null;
      l._labelSizes = null;
      l._maxLabelLines = 0;
      l.longestLabelWidth = 0;
      l.longestTextCache = l.longestTextCache || {};
      l._gridLineItems = null;
      l._labelItems = null;
      l.beforeSetDimensions();
      l.setDimensions();
      l.afterSetDimensions();
      l.beforeDataLimits();
      l.determineDataLimits();
      l.afterDataLimits();
      l.beforeBuildTicks();
      a = l.buildTicks() || [];
      if ((!(a = l.afterBuildTicks(a) || a) || !a.length) && l.ticks) {
        a = [];
        i = 0;
        r = l.ticks.length;
        a = [];
        i = 0;
        r = l.ticks.length;
        for (; i < r; ++i) {
          a.push({
            value: l.ticks[i],
            major: false
          });
        }
      }
      l._ticks = a;
      s = u < a.length;
      o = l._convertTicksToLabels(s ? function (e, t) {
        for (var n = [], i = e.length / t, r = 0, o = e.length; r < o; r += i) {
          n.push(e[Math.floor(r)]);
        }
        return n;
      }(a, u) : a);
      l._configure();
      l.beforeCalculateTickRotation();
      l.calculateTickRotation();
      l.afterCalculateTickRotation();
      l.beforeFit();
      l.fit();
      l.afterFit();
      l._ticksToDraw = c.display && (c.autoSkip || c.source === "auto") ? l._autoSkip(a) : a;
      if (s) {
        o = l._convertTicksToLabels(l._ticksToDraw);
      }
      l.ticks = o;
      l.afterUpdate();
      return l.minSize;
    },
    _configure: function () {
      var e;
      var t;
      var n = this;
      var i = n.options.ticks.reverse;
      if (n.isHorizontal()) {
        e = n.left;
        t = n.right;
      } else {
        e = n.top;
        t = n.bottom;
        i = !i;
      }
      n._startPixel = e;
      n._endPixel = t;
      n._reversePixels = i;
      n._length = t - e;
    },
    afterUpdate: function () {
      B.callback(this.options.afterUpdate, [this]);
    },
    beforeSetDimensions: function () {
      B.callback(this.options.beforeSetDimensions, [this]);
    },
    setDimensions: function () {
      var e = this;
      if (e.isHorizontal()) {
        e.width = e.maxWidth;
        e.left = 0;
        e.right = e.width;
      } else {
        e.height = e.maxHeight;
        e.top = 0;
        e.bottom = e.height;
      }
      e.paddingLeft = 0;
      e.paddingTop = 0;
      e.paddingRight = 0;
      e.paddingBottom = 0;
    },
    afterSetDimensions: function () {
      B.callback(this.options.afterSetDimensions, [this]);
    },
    beforeDataLimits: function () {
      B.callback(this.options.beforeDataLimits, [this]);
    },
    determineDataLimits: B.noop,
    afterDataLimits: function () {
      B.callback(this.options.afterDataLimits, [this]);
    },
    beforeBuildTicks: function () {
      B.callback(this.options.beforeBuildTicks, [this]);
    },
    buildTicks: B.noop,
    afterBuildTicks: function (e) {
      var t = this;
      if (Jt(e) && e.length) {
        return B.callback(t.options.afterBuildTicks, [t, e]);
      } else {
        t.ticks = B.callback(t.options.afterBuildTicks, [t, t.ticks]) || t.ticks;
        return e;
      }
    },
    beforeTickToLabelConversion: function () {
      B.callback(this.options.beforeTickToLabelConversion, [this]);
    },
    convertTicksToLabels: function () {
      var e = this.options.ticks;
      this.ticks = this.ticks.map(e.userCallback || e.callback, this);
    },
    afterTickToLabelConversion: function () {
      B.callback(this.options.afterTickToLabelConversion, [this]);
    },
    beforeCalculateTickRotation: function () {
      B.callback(this.options.beforeCalculateTickRotation, [this]);
    },
    calculateTickRotation: function () {
      var e;
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s = this;
      var l = s.options;
      var c = l.ticks;
      var u = s.getTicks().length;
      var d = c.minRotation || 0;
      var h = c.maxRotation;
      var f = d;
      if (!s._isVisible() || !c.display || d >= h || u <= 1 || !s.isHorizontal()) {
        s.labelRotation = d;
      } else {
        t = (e = s._getLabelSizes()).widest.width;
        n = e.highest.height - e.highest.offset;
        i = Math.min(s.maxWidth, s.chart.width - t);
        if (t + 6 > (r = l.offset ? s.maxWidth / u : i / (u - 1))) {
          r = i / (u - (l.offset ? 0.5 : 1));
          o = s.maxHeight - on(l.gridLines) - c.padding - an(l.scaleLabel);
          a = Math.sqrt(t * t + n * n);
          f = B.toDegrees(Math.min(Math.asin(Math.min((e.highest.height + 6) / r, 1)), Math.asin(Math.min(o / a, 1)) - Math.asin(n / a)));
          f = Math.max(d, Math.min(h, f));
        }
        s.labelRotation = f;
      }
    },
    afterCalculateTickRotation: function () {
      B.callback(this.options.afterCalculateTickRotation, [this]);
    },
    beforeFit: function () {
      B.callback(this.options.beforeFit, [this]);
    },
    fit: function () {
      var e = this;
      var t = e.minSize = {
        width: 0,
        height: 0
      };
      var n = e.chart;
      var i = e.options;
      var r = i.ticks;
      var o = i.scaleLabel;
      var a = i.gridLines;
      var s = e._isVisible();
      var l = i.position === "bottom";
      var c = e.isHorizontal();
      if (c) {
        t.width = e.maxWidth;
      } else if (s) {
        t.width = on(a) + an(o);
      }
      if (c) {
        if (s) {
          t.height = on(a) + an(o);
        }
      } else {
        t.height = e.maxHeight;
      }
      if (r.display && s) {
        var u = ln(r);
        var d = e._getLabelSizes();
        var h = d.first;
        var f = d.last;
        var p = d.widest;
        var g = d.highest;
        var m = u.minor.lineHeight * 0.4;
        var v = r.padding;
        if (c) {
          var y = e.labelRotation !== 0;
          var b = B.toRadians(e.labelRotation);
          var w = Math.cos(b);
          var x = Math.sin(b);
          var _ = x * p.width + w * (g.height - (y ? g.offset : 0)) + (y ? 0 : m);
          t.height = Math.min(e.maxHeight, t.height + _ + v);
          var C;
          var S;
          var k = e.getPixelForTick(0) - e.left;
          var T = e.right - e.getPixelForTick(e.getTicks().length - 1);
          if (y) {
            C = l ? w * h.width + x * h.offset : x * (h.height - h.offset);
            S = l ? x * (f.height - f.offset) : w * f.width + x * f.offset;
          } else {
            C = h.width / 2;
            S = f.width / 2;
          }
          e.paddingLeft = Math.max((C - k) * e.width / (e.width - k), 0) + 3;
          e.paddingRight = Math.max((S - T) * e.width / (e.width - T), 0) + 3;
        } else {
          var A = r.mirror ? 0 : p.width + v + m;
          t.width = Math.min(e.maxWidth, t.width + A);
          e.paddingTop = h.height / 2;
          e.paddingBottom = f.height / 2;
        }
      }
      e.handleMargins();
      if (c) {
        e.width = e._length = n.width - e.margins.left - e.margins.right;
        e.height = t.height;
      } else {
        e.width = t.width;
        e.height = e._length = n.height - e.margins.top - e.margins.bottom;
      }
    },
    handleMargins: function () {
      var e = this;
      if (e.margins) {
        e.margins.left = Math.max(e.paddingLeft, e.margins.left);
        e.margins.top = Math.max(e.paddingTop, e.margins.top);
        e.margins.right = Math.max(e.paddingRight, e.margins.right);
        e.margins.bottom = Math.max(e.paddingBottom, e.margins.bottom);
      }
    },
    afterFit: function () {
      B.callback(this.options.afterFit, [this]);
    },
    isHorizontal: function () {
      var e = this.options.position;
      return e === "top" || e === "bottom";
    },
    isFullWidth: function () {
      return this.options.fullWidth;
    },
    getRightValue: function (e) {
      if (en(e)) {
        return NaN;
      }
      if ((typeof e == "number" || e instanceof Number) && !isFinite(e)) {
        return NaN;
      }
      if (e) {
        if (this.isHorizontal()) {
          if (e.x !== undefined) {
            return this.getRightValue(e.x);
          }
        } else if (e.y !== undefined) {
          return this.getRightValue(e.y);
        }
      }
      return e;
    },
    _convertTicksToLabels: function (e) {
      var t;
      var n;
      var i;
      var r = this;
      r.ticks = e.map(function (e) {
        return e.value;
      });
      r.beforeTickToLabelConversion();
      t = r.convertTicksToLabels(e) || r.ticks;
      r.afterTickToLabelConversion();
      n = 0;
      i = e.length;
      for (; n < i; ++n) {
        e[n].label = t[n];
      }
      return t;
    },
    _getLabelSizes: function () {
      var e = this;
      var t = e._labelSizes;
      if (!t) {
        e._labelSizes = t = function (e, t, n, i) {
          var r;
          var o;
          var a;
          var s;
          var l;
          var c;
          var u;
          var d;
          var h;
          var f;
          var p;
          var g;
          var m;
          var v = n.length;
          var y = [];
          var b = [];
          var w = [];
          var x = 0;
          var _ = 0;
          for (r = 0; r < v; ++r) {
            s = n[r].label;
            l = n[r].major ? t.major : t.minor;
            e.font = c = l.string;
            u = i[c] = i[c] || {
              data: {},
              gc: []
            };
            d = l.lineHeight;
            h = f = 0;
            if (en(s) || Jt(s)) {
              if (Jt(s)) {
                o = 0;
                a = s.length;
                o = 0;
                a = s.length;
                for (; o < a; ++o) {
                  p = s[o];
                  if (!(en(p) || Jt(p))) {
                    h = B.measureText(e, u.data, u.gc, h, p);
                    f += d;
                  }
                }
              }
            } else {
              h = B.measureText(e, u.data, u.gc, h, s);
              f = d;
            }
            y.push(h);
            b.push(f);
            w.push(d / 2);
            x = Math.max(h, x);
            _ = Math.max(f, _);
          }
          function C(e) {
            return {
              width: y[e] || 0,
              height: b[e] || 0,
              offset: w[e] || 0
            };
          }
          (function (e, t) {
            B.each(e, function (e) {
              var n;
              var i = e.gc;
              var r = i.length / 2;
              if (r > t) {
                for (n = 0; n < r; ++n) {
                  delete e.data[i[n]];
                }
                i.splice(0, r);
              }
            });
          })(i, v);
          g = y.indexOf(x);
          m = b.indexOf(_);
          return {
            first: C(0),
            last: C(v - 1),
            widest: C(g),
            highest: C(m)
          };
        }(e.ctx, ln(e.options.ticks), e.getTicks(), e.longestTextCache);
        e.longestLabelWidth = t.widest.width;
      }
      return t;
    },
    _parseValue: function (e) {
      var t;
      var n;
      var i;
      var r;
      if (Jt(e)) {
        t = +this.getRightValue(e[0]);
        n = +this.getRightValue(e[1]);
        i = Math.min(t, n);
        r = Math.max(t, n);
      } else {
        t = undefined;
        n = e = +this.getRightValue(e);
        i = e;
        r = e;
      }
      return {
        min: i,
        max: r,
        start: t,
        end: n
      };
    },
    _getScaleLabel: function (e) {
      var t = this._parseValue(e);
      if (t.start !== undefined) {
        return "[" + t.start + ", " + t.end + "]";
      } else {
        return +this.getRightValue(e);
      }
    },
    getLabelForIndex: B.noop,
    getPixelForValue: B.noop,
    getValueForPixel: B.noop,
    getPixelForTick: function (e) {
      var t = this.options.offset;
      var n = this._ticks.length;
      var i = 1 / Math.max(n - (t ? 0 : 1), 1);
      if (e < 0 || e > n - 1) {
        return null;
      } else {
        return this.getPixelForDecimal(e * i + (t ? i / 2 : 0));
      }
    },
    getPixelForDecimal: function (e) {
      if (this._reversePixels) {
        e = 1 - e;
      }
      return this._startPixel + e * this._length;
    },
    getDecimalForPixel: function (e) {
      var t = (e - this._startPixel) / this._length;
      if (this._reversePixels) {
        return 1 - t;
      } else {
        return t;
      }
    },
    getBasePixel: function () {
      return this.getPixelForValue(this.getBaseValue());
    },
    getBaseValue: function () {
      var e = this.min;
      var t = this.max;
      if (this.beginAtZero) {
        return 0;
      } else if (e < 0 && t < 0) {
        return t;
      } else if (e > 0 && t > 0) {
        return e;
      } else {
        return 0;
      }
    },
    _autoSkip: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o = this.options.ticks;
      var a = this._length;
      var s = o.maxTicksLimit || a / this._tickSize() + 1;
      var l = o.major.enabled ? function (e) {
        var t;
        var n;
        var i = [];
        t = 0;
        n = e.length;
        for (; t < n; t++) {
          if (e[t].major) {
            i.push(t);
          }
        }
        return i;
      }(e) : [];
      var c = l.length;
      var u = l[0];
      var d = l[c - 1];
      if (c > s) {
        (function (e, t, n) {
          var i;
          var r;
          var o = 0;
          var a = t[0];
          n = Math.ceil(n);
          i = 0;
          for (; i < e.length; i++) {
            r = e[i];
            if (i === a) {
              r._index = i;
              a = t[++o * n];
            } else {
              delete r.label;
            }
          }
        })(e, l, c / s);
        return cn(e);
      }
      i = function (e, t, n, i) {
        var r;
        var o;
        var a;
        var s;
        var l = function (e) {
          var t;
          var n;
          var i = e.length;
          if (i < 2) {
            return false;
          }
          n = e[0];
          t = 1;
          for (; t < i; ++t) {
            if (e[t] - e[t - 1] !== n) {
              return false;
            }
          }
          return n;
        }(e);
        var c = (t.length - 1) / i;
        if (!l) {
          return Math.max(c, 1);
        }
        a = 0;
        s = (r = B.math._factorize(l)).length - 1;
        for (; a < s; a++) {
          if ((o = r[a]) > c) {
            return o;
          }
        }
        return Math.max(c, 1);
      }(l, e, 0, s);
      if (c > 0) {
        t = 0;
        n = c - 1;
        for (; t < n; t++) {
          un(e, i, l[t], l[t + 1]);
        }
        r = c > 1 ? (d - u) / (c - 1) : null;
        un(e, i, B.isNullOrUndef(r) ? 0 : u - r, u);
        un(e, i, d, B.isNullOrUndef(r) ? e.length : d + r);
        return cn(e);
      }
      un(e, i);
      return cn(e);
    },
    _tickSize: function () {
      var e = this.options.ticks;
      var t = B.toRadians(this.labelRotation);
      var n = Math.abs(Math.cos(t));
      var i = Math.abs(Math.sin(t));
      var r = this._getLabelSizes();
      var o = e.autoSkipPadding || 0;
      var a = r ? r.widest.width + o : 0;
      var s = r ? r.highest.height + o : 0;
      if (this.isHorizontal()) {
        if (s * n > a * i) {
          return a / n;
        } else {
          return s / i;
        }
      } else if (s * i < a * n) {
        return s / n;
      } else {
        return a / i;
      }
    },
    _isVisible: function () {
      var e;
      var t;
      var n;
      var i = this.chart;
      var r = this.options.display;
      if (r !== "auto") {
        return !!r;
      }
      e = 0;
      t = i.data.datasets.length;
      for (; e < t; ++e) {
        if (i.isDatasetVisible(e) && ((n = i.getDatasetMeta(e)).xAxisID === this.id || n.yAxisID === this.id)) {
          return true;
        }
      }
      return false;
    },
    _computeGridLineItems: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var h;
      var f;
      var p;
      var g;
      var m;
      var v;
      var y = this;
      var b = y.chart;
      var w = y.options;
      var x = w.gridLines;
      var _ = w.position;
      var C = x.offsetGridLines;
      var S = y.isHorizontal();
      var k = y._ticksToDraw;
      var T = k.length + (C ? 1 : 0);
      var A = on(x);
      var D = [];
      var E = x.drawBorder ? nn(x.lineWidth, 0, 0) : 0;
      var O = E / 2;
      var M = B._alignPixel;
      var I = function (e) {
        return M(b, e, E);
      };
      if (_ === "top") {
        t = I(y.bottom);
        s = y.bottom - A;
        c = t - O;
        d = I(e.top) + O;
        f = e.bottom;
      } else if (_ === "bottom") {
        t = I(y.top);
        d = e.top;
        f = I(e.bottom) - O;
        s = t + O;
        c = y.top + A;
      } else if (_ === "left") {
        t = I(y.right);
        a = y.right - A;
        l = t - O;
        u = I(e.left) + O;
        h = e.right;
      } else {
        t = I(y.left);
        u = e.left;
        h = I(e.right) - O;
        a = t + O;
        l = y.left + A;
      }
      n = 0;
      for (; n < T; ++n) {
        i = k[n] || {};
        if (!(en(i.label) && n < k.length)) {
          if (n === y.zeroLineIndex && w.offset === C) {
            p = x.zeroLineWidth;
            g = x.zeroLineColor;
            m = x.zeroLineBorderDash || [];
            v = x.zeroLineBorderDashOffset || 0;
          } else {
            p = nn(x.lineWidth, n, 1);
            g = nn(x.color, n, "rgba(0,0,0,0.1)");
            m = x.borderDash || [];
            v = x.borderDashOffset || 0;
          }
          if ((r = rn(y, i._index || n, C)) !== undefined) {
            o = M(b, r, p);
            if (S) {
              a = l = u = h = o;
            } else {
              s = c = d = f = o;
            }
            D.push({
              tx1: a,
              ty1: s,
              tx2: l,
              ty2: c,
              x1: u,
              y1: d,
              x2: h,
              y2: f,
              width: p,
              color: g,
              borderDash: m,
              borderDashOffset: v
            });
          }
        }
      }
      D.ticksLength = T;
      D.borderValue = t;
      return D;
    },
    _computeLabelItems: function () {
      var e;
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var h = this;
      var f = h.options;
      var p = f.ticks;
      var g = f.position;
      var m = p.mirror;
      var v = h.isHorizontal();
      var y = h._ticksToDraw;
      var b = ln(p);
      var w = p.padding;
      var x = on(f.gridLines);
      var _ = -B.toRadians(h.labelRotation);
      var C = [];
      if (g === "top") {
        o = h.bottom - x - w;
        a = _ ? "left" : "center";
      } else if (g === "bottom") {
        o = h.top + x + w;
        a = _ ? "right" : "center";
      } else if (g === "left") {
        r = h.right - (m ? 0 : x) - w;
        a = m ? "left" : "right";
      } else {
        r = h.left + (m ? 0 : x) + w;
        a = m ? "right" : "left";
      }
      e = 0;
      t = y.length;
      for (; e < t; ++e) {
        i = (n = y[e]).label;
        if (!en(i)) {
          s = h.getPixelForTick(n._index || e) + p.labelOffset;
          c = (l = n.major ? b.major : b.minor).lineHeight;
          u = Jt(i) ? i.length : 1;
          if (v) {
            r = s;
            d = g === "top" ? ((_ ? 1 : 0.5) - u) * c : (_ ? 0 : 0.5) * c;
          } else {
            o = s;
            d = (1 - u) * c / 2;
          }
          C.push({
            x: r,
            y: o,
            rotation: _,
            label: i,
            font: l,
            textOffset: d,
            textAlign: a
          });
        }
      }
      return C;
    },
    _drawGrid: function (e) {
      var t = this;
      var n = t.options.gridLines;
      if (n.display) {
        var i;
        var r;
        var o;
        var a;
        var s;
        var l = t.ctx;
        var c = t.chart;
        var u = B._alignPixel;
        var d = n.drawBorder ? nn(n.lineWidth, 0, 0) : 0;
        var h = t._gridLineItems || (t._gridLineItems = t._computeGridLineItems(e));
        o = 0;
        a = h.length;
        for (; o < a; ++o) {
          i = (s = h[o]).width;
          r = s.color;
          if (i && r) {
            l.save();
            l.lineWidth = i;
            l.strokeStyle = r;
            if (l.setLineDash) {
              l.setLineDash(s.borderDash);
              l.lineDashOffset = s.borderDashOffset;
            }
            l.beginPath();
            if (n.drawTicks) {
              l.moveTo(s.tx1, s.ty1);
              l.lineTo(s.tx2, s.ty2);
            }
            if (n.drawOnChartArea) {
              l.moveTo(s.x1, s.y1);
              l.lineTo(s.x2, s.y2);
            }
            l.stroke();
            l.restore();
          }
        }
        if (d) {
          var f;
          var p;
          var g;
          var m;
          var v = d;
          var y = nn(n.lineWidth, h.ticksLength - 1, 1);
          var b = h.borderValue;
          if (t.isHorizontal()) {
            f = u(c, t.left, v) - v / 2;
            p = u(c, t.right, y) + y / 2;
            g = m = b;
          } else {
            g = u(c, t.top, v) - v / 2;
            m = u(c, t.bottom, y) + y / 2;
            f = p = b;
          }
          l.lineWidth = d;
          l.strokeStyle = nn(n.color, 0);
          l.beginPath();
          l.moveTo(f, g);
          l.lineTo(p, m);
          l.stroke();
        }
      }
    },
    _drawLabels: function () {
      var e = this;
      if (e.options.ticks.display) {
        var t;
        var n;
        var i;
        var r;
        var o;
        var a;
        var s;
        var l;
        var c = e.ctx;
        var u = e._labelItems || (e._labelItems = e._computeLabelItems());
        t = 0;
        i = u.length;
        for (; t < i; ++t) {
          a = (o = u[t]).font;
          c.save();
          c.translate(o.x, o.y);
          c.rotate(o.rotation);
          c.font = a.string;
          c.fillStyle = a.color;
          c.textBaseline = "middle";
          c.textAlign = o.textAlign;
          s = o.label;
          l = o.textOffset;
          if (Jt(s)) {
            n = 0;
            r = s.length;
            n = 0;
            r = s.length;
            for (; n < r; ++n) {
              c.fillText("" + s[n], 0, l);
              l += a.lineHeight;
            }
          } else {
            c.fillText(s, 0, l);
          }
          c.restore();
        }
      }
    },
    _drawTitle: function () {
      var e = this;
      var t = e.ctx;
      var n = e.options;
      var i = n.scaleLabel;
      if (i.display) {
        var r;
        var o;
        var a = tn(i.fontColor, R.global.defaultFontColor);
        var s = B.options._parseFont(i);
        var l = B.options.toPadding(i.padding);
        var c = s.lineHeight / 2;
        var u = n.position;
        var d = 0;
        if (e.isHorizontal()) {
          r = e.left + e.width / 2;
          o = u === "bottom" ? e.bottom - c - l.bottom : e.top + c + l.top;
        } else {
          var h = u === "left";
          r = h ? e.left + c + l.top : e.right - c - l.top;
          o = e.top + e.height / 2;
          d = h ? Math.PI * -0.5 : Math.PI * 0.5;
        }
        t.save();
        t.translate(r, o);
        t.rotate(d);
        t.textAlign = "center";
        t.textBaseline = "middle";
        t.fillStyle = a;
        t.font = s.string;
        t.fillText(i.labelString, 0, 0);
        t.restore();
      }
    },
    draw: function (e) {
      if (this._isVisible()) {
        this._drawGrid(e);
        this._drawTitle();
        this._drawLabels();
      }
    },
    _layers: function () {
      var e = this;
      var t = e.options;
      var n = t.ticks && t.ticks.z || 0;
      var i = t.gridLines && t.gridLines.z || 0;
      if (e._isVisible() && n !== i && e.draw === e._draw) {
        return [{
          z: i,
          draw: function () {
            e._drawGrid.apply(e, arguments);
            e._drawTitle.apply(e, arguments);
          }
        }, {
          z: n,
          draw: function () {
            e._drawLabels.apply(e, arguments);
          }
        }];
      } else {
        return [{
          z: n,
          draw: function () {
            e.draw.apply(e, arguments);
          }
        }];
      }
    },
    _getMatchingVisibleMetas: function (e) {
      var t = this;
      var n = t.isHorizontal();
      return t.chart._getSortedVisibleDatasetMetas().filter(function (i) {
        return (!e || i.type === e) && (n ? i.xAxisID === t.id : i.yAxisID === t.id);
      });
    }
  });
  dn.prototype._draw = dn.prototype.draw;
  var hn = dn;
  var fn = B.isNullOrUndef;
  var pn = hn.extend({
    determineDataLimits: function () {
      var e;
      var t = this;
      var n = t._getLabels();
      var i = t.options.ticks;
      var r = i.min;
      var o = i.max;
      var a = 0;
      var s = n.length - 1;
      if (r !== undefined && (e = n.indexOf(r)) >= 0) {
        a = e;
      }
      if (o !== undefined && (e = n.indexOf(o)) >= 0) {
        s = e;
      }
      t.minIndex = a;
      t.maxIndex = s;
      t.min = n[a];
      t.max = n[s];
    },
    buildTicks: function () {
      var e = this._getLabels();
      var t = this.minIndex;
      var n = this.maxIndex;
      this.ticks = t === 0 && n === e.length - 1 ? e : e.slice(t, n + 1);
    },
    getLabelForIndex: function (e, t) {
      var n = this.chart;
      if (n.getDatasetMeta(t).controller._getValueScaleId() === this.id) {
        return this.getRightValue(n.data.datasets[t].data[e]);
      } else {
        return this._getLabels()[e];
      }
    },
    _configure: function () {
      var e = this;
      var t = e.options.offset;
      var n = e.ticks;
      hn.prototype._configure.call(e);
      if (!e.isHorizontal()) {
        e._reversePixels = !e._reversePixels;
      }
      if (n) {
        e._startValue = e.minIndex - (t ? 0.5 : 0);
        e._valueRange = Math.max(n.length - (t ? 0 : 1), 1);
      }
    },
    getPixelForValue: function (e, t, n) {
      var i;
      var r;
      var o;
      var a = this;
      if (!(fn(t) || fn(n))) {
        e = a.chart.data.datasets[n].data[t];
      }
      if (!fn(e)) {
        i = a.isHorizontal() ? e.x : e.y;
      }
      if (i !== undefined || e !== undefined && isNaN(t)) {
        r = a._getLabels();
        e = B.valueOrDefault(i, e);
        t = (o = r.indexOf(e)) !== -1 ? o : t;
        if (isNaN(t)) {
          t = e;
        }
      }
      return a.getPixelForDecimal((t - a._startValue) / a._valueRange);
    },
    getPixelForTick: function (e) {
      var t = this.ticks;
      if (e < 0 || e > t.length - 1) {
        return null;
      } else {
        return this.getPixelForValue(t[e], e + this.minIndex);
      }
    },
    getValueForPixel: function (e) {
      var t = Math.round(this._startValue + this.getDecimalForPixel(e) * this._valueRange);
      return Math.min(Math.max(t, 0), this.ticks.length - 1);
    },
    getBasePixel: function () {
      return this.bottom;
    }
  });
  pn._defaults = {
    position: "bottom"
  };
  var gn = B.noop;
  var mn = B.isNullOrUndef;
  var vn = hn.extend({
    getRightValue: function (e) {
      if (typeof e == "string") {
        return +e;
      } else {
        return hn.prototype.getRightValue.call(this, e);
      }
    },
    handleTickRangeOptions: function () {
      var e = this;
      var t = e.options.ticks;
      if (t.beginAtZero) {
        var n = B.sign(e.min);
        var i = B.sign(e.max);
        if (n < 0 && i < 0) {
          e.max = 0;
        } else if (n > 0 && i > 0) {
          e.min = 0;
        }
      }
      var r = t.min !== undefined || t.suggestedMin !== undefined;
      var o = t.max !== undefined || t.suggestedMax !== undefined;
      if (t.min !== undefined) {
        e.min = t.min;
      } else if (t.suggestedMin !== undefined) {
        if (e.min === null) {
          e.min = t.suggestedMin;
        } else {
          e.min = Math.min(e.min, t.suggestedMin);
        }
      }
      if (t.max !== undefined) {
        e.max = t.max;
      } else if (t.suggestedMax !== undefined) {
        if (e.max === null) {
          e.max = t.suggestedMax;
        } else {
          e.max = Math.max(e.max, t.suggestedMax);
        }
      }
      if (r !== o && e.min >= e.max) {
        if (r) {
          e.max = e.min + 1;
        } else {
          e.min = e.max - 1;
        }
      }
      if (e.min === e.max) {
        e.max++;
        if (!t.beginAtZero) {
          e.min--;
        }
      }
    },
    getTickLimit: function () {
      var e;
      var t = this.options.ticks;
      var n = t.stepSize;
      var i = t.maxTicksLimit;
      if (n) {
        e = Math.ceil(this.max / n) - Math.floor(this.min / n) + 1;
      } else {
        e = this._computeTickLimit();
        i = i || 11;
      }
      if (i) {
        e = Math.min(i, e);
      }
      return e;
    },
    _computeTickLimit: function () {
      return Number.POSITIVE_INFINITY;
    },
    handleDirectionalChanges: gn,
    buildTicks: function () {
      var e = this;
      var t = e.options.ticks;
      var n = e.getTickLimit();
      var i = {
        maxTicks: n = Math.max(2, n),
        min: t.min,
        max: t.max,
        precision: t.precision,
        stepSize: B.valueOrDefault(t.fixedStepSize, t.stepSize)
      };
      var r = e.ticks = function (e, t) {
        var n;
        var i;
        var r;
        var o;
        var a = [];
        var s = e.stepSize;
        var l = s || 1;
        var c = e.maxTicks - 1;
        var u = e.min;
        var d = e.max;
        var h = e.precision;
        var f = t.min;
        var p = t.max;
        var g = B.niceNum((p - f) / c / l) * l;
        if (g < 1e-14 && mn(u) && mn(d)) {
          return [f, p];
        }
        if ((o = Math.ceil(p / g) - Math.floor(f / g)) > c) {
          g = B.niceNum(o * g / c / l) * l;
        }
        if (s || mn(h)) {
          n = Math.pow(10, B._decimalPlaces(g));
        } else {
          n = Math.pow(10, h);
          g = Math.ceil(g * n) / n;
        }
        i = Math.floor(f / g) * g;
        r = Math.ceil(p / g) * g;
        if (s) {
          if (!mn(u) && B.almostWhole(u / g, g / 1000)) {
            i = u;
          }
          if (!mn(d) && B.almostWhole(d / g, g / 1000)) {
            r = d;
          }
        }
        o = (r - i) / g;
        o = B.almostEquals(o, Math.round(o), g / 1000) ? Math.round(o) : Math.ceil(o);
        i = Math.round(i * n) / n;
        r = Math.round(r * n) / n;
        a.push(mn(u) ? i : u);
        for (var m = 1; m < o; ++m) {
          a.push(Math.round((i + m * g) * n) / n);
        }
        a.push(mn(d) ? r : d);
        return a;
      }(i, e);
      e.handleDirectionalChanges();
      e.max = B.max(r);
      e.min = B.min(r);
      if (t.reverse) {
        r.reverse();
        e.start = e.max;
        e.end = e.min;
      } else {
        e.start = e.min;
        e.end = e.max;
      }
    },
    convertTicksToLabels: function () {
      var e = this;
      e.ticksAsNumbers = e.ticks.slice();
      e.zeroLineIndex = e.ticks.indexOf(0);
      hn.prototype.convertTicksToLabels.call(e);
    },
    _configure: function () {
      var e;
      var t = this;
      var n = t.getTicks();
      var i = t.min;
      var r = t.max;
      hn.prototype._configure.call(t);
      if (t.options.offset && n.length) {
        i -= e = (r - i) / Math.max(n.length - 1, 1) / 2;
        r += e;
      }
      t._startValue = i;
      t._endValue = r;
      t._valueRange = r - i;
    }
  });
  var yn = {
    position: "left",
    ticks: {
      callback: Zt.formatters.linear
    }
  };
  function bn(e, t, n, i) {
    var r;
    var o;
    var a = e.options;
    var s = function (e, t, n) {
      var i = [n.type, t === undefined && n.stack === undefined ? n.index : "", n.stack].join(".");
      if (e[i] === undefined) {
        e[i] = {
          pos: [],
          neg: []
        };
      }
      return e[i];
    }(t, a.stacked, n);
    var l = s.pos;
    var c = s.neg;
    var u = i.length;
    for (r = 0; r < u; ++r) {
      o = e._parseValue(i[r]);
      if (!(isNaN(o.min) || isNaN(o.max) || n.data[r].hidden)) {
        l[r] = l[r] || 0;
        c[r] = c[r] || 0;
        if (a.relativePoints) {
          l[r] = 100;
        } else if (o.min < 0 || o.max < 0) {
          c[r] += o.min;
        } else {
          l[r] += o.max;
        }
      }
    }
  }
  function wn(e, t, n) {
    var i;
    var r;
    var o = n.length;
    for (i = 0; i < o; ++i) {
      r = e._parseValue(n[i]);
      if (!(isNaN(r.min) || isNaN(r.max) || t.data[i].hidden)) {
        e.min = Math.min(e.min, r.min);
        e.max = Math.max(e.max, r.max);
      }
    }
  }
  var xn = vn.extend({
    determineDataLimits: function () {
      var e;
      var t;
      var n;
      var i;
      var r = this;
      var o = r.options;
      var a = r.chart.data.datasets;
      var s = r._getMatchingVisibleMetas();
      var l = o.stacked;
      var c = {};
      var u = s.length;
      r.min = Number.POSITIVE_INFINITY;
      r.max = Number.NEGATIVE_INFINITY;
      if (l === undefined) {
        for (e = 0; !l && e < u; ++e) {
          l = (t = s[e]).stack !== undefined;
        }
      }
      for (e = 0; e < u; ++e) {
        n = a[(t = s[e]).index].data;
        if (l) {
          bn(r, c, t, n);
        } else {
          wn(r, t, n);
        }
      }
      B.each(c, function (e) {
        i = e.pos.concat(e.neg);
        r.min = Math.min(r.min, B.min(i));
        r.max = Math.max(r.max, B.max(i));
      });
      r.min = B.isFinite(r.min) && !isNaN(r.min) ? r.min : 0;
      r.max = B.isFinite(r.max) && !isNaN(r.max) ? r.max : 1;
      r.handleTickRangeOptions();
    },
    _computeTickLimit: function () {
      var e;
      if (this.isHorizontal()) {
        return Math.ceil(this.width / 40);
      } else {
        e = B.options._parseFont(this.options.ticks);
        return Math.ceil(this.height / e.lineHeight);
      }
    },
    handleDirectionalChanges: function () {
      if (!this.isHorizontal()) {
        this.ticks.reverse();
      }
    },
    getLabelForIndex: function (e, t) {
      return this._getScaleLabel(this.chart.data.datasets[t].data[e]);
    },
    getPixelForValue: function (e) {
      return this.getPixelForDecimal((+this.getRightValue(e) - this._startValue) / this._valueRange);
    },
    getValueForPixel: function (e) {
      return this._startValue + this.getDecimalForPixel(e) * this._valueRange;
    },
    getPixelForTick: function (e) {
      var t = this.ticksAsNumbers;
      if (e < 0 || e > t.length - 1) {
        return null;
      } else {
        return this.getPixelForValue(t[e]);
      }
    }
  });
  var _n = yn;
  xn._defaults = _n;
  var Cn = B.valueOrDefault;
  var Sn = B.math.log10;
  var kn = {
    position: "left",
    ticks: {
      callback: Zt.formatters.logarithmic
    }
  };
  function Tn(e, t) {
    if (B.isFinite(e) && e >= 0) {
      return e;
    } else {
      return t;
    }
  }
  var An = hn.extend({
    determineDataLimits: function () {
      var e;
      var t;
      var n;
      var i;
      var r;
      var o;
      var a = this;
      var s = a.options;
      var l = a.chart;
      var c = l.data.datasets;
      var u = a.isHorizontal();
      function d(e) {
        if (u) {
          return e.xAxisID === a.id;
        } else {
          return e.yAxisID === a.id;
        }
      }
      a.min = Number.POSITIVE_INFINITY;
      a.max = Number.NEGATIVE_INFINITY;
      a.minNotZero = Number.POSITIVE_INFINITY;
      var h = s.stacked;
      if (h === undefined) {
        for (e = 0; e < c.length; e++) {
          t = l.getDatasetMeta(e);
          if (l.isDatasetVisible(e) && d(t) && t.stack !== undefined) {
            h = true;
            break;
          }
        }
      }
      if (s.stacked || h) {
        var f = {};
        for (e = 0; e < c.length; e++) {
          var p = [(t = l.getDatasetMeta(e)).type, s.stacked === undefined && t.stack === undefined ? e : "", t.stack].join(".");
          if (l.isDatasetVisible(e) && d(t)) {
            if (f[p] === undefined) {
              f[p] = [];
            }
            r = 0;
            o = (i = c[e].data).length;
            if (f[p] === undefined) {
              f[p] = [];
            }
            r = 0;
            o = (i = c[e].data).length;
            for (; r < o; r++) {
              var g = f[p];
              n = a._parseValue(i[r]);
              if (!(isNaN(n.min) || isNaN(n.max) || t.data[r].hidden || n.min < 0 || n.max < 0)) {
                g[r] = g[r] || 0;
                g[r] += n.max;
              }
            }
          }
        }
        B.each(f, function (e) {
          if (e.length > 0) {
            var t = B.min(e);
            var n = B.max(e);
            a.min = Math.min(a.min, t);
            a.max = Math.max(a.max, n);
          }
        });
      } else {
        for (e = 0; e < c.length; e++) {
          t = l.getDatasetMeta(e);
          if (l.isDatasetVisible(e) && d(t)) {
            r = 0;
            o = (i = c[e].data).length;
            r = 0;
            o = (i = c[e].data).length;
            for (; r < o; r++) {
              n = a._parseValue(i[r]);
              if (!(isNaN(n.min) || isNaN(n.max) || t.data[r].hidden || n.min < 0 || n.max < 0)) {
                a.min = Math.min(n.min, a.min);
                a.max = Math.max(n.max, a.max);
                if (n.min !== 0) {
                  a.minNotZero = Math.min(n.min, a.minNotZero);
                }
              }
            }
          }
        }
      }
      a.min = B.isFinite(a.min) ? a.min : null;
      a.max = B.isFinite(a.max) ? a.max : null;
      a.minNotZero = B.isFinite(a.minNotZero) ? a.minNotZero : null;
      this.handleTickRangeOptions();
    },
    handleTickRangeOptions: function () {
      var e = this;
      var t = e.options.ticks;
      e.min = Tn(t.min, e.min);
      e.max = Tn(t.max, e.max);
      if (e.min === e.max) {
        if (e.min !== 0 && e.min !== null) {
          e.min = Math.pow(10, Math.floor(Sn(e.min)) - 1);
          e.max = Math.pow(10, Math.floor(Sn(e.max)) + 1);
        } else {
          e.min = 1;
          e.max = 10;
        }
      }
      if (e.min === null) {
        e.min = Math.pow(10, Math.floor(Sn(e.max)) - 1);
      }
      if (e.max === null) {
        e.max = e.min !== 0 ? Math.pow(10, Math.floor(Sn(e.min)) + 1) : 10;
      }
      if (e.minNotZero === null) {
        if (e.min > 0) {
          e.minNotZero = e.min;
        } else if (e.max < 1) {
          e.minNotZero = Math.pow(10, Math.floor(Sn(e.max)));
        } else {
          e.minNotZero = 1;
        }
      }
    },
    buildTicks: function () {
      var e = this;
      var t = e.options.ticks;
      var n = !e.isHorizontal();
      var i = {
        min: Tn(t.min),
        max: Tn(t.max)
      };
      var r = e.ticks = function (e, t) {
        var n;
        var i;
        var r = [];
        var o = Cn(e.min, Math.pow(10, Math.floor(Sn(t.min))));
        var a = Math.floor(Sn(t.max));
        var s = Math.ceil(t.max / Math.pow(10, a));
        if (o === 0) {
          n = Math.floor(Sn(t.minNotZero));
          i = Math.floor(t.minNotZero / Math.pow(10, n));
          r.push(o);
          o = i * Math.pow(10, n);
        } else {
          n = Math.floor(Sn(o));
          i = Math.floor(o / Math.pow(10, n));
        }
        var l = n < 0 ? Math.pow(10, Math.abs(n)) : 1;
        do {
          r.push(o);
          if (++i == 10) {
            i = 1;
            l = ++n >= 0 ? 1 : l;
          }
          o = Math.round(i * Math.pow(10, n) * l) / l;
        } while (n < a || n === a && i < s);
        var c = Cn(e.max, o);
        r.push(c);
        return r;
      }(i, e);
      e.max = B.max(r);
      e.min = B.min(r);
      if (t.reverse) {
        n = !n;
        e.start = e.max;
        e.end = e.min;
      } else {
        e.start = e.min;
        e.end = e.max;
      }
      if (n) {
        r.reverse();
      }
    },
    convertTicksToLabels: function () {
      this.tickValues = this.ticks.slice();
      hn.prototype.convertTicksToLabels.call(this);
    },
    getLabelForIndex: function (e, t) {
      return this._getScaleLabel(this.chart.data.datasets[t].data[e]);
    },
    getPixelForTick: function (e) {
      var t = this.tickValues;
      if (e < 0 || e > t.length - 1) {
        return null;
      } else {
        return this.getPixelForValue(t[e]);
      }
    },
    _getFirstTickValue: function (e) {
      var t = Math.floor(Sn(e));
      return Math.floor(e / Math.pow(10, t)) * Math.pow(10, t);
    },
    _configure: function () {
      var e = this;
      var t = e.min;
      var n = 0;
      hn.prototype._configure.call(e);
      if (t === 0) {
        t = e._getFirstTickValue(e.minNotZero);
        n = Cn(e.options.ticks.fontSize, R.global.defaultFontSize) / e._length;
      }
      e._startValue = Sn(t);
      e._valueOffset = n;
      e._valueRange = (Sn(e.max) - Sn(t)) / (1 - n);
    },
    getPixelForValue: function (e) {
      var t = this;
      var n = 0;
      if ((e = +t.getRightValue(e)) > t.min && e > 0) {
        n = (Sn(e) - t._startValue) / t._valueRange + t._valueOffset;
      }
      return t.getPixelForDecimal(n);
    },
    getValueForPixel: function (e) {
      var t = this;
      var n = t.getDecimalForPixel(e);
      if (n === 0 && t.min === 0) {
        return 0;
      } else {
        return Math.pow(10, t._startValue + (n - t._valueOffset) * t._valueRange);
      }
    }
  });
  var Dn = kn;
  An._defaults = Dn;
  var En = B.valueOrDefault;
  var On = B.valueAtIndexOrDefault;
  var Mn = B.options.resolve;
  var In = {
    display: true,
    animate: true,
    position: "chartArea",
    angleLines: {
      display: true,
      color: "rgba(0,0,0,0.1)",
      lineWidth: 1,
      borderDash: [],
      borderDashOffset: 0
    },
    gridLines: {
      circular: false
    },
    ticks: {
      showLabelBackdrop: true,
      backdropColor: "rgba(255,255,255,0.75)",
      backdropPaddingY: 2,
      backdropPaddingX: 2,
      callback: Zt.formatters.linear
    },
    pointLabels: {
      display: true,
      fontSize: 10,
      callback: function (e) {
        return e;
      }
    }
  };
  function Pn(e) {
    var t = e.ticks;
    if (t.display && e.display) {
      return En(t.fontSize, R.global.defaultFontSize) + t.backdropPaddingY * 2;
    } else {
      return 0;
    }
  }
  function Ln(e, t, n, i, r) {
    if (e === i || e === r) {
      return {
        start: t - n / 2,
        end: t + n / 2
      };
    } else if (e < i || e > r) {
      return {
        start: t - n,
        end: t
      };
    } else {
      return {
        start: t,
        end: t + n
      };
    }
  }
  function Nn(e) {
    if (e === 0 || e === 180) {
      return "center";
    } else if (e < 180) {
      return "left";
    } else {
      return "right";
    }
  }
  function Fn(e, t, n, i) {
    var r;
    var o;
    var a = n.y + i / 2;
    if (B.isArray(t)) {
      r = 0;
      o = t.length;
      r = 0;
      o = t.length;
      for (; r < o; ++r) {
        e.fillText(t[r], n.x, a);
        a += i;
      }
    } else {
      e.fillText(t, n.x, a);
    }
  }
  function Rn(e, t, n) {
    if (e === 90 || e === 270) {
      n.y -= t.h / 2;
    } else if (e > 270 || e < 90) {
      n.y -= t.h;
    }
  }
  function jn(e) {
    if (B.isNumber(e)) {
      return e;
    } else {
      return 0;
    }
  }
  var $n = vn.extend({
    setDimensions: function () {
      var e = this;
      e.width = e.maxWidth;
      e.height = e.maxHeight;
      e.paddingTop = Pn(e.options) / 2;
      e.xCenter = Math.floor(e.width / 2);
      e.yCenter = Math.floor((e.height - e.paddingTop) / 2);
      e.drawingArea = Math.min(e.height - e.paddingTop, e.width) / 2;
    },
    determineDataLimits: function () {
      var e = this;
      var t = e.chart;
      var n = Number.POSITIVE_INFINITY;
      var i = Number.NEGATIVE_INFINITY;
      B.each(t.data.datasets, function (r, o) {
        if (t.isDatasetVisible(o)) {
          var a = t.getDatasetMeta(o);
          B.each(r.data, function (t, r) {
            var o = +e.getRightValue(t);
            if (!(isNaN(o) || a.data[r].hidden)) {
              n = Math.min(o, n);
              i = Math.max(o, i);
            }
          });
        }
      });
      e.min = n === Number.POSITIVE_INFINITY ? 0 : n;
      e.max = i === Number.NEGATIVE_INFINITY ? 0 : i;
      e.handleTickRangeOptions();
    },
    _computeTickLimit: function () {
      return Math.ceil(this.drawingArea / Pn(this.options));
    },
    convertTicksToLabels: function () {
      var e = this;
      vn.prototype.convertTicksToLabels.call(e);
      e.pointLabels = e.chart.data.labels.map(function () {
        var t = B.callback(e.options.pointLabels.callback, arguments, e);
        if (t || t === 0) {
          return t;
        } else {
          return "";
        }
      });
    },
    getLabelForIndex: function (e, t) {
      return +this.getRightValue(this.chart.data.datasets[t].data[e]);
    },
    fit: function () {
      var e = this.options;
      if (e.display && e.pointLabels.display) {
        (function (e) {
          var t;
          var n;
          var i;
          var r = B.options._parseFont(e.options.pointLabels);
          var o = {
            l: 0,
            r: e.width,
            t: 0,
            b: e.height - e.paddingTop
          };
          var a = {};
          e.ctx.font = r.string;
          e._pointLabelSizes = [];
          var s;
          var l;
          var c;
          var u = e.chart.data.labels.length;
          for (t = 0; t < u; t++) {
            i = e.getPointPosition(t, e.drawingArea + 5);
            s = e.ctx;
            l = r.lineHeight;
            c = e.pointLabels[t];
            n = B.isArray(c) ? {
              w: B.longestText(s, s.font, c),
              h: c.length * l
            } : {
              w: s.measureText(c).width,
              h: l
            };
            e._pointLabelSizes[t] = n;
            var d = e.getIndexAngle(t);
            var h = B.toDegrees(d) % 360;
            var f = Ln(h, i.x, n.w, 0, 180);
            var p = Ln(h, i.y, n.h, 90, 270);
            if (f.start < o.l) {
              o.l = f.start;
              a.l = d;
            }
            if (f.end > o.r) {
              o.r = f.end;
              a.r = d;
            }
            if (p.start < o.t) {
              o.t = p.start;
              a.t = d;
            }
            if (p.end > o.b) {
              o.b = p.end;
              a.b = d;
            }
          }
          e.setReductions(e.drawingArea, o, a);
        })(this);
      } else {
        this.setCenterPoint(0, 0, 0, 0);
      }
    },
    setReductions: function (e, t, n) {
      var i = this;
      var r = t.l / Math.sin(n.l);
      var o = Math.max(t.r - i.width, 0) / Math.sin(n.r);
      var a = -t.t / Math.cos(n.t);
      var s = -Math.max(t.b - (i.height - i.paddingTop), 0) / Math.cos(n.b);
      r = jn(r);
      o = jn(o);
      a = jn(a);
      s = jn(s);
      i.drawingArea = Math.min(Math.floor(e - (r + o) / 2), Math.floor(e - (a + s) / 2));
      i.setCenterPoint(r, o, a, s);
    },
    setCenterPoint: function (e, t, n, i) {
      var r = this;
      var o = r.width - t - r.drawingArea;
      var a = e + r.drawingArea;
      var s = n + r.drawingArea;
      var l = r.height - r.paddingTop - i - r.drawingArea;
      r.xCenter = Math.floor((a + o) / 2 + r.left);
      r.yCenter = Math.floor((s + l) / 2 + r.top + r.paddingTop);
    },
    getIndexAngle: function (e) {
      var t = this.chart;
      var n = (e * (360 / t.data.labels.length) + ((t.options || {}).startAngle || 0)) % 360;
      return (n < 0 ? n + 360 : n) * Math.PI * 2 / 360;
    },
    getDistanceFromCenterForValue: function (e) {
      var t = this;
      if (B.isNullOrUndef(e)) {
        return NaN;
      }
      var n = t.drawingArea / (t.max - t.min);
      if (t.options.ticks.reverse) {
        return (t.max - e) * n;
      } else {
        return (e - t.min) * n;
      }
    },
    getPointPosition: function (e, t) {
      var n = this.getIndexAngle(e) - Math.PI / 2;
      return {
        x: Math.cos(n) * t + this.xCenter,
        y: Math.sin(n) * t + this.yCenter
      };
    },
    getPointPositionForValue: function (e, t) {
      return this.getPointPosition(e, this.getDistanceFromCenterForValue(t));
    },
    getBasePosition: function (e) {
      var t = this.min;
      var n = this.max;
      return this.getPointPositionForValue(e || 0, this.beginAtZero ? 0 : t < 0 && n < 0 ? n : t > 0 && n > 0 ? t : 0);
    },
    _drawGrid: function () {
      var e;
      var t;
      var n;
      var i = this;
      var r = i.ctx;
      var o = i.options;
      var a = o.gridLines;
      var s = o.angleLines;
      var l = En(s.lineWidth, a.lineWidth);
      var c = En(s.color, a.color);
      if (o.pointLabels.display) {
        (function (e) {
          var t = e.ctx;
          var n = e.options;
          var i = n.pointLabels;
          var r = Pn(n);
          var o = e.getDistanceFromCenterForValue(n.ticks.reverse ? e.min : e.max);
          var a = B.options._parseFont(i);
          t.save();
          t.font = a.string;
          t.textBaseline = "middle";
          for (var s = e.chart.data.labels.length - 1; s >= 0; s--) {
            var l = s === 0 ? r / 2 : 0;
            var c = e.getPointPosition(s, o + l + 5);
            var u = On(i.fontColor, s, R.global.defaultFontColor);
            t.fillStyle = u;
            var d = e.getIndexAngle(s);
            var h = B.toDegrees(d);
            t.textAlign = Nn(h);
            Rn(h, e._pointLabelSizes[s], c);
            Fn(t, e.pointLabels[s], c, a.lineHeight);
          }
          t.restore();
        })(i);
      }
      if (a.display) {
        B.each(i.ticks, function (e, n) {
          if (n !== 0) {
            t = i.getDistanceFromCenterForValue(i.ticksAsNumbers[n]);
            (function (e, t, n, i) {
              var r;
              var o = e.ctx;
              var a = t.circular;
              var s = e.chart.data.labels.length;
              var l = On(t.color, i - 1);
              var c = On(t.lineWidth, i - 1);
              if ((a || s) && l && c) {
                o.save();
                o.strokeStyle = l;
                o.lineWidth = c;
                if (o.setLineDash) {
                  o.setLineDash(t.borderDash || []);
                  o.lineDashOffset = t.borderDashOffset || 0;
                }
                o.beginPath();
                if (a) {
                  o.arc(e.xCenter, e.yCenter, n, 0, Math.PI * 2);
                } else {
                  r = e.getPointPosition(0, n);
                  o.moveTo(r.x, r.y);
                  for (var u = 1; u < s; u++) {
                    r = e.getPointPosition(u, n);
                    o.lineTo(r.x, r.y);
                  }
                }
                o.closePath();
                o.stroke();
                o.restore();
              }
            })(i, a, t, n);
          }
        });
      }
      if (s.display && l && c) {
        r.save();
        r.lineWidth = l;
        r.strokeStyle = c;
        if (r.setLineDash) {
          r.setLineDash(Mn([s.borderDash, a.borderDash, []]));
          r.lineDashOffset = Mn([s.borderDashOffset, a.borderDashOffset, 0]);
        }
        e = i.chart.data.labels.length - 1;
        for (; e >= 0; e--) {
          t = i.getDistanceFromCenterForValue(o.ticks.reverse ? i.min : i.max);
          n = i.getPointPosition(e, t);
          r.beginPath();
          r.moveTo(i.xCenter, i.yCenter);
          r.lineTo(n.x, n.y);
          r.stroke();
        }
        r.restore();
      }
    },
    _drawLabels: function () {
      var e = this;
      var t = e.ctx;
      var n = e.options.ticks;
      if (n.display) {
        var i;
        var r;
        var o = e.getIndexAngle(0);
        var a = B.options._parseFont(n);
        var s = En(n.fontColor, R.global.defaultFontColor);
        t.save();
        t.font = a.string;
        t.translate(e.xCenter, e.yCenter);
        t.rotate(o);
        t.textAlign = "center";
        t.textBaseline = "middle";
        B.each(e.ticks, function (o, l) {
          if (l !== 0 || n.reverse) {
            i = e.getDistanceFromCenterForValue(e.ticksAsNumbers[l]);
            if (n.showLabelBackdrop) {
              r = t.measureText(o).width;
              t.fillStyle = n.backdropColor;
              t.fillRect(-r / 2 - n.backdropPaddingX, -i - a.size / 2 - n.backdropPaddingY, r + n.backdropPaddingX * 2, a.size + n.backdropPaddingY * 2);
            }
            t.fillStyle = s;
            t.fillText(o, 0, -i);
          }
        });
        t.restore();
      }
    },
    _drawTitle: B.noop
  });
  var zn = In;
  $n._defaults = zn;
  var Hn = B._deprecated;
  var Bn = B.options.resolve;
  var qn = B.valueOrDefault;
  var Wn = Number.MIN_SAFE_INTEGER || -9007199254740991;
  var Un = Number.MAX_SAFE_INTEGER || 9007199254740991;
  var Vn = {
    millisecond: {
      common: true,
      size: 1,
      steps: 1000
    },
    second: {
      common: true,
      size: 1000,
      steps: 60
    },
    minute: {
      common: true,
      size: 60000,
      steps: 60
    },
    hour: {
      common: true,
      size: 3600000,
      steps: 24
    },
    day: {
      common: true,
      size: 86400000,
      steps: 30
    },
    week: {
      common: false,
      size: 604800000,
      steps: 4
    },
    month: {
      common: true,
      size: 2628000000,
      steps: 12
    },
    quarter: {
      common: false,
      size: 7884000000,
      steps: 4
    },
    year: {
      common: true,
      size: 31540000000
    }
  };
  var Yn = Object.keys(Vn);
  function Xn(e, t) {
    return e - t;
  }
  function Gn(e) {
    return B.valueOrDefault(e.time.min, e.ticks.min);
  }
  function Kn(e) {
    return B.valueOrDefault(e.time.max, e.ticks.max);
  }
  function Qn(e, t, n, i) {
    var r = function (e, t, n) {
      for (var i, r, o, a = 0, s = e.length - 1; a >= 0 && a <= s;) {
        r = e[(i = a + s >> 1) - 1] || null;
        o = e[i];
        if (!r) {
          return {
            lo: null,
            hi: o
          };
        }
        if (o[t] < n) {
          a = i + 1;
        } else {
          if (!(r[t] > n)) {
            return {
              lo: r,
              hi: o
            };
          }
          s = i - 1;
        }
      }
      return {
        lo: o,
        hi: null
      };
    }(e, t, n);
    var o = r.lo ? r.hi ? r.lo : e[e.length - 2] : e[0];
    var a = r.lo ? r.hi ? r.hi : e[e.length - 1] : e[1];
    var s = a[t] - o[t];
    var l = s ? (n - o[t]) / s : 0;
    var c = (a[i] - o[i]) * l;
    return o[i] + c;
  }
  function Zn(e, t) {
    var n = e._adapter;
    var i = e.options.time;
    var r = i.parser;
    var o = r || i.format;
    var a = t;
    if (typeof r == "function") {
      a = r(a);
    }
    if (!B.isFinite(a)) {
      a = typeof o == "string" ? n.parse(a, o) : n.parse(a);
    }
    if (a !== null) {
      return +a;
    } else {
      if (!(r || typeof o != "function")) {
        a = o(t);
        if (!B.isFinite(a)) {
          a = n.parse(a);
        }
      }
      return a;
    }
  }
  function Jn(e, t) {
    if (B.isNullOrUndef(t)) {
      return null;
    }
    var n = e.options.time;
    var i = Zn(e, e.getRightValue(t));
    if (!(i === null)) {
      if (n.round) {
        i = +e._adapter.startOf(i, n.round);
      }
    }
    return i;
  }
  function ei(e, t, n, i) {
    var r;
    var o;
    var a;
    var s = Yn.length;
    for (r = Yn.indexOf(e); r < s - 1; ++r) {
      a = (o = Vn[Yn[r]]).steps ? o.steps : Un;
      if (o.common && Math.ceil((n - t) / (a * o.size)) <= i) {
        return Yn[r];
      }
    }
    return Yn[s - 1];
  }
  function ti(e, t, n) {
    var i;
    var r;
    var o = [];
    var a = {};
    var s = t.length;
    for (i = 0; i < s; ++i) {
      a[r = t[i]] = i;
      o.push({
        value: r,
        major: false
      });
    }
    if (s !== 0 && n) {
      return function (e, t, n, i) {
        var r;
        var o;
        var a = e._adapter;
        var s = +a.startOf(t[0].value, i);
        var l = t[t.length - 1].value;
        for (r = s; r <= l; r = +a.add(r, 1, i)) {
          if ((o = n[r]) >= 0) {
            t[o].major = true;
          }
        }
        return t;
      }(e, o, a, n);
    } else {
      return o;
    }
  }
  var ni = hn.extend({
    initialize: function () {
      this.mergeTicksOptions();
      hn.prototype.initialize.call(this);
    },
    update: function () {
      var e = this;
      var t = e.options;
      var n = t.time || (t.time = {});
      var i = e._adapter = new Qt._date(t.adapters.date);
      Hn("time scale", n.format, "time.format", "time.parser");
      Hn("time scale", n.min, "time.min", "ticks.min");
      Hn("time scale", n.max, "time.max", "ticks.max");
      B.mergeIf(n.displayFormats, i.formats());
      return hn.prototype.update.apply(e, arguments);
    },
    getRightValue: function (e) {
      if (e && e.t !== undefined) {
        e = e.t;
      }
      return hn.prototype.getRightValue.call(this, e);
    },
    determineDataLimits: function () {
      var e;
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s = this;
      var l = s.chart;
      var c = s._adapter;
      var u = s.options;
      var d = u.time.unit || "day";
      var h = Un;
      var f = Wn;
      var p = [];
      var g = [];
      var m = [];
      var v = s._getLabels();
      e = 0;
      n = v.length;
      for (; e < n; ++e) {
        m.push(Jn(s, v[e]));
      }
      e = 0;
      n = (l.data.datasets || []).length;
      for (; e < n; ++e) {
        if (l.isDatasetVisible(e)) {
          r = l.data.datasets[e].data;
          if (B.isObject(r[0])) {
            g[e] = [];
            t = 0;
            i = r.length;
            g[e] = [];
            t = 0;
            i = r.length;
            for (; t < i; ++t) {
              o = Jn(s, r[t]);
              p.push(o);
              g[e][t] = o;
            }
          } else {
            g[e] = m.slice(0);
            if (!a) {
              p = p.concat(m);
              a = true;
            }
          }
        } else {
          g[e] = [];
        }
      }
      if (m.length) {
        h = Math.min(h, m[0]);
        f = Math.max(f, m[m.length - 1]);
      }
      if (p.length) {
        p = n > 1 ? function (e) {
          var t;
          var n;
          var i;
          var r = {};
          var o = [];
          t = 0;
          n = e.length;
          for (; t < n; ++t) {
            if (!r[i = e[t]]) {
              r[i] = true;
              o.push(i);
            }
          }
          return o;
        }(p).sort(Xn) : p.sort(Xn);
        h = Math.min(h, p[0]);
        f = Math.max(f, p[p.length - 1]);
      }
      h = Jn(s, Gn(u)) || h;
      f = Jn(s, Kn(u)) || f;
      h = h === Un ? +c.startOf(Date.now(), d) : h;
      f = f === Wn ? +c.endOf(Date.now(), d) + 1 : f;
      s.min = Math.min(h, f);
      s.max = Math.max(h + 1, f);
      s._table = [];
      s._timestamps = {
        data: p,
        datasets: g,
        labels: m
      };
    },
    buildTicks: function () {
      var e;
      var t;
      var n;
      var i = this;
      var r = i.min;
      var o = i.max;
      var a = i.options;
      var s = a.ticks;
      var l = a.time;
      var c = i._timestamps;
      var u = [];
      var d = i.getLabelCapacity(r);
      var h = s.source;
      var f = a.distribution;
      c = h === "data" || h === "auto" && f === "series" ? c.data : h === "labels" ? c.labels : function (e, t, n, i) {
        var r;
        var o = e._adapter;
        var a = e.options;
        var s = a.time;
        var l = s.unit || ei(s.minUnit, t, n, i);
        var c = Bn([s.stepSize, s.unitStepSize, 1]);
        var u = l === "week" && s.isoWeekday;
        var d = t;
        var h = [];
        if (u) {
          d = +o.startOf(d, "isoWeek", u);
        }
        d = +o.startOf(d, u ? "day" : l);
        if (o.diff(n, t, l) > c * 100000) {
          throw t + " and " + n + " are too far apart with stepSize of " + c + " " + l;
        }
        for (r = d; r < n; r = +o.add(r, c, l)) {
          h.push(r);
        }
        if (!(r !== n && a.bounds !== "ticks")) {
          h.push(r);
        }
        return h;
      }(i, r, o, d);
      if (a.bounds === "ticks" && c.length) {
        r = c[0];
        o = c[c.length - 1];
      }
      r = Jn(i, Gn(a)) || r;
      o = Jn(i, Kn(a)) || o;
      e = 0;
      t = c.length;
      for (; e < t; ++e) {
        if ((n = c[e]) >= r && n <= o) {
          u.push(n);
        }
      }
      i.min = r;
      i.max = o;
      i._unit = l.unit || (s.autoSkip ? ei(l.minUnit, i.min, i.max, d) : function (e, t, n, i, r) {
        var o;
        var a;
        for (o = Yn.length - 1; o >= Yn.indexOf(n); o--) {
          a = Yn[o];
          if (Vn[a].common && e._adapter.diff(r, i, a) >= t - 1) {
            return a;
          }
        }
        return Yn[n ? Yn.indexOf(n) : 0];
      }(i, u.length, l.minUnit, i.min, i.max));
      i._majorUnit = s.major.enabled && i._unit !== "year" ? function (e) {
        for (var t = Yn.indexOf(e) + 1, n = Yn.length; t < n; ++t) {
          if (Vn[Yn[t]].common) {
            return Yn[t];
          }
        }
      }(i._unit) : undefined;
      i._table = function (e, t, n, i) {
        if (i === "linear" || !e.length) {
          return [{
            time: t,
            pos: 0
          }, {
            time: n,
            pos: 1
          }];
        }
        var r;
        var o;
        var a;
        var s;
        var l;
        var c = [];
        var u = [t];
        r = 0;
        o = e.length;
        for (; r < o; ++r) {
          if ((s = e[r]) > t && s < n) {
            u.push(s);
          }
        }
        u.push(n);
        r = 0;
        o = u.length;
        for (; r < o; ++r) {
          l = u[r + 1];
          a = u[r - 1];
          s = u[r];
          if (!(a !== undefined && l !== undefined && Math.round((l + a) / 2) === s)) {
            c.push({
              time: s,
              pos: r / (o - 1)
            });
          }
        }
        return c;
      }(i._timestamps.data, r, o, f);
      i._offsets = function (e, t, n, i, r) {
        var o;
        var a;
        var s = 0;
        var l = 0;
        if (r.offset && t.length) {
          o = Qn(e, "time", t[0], "pos");
          s = t.length === 1 ? 1 - o : (Qn(e, "time", t[1], "pos") - o) / 2;
          a = Qn(e, "time", t[t.length - 1], "pos");
          l = t.length === 1 ? a : (a - Qn(e, "time", t[t.length - 2], "pos")) / 2;
        }
        return {
          start: s,
          end: l,
          factor: 1 / (s + 1 + l)
        };
      }(i._table, u, 0, 0, a);
      if (s.reverse) {
        u.reverse();
      }
      return ti(i, u, i._majorUnit);
    },
    getLabelForIndex: function (e, t) {
      var n = this;
      var i = n._adapter;
      var r = n.chart.data;
      var o = n.options.time;
      var a = r.labels && e < r.labels.length ? r.labels[e] : "";
      var s = r.datasets[t].data[e];
      if (B.isObject(s)) {
        a = n.getRightValue(s);
      }
      if (o.tooltipFormat) {
        return i.format(Zn(n, a), o.tooltipFormat);
      } else if (typeof a == "string") {
        return a;
      } else {
        return i.format(Zn(n, a), o.displayFormats.datetime);
      }
    },
    tickFormatFunction: function (e, t, n, i) {
      var r = this._adapter;
      var o = this.options;
      var a = o.time.displayFormats;
      var s = a[this._unit];
      var l = this._majorUnit;
      var c = a[l];
      var u = n[t];
      var d = o.ticks;
      var h = l && c && u && u.major;
      var f = r.format(e, i || (h ? c : s));
      var p = h ? d.major : d.minor;
      var g = Bn([p.callback, p.userCallback, d.callback, d.userCallback]);
      if (g) {
        return g(f, t, n);
      } else {
        return f;
      }
    },
    convertTicksToLabels: function (e) {
      var t;
      var n;
      var i = [];
      t = 0;
      n = e.length;
      for (; t < n; ++t) {
        i.push(this.tickFormatFunction(e[t].value, t, e));
      }
      return i;
    },
    getPixelForOffset: function (e) {
      var t = this._offsets;
      var n = Qn(this._table, "time", e, "pos");
      return this.getPixelForDecimal((t.start + n) * t.factor);
    },
    getPixelForValue: function (e, t, n) {
      var i = null;
      if (t !== undefined && n !== undefined) {
        i = this._timestamps.datasets[n][t];
      }
      if (i === null) {
        i = Jn(this, e);
      }
      if (i !== null) {
        return this.getPixelForOffset(i);
      }
    },
    getPixelForTick: function (e) {
      var t = this.getTicks();
      if (e >= 0 && e < t.length) {
        return this.getPixelForOffset(t[e].value);
      } else {
        return null;
      }
    },
    getValueForPixel: function (e) {
      var t = this._offsets;
      var n = this.getDecimalForPixel(e) / t.factor - t.end;
      var i = Qn(this._table, "pos", n, "time");
      return this._adapter._create(i);
    },
    _getLabelSize: function (e) {
      var t = this.options.ticks;
      var n = this.ctx.measureText(e).width;
      var i = B.toRadians(this.isHorizontal() ? t.maxRotation : t.minRotation);
      var r = Math.cos(i);
      var o = Math.sin(i);
      var a = qn(t.fontSize, R.global.defaultFontSize);
      return {
        w: n * r + a * o,
        h: n * o + a * r
      };
    },
    getLabelWidth: function (e) {
      return this._getLabelSize(e).w;
    },
    getLabelCapacity: function (e) {
      var t = this;
      var n = t.options.time;
      var i = n.displayFormats;
      var r = i[n.unit] || i.millisecond;
      var o = t.tickFormatFunction(e, 0, ti(t, [e], t._majorUnit), r);
      var a = t._getLabelSize(o);
      var s = Math.floor(t.isHorizontal() ? t.width / a.w : t.height / a.h);
      if (t.options.offset) {
        s--;
      }
      if (s > 0) {
        return s;
      } else {
        return 1;
      }
    }
  });
  ni._defaults = {
    position: "bottom",
    distribution: "linear",
    bounds: "data",
    adapters: {},
    time: {
      parser: false,
      unit: false,
      round: false,
      displayFormat: false,
      isoWeekday: false,
      minUnit: "millisecond",
      displayFormats: {}
    },
    ticks: {
      autoSkip: false,
      source: "auto",
      major: {
        enabled: false
      }
    }
  };
  var ii = {
    category: pn,
    linear: xn,
    logarithmic: An,
    radialLinear: $n,
    time: ni
  };
  var ri = {
    datetime: "MMM D, YYYY, h:mm:ss a",
    millisecond: "h:mm:ss.SSS a",
    second: "h:mm:ss a",
    minute: "h:mm a",
    hour: "hA",
    day: "MMM D",
    week: "ll",
    month: "MMM YYYY",
    quarter: "[Q]Q - YYYY",
    year: "YYYY"
  };
  Qt._date.override(typeof e == "function" ? {
    _id: "moment",
    formats: function () {
      return ri;
    },
    parse: function (t, n) {
      if (typeof t == "string" && typeof n == "string") {
        t = e(t, n);
      } else if (!(t instanceof e)) {
        t = e(t);
      }
      if (t.isValid()) {
        return t.valueOf();
      } else {
        return null;
      }
    },
    format: function (t, n) {
      return e(t).format(n);
    },
    add: function (t, n, i) {
      return e(t).add(n, i).valueOf();
    },
    diff: function (t, n, i) {
      return e(t).diff(e(n), i);
    },
    startOf: function (t, n, i) {
      t = e(t);
      if (n === "isoWeek") {
        return t.isoWeekday(i).valueOf();
      } else {
        return t.startOf(n).valueOf();
      }
    },
    endOf: function (t, n) {
      return e(t).endOf(n).valueOf();
    },
    _create: function (t) {
      return e(t);
    }
  } : {});
  R._set("global", {
    plugins: {
      filler: {
        propagate: true
      }
    }
  });
  var oi = {
    dataset: function (e) {
      var t = e.fill;
      var n = e.chart;
      var i = n.getDatasetMeta(t);
      var r = i && n.isDatasetVisible(t) && i.dataset._children || [];
      var o = r.length || 0;
      if (o) {
        return function (e, t) {
          return t < o && r[t]._view || null;
        };
      } else {
        return null;
      }
    },
    boundary: function (e) {
      var t = e.boundary;
      var n = t ? t.x : null;
      var i = t ? t.y : null;
      if (B.isArray(t)) {
        return function (e, n) {
          return t[n];
        };
      } else {
        return function (e) {
          return {
            x: n === null ? e.x : n,
            y: i === null ? e.y : i
          };
        };
      }
    }
  };
  function ai(e, t, n) {
    var i;
    var r = e._model || {};
    var o = r.fill;
    if (o === undefined) {
      o = !!r.backgroundColor;
    }
    if (o === false || o === null) {
      return false;
    }
    if (o === true) {
      return "origin";
    }
    i = parseFloat(o, 10);
    if (isFinite(i) && Math.floor(i) === i) {
      if (!(o[0] !== "-" && o[0] !== "+")) {
        i = t + i;
      }
      return !(i === t || i < 0 || i >= n) && i;
    }
    switch (o) {
      case "bottom":
        return "start";
      case "top":
        return "end";
      case "zero":
        return "origin";
      case "origin":
      case "start":
      case "end":
        return o;
      default:
        return false;
    }
  }
  function si(e) {
    if ((e.el._scale || {}).getPointPositionForValue) {
      return function (e) {
        var t;
        var n;
        var i;
        var r;
        var o;
        var a = e.el._scale;
        var s = a.options;
        var l = a.chart.data.labels.length;
        var c = e.fill;
        var u = [];
        if (!l) {
          return null;
        }
        t = s.ticks.reverse ? a.max : a.min;
        n = s.ticks.reverse ? a.min : a.max;
        i = a.getPointPositionForValue(0, t);
        r = 0;
        for (; r < l; ++r) {
          o = c === "start" || c === "end" ? a.getPointPositionForValue(r, c === "start" ? t : n) : a.getBasePosition(r);
          if (s.gridLines.circular) {
            o.cx = i.x;
            o.cy = i.y;
            o.angle = a.getIndexAngle(r) - Math.PI / 2;
          }
          u.push(o);
        }
        return u;
      }(e);
    } else {
      return function (e) {
        var t;
        var n = e.el._model || {};
        var i = e.el._scale || {};
        var r = e.fill;
        var o = null;
        if (isFinite(r)) {
          return null;
        }
        if (r === "start") {
          o = n.scaleBottom === undefined ? i.bottom : n.scaleBottom;
        } else if (r === "end") {
          o = n.scaleTop === undefined ? i.top : n.scaleTop;
        } else if (n.scaleZero !== undefined) {
          o = n.scaleZero;
        } else if (i.getBasePixel) {
          o = i.getBasePixel();
        }
        if (o != null) {
          if (o.x !== undefined && o.y !== undefined) {
            return o;
          }
          if (B.isFinite(o)) {
            return {
              x: (t = i.isHorizontal()) ? o : null,
              y: t ? null : o
            };
          }
        }
        return null;
      }(e);
    }
  }
  function li(e, t, n) {
    var i;
    var r = e[t].fill;
    var o = [t];
    if (!n) {
      return r;
    }
    for (; r !== false && o.indexOf(r) === -1;) {
      if (!isFinite(r)) {
        return r;
      }
      if (!(i = e[r])) {
        return false;
      }
      if (i.visible) {
        return r;
      }
      o.push(r);
      r = i.fill;
    }
    return false;
  }
  function ci(e) {
    var t = e.fill;
    var n = "dataset";
    if (t === false) {
      return null;
    } else {
      if (!isFinite(t)) {
        n = "boundary";
      }
      return oi[n](e);
    }
  }
  function ui(e) {
    return e && !e.skip;
  }
  function di(e, t, n, i, r) {
    var o;
    var a;
    var s;
    var l;
    if (i && r) {
      e.moveTo(t[0].x, t[0].y);
      o = 1;
      for (; o < i; ++o) {
        B.canvas.lineTo(e, t[o - 1], t[o]);
      }
      if (n[0].angle === undefined) {
        e.lineTo(n[r - 1].x, n[r - 1].y);
        o = r - 1;
        e.lineTo(n[r - 1].x, n[r - 1].y);
        o = r - 1;
        for (; o > 0; --o) {
          B.canvas.lineTo(e, n[o], n[o - 1], true);
        }
      } else {
        a = n[0].cx;
        s = n[0].cy;
        l = Math.sqrt(Math.pow(n[0].x - a, 2) + Math.pow(n[0].y - s, 2));
        o = r - 1;
        a = n[0].cx;
        s = n[0].cy;
        l = Math.sqrt(Math.pow(n[0].x - a, 2) + Math.pow(n[0].y - s, 2));
        o = r - 1;
        for (; o > 0; --o) {
          e.arc(a, s, l, n[o].angle, n[o - 1].angle, true);
        }
      }
    }
  }
  function hi(e, t, n, i, r, o) {
    var a;
    var s;
    var l;
    var c;
    var u;
    var d;
    var h;
    var f;
    var p = t.length;
    var g = i.spanGaps;
    var m = [];
    var v = [];
    var y = 0;
    var b = 0;
    e.beginPath();
    a = 0;
    s = p;
    for (; a < s; ++a) {
      u = n(c = t[l = a % p]._view, l, i);
      d = ui(c);
      h = ui(u);
      if (o && f === undefined && d) {
        s = p + (f = a + 1);
      }
      if (d && h) {
        y = m.push(c);
        b = v.push(u);
      } else if (y && b) {
        if (g) {
          if (d) {
            m.push(c);
          }
          if (h) {
            v.push(u);
          }
        } else {
          di(e, m, v, y, b);
          y = b = 0;
          m = [];
          v = [];
        }
      }
    }
    di(e, m, v, y, b);
    e.closePath();
    e.fillStyle = r;
    e.fill();
  }
  var fi = {
    id: "filler",
    afterDatasetsUpdate: function (e, t) {
      var n;
      var i;
      var r;
      var o;
      var a = (e.data.datasets || []).length;
      var s = t.propagate;
      var l = [];
      for (i = 0; i < a; ++i) {
        o = null;
        if ((r = (n = e.getDatasetMeta(i)).dataset) && r._model && r instanceof be.Line) {
          o = {
            visible: e.isDatasetVisible(i),
            fill: ai(r, i, a),
            chart: e,
            el: r
          };
        }
        n.$filler = o;
        l.push(o);
      }
      for (i = 0; i < a; ++i) {
        if (o = l[i]) {
          o.fill = li(l, i, s);
          o.boundary = si(o);
          o.mapper = ci(o);
        }
      }
    },
    beforeDatasetsDraw: function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l = e._getSortedVisibleDatasetMetas();
      var c = e.ctx;
      for (n = l.length - 1; n >= 0; --n) {
        if ((t = l[n].$filler) && t.visible) {
          r = (i = t.el)._view;
          o = i._children || [];
          a = t.mapper;
          s = r.backgroundColor || R.global.defaultColor;
          if (a && s && o.length) {
            B.canvas.clipArea(c, e.chartArea);
            hi(c, o, a, r, s, i._loop);
            B.canvas.unclipArea(c);
          }
        }
      }
    }
  };
  var pi = B.rtl.getRtlAdapter;
  var gi = B.noop;
  var mi = B.valueOrDefault;
  function vi(e, t) {
    if (e.usePointStyle && e.boxWidth > t) {
      return t;
    } else {
      return e.boxWidth;
    }
  }
  R._set("global", {
    legend: {
      display: true,
      position: "top",
      align: "center",
      fullWidth: true,
      reverse: false,
      weight: 1000,
      onClick: function (e, t) {
        var n = t.datasetIndex;
        var i = this.chart;
        var r = i.getDatasetMeta(n);
        r.hidden = r.hidden === null ? !i.data.datasets[n].hidden : null;
        i.update();
      },
      onHover: null,
      onLeave: null,
      labels: {
        boxWidth: 40,
        padding: 10,
        generateLabels: function (e) {
          var t = e.data.datasets;
          var n = e.options.legend || {};
          var i = n.labels && n.labels.usePointStyle;
          return e._getSortedDatasetMetas().map(function (n) {
            var r = n.controller.getStyle(i ? 0 : undefined);
            return {
              text: t[n.index].label,
              fillStyle: r.backgroundColor,
              hidden: !e.isDatasetVisible(n.index),
              lineCap: r.borderCapStyle,
              lineDash: r.borderDash,
              lineDashOffset: r.borderDashOffset,
              lineJoin: r.borderJoinStyle,
              lineWidth: r.borderWidth,
              strokeStyle: r.borderColor,
              pointStyle: r.pointStyle,
              rotation: r.rotation,
              datasetIndex: n.index
            };
          }, this);
        }
      }
    },
    legendCallback: function (e) {
      var t;
      var n;
      var i;
      var r = document.createElement("ul");
      var o = e.data.datasets;
      r.setAttribute("class", e.id + "-legend");
      t = 0;
      n = o.length;
      for (; t < n; t++) {
        (i = r.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor = o[t].backgroundColor;
        if (o[t].label) {
          i.appendChild(document.createTextNode(o[t].label));
        }
      }
      return r.outerHTML;
    }
  });
  var yi = X.extend({
    initialize: function (e) {
      B.extend(this, e);
      this.legendHitBoxes = [];
      this._hoveredItem = null;
      this.doughnutMode = false;
    },
    beforeUpdate: gi,
    update: function (e, t, n) {
      var i = this;
      i.beforeUpdate();
      i.maxWidth = e;
      i.maxHeight = t;
      i.margins = n;
      i.beforeSetDimensions();
      i.setDimensions();
      i.afterSetDimensions();
      i.beforeBuildLabels();
      i.buildLabels();
      i.afterBuildLabels();
      i.beforeFit();
      i.fit();
      i.afterFit();
      i.afterUpdate();
      return i.minSize;
    },
    afterUpdate: gi,
    beforeSetDimensions: gi,
    setDimensions: function () {
      var e = this;
      if (e.isHorizontal()) {
        e.width = e.maxWidth;
        e.left = 0;
        e.right = e.width;
      } else {
        e.height = e.maxHeight;
        e.top = 0;
        e.bottom = e.height;
      }
      e.paddingLeft = 0;
      e.paddingTop = 0;
      e.paddingRight = 0;
      e.paddingBottom = 0;
      e.minSize = {
        width: 0,
        height: 0
      };
    },
    afterSetDimensions: gi,
    beforeBuildLabels: gi,
    buildLabels: function () {
      var e = this;
      var t = e.options.labels || {};
      var n = B.callback(t.generateLabels, [e.chart], e) || [];
      if (t.filter) {
        n = n.filter(function (n) {
          return t.filter(n, e.chart.data);
        });
      }
      if (e.options.reverse) {
        n.reverse();
      }
      e.legendItems = n;
    },
    afterBuildLabels: gi,
    beforeFit: gi,
    fit: function () {
      var e = this;
      var t = e.options;
      var n = t.labels;
      var i = t.display;
      var r = e.ctx;
      var o = B.options._parseFont(n);
      var a = o.size;
      var s = e.legendHitBoxes = [];
      var l = e.minSize;
      var c = e.isHorizontal();
      if (c) {
        l.width = e.maxWidth;
        l.height = i ? 10 : 0;
      } else {
        l.width = i ? 10 : 0;
        l.height = e.maxHeight;
      }
      if (i) {
        r.font = o.string;
        if (c) {
          var u = e.lineWidths = [0];
          var d = 0;
          r.textAlign = "left";
          r.textBaseline = "middle";
          B.each(e.legendItems, function (e, t) {
            var i = vi(n, a) + a / 2 + r.measureText(e.text).width;
            if (t === 0 || u[u.length - 1] + i + n.padding * 2 > l.width) {
              d += a + n.padding;
              u[u.length - (t > 0 ? 0 : 1)] = 0;
            }
            s[t] = {
              left: 0,
              top: 0,
              width: i,
              height: a
            };
            u[u.length - 1] += i + n.padding;
          });
          l.height += d;
        } else {
          var h = n.padding;
          var f = e.columnWidths = [];
          var p = e.columnHeights = [];
          var g = n.padding;
          var m = 0;
          var v = 0;
          B.each(e.legendItems, function (e, t) {
            var i = vi(n, a) + a / 2 + r.measureText(e.text).width;
            if (t > 0 && v + a + h * 2 > l.height) {
              g += m + n.padding;
              f.push(m);
              p.push(v);
              m = 0;
              v = 0;
            }
            m = Math.max(m, i);
            v += a + h;
            s[t] = {
              left: 0,
              top: 0,
              width: i,
              height: a
            };
          });
          g += m;
          f.push(m);
          p.push(v);
          l.width += g;
        }
        e.width = l.width;
        e.height = l.height;
      } else {
        e.width = l.width = e.height = l.height = 0;
      }
    },
    afterFit: gi,
    isHorizontal: function () {
      return this.options.position === "top" || this.options.position === "bottom";
    },
    draw: function () {
      var e = this;
      var t = e.options;
      var n = t.labels;
      var i = R.global;
      var r = i.defaultColor;
      var o = i.elements.line;
      var a = e.height;
      var s = e.columnHeights;
      var l = e.width;
      var c = e.lineWidths;
      if (t.display) {
        var u;
        var d = pi(t.rtl, e.left, e.minSize.width);
        var h = e.ctx;
        var f = mi(n.fontColor, i.defaultFontColor);
        var p = B.options._parseFont(n);
        var g = p.size;
        h.textAlign = d.textAlign("left");
        h.textBaseline = "middle";
        h.lineWidth = 0.5;
        h.strokeStyle = f;
        h.fillStyle = f;
        h.font = p.string;
        var m = vi(n, g);
        var v = e.legendHitBoxes;
        var y = function (e, i) {
          switch (t.align) {
            case "start":
              return n.padding;
            case "end":
              return e - i;
            default:
              return (e - i + n.padding) / 2;
          }
        };
        var b = e.isHorizontal();
        u = b ? {
          x: e.left + y(l, c[0]),
          y: e.top + n.padding,
          line: 0
        } : {
          x: e.left + n.padding,
          y: e.top + y(a, s[0]),
          line: 0
        };
        B.rtl.overrideTextDirection(e.ctx, t.textDirection);
        var w = g + n.padding;
        B.each(e.legendItems, function (t, i) {
          var f = h.measureText(t.text).width;
          var p = m + g / 2 + f;
          var x = u.x;
          var _ = u.y;
          d.setWidth(e.minSize.width);
          if (b) {
            if (i > 0 && x + p + n.padding > e.left + e.minSize.width) {
              _ = u.y += w;
              u.line++;
              x = u.x = e.left + y(l, c[u.line]);
            }
          } else if (i > 0 && _ + w > e.top + e.minSize.height) {
            x = u.x = x + e.columnWidths[u.line] + n.padding;
            u.line++;
            _ = u.y = e.top + y(a, s[u.line]);
          }
          var C = d.x(x);
          !function (e, t, i) {
            if (!(isNaN(m) || m <= 0)) {
              h.save();
              var a = mi(i.lineWidth, o.borderWidth);
              h.fillStyle = mi(i.fillStyle, r);
              h.lineCap = mi(i.lineCap, o.borderCapStyle);
              h.lineDashOffset = mi(i.lineDashOffset, o.borderDashOffset);
              h.lineJoin = mi(i.lineJoin, o.borderJoinStyle);
              h.lineWidth = a;
              h.strokeStyle = mi(i.strokeStyle, r);
              if (h.setLineDash) {
                h.setLineDash(mi(i.lineDash, o.borderDash));
              }
              if (n && n.usePointStyle) {
                var s = m * Math.SQRT2 / 2;
                var l = d.xPlus(e, m / 2);
                var c = t + g / 2;
                B.canvas.drawPoint(h, i.pointStyle, s, l, c, i.rotation);
              } else {
                h.fillRect(d.leftForLtr(e, m), t, m, g);
                if (a !== 0) {
                  h.strokeRect(d.leftForLtr(e, m), t, m, g);
                }
              }
              h.restore();
            }
          }(C, _, t);
          v[i].left = d.leftForLtr(C, v[i].width);
          v[i].top = _;
          (function (e, t, n, i) {
            var r = g / 2;
            var o = d.xPlus(e, m + r);
            var a = t + r;
            h.fillText(n.text, o, a);
            if (n.hidden) {
              h.beginPath();
              h.lineWidth = 2;
              h.moveTo(o, a);
              h.lineTo(d.xPlus(o, i), a);
              h.stroke();
            }
          })(C, _, t, f);
          if (b) {
            u.x += p + n.padding;
          } else {
            u.y += w;
          }
        });
        B.rtl.restoreTextDirection(e.ctx, t.textDirection);
      }
    },
    _getLegendItemAt: function (e, t) {
      var n;
      var i;
      var r;
      var o = this;
      if (e >= o.left && e <= o.right && t >= o.top && t <= o.bottom) {
        r = o.legendHitBoxes;
        n = 0;
        r = o.legendHitBoxes;
        n = 0;
        for (; n < r.length; ++n) {
          if (e >= (i = r[n]).left && e <= i.left + i.width && t >= i.top && t <= i.top + i.height) {
            return o.legendItems[n];
          }
        }
      }
      return null;
    },
    handleEvent: function (e) {
      var t;
      var n = this;
      var i = n.options;
      var r = e.type === "mouseup" ? "click" : e.type;
      if (r === "mousemove") {
        if (!i.onHover && !i.onLeave) {
          return;
        }
      } else {
        if (r !== "click") {
          return;
        }
        if (!i.onClick) {
          return;
        }
      }
      t = n._getLegendItemAt(e.x, e.y);
      if (r === "click") {
        if (t && i.onClick) {
          i.onClick.call(n, e.native, t);
        }
      } else {
        if (i.onLeave && t !== n._hoveredItem) {
          if (n._hoveredItem) {
            i.onLeave.call(n, e.native, n._hoveredItem);
          }
          n._hoveredItem = t;
        }
        if (i.onHover && t) {
          i.onHover.call(n, e.native, t);
        }
      }
    }
  });
  function bi(e, t) {
    var n = new yi({
      ctx: e.ctx,
      options: t,
      chart: e
    });
    dt.configure(e, n, t);
    dt.addBox(e, n);
    e.legend = n;
  }
  var wi = {
    id: "legend",
    _element: yi,
    beforeInit: function (e) {
      var t = e.options.legend;
      if (t) {
        bi(e, t);
      }
    },
    beforeUpdate: function (e) {
      var t = e.options.legend;
      var n = e.legend;
      if (t) {
        B.mergeIf(t, R.global.legend);
        if (n) {
          dt.configure(e, n, t);
          n.options = t;
        } else {
          bi(e, t);
        }
      } else if (n) {
        dt.removeBox(e, n);
        delete e.legend;
      }
    },
    afterEvent: function (e, t) {
      var n = e.legend;
      if (n) {
        n.handleEvent(t);
      }
    }
  };
  var xi = B.noop;
  R._set("global", {
    title: {
      display: false,
      fontStyle: "bold",
      fullWidth: true,
      padding: 10,
      position: "top",
      text: "",
      weight: 2000
    }
  });
  var _i = X.extend({
    initialize: function (e) {
      B.extend(this, e);
      this.legendHitBoxes = [];
    },
    beforeUpdate: xi,
    update: function (e, t, n) {
      var i = this;
      i.beforeUpdate();
      i.maxWidth = e;
      i.maxHeight = t;
      i.margins = n;
      i.beforeSetDimensions();
      i.setDimensions();
      i.afterSetDimensions();
      i.beforeBuildLabels();
      i.buildLabels();
      i.afterBuildLabels();
      i.beforeFit();
      i.fit();
      i.afterFit();
      i.afterUpdate();
      return i.minSize;
    },
    afterUpdate: xi,
    beforeSetDimensions: xi,
    setDimensions: function () {
      var e = this;
      if (e.isHorizontal()) {
        e.width = e.maxWidth;
        e.left = 0;
        e.right = e.width;
      } else {
        e.height = e.maxHeight;
        e.top = 0;
        e.bottom = e.height;
      }
      e.paddingLeft = 0;
      e.paddingTop = 0;
      e.paddingRight = 0;
      e.paddingBottom = 0;
      e.minSize = {
        width: 0,
        height: 0
      };
    },
    afterSetDimensions: xi,
    beforeBuildLabels: xi,
    buildLabels: xi,
    afterBuildLabels: xi,
    beforeFit: xi,
    fit: function () {
      var e;
      var t = this;
      var n = t.options;
      var i = t.minSize = {};
      var r = t.isHorizontal();
      if (n.display) {
        e = (B.isArray(n.text) ? n.text.length : 1) * B.options._parseFont(n).lineHeight + n.padding * 2;
        t.width = i.width = r ? t.maxWidth : e;
        t.height = i.height = r ? e : t.maxHeight;
      } else {
        t.width = i.width = t.height = i.height = 0;
      }
    },
    afterFit: xi,
    isHorizontal: function () {
      var e = this.options.position;
      return e === "top" || e === "bottom";
    },
    draw: function () {
      var e = this;
      var t = e.ctx;
      var n = e.options;
      if (n.display) {
        var i;
        var r;
        var o;
        var a = B.options._parseFont(n);
        var s = a.lineHeight;
        var l = s / 2 + n.padding;
        var c = 0;
        var u = e.top;
        var d = e.left;
        var h = e.bottom;
        var f = e.right;
        t.fillStyle = B.valueOrDefault(n.fontColor, R.global.defaultFontColor);
        t.font = a.string;
        if (e.isHorizontal()) {
          r = d + (f - d) / 2;
          o = u + l;
          i = f - d;
        } else {
          r = n.position === "left" ? d + l : f - l;
          o = u + (h - u) / 2;
          i = h - u;
          c = Math.PI * (n.position === "left" ? -0.5 : 0.5);
        }
        t.save();
        t.translate(r, o);
        t.rotate(c);
        t.textAlign = "center";
        t.textBaseline = "middle";
        var p = n.text;
        if (B.isArray(p)) {
          for (var g = 0, m = 0; m < p.length; ++m) {
            t.fillText(p[m], 0, g, i);
            g += s;
          }
        } else {
          t.fillText(p, 0, 0, i);
        }
        t.restore();
      }
    }
  });
  function Ci(e, t) {
    var n = new _i({
      ctx: e.ctx,
      options: t,
      chart: e
    });
    dt.configure(e, n, t);
    dt.addBox(e, n);
    e.titleBlock = n;
  }
  var Si = {};
  var ki = fi;
  var Ti = wi;
  var Ai = {
    id: "title",
    _element: _i,
    beforeInit: function (e) {
      var t = e.options.title;
      if (t) {
        Ci(e, t);
      }
    },
    beforeUpdate: function (e) {
      var t = e.options.title;
      var n = e.titleBlock;
      if (t) {
        B.mergeIf(t, R.global.title);
        if (n) {
          dt.configure(e, n, t);
          n.options = t;
        } else {
          Ci(e, t);
        }
      } else if (n) {
        dt.removeBox(e, n);
        delete e.titleBlock;
      }
    }
  };
  Si.filler = ki;
  Si.legend = Ti;
  Si.title = Ai;
  Xt.helpers = B;
  (function () {
    function e(e, t, n) {
      var i;
      if (typeof e == "string") {
        i = parseInt(e, 10);
        if (e.indexOf("%") !== -1) {
          i = i / 100 * t.parentNode[n];
        }
      } else {
        i = e;
      }
      return i;
    }
    function t(e) {
      return e != null && e !== "none";
    }
    function n(n, i, r) {
      var o = document.defaultView;
      var a = B._getParentNode(n);
      var s = o.getComputedStyle(n)[i];
      var l = o.getComputedStyle(a)[i];
      var c = t(s);
      var u = t(l);
      var d = Number.POSITIVE_INFINITY;
      if (c || u) {
        return Math.min(c ? e(s, n, r) : d, u ? e(l, a, r) : d);
      } else {
        return "none";
      }
    }
    B.where = function (e, t) {
      if (B.isArray(e) && Array.prototype.filter) {
        return e.filter(t);
      }
      var n = [];
      B.each(e, function (e) {
        if (t(e)) {
          n.push(e);
        }
      });
      return n;
    };
    B.findIndex = Array.prototype.findIndex ? function (e, t, n) {
      return e.findIndex(t, n);
    } : function (e, t, n) {
      n = n === undefined ? e : n;
      for (var i = 0, r = e.length; i < r; ++i) {
        if (t.call(n, e[i], i, e)) {
          return i;
        }
      }
      return -1;
    };
    B.findNextWhere = function (e, t, n) {
      if (B.isNullOrUndef(n)) {
        n = -1;
      }
      for (var i = n + 1; i < e.length; i++) {
        var r = e[i];
        if (t(r)) {
          return r;
        }
      }
    };
    B.findPreviousWhere = function (e, t, n) {
      if (B.isNullOrUndef(n)) {
        n = e.length;
      }
      for (var i = n - 1; i >= 0; i--) {
        var r = e[i];
        if (t(r)) {
          return r;
        }
      }
    };
    B.isNumber = function (e) {
      return !isNaN(parseFloat(e)) && isFinite(e);
    };
    B.almostEquals = function (e, t, n) {
      return Math.abs(e - t) < n;
    };
    B.almostWhole = function (e, t) {
      var n = Math.round(e);
      return n - t <= e && n + t >= e;
    };
    B.max = function (e) {
      return e.reduce(function (e, t) {
        if (isNaN(t)) {
          return e;
        } else {
          return Math.max(e, t);
        }
      }, Number.NEGATIVE_INFINITY);
    };
    B.min = function (e) {
      return e.reduce(function (e, t) {
        if (isNaN(t)) {
          return e;
        } else {
          return Math.min(e, t);
        }
      }, Number.POSITIVE_INFINITY);
    };
    B.sign = Math.sign ? function (e) {
      return Math.sign(e);
    } : function (e) {
      if ((e = +e) == 0 || isNaN(e)) {
        return e;
      } else if (e > 0) {
        return 1;
      } else {
        return -1;
      }
    };
    B.toRadians = function (e) {
      return e * (Math.PI / 180);
    };
    B.toDegrees = function (e) {
      return e * (180 / Math.PI);
    };
    B._decimalPlaces = function (e) {
      if (B.isFinite(e)) {
        for (var t = 1, n = 0; Math.round(e * t) / t !== e;) {
          t *= 10;
          n++;
        }
        return n;
      }
    };
    B.getAngleFromPoint = function (e, t) {
      var n = t.x - e.x;
      var i = t.y - e.y;
      var r = Math.sqrt(n * n + i * i);
      var o = Math.atan2(i, n);
      if (o < Math.PI * -0.5) {
        o += Math.PI * 2;
      }
      return {
        angle: o,
        distance: r
      };
    };
    B.distanceBetweenPoints = function (e, t) {
      return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
    };
    B.aliasPixel = function (e) {
      if (e % 2 == 0) {
        return 0;
      } else {
        return 0.5;
      }
    };
    B._alignPixel = function (e, t, n) {
      var i = e.currentDevicePixelRatio;
      var r = n / 2;
      return Math.round((t - r) * i) / i + r;
    };
    B.splineCurve = function (e, t, n, i) {
      var r = e.skip ? t : e;
      var o = t;
      var a = n.skip ? t : n;
      var s = Math.sqrt(Math.pow(o.x - r.x, 2) + Math.pow(o.y - r.y, 2));
      var l = Math.sqrt(Math.pow(a.x - o.x, 2) + Math.pow(a.y - o.y, 2));
      var c = s / (s + l);
      var u = l / (s + l);
      var d = i * (c = isNaN(c) ? 0 : c);
      var h = i * (u = isNaN(u) ? 0 : u);
      return {
        previous: {
          x: o.x - d * (a.x - r.x),
          y: o.y - d * (a.y - r.y)
        },
        next: {
          x: o.x + h * (a.x - r.x),
          y: o.y + h * (a.y - r.y)
        }
      };
    };
    B.EPSILON = Number.EPSILON || 1e-14;
    B.splineCurveMonotone = function (e) {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a;
      var s;
      var l;
      var c;
      var u = (e || []).map(function (e) {
        return {
          model: e._model,
          deltaK: 0,
          mK: 0
        };
      });
      var d = u.length;
      for (t = 0; t < d; ++t) {
        if (!(i = u[t]).model.skip) {
          n = t > 0 ? u[t - 1] : null;
          if ((r = t < d - 1 ? u[t + 1] : null) && !r.model.skip) {
            var h = r.model.x - i.model.x;
            i.deltaK = h !== 0 ? (r.model.y - i.model.y) / h : 0;
          }
          if (!n || n.model.skip) {
            i.mK = i.deltaK;
          } else if (!r || r.model.skip) {
            i.mK = n.deltaK;
          } else if (this.sign(n.deltaK) !== this.sign(i.deltaK)) {
            i.mK = 0;
          } else {
            i.mK = (n.deltaK + i.deltaK) / 2;
          }
        }
      }
      for (t = 0; t < d - 1; ++t) {
        i = u[t];
        r = u[t + 1];
        if (!(i.model.skip || r.model.skip)) {
          if (B.almostEquals(i.deltaK, 0, this.EPSILON)) {
            i.mK = r.mK = 0;
          } else {
            o = i.mK / i.deltaK;
            a = r.mK / i.deltaK;
            if (!((l = Math.pow(o, 2) + Math.pow(a, 2)) <= 9)) {
              s = 3 / Math.sqrt(l);
              i.mK = o * s * i.deltaK;
              r.mK = a * s * i.deltaK;
            }
          }
        }
      }
      for (t = 0; t < d; ++t) {
        if (!(i = u[t]).model.skip) {
          n = t > 0 ? u[t - 1] : null;
          r = t < d - 1 ? u[t + 1] : null;
          if (n && !n.model.skip) {
            c = (i.model.x - n.model.x) / 3;
            i.model.controlPointPreviousX = i.model.x - c;
            i.model.controlPointPreviousY = i.model.y - c * i.mK;
          }
          if (r && !r.model.skip) {
            c = (r.model.x - i.model.x) / 3;
            i.model.controlPointNextX = i.model.x + c;
            i.model.controlPointNextY = i.model.y + c * i.mK;
          }
        }
      }
    };
    B.nextItem = function (e, t, n) {
      if (n) {
        if (t >= e.length - 1) {
          return e[0];
        } else {
          return e[t + 1];
        }
      } else if (t >= e.length - 1) {
        return e[e.length - 1];
      } else {
        return e[t + 1];
      }
    };
    B.previousItem = function (e, t, n) {
      if (n) {
        if (t <= 0) {
          return e[e.length - 1];
        } else {
          return e[t - 1];
        }
      } else if (t <= 0) {
        return e[0];
      } else {
        return e[t - 1];
      }
    };
    B.niceNum = function (e, t) {
      var n = Math.floor(B.log10(e));
      var i = e / Math.pow(10, n);
      return (t ? i < 1.5 ? 1 : i < 3 ? 2 : i < 7 ? 5 : 10 : i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 5 : 10) * Math.pow(10, n);
    };
    B.requestAnimFrame = typeof window == "undefined" ? function (e) {
      e();
    } : window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {
      return window.setTimeout(e, 1000 / 60);
    };
    B.getRelativePosition = function (e, t) {
      var n;
      var i;
      var r = e.originalEvent || e;
      var o = e.target || e.srcElement;
      var a = o.getBoundingClientRect();
      var s = r.touches;
      if (s && s.length > 0) {
        n = s[0].clientX;
        i = s[0].clientY;
      } else {
        n = r.clientX;
        i = r.clientY;
      }
      var l = parseFloat(B.getStyle(o, "padding-left"));
      var c = parseFloat(B.getStyle(o, "padding-top"));
      var u = parseFloat(B.getStyle(o, "padding-right"));
      var d = parseFloat(B.getStyle(o, "padding-bottom"));
      var h = a.right - a.left - l - u;
      var f = a.bottom - a.top - c - d;
      return {
        x: n = Math.round((n - a.left - l) / h * o.width / t.currentDevicePixelRatio),
        y: i = Math.round((i - a.top - c) / f * o.height / t.currentDevicePixelRatio)
      };
    };
    B.getConstraintWidth = function (e) {
      return n(e, "max-width", "clientWidth");
    };
    B.getConstraintHeight = function (e) {
      return n(e, "max-height", "clientHeight");
    };
    B._calculatePadding = function (e, t, n) {
      if ((t = B.getStyle(e, t)).indexOf("%") > -1) {
        return n * parseInt(t, 10) / 100;
      } else {
        return parseInt(t, 10);
      }
    };
    B._getParentNode = function (e) {
      var t = e.parentNode;
      if (t && t.toString() === "[object ShadowRoot]") {
        t = t.host;
      }
      return t;
    };
    B.getMaximumWidth = function (e) {
      var t = B._getParentNode(e);
      if (!t) {
        return e.clientWidth;
      }
      var n = t.clientWidth;
      var i = n - B._calculatePadding(t, "padding-left", n) - B._calculatePadding(t, "padding-right", n);
      var r = B.getConstraintWidth(e);
      if (isNaN(r)) {
        return i;
      } else {
        return Math.min(i, r);
      }
    };
    B.getMaximumHeight = function (e) {
      var t = B._getParentNode(e);
      if (!t) {
        return e.clientHeight;
      }
      var n = t.clientHeight;
      var i = n - B._calculatePadding(t, "padding-top", n) - B._calculatePadding(t, "padding-bottom", n);
      var r = B.getConstraintHeight(e);
      if (isNaN(r)) {
        return i;
      } else {
        return Math.min(i, r);
      }
    };
    B.getStyle = function (e, t) {
      if (e.currentStyle) {
        return e.currentStyle[t];
      } else {
        return document.defaultView.getComputedStyle(e, null).getPropertyValue(t);
      }
    };
    B.retinaScale = function (e, t) {
      var n = e.currentDevicePixelRatio = t || typeof window != "undefined" && window.devicePixelRatio || 1;
      if (n !== 1) {
        var i = e.canvas;
        var r = e.height;
        var o = e.width;
        i.height = r * n;
        i.width = o * n;
        e.ctx.scale(n, n);
        if (!(i.style.height || i.style.width)) {
          i.style.height = r + "px";
          i.style.width = o + "px";
        }
      }
    };
    B.fontString = function (e, t, n) {
      return t + " " + e + "px " + n;
    };
    B.longestText = function (e, t, n, i) {
      var r = (i = i || {}).data = i.data || {};
      var o = i.garbageCollect = i.garbageCollect || [];
      if (i.font !== t) {
        r = i.data = {};
        o = i.garbageCollect = [];
        i.font = t;
      }
      e.font = t;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d = 0;
      var h = n.length;
      for (a = 0; a < h; a++) {
        if ((c = n[a]) != null && B.isArray(c) !== true) {
          d = B.measureText(e, r, o, d, c);
        } else if (B.isArray(c)) {
          s = 0;
          l = c.length;
          s = 0;
          l = c.length;
          for (; s < l; s++) {
            if (!((u = c[s]) == null || B.isArray(u))) {
              d = B.measureText(e, r, o, d, u);
            }
          }
        }
      }
      var f = o.length / 2;
      if (f > n.length) {
        for (a = 0; a < f; a++) {
          delete r[o[a]];
        }
        o.splice(0, f);
      }
      return d;
    };
    B.measureText = function (e, t, n, i, r) {
      var o = t[r];
      if (!o) {
        o = t[r] = e.measureText(r).width;
        n.push(r);
      }
      if (o > i) {
        i = o;
      }
      return i;
    };
    B.numberOfLabelLines = function (e) {
      var t = 1;
      B.each(e, function (e) {
        if (B.isArray(e) && e.length > t) {
          t = e.length;
        }
      });
      return t;
    };
    B.color = x ? function (e) {
      if (e instanceof CanvasGradient) {
        e = R.global.defaultColor;
      }
      return x(e);
    } : function (e) {
      console.error("Color.js not found!");
      return e;
    };
    B.getHoverColor = function (e) {
      if (e instanceof CanvasPattern || e instanceof CanvasGradient) {
        return e;
      } else {
        return B.color(e).saturate(0.5).darken(0.1).rgbString();
      }
    };
  })();
  Xt._adapters = Qt;
  Xt.Animation = K;
  Xt.animationService = Q;
  Xt.controllers = Xe;
  Xt.DatasetController = ne;
  Xt.defaults = R;
  Xt.Element = X;
  Xt.elements = be;
  Xt.Interaction = tt;
  Xt.layouts = dt;
  Xt.platform = Tt;
  Xt.plugins = At;
  Xt.Scale = hn;
  Xt.scaleService = Dt;
  Xt.Ticks = Zt;
  Xt.Tooltip = $t;
  Xt.helpers.each(ii, function (e, t) {
    Xt.scaleService.registerScaleType(t, e, e._defaults);
  });
  for (var Di in Si) {
    if (Si.hasOwnProperty(Di)) {
      Xt.plugins.register(Si[Di]);
    }
  }
  Xt.platform.initialize();
  var Ei = Xt;
  if (typeof window != "undefined") {
    window.Chart = Xt;
  }
  Xt.Chart = Xt;
  Xt.Legend = Si.legend._element;
  Xt.Title = Si.title._element;
  Xt.pluginService = Xt.plugins;
  Xt.PluginBase = Xt.Element.extend({});
  Xt.canvasHelpers = Xt.helpers.canvas;
  Xt.layoutService = Xt.layouts;
  Xt.LinearScaleBase = vn;
  Xt.helpers.each(["Bar", "Bubble", "Doughnut", "Line", "PolarArea", "Radar", "Scatter"], function (e) {
    Xt[e] = function (t, n) {
      return new Xt(t, Xt.helpers.merge(n || {}, {
        type: e.charAt(0).toLowerCase() + e.slice(1)
      }));
    };
  });
  return Ei;
});
(function (e) {
  if (typeof define == "function" && define.amd) {
    define([], e);
  } else if (typeof exports == "object") {
    module.exports = e();
  } else {
    window.noUiSlider = e();
  }
})(function () {
  "use strict";

  var e = "14.7.0";
  function t(e) {
    e.parentElement.removeChild(e);
  }
  function n(e) {
    return e != null;
  }
  function i(e) {
    e.preventDefault();
  }
  function r(e) {
    return typeof e == "number" && !isNaN(e) && isFinite(e);
  }
  function o(e, t, n) {
    if (n > 0) {
      c(e, t);
      setTimeout(function () {
        u(e, t);
      }, n);
    }
  }
  function a(e) {
    return Math.max(Math.min(e, 100), 0);
  }
  function s(e) {
    if (Array.isArray(e)) {
      return e;
    } else {
      return [e];
    }
  }
  function l(e) {
    var t = (e = String(e)).split(".");
    if (t.length > 1) {
      return t[1].length;
    } else {
      return 0;
    }
  }
  function c(e, t) {
    if (e.classList && !/\s/.test(t)) {
      e.classList.add(t);
    } else {
      e.className += " " + t;
    }
  }
  function u(e, t) {
    if (e.classList && !/\s/.test(t)) {
      e.classList.remove(t);
    } else {
      e.className = e.className.replace(new RegExp("(^|\\b)" + t.split(" ").join("|") + "(\\b|$)", "gi"), " ");
    }
  }
  function d(e) {
    var t = window.pageXOffset !== undefined;
    var n = (e.compatMode || "") === "CSS1Compat";
    return {
      x: t ? window.pageXOffset : n ? e.documentElement.scrollLeft : e.body.scrollLeft,
      y: t ? window.pageYOffset : n ? e.documentElement.scrollTop : e.body.scrollTop
    };
  }
  function h(e, t) {
    return 100 / (t - e);
  }
  function f(e, t, n) {
    return t * 100 / (e[n + 1] - e[n]);
  }
  function p(e, t) {
    for (var n = 1; e >= t[n];) {
      n += 1;
    }
    return n;
  }
  function g(e, t, n) {
    var i;
    if (typeof t == "number") {
      t = [t];
    }
    if (!Array.isArray(t)) {
      throw new Error("noUiSlider (14.7.0): 'range' contains invalid value.");
    }
    if (!r(i = e === "min" ? 0 : e === "max" ? 100 : parseFloat(e)) || !r(t[0])) {
      throw new Error("noUiSlider (14.7.0): 'range' value isn't numeric.");
    }
    n.xPct.push(i);
    n.xVal.push(t[0]);
    if (i) {
      n.xSteps.push(!isNaN(t[1]) && t[1]);
    } else if (!isNaN(t[1])) {
      n.xSteps[0] = t[1];
    }
    n.xHighestCompleteStep.push(0);
  }
  function m(e, t, n) {
    if (t) {
      if (n.xVal[e] !== n.xVal[e + 1]) {
        n.xSteps[e] = f([n.xVal[e], n.xVal[e + 1]], t, 0) / h(n.xPct[e], n.xPct[e + 1]);
        var i = (n.xVal[e + 1] - n.xVal[e]) / n.xNumSteps[e];
        var r = Math.ceil(Number(i.toFixed(3)) - 1);
        var o = n.xVal[e] + n.xNumSteps[e] * r;
        n.xHighestCompleteStep[e] = o;
      } else {
        n.xSteps[e] = n.xHighestCompleteStep[e] = n.xVal[e];
      }
    }
  }
  function v(e, t, n) {
    var i;
    this.xPct = [];
    this.xVal = [];
    this.xSteps = [n || false];
    this.xNumSteps = [false];
    this.xHighestCompleteStep = [];
    this.snap = t;
    var r = [];
    for (i in e) {
      if (e.hasOwnProperty(i)) {
        r.push([e[i], i]);
      }
    }
    if (r.length && typeof r[0][0] == "object") {
      r.sort(function (e, t) {
        return e[0][0] - t[0][0];
      });
    } else {
      r.sort(function (e, t) {
        return e[0] - t[0];
      });
    }
    i = 0;
    for (; i < r.length; i++) {
      g(r[i][1], r[i][0], this);
    }
    this.xNumSteps = this.xSteps.slice(0);
    i = 0;
    for (; i < this.xNumSteps.length; i++) {
      m(i, this.xNumSteps[i], this);
    }
  }
  v.prototype.getDistance = function (e) {
    var t;
    var n = [];
    for (t = 0; t < this.xNumSteps.length - 1; t++) {
      var i = this.xNumSteps[t];
      if (i && e / i % 1 != 0) {
        throw new Error("noUiSlider (14.7.0): 'limit', 'margin' and 'padding' of " + this.xPct[t] + "% range must be divisible by step.");
      }
      n[t] = f(this.xVal, e, t);
    }
    return n;
  };
  v.prototype.getAbsoluteDistance = function (e, t, n) {
    var i;
    var r = 0;
    if (e < this.xPct[this.xPct.length - 1]) {
      for (; e > this.xPct[r + 1];) {
        r++;
      }
    } else if (e === this.xPct[this.xPct.length - 1]) {
      r = this.xPct.length - 2;
    }
    if (!(n || e !== this.xPct[r + 1])) {
      r++;
    }
    var o = 1;
    var a = t[r];
    var s = 0;
    var l = 0;
    var c = 0;
    var u = 0;
    for (i = n ? (e - this.xPct[r]) / (this.xPct[r + 1] - this.xPct[r]) : (this.xPct[r + 1] - e) / (this.xPct[r + 1] - this.xPct[r]); a > 0;) {
      s = this.xPct[r + 1 + u] - this.xPct[r + u];
      if (t[r + u] * o + 100 - i * 100 > 100) {
        l = s * i;
        o = (a - i * 100) / t[r + u];
        i = 1;
      } else {
        l = t[r + u] * s / 100 * o;
        o = 0;
      }
      if (n) {
        c -= l;
        if (this.xPct.length + u >= 1) {
          u--;
        }
      } else {
        c += l;
        if (this.xPct.length - u >= 1) {
          u++;
        }
      }
      a = t[r + u] * o;
    }
    return e + c;
  };
  v.prototype.toStepping = function (e) {
    return function (e, t, n) {
      if (n >= e.slice(-1)[0]) {
        return 100;
      }
      var i;
      var r;
      var o = p(n, e);
      var a = e[o - 1];
      var s = e[o];
      var l = t[o - 1];
      var c = t[o];
      return l + (r = n, f(i = [a, s], i[0] < 0 ? r + Math.abs(i[0]) : r - i[0], 0) / h(l, c));
    }(this.xVal, this.xPct, e);
  };
  v.prototype.fromStepping = function (e) {
    return function (e, t, n) {
      if (n >= 100) {
        return e.slice(-1)[0];
      }
      var i;
      var r = p(n, t);
      var o = e[r - 1];
      var a = e[r];
      var s = t[r - 1];
      i = [o, a];
      return (n - s) * h(s, t[r]) * (i[1] - i[0]) / 100 + i[0];
    }(this.xVal, this.xPct, e);
  };
  v.prototype.getStep = function (e) {
    return function (e, t, n, i) {
      if (i === 100) {
        return i;
      }
      var r;
      var o;
      var a = p(i, e);
      var s = e[a - 1];
      var l = e[a];
      if (n) {
        if ((l - s) / 2 < i - s) {
          return l;
        } else {
          return s;
        }
      } else if (t[a - 1]) {
        return e[a - 1] + (r = i - e[a - 1], o = t[a - 1], Math.round(r / o) * o);
      } else {
        return i;
      }
    }(this.xPct, this.xSteps, this.snap, e);
  };
  v.prototype.getDefaultStep = function (e, t, n) {
    var i = p(e, this.xPct);
    if (e === 100 || t && e === this.xPct[i - 1]) {
      i = Math.max(i - 1, 1);
    }
    return (this.xVal[i] - this.xVal[i - 1]) / n;
  };
  v.prototype.getNearbySteps = function (e) {
    var t = p(e, this.xPct);
    return {
      stepBefore: {
        startValue: this.xVal[t - 2],
        step: this.xNumSteps[t - 2],
        highestStep: this.xHighestCompleteStep[t - 2]
      },
      thisStep: {
        startValue: this.xVal[t - 1],
        step: this.xNumSteps[t - 1],
        highestStep: this.xHighestCompleteStep[t - 1]
      },
      stepAfter: {
        startValue: this.xVal[t],
        step: this.xNumSteps[t],
        highestStep: this.xHighestCompleteStep[t]
      }
    };
  };
  v.prototype.countStepDecimals = function () {
    var e = this.xNumSteps.map(l);
    return Math.max.apply(null, e);
  };
  v.prototype.convert = function (e) {
    return this.getStep(this.toStepping(e));
  };
  var y = {
    to: function (e) {
      return e !== undefined && e.toFixed(2);
    },
    from: Number
  };
  var b = {
    target: "target",
    base: "base",
    origin: "origin",
    handle: "handle",
    handleLower: "handle-lower",
    handleUpper: "handle-upper",
    touchArea: "touch-area",
    horizontal: "horizontal",
    vertical: "vertical",
    background: "background",
    connect: "connect",
    connects: "connects",
    ltr: "ltr",
    rtl: "rtl",
    textDirectionLtr: "txt-dir-ltr",
    textDirectionRtl: "txt-dir-rtl",
    draggable: "draggable",
    drag: "state-drag",
    tap: "state-tap",
    active: "active",
    tooltip: "tooltip",
    pips: "pips",
    pipsHorizontal: "pips-horizontal",
    pipsVertical: "pips-vertical",
    marker: "marker",
    markerHorizontal: "marker-horizontal",
    markerVertical: "marker-vertical",
    markerNormal: "marker-normal",
    markerLarge: "marker-large",
    markerSub: "marker-sub",
    value: "value",
    valueHorizontal: "value-horizontal",
    valueVertical: "value-vertical",
    valueNormal: "value-normal",
    valueLarge: "value-large",
    valueSub: "value-sub"
  };
  var w = ".__tooltips";
  var x = ".__aria";
  function _(e) {
    if (typeof (t = e) == "object" && typeof t.to == "function" && typeof t.from == "function") {
      return true;
    }
    var t;
    throw new Error("noUiSlider (14.7.0): 'format' requires 'to' and 'from' methods.");
  }
  function C(e, t) {
    if (!r(t)) {
      throw new Error("noUiSlider (14.7.0): 'step' is not numeric.");
    }
    e.singleStep = t;
  }
  function S(e, t) {
    if (!r(t)) {
      throw new Error("noUiSlider (14.7.0): 'keyboardPageMultiplier' is not numeric.");
    }
    e.keyboardPageMultiplier = t;
  }
  function k(e, t) {
    if (!r(t)) {
      throw new Error("noUiSlider (14.7.0): 'keyboardDefaultStep' is not numeric.");
    }
    e.keyboardDefaultStep = t;
  }
  function T(e, t) {
    if (typeof t != "object" || Array.isArray(t)) {
      throw new Error("noUiSlider (14.7.0): 'range' is not an object.");
    }
    if (t.min === undefined || t.max === undefined) {
      throw new Error("noUiSlider (14.7.0): Missing 'min' or 'max' in 'range'.");
    }
    if (t.min === t.max) {
      throw new Error("noUiSlider (14.7.0): 'range' 'min' and 'max' cannot be equal.");
    }
    e.spectrum = new v(t, e.snap, e.singleStep);
  }
  function A(e, t) {
    t = s(t);
    if (!Array.isArray(t) || !t.length) {
      throw new Error("noUiSlider (14.7.0): 'start' option is incorrect.");
    }
    e.handles = t.length;
    e.start = t;
  }
  function D(e, t) {
    if (typeof (e.snap = t) != "boolean") {
      throw new Error("noUiSlider (14.7.0): 'snap' option must be a boolean.");
    }
  }
  function E(e, t) {
    if (typeof (e.animate = t) != "boolean") {
      throw new Error("noUiSlider (14.7.0): 'animate' option must be a boolean.");
    }
  }
  function O(e, t) {
    if (typeof (e.animationDuration = t) != "number") {
      throw new Error("noUiSlider (14.7.0): 'animationDuration' option must be a number.");
    }
  }
  function M(e, t) {
    var n;
    var i = [false];
    if (t === "lower") {
      t = [true, false];
    } else if (t === "upper") {
      t = [false, true];
    }
    if (t === true || t === false) {
      for (n = 1; n < e.handles; n++) {
        i.push(t);
      }
      i.push(false);
    } else {
      if (!Array.isArray(t) || !t.length || t.length !== e.handles + 1) {
        throw new Error("noUiSlider (14.7.0): 'connect' option doesn't match handle count.");
      }
      i = t;
    }
    e.connect = i;
  }
  function I(e, t) {
    switch (t) {
      case "horizontal":
        e.ort = 0;
        break;
      case "vertical":
        e.ort = 1;
        break;
      default:
        throw new Error("noUiSlider (14.7.0): 'orientation' option is invalid.");
    }
  }
  function P(e, t) {
    if (!r(t)) {
      throw new Error("noUiSlider (14.7.0): 'margin' option must be numeric.");
    }
    if (t !== 0) {
      e.margin = e.spectrum.getDistance(t);
    }
  }
  function L(e, t) {
    if (!r(t)) {
      throw new Error("noUiSlider (14.7.0): 'limit' option must be numeric.");
    }
    e.limit = e.spectrum.getDistance(t);
    if (!e.limit || e.handles < 2) {
      throw new Error("noUiSlider (14.7.0): 'limit' option is only supported on linear sliders with 2 or more handles.");
    }
  }
  function N(e, t) {
    var n;
    if (!r(t) && !Array.isArray(t)) {
      throw new Error("noUiSlider (14.7.0): 'padding' option must be numeric or array of exactly 2 numbers.");
    }
    if (Array.isArray(t) && t.length !== 2 && !r(t[0]) && !r(t[1])) {
      throw new Error("noUiSlider (14.7.0): 'padding' option must be numeric or array of exactly 2 numbers.");
    }
    if (t !== 0) {
      if (!Array.isArray(t)) {
        t = [t, t];
      }
      e.padding = [e.spectrum.getDistance(t[0]), e.spectrum.getDistance(t[1])];
      n = 0;
      for (; n < e.spectrum.xNumSteps.length - 1; n++) {
        if (e.padding[0][n] < 0 || e.padding[1][n] < 0) {
          throw new Error("noUiSlider (14.7.0): 'padding' option must be a positive number(s).");
        }
      }
      var i = t[0] + t[1];
      var o = e.spectrum.xVal[0];
      if (i / (e.spectrum.xVal[e.spectrum.xVal.length - 1] - o) > 1) {
        throw new Error("noUiSlider (14.7.0): 'padding' option must not exceed 100% of the range.");
      }
    }
  }
  function F(e, t) {
    switch (t) {
      case "ltr":
        e.dir = 0;
        break;
      case "rtl":
        e.dir = 1;
        break;
      default:
        throw new Error("noUiSlider (14.7.0): 'direction' option was not recognized.");
    }
  }
  function R(e, t) {
    if (typeof t != "string") {
      throw new Error("noUiSlider (14.7.0): 'behaviour' must be a string containing options.");
    }
    var n = t.indexOf("tap") >= 0;
    var i = t.indexOf("drag") >= 0;
    var r = t.indexOf("fixed") >= 0;
    var o = t.indexOf("snap") >= 0;
    var a = t.indexOf("hover") >= 0;
    var s = t.indexOf("unconstrained") >= 0;
    if (r) {
      if (e.handles !== 2) {
        throw new Error("noUiSlider (14.7.0): 'fixed' behaviour must be used with 2 handles");
      }
      P(e, e.start[1] - e.start[0]);
    }
    if (s && (e.margin || e.limit)) {
      throw new Error("noUiSlider (14.7.0): 'unconstrained' behaviour cannot be used with margin or limit");
    }
    e.events = {
      tap: n || o,
      drag: i,
      fixed: r,
      snap: o,
      hover: a,
      unconstrained: s
    };
  }
  function j(e, t) {
    if (t !== false) {
      if (t === true) {
        e.tooltips = [];
        for (var n = 0; n < e.handles; n++) {
          e.tooltips.push(true);
        }
      } else {
        e.tooltips = s(t);
        if (e.tooltips.length !== e.handles) {
          throw new Error("noUiSlider (14.7.0): must pass a formatter for all handles.");
        }
        e.tooltips.forEach(function (e) {
          if (typeof e != "boolean" && (typeof e != "object" || typeof e.to != "function")) {
            throw new Error("noUiSlider (14.7.0): 'tooltips' must be passed a formatter or 'false'.");
          }
        });
      }
    }
  }
  function $(e, t) {
    _(e.ariaFormat = t);
  }
  function z(e, t) {
    _(e.format = t);
  }
  function H(e, t) {
    if (typeof (e.keyboardSupport = t) != "boolean") {
      throw new Error("noUiSlider (14.7.0): 'keyboardSupport' option must be a boolean.");
    }
  }
  function B(e, t) {
    e.documentElement = t;
  }
  function q(e, t) {
    if (typeof t != "string" && t !== false) {
      throw new Error("noUiSlider (14.7.0): 'cssPrefix' must be a string or `false`.");
    }
    e.cssPrefix = t;
  }
  function W(e, t) {
    if (typeof t != "object") {
      throw new Error("noUiSlider (14.7.0): 'cssClasses' must be an object.");
    }
    if (typeof e.cssPrefix == "string") {
      e.cssClasses = {};
      for (var n in t) {
        if (t.hasOwnProperty(n)) {
          e.cssClasses[n] = e.cssPrefix + t[n];
        }
      }
    } else {
      e.cssClasses = t;
    }
  }
  function U(e) {
    var t = {
      margin: 0,
      limit: 0,
      padding: 0,
      animate: true,
      animationDuration: 300,
      ariaFormat: y,
      format: y
    };
    var i = {
      step: {
        r: false,
        t: C
      },
      keyboardPageMultiplier: {
        r: false,
        t: S
      },
      keyboardDefaultStep: {
        r: false,
        t: k
      },
      start: {
        r: true,
        t: A
      },
      connect: {
        r: true,
        t: M
      },
      direction: {
        r: true,
        t: F
      },
      snap: {
        r: false,
        t: D
      },
      animate: {
        r: false,
        t: E
      },
      animationDuration: {
        r: false,
        t: O
      },
      range: {
        r: true,
        t: T
      },
      orientation: {
        r: false,
        t: I
      },
      margin: {
        r: false,
        t: P
      },
      limit: {
        r: false,
        t: L
      },
      padding: {
        r: false,
        t: N
      },
      behaviour: {
        r: true,
        t: R
      },
      ariaFormat: {
        r: false,
        t: $
      },
      format: {
        r: false,
        t: z
      },
      tooltips: {
        r: false,
        t: j
      },
      keyboardSupport: {
        r: true,
        t: H
      },
      documentElement: {
        r: false,
        t: B
      },
      cssPrefix: {
        r: true,
        t: q
      },
      cssClasses: {
        r: true,
        t: W
      }
    };
    var r = {
      connect: false,
      direction: "ltr",
      behaviour: "tap",
      orientation: "horizontal",
      keyboardSupport: true,
      cssPrefix: "noUi-",
      cssClasses: b,
      keyboardPageMultiplier: 5,
      keyboardDefaultStep: 10
    };
    if (e.format && !e.ariaFormat) {
      e.ariaFormat = e.format;
    }
    Object.keys(i).forEach(function (o) {
      if (!n(e[o]) && r[o] === undefined) {
        if (i[o].r) {
          throw new Error("noUiSlider (14.7.0): '" + o + "' is required.");
        }
        return true;
      }
      i[o].t(t, n(e[o]) ? e[o] : r[o]);
    });
    t.pips = e.pips;
    var o = document.createElement("div");
    var a = o.style.msTransform !== undefined;
    var s = o.style.transform !== undefined;
    t.transformRule = s ? "transform" : a ? "msTransform" : "webkitTransform";
    t.style = [["left", "top"], ["right", "bottom"]][t.dir][t.ort];
    return t;
  }
  return {
    __spectrum: v,
    version: e,
    cssClasses: b,
    create: function (e, r) {
      if (!e || !e.nodeName) {
        throw new Error("noUiSlider (14.7.0): create requires a single element, got: " + e);
      }
      if (e.noUiSlider) {
        throw new Error("noUiSlider (14.7.0): Slider was already initialized.");
      }
      var l = function (e, r, l) {
        var h;
        var f;
        var p;
        var g;
        var m;
        var v;
        var y;
        var b;
        var _ = window.navigator.pointerEnabled ? {
          start: "pointerdown",
          move: "pointermove",
          end: "pointerup"
        } : window.navigator.msPointerEnabled ? {
          start: "MSPointerDown",
          move: "MSPointerMove",
          end: "MSPointerUp"
        } : {
          start: "mousedown touchstart",
          move: "mousemove touchmove",
          end: "mouseup touchend"
        };
        var C = window.CSS && CSS.supports && CSS.supports("touch-action", "none") && function () {
          var e = false;
          try {
            var t = Object.defineProperty({}, "passive", {
              get: function () {
                e = true;
              }
            });
            window.addEventListener("test", null, t);
          } catch (e) {}
          return e;
        }();
        var S = e;
        var k = r.spectrum;
        var T = [];
        var A = [];
        var D = [];
        var E = 0;
        var O = {};
        var M = e.ownerDocument;
        var I = r.documentElement || M.documentElement;
        var P = M.body;
        var L = M.dir === "rtl" || r.ort === 1 ? 0 : 100;
        function N(e, t) {
          var n = M.createElement("div");
          if (t) {
            c(n, t);
          }
          e.appendChild(n);
          return n;
        }
        function F(e, t) {
          var n = N(e, r.cssClasses.origin);
          var i = N(n, r.cssClasses.handle);
          N(i, r.cssClasses.touchArea);
          i.setAttribute("data-handle", t);
          if (r.keyboardSupport) {
            i.setAttribute("tabindex", "0");
            i.addEventListener("keydown", function (e) {
              return function (e, t) {
                if ($() || z(t)) {
                  return false;
                }
                var n = ["Left", "Right"];
                var i = ["Down", "Up"];
                var o = ["PageDown", "PageUp"];
                if (r.dir && !r.ort) {
                  n.reverse();
                } else if (r.ort && !r.dir) {
                  i.reverse();
                  o.reverse();
                }
                var s;
                var l = e.key.replace("Arrow", "");
                var c = l === o[0];
                var u = l === o[1];
                var d = l === i[0] || l === n[0] || c;
                var h = l === i[1] || l === n[1] || u;
                var f = l === "End";
                if (!(d || h || l === "Home" || f)) {
                  return true;
                }
                e.preventDefault();
                if (h || d) {
                  var p = r.keyboardPageMultiplier;
                  var g = d ? 0 : 1;
                  var m = fe(t)[g];
                  if (m === null) {
                    return false;
                  }
                  if (m === false) {
                    m = k.getDefaultStep(A[t], d, r.keyboardDefaultStep);
                  }
                  if (u || c) {
                    m *= p;
                  }
                  m = Math.max(m, 1e-7);
                  m *= d ? -1 : 1;
                  s = T[t] + m;
                } else {
                  s = f ? r.spectrum.xVal[r.spectrum.xVal.length - 1] : r.spectrum.xVal[0];
                }
                le(t, k.toStepping(s), true, true);
                ne("slide", t);
                ne("update", t);
                ne("change", t);
                ne("set", t);
                return false;
              }(e, t);
            });
          }
          i.setAttribute("role", "slider");
          i.setAttribute("aria-orientation", r.ort ? "vertical" : "horizontal");
          if (t === 0) {
            c(i, r.cssClasses.handleLower);
          } else if (t === r.handles - 1) {
            c(i, r.cssClasses.handleUpper);
          }
          return n;
        }
        function R(e, t) {
          return !!t && N(e, r.cssClasses.connect);
        }
        function j(e, t) {
          return !!r.tooltips[t] && N(e.firstChild, r.cssClasses.tooltip);
        }
        function $() {
          return S.hasAttribute("disabled");
        }
        function z(e) {
          return f[e].hasAttribute("disabled");
        }
        function H() {
          if (m) {
            te("update" + w);
            m.forEach(function (e) {
              if (e) {
                t(e);
              }
            });
            m = null;
          }
        }
        function B() {
          H();
          m = f.map(j);
          ee("update" + w, function (e, t, n) {
            if (m[t]) {
              var i = e[t];
              if (r.tooltips[t] !== true) {
                i = r.tooltips[t].to(n[t]);
              }
              m[t].innerHTML = i;
            }
          });
        }
        function q(e, t, n) {
          var i = M.createElement("div");
          var o = [];
          o[0] = r.cssClasses.valueNormal;
          o[1] = r.cssClasses.valueLarge;
          o[2] = r.cssClasses.valueSub;
          var a = [];
          a[0] = r.cssClasses.markerNormal;
          a[1] = r.cssClasses.markerLarge;
          a[2] = r.cssClasses.markerSub;
          var s = [r.cssClasses.valueHorizontal, r.cssClasses.valueVertical];
          var l = [r.cssClasses.markerHorizontal, r.cssClasses.markerVertical];
          function u(e, t) {
            var n = t === r.cssClasses.value;
            var i = n ? o : a;
            return t + " " + (n ? s : l)[r.ort] + " " + i[e];
          }
          c(i, r.cssClasses.pips);
          c(i, r.ort === 0 ? r.cssClasses.pipsHorizontal : r.cssClasses.pipsVertical);
          Object.keys(e).forEach(function (o) {
            !function (e, o, a) {
              if ((a = t ? t(o, a) : a) !== -1) {
                var s = N(i, false);
                s.className = u(a, r.cssClasses.marker);
                s.style[r.style] = e + "%";
                if (a > 0) {
                  (s = N(i, false)).className = u(a, r.cssClasses.value);
                  s.setAttribute("data-value", o);
                  s.style[r.style] = e + "%";
                  s.innerHTML = n.to(o);
                }
              }
            }(o, e[o][0], e[o][1]);
          });
          return i;
        }
        function W() {
          if (g) {
            t(g);
            g = null;
          }
        }
        function V(e) {
          W();
          var t;
          var n;
          var i;
          var r;
          var o;
          var a;
          var s;
          var l;
          var c;
          var u = e.mode;
          var d = e.density || 1;
          var h = e.filter || false;
          var f = function (e, t, n) {
            if (e === "range" || e === "steps") {
              return k.xVal;
            }
            if (e === "count") {
              if (t < 2) {
                throw new Error("noUiSlider (14.7.0): 'values' (>= 2) required for mode 'count'.");
              }
              var i = t - 1;
              var r = 100 / i;
              for (t = []; i--;) {
                t[i] = i * r;
              }
              t.push(100);
              e = "positions";
            }
            if (e === "positions") {
              return t.map(function (e) {
                return k.fromStepping(n ? k.getStep(e) : e);
              });
            } else if (e === "values") {
              if (n) {
                return t.map(function (e) {
                  return k.fromStepping(k.getStep(k.toStepping(e)));
                });
              } else {
                return t;
              }
            } else {
              return undefined;
            }
          }(u, e.values || false, e.stepped || false);
          t = d;
          n = u;
          i = f;
          r = {};
          o = k.xVal[0];
          a = k.xVal[k.xVal.length - 1];
          l = s = false;
          c = 0;
          if ((i = i.slice().sort(function (e, t) {
            return e - t;
          }).filter(function (e) {
            return !this[e] && (this[e] = true);
          }, {}))[0] !== o) {
            i.unshift(o);
            s = true;
          }
          if (i[i.length - 1] !== a) {
            i.push(a);
            l = true;
          }
          i.forEach(function (e, o) {
            var a;
            var u;
            var d;
            var h;
            var f;
            var p;
            var g;
            var m;
            var v;
            var y;
            var b = e;
            var w = i[o + 1];
            var x = n === "steps";
            if (x) {
              a = k.xNumSteps[o];
            }
            if (!a) {
              a = w - b;
            }
            if (b !== false) {
              if (w === undefined) {
                w = b;
              }
              a = Math.max(a, 1e-7);
              u = b;
              if (w === undefined) {
                w = b;
              }
              a = Math.max(a, 1e-7);
              u = b;
              for (; u <= w; u = (u + a).toFixed(7) / 1) {
                m = (f = (h = k.toStepping(u)) - c) / t;
                y = f / (v = Math.round(m));
                d = 1;
                for (; d <= v; d += 1) {
                  r[(p = c + d * y).toFixed(5)] = [k.fromStepping(p), 0];
                }
                g = i.indexOf(u) > -1 ? 1 : x ? 2 : 0;
                if (!o && s && u !== w) {
                  g = 0;
                }
                if (!(u === w && l)) {
                  r[h.toFixed(5)] = [u, g];
                }
                c = h;
              }
            }
          });
          var p = r;
          var m = e.format || {
            to: Math.round
          };
          return g = S.appendChild(q(p, h, m));
        }
        function Y() {
          var e = h.getBoundingClientRect();
          var t = "offset" + ["Width", "Height"][r.ort];
          if (r.ort === 0) {
            return e.width || h[t];
          } else {
            return e.height || h[t];
          }
        }
        function X(e, t, n, i) {
          var o = function (o) {
            return !!(o = function (e, t, n) {
              var i;
              var r;
              var o = e.type.indexOf("touch") === 0;
              var a = e.type.indexOf("mouse") === 0;
              var s = e.type.indexOf("pointer") === 0;
              if (e.type.indexOf("MSPointer") === 0) {
                s = true;
              }
              if (e.type === "mousedown" && !e.buttons && !e.touches) {
                return false;
              }
              if (o) {
                var l = function (e) {
                  return e.target === n || n.contains(e.target) || e.target.shadowRoot && e.target.shadowRoot.contains(n);
                };
                if (e.type === "touchstart") {
                  var c = Array.prototype.filter.call(e.touches, l);
                  if (c.length > 1) {
                    return false;
                  }
                  i = c[0].pageX;
                  r = c[0].pageY;
                } else {
                  var u = Array.prototype.find.call(e.changedTouches, l);
                  if (!u) {
                    return false;
                  }
                  i = u.pageX;
                  r = u.pageY;
                }
              }
              t = t || d(M);
              if (a || s) {
                i = e.clientX + t.x;
                r = e.clientY + t.y;
              }
              e.pageOffset = t;
              e.points = [i, r];
              e.cursor = a || s;
              return e;
            }(o, i.pageOffset, i.target || t)) && !($() && !i.doNotReject) && (a = S, s = r.cssClasses.tap, !((a.classList ? a.classList.contains(s) : new RegExp("\\b" + s + "\\b").test(a.className)) && !i.doNotReject) && !(e === _.start && o.buttons !== undefined && o.buttons > 1) && (!i.hover || !o.buttons) && (C || o.preventDefault(), o.calcPoint = o.points[r.ort], void n(o, i)));
            var a;
            var s;
          };
          var a = [];
          e.split(" ").forEach(function (e) {
            t.addEventListener(e, o, !!C && {
              passive: true
            });
            a.push([e, o]);
          });
          return a;
        }
        function G(e) {
          var t;
          var n;
          var i;
          var o;
          var s;
          var l;
          var c = (e - (t = h, n = r.ort, i = t.getBoundingClientRect(), s = (o = t.ownerDocument).documentElement, l = d(o), /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) && (l.x = 0), n ? i.top + l.y - s.clientTop : i.left + l.x - s.clientLeft)) * 100 / Y();
          c = a(c);
          if (r.dir) {
            return 100 - c;
          } else {
            return c;
          }
        }
        function K(e, t) {
          if (e.type === "mouseout" && e.target.nodeName === "HTML" && e.relatedTarget === null) {
            Z(e, t);
          }
        }
        function Q(e, t) {
          if (navigator.appVersion.indexOf("MSIE 9") === -1 && e.buttons === 0 && t.buttonsProperty !== 0) {
            return Z(e, t);
          }
          var n = (r.dir ? -1 : 1) * (e.calcPoint - t.startCalcPoint);
          oe(n > 0, n * 100 / t.baseSize, t.locations, t.handleNumbers);
        }
        function Z(e, t) {
          if (t.handle) {
            u(t.handle, r.cssClasses.active);
            E -= 1;
          }
          t.listeners.forEach(function (e) {
            I.removeEventListener(e[0], e[1]);
          });
          if (E === 0) {
            u(S, r.cssClasses.drag);
            se();
            if (e.cursor) {
              P.style.cursor = "";
              P.removeEventListener("selectstart", i);
            }
          }
          t.handleNumbers.forEach(function (e) {
            ne("change", e);
            ne("set", e);
            ne("end", e);
          });
        }
        function J(e, t) {
          if (t.handleNumbers.some(z)) {
            return false;
          }
          var n;
          if (t.handleNumbers.length === 1) {
            n = f[t.handleNumbers[0]].children[0];
            E += 1;
            c(n, r.cssClasses.active);
          }
          e.stopPropagation();
          var o = [];
          var a = X(_.move, I, Q, {
            target: e.target,
            handle: n,
            listeners: o,
            startCalcPoint: e.calcPoint,
            baseSize: Y(),
            pageOffset: e.pageOffset,
            handleNumbers: t.handleNumbers,
            buttonsProperty: e.buttons,
            locations: A.slice()
          });
          var s = X(_.end, I, Z, {
            target: e.target,
            handle: n,
            listeners: o,
            doNotReject: true,
            handleNumbers: t.handleNumbers
          });
          var l = X("mouseout", I, K, {
            target: e.target,
            handle: n,
            listeners: o,
            doNotReject: true,
            handleNumbers: t.handleNumbers
          });
          o.push.apply(o, a.concat(s, l));
          if (e.cursor) {
            P.style.cursor = getComputedStyle(e.target).cursor;
            if (f.length > 1) {
              c(S, r.cssClasses.drag);
            }
            P.addEventListener("selectstart", i, false);
          }
          t.handleNumbers.forEach(function (e) {
            ne("start", e);
          });
        }
        function ee(e, t) {
          O[e] = O[e] || [];
          O[e].push(t);
          if (e.split(".")[0] === "update") {
            f.forEach(function (e, t) {
              ne("update", t);
            });
          }
        }
        function te(e) {
          var t = e && e.split(".")[0];
          var n = t ? e.substring(t.length) : e;
          Object.keys(O).forEach(function (e) {
            var i;
            var r = e.split(".")[0];
            var o = e.substring(r.length);
            if (!(t && t !== r || n && n !== o)) {
              if ((i = o) !== x && i !== w || n === o) {
                delete O[e];
              }
            }
          });
        }
        function ne(e, t, n) {
          Object.keys(O).forEach(function (i) {
            var o = i.split(".")[0];
            if (e === o) {
              O[i].forEach(function (e) {
                e.call(v, T.map(r.format.to), t, T.slice(), n || false, A.slice(), v);
              });
            }
          });
        }
        function ie(e, t, n, i, o, s) {
          var l;
          if (f.length > 1 && !r.events.unconstrained) {
            if (i && t > 0) {
              l = k.getAbsoluteDistance(e[t - 1], r.margin, 0);
              n = Math.max(n, l);
            }
            if (o && t < f.length - 1) {
              l = k.getAbsoluteDistance(e[t + 1], r.margin, 1);
              n = Math.min(n, l);
            }
          }
          if (f.length > 1 && r.limit) {
            if (i && t > 0) {
              l = k.getAbsoluteDistance(e[t - 1], r.limit, 0);
              n = Math.min(n, l);
            }
            if (o && t < f.length - 1) {
              l = k.getAbsoluteDistance(e[t + 1], r.limit, 1);
              n = Math.max(n, l);
            }
          }
          if (r.padding) {
            if (t === 0) {
              l = k.getAbsoluteDistance(0, r.padding[0], 0);
              n = Math.max(n, l);
            }
            if (t === f.length - 1) {
              l = k.getAbsoluteDistance(100, r.padding[1], 1);
              n = Math.min(n, l);
            }
          }
          return !((n = a(n = k.getStep(n))) === e[t] && !s) && n;
        }
        function re(e, t) {
          var n = r.ort;
          return (n ? t : e) + ", " + (n ? e : t);
        }
        function oe(e, t, n, i) {
          var r = n.slice();
          var o = [!e, e];
          var a = [e, !e];
          i = i.slice();
          if (e) {
            i.reverse();
          }
          if (i.length > 1) {
            i.forEach(function (e, n) {
              var i = ie(r, e, r[e] + t, o[n], a[n], false);
              if (i === false) {
                t = 0;
              } else {
                t = i - r[e];
                r[e] = i;
              }
            });
          } else {
            o = a = [true];
          }
          var s = false;
          i.forEach(function (e, i) {
            s = le(e, n[e] + t, o[i], a[i]) || s;
          });
          if (s) {
            i.forEach(function (e) {
              ne("update", e);
              ne("slide", e);
            });
          }
        }
        function ae(e, t) {
          if (r.dir) {
            return 100 - e - t;
          } else {
            return e;
          }
        }
        function se() {
          D.forEach(function (e) {
            var t = A[e] > 50 ? -1 : 1;
            var n = 3 + (f.length + t * e);
            f[e].style.zIndex = n;
          });
        }
        function le(e, t, n, i, o) {
          if (!o) {
            t = ie(A, e, t, n, i, false);
          }
          return t !== false && (function (e, t) {
            A[e] = t;
            T[e] = k.fromStepping(t);
            var n = "translate(" + re((ae(t, 0) - L) * 10 + "%", "0") + ")";
            f[e].style[r.transformRule] = n;
            ce(e);
            ce(e + 1);
          }(e, t), true);
        }
        function ce(e) {
          if (p[e]) {
            var t = 0;
            var n = 100;
            if (e !== 0) {
              t = A[e - 1];
            }
            if (e !== p.length - 1) {
              n = A[e];
            }
            var i = n - t;
            var o = "translate(" + re(ae(t, i) + "%", "0") + ")";
            var a = "scale(" + re(i / 100, "1") + ")";
            p[e].style[r.transformRule] = o + " " + a;
          }
        }
        function ue(e, t) {
          if (e === null || e === false || e === undefined) {
            return A[t];
          } else {
            if (typeof e == "number") {
              e = String(e);
            }
            e = r.format.from(e);
            if ((e = k.toStepping(e)) === false || isNaN(e)) {
              return A[t];
            } else {
              return e;
            }
          }
        }
        function de(e, t, n) {
          var i = s(e);
          var a = A[0] === undefined;
          t = t === undefined || !!t;
          if (r.animate && !a) {
            o(S, r.cssClasses.tap, r.animationDuration);
          }
          D.forEach(function (e) {
            le(e, ue(i[e], e), true, false, n);
          });
          for (var l = D.length === 1 ? 0 : 1; l < D.length; ++l) {
            D.forEach(function (e) {
              le(e, A[e], true, true, n);
            });
          }
          se();
          D.forEach(function (e) {
            ne("update", e);
            if (i[e] !== null && t) {
              ne("set", e);
            }
          });
        }
        function he() {
          var e = T.map(r.format.to);
          if (e.length === 1) {
            return e[0];
          } else {
            return e;
          }
        }
        function fe(e) {
          var t = A[e];
          var n = k.getNearbySteps(t);
          var i = T[e];
          var o = n.thisStep.step;
          var a = null;
          if (r.snap) {
            return [i - n.stepBefore.startValue || null, n.stepAfter.startValue - i || null];
          }
          if (o !== false && i + o > n.stepAfter.startValue) {
            o = n.stepAfter.startValue - i;
          }
          a = i > n.thisStep.startValue ? n.thisStep.step : n.stepBefore.step !== false && i - n.stepBefore.highestStep;
          if (t === 100) {
            o = null;
          } else if (t === 0) {
            a = null;
          }
          var s = k.countStepDecimals();
          if (o !== null && o !== false) {
            o = Number(o.toFixed(s));
          }
          if (a !== null && a !== false) {
            a = Number(a.toFixed(s));
          }
          return [a, o];
        }
        c(y = S, r.cssClasses.target);
        if (r.dir === 0) {
          c(y, r.cssClasses.ltr);
        } else {
          c(y, r.cssClasses.rtl);
        }
        if (r.ort === 0) {
          c(y, r.cssClasses.horizontal);
        } else {
          c(y, r.cssClasses.vertical);
        }
        c(y, getComputedStyle(y).direction === "rtl" ? r.cssClasses.textDirectionRtl : r.cssClasses.textDirectionLtr);
        h = N(y, r.cssClasses.base);
        (function (e, t) {
          var n = N(t, r.cssClasses.connects);
          f = [];
          (p = []).push(R(n, e[0]));
          for (var i = 0; i < r.handles; i++) {
            f.push(F(t, i));
            D[i] = i;
            p.push(R(n, e[i + 1]));
          }
        })(r.connect, h);
        if (!(b = r.events).fixed) {
          f.forEach(function (e, t) {
            X(_.start, e.children[0], J, {
              handleNumbers: [t]
            });
          });
        }
        if (b.tap) {
          X(_.start, h, function (e) {
            e.stopPropagation();
            var t;
            var n;
            var i;
            var a = G(e.calcPoint);
            t = a;
            i = !(n = 100);
            f.forEach(function (e, r) {
              if (!z(r)) {
                var o = A[r];
                var a = Math.abs(o - t);
                if (a < n || a <= n && o < t || a === 100 && n === 100) {
                  i = r;
                  n = a;
                }
              }
            });
            var s = i;
            if (s === false) {
              return false;
            }
            if (!r.events.snap) {
              o(S, r.cssClasses.tap, r.animationDuration);
            }
            le(s, a, true, true);
            se();
            ne("slide", s, true);
            ne("update", s, true);
            ne("change", s, true);
            ne("set", s, true);
            if (r.events.snap) {
              J(e, {
                handleNumbers: [s]
              });
            }
          }, {});
        }
        if (b.hover) {
          X(_.move, h, function (e) {
            var t = G(e.calcPoint);
            var n = k.getStep(t);
            var i = k.fromStepping(n);
            Object.keys(O).forEach(function (e) {
              if (e.split(".")[0] === "hover") {
                O[e].forEach(function (e) {
                  e.call(v, i);
                });
              }
            });
          }, {
            hover: true
          });
        }
        if (b.drag) {
          p.forEach(function (e, t) {
            if (e !== false && t !== 0 && t !== p.length - 1) {
              var n = f[t - 1];
              var i = f[t];
              var o = [e];
              c(e, r.cssClasses.draggable);
              if (b.fixed) {
                o.push(n.children[0]);
                o.push(i.children[0]);
              }
              o.forEach(function (e) {
                X(_.start, e, J, {
                  handles: [n, i],
                  handleNumbers: [t - 1, t]
                });
              });
            }
          });
        }
        de(r.start);
        if (r.pips) {
          V(r.pips);
        }
        if (r.tooltips) {
          B();
        }
        te("update" + x);
        ee("update" + x, function (e, t, n, i, o) {
          D.forEach(function (e) {
            var t = f[e];
            var i = ie(A, e, 0, true, true, true);
            var a = ie(A, e, 100, true, true, true);
            var s = o[e];
            var l = r.ariaFormat.to(n[e]);
            i = k.fromStepping(i).toFixed(1);
            a = k.fromStepping(a).toFixed(1);
            s = k.fromStepping(s).toFixed(1);
            t.children[0].setAttribute("aria-valuemin", i);
            t.children[0].setAttribute("aria-valuemax", a);
            t.children[0].setAttribute("aria-valuenow", s);
            t.children[0].setAttribute("aria-valuetext", l);
          });
        });
        return v = {
          destroy: function () {
            te(x);
            te(w);
            for (var e in r.cssClasses) {
              if (r.cssClasses.hasOwnProperty(e)) {
                u(S, r.cssClasses[e]);
              }
            }
            for (; S.firstChild;) {
              S.removeChild(S.firstChild);
            }
            delete S.noUiSlider;
          },
          steps: function () {
            return D.map(fe);
          },
          on: ee,
          off: te,
          get: he,
          set: de,
          setHandle: function (e, t, n, i) {
            if (!((e = Number(e)) >= 0 && e < D.length)) {
              throw new Error("noUiSlider (14.7.0): invalid handle number, got: " + e);
            }
            le(e, ue(t, e), true, true, i);
            ne("update", e);
            if (n) {
              ne("set", e);
            }
          },
          reset: function (e) {
            de(r.start, e);
          },
          __moveHandles: function (e, t, n) {
            oe(e, t, A, n);
          },
          options: l,
          updateOptions: function (e, t) {
            var i = he();
            var o = ["margin", "limit", "padding", "range", "animate", "snap", "step", "format", "pips", "tooltips"];
            o.forEach(function (t) {
              if (e[t] !== undefined) {
                l[t] = e[t];
              }
            });
            var a = U(l);
            o.forEach(function (t) {
              if (e[t] !== undefined) {
                r[t] = a[t];
              }
            });
            k = a.spectrum;
            r.margin = a.margin;
            r.limit = a.limit;
            r.padding = a.padding;
            if (r.pips) {
              V(r.pips);
            } else {
              W();
            }
            if (r.tooltips) {
              B();
            } else {
              H();
            }
            A = [];
            de(n(e.start) ? e.start : i, t);
          },
          target: S,
          removePips: W,
          removeTooltips: H,
          getTooltips: function () {
            return m;
          },
          getOrigins: function () {
            return f;
          },
          pips: V
        };
      }(e, U(r), r);
      return e.noUiSlider = l;
    }
  };
});
(function (e) {
  "use strict";

  if (typeof define == "function" && define.amd) {
    define(["jquery"], function (t) {
      return e(t, window, document);
    });
  } else if (typeof exports == "object") {
    module.exports = function (t, n) {
      t = t || window;
      n = n || (typeof window != "undefined" ? require("jquery") : require("jquery")(t));
      return e(n, t, t.document);
    };
  } else {
    window.DataTable = e(jQuery, window, document);
  }
})(function (e, t, n, i) {
  "use strict";

  function r(e) {
    var t = parseInt(e, 10);
    if (!isNaN(t) && isFinite(e)) {
      return t;
    } else {
      return null;
    }
  }
  function o(e, t, n) {
    var i = typeof e == "string";
    return !!x(e) || (t && i && (e = _(e, t)), n && i && (e = e.replace(w, "")), !isNaN(parseFloat(e)) && isFinite(e));
  }
  function a(e, t, n) {
    var i;
    return !!x(e) || (x(i = e) || typeof i == "string") && !!o(e.replace(v, ""), t, n) || null;
  }
  function s(e, t, n, r) {
    var o = [];
    var a = 0;
    var s = t.length;
    if (r !== i) {
      for (; a < s; a++) {
        if (e[t[a]][n]) {
          o.push(e[t[a]][n][r]);
        }
      }
    } else {
      for (; a < s; a++) {
        o.push(e[t[a]][n]);
      }
    }
    return o;
  }
  function l(e, t) {
    var n;
    var r = [];
    if (t === i) {
      t = 0;
      n = e;
    } else {
      n = t;
      t = e;
    }
    for (var o = t; o < n; o++) {
      r.push(o);
    }
    return r;
  }
  function c(e) {
    for (var t = [], n = 0, i = e.length; n < i; n++) {
      if (e[n]) {
        t.push(e[n]);
      }
    }
    return t;
  }
  function u(e, t) {
    return this.indexOf(e, t = t === i ? 0 : t) !== -1;
  }
  var d;
  var h;
  var f;
  var p = function (t, n) {
    if (this instanceof p) {
      return e(t).DataTable(n);
    }
    n = t;
    this.$ = function (e, t) {
      return this.api(true).$(e, t);
    };
    this._ = function (e, t) {
      return this.api(true).rows(e, t).data();
    };
    this.api = function (e) {
      return new St(e ? at(this[d.iApiIndex]) : this);
    };
    this.fnAddData = function (t, n) {
      var r = this.api(true);
      t = (Array.isArray(t) && (Array.isArray(t[0]) || e.isPlainObject(t[0])) ? r.rows : r.row).add(t);
      if (!(n !== i && !n)) {
        r.draw();
      }
      return t.flatten().toArray();
    };
    this.fnAdjustColumnSizing = function (e) {
      var t = this.api(true).columns.adjust();
      var n = t.settings()[0];
      var r = n.oScroll;
      if (e === i || e) {
        t.draw(false);
      } else if (!(r.sX === "" && r.sY === "")) {
        He(n);
      }
    };
    this.fnClearTable = function (e) {
      var t = this.api(true).clear();
      if (!(e !== i && !e)) {
        t.draw();
      }
    };
    this.fnClose = function (e) {
      this.api(true).row(e).child.hide();
    };
    this.fnDeleteRow = function (e, t, n) {
      var r = this.api(true);
      var o = (e = r.rows(e)).settings()[0];
      var a = o.aoData[e[0][0]];
      e.remove();
      if (t) {
        t.call(this, o, a);
      }
      if (!(n !== i && !n)) {
        r.draw();
      }
      return a;
    };
    this.fnDestroy = function (e) {
      this.api(true).destroy(e);
    };
    this.fnDraw = function (e) {
      this.api(true).draw(e);
    };
    this.fnFilter = function (e, t, n, r, o, a) {
      var s = this.api(true);
      (t === null || t === i ? s : s.column(t)).search(e, n, r, a);
      s.draw();
    };
    this.fnGetData = function (e, t) {
      var n;
      var r = this.api(true);
      if (e !== i) {
        n = e.nodeName ? e.nodeName.toLowerCase() : "";
        if (t !== i || n == "td" || n == "th") {
          return r.cell(e, t).data();
        } else {
          return r.row(e).data() || null;
        }
      } else {
        return r.data().toArray();
      }
    };
    this.fnGetNodes = function (e) {
      var t = this.api(true);
      if (e !== i) {
        return t.row(e).node();
      } else {
        return t.rows().nodes().flatten().toArray();
      }
    };
    this.fnGetPosition = function (e) {
      var t = this.api(true);
      var n = e.nodeName.toUpperCase();
      if (n == "TR") {
        return t.row(e).index();
      } else if (n == "TD" || n == "TH") {
        return [(n = t.cell(e).index()).row, n.columnVisible, n.column];
      } else {
        return null;
      }
    };
    this.fnIsOpen = function (e) {
      return this.api(true).row(e).child.isShown();
    };
    this.fnOpen = function (e, t, n) {
      return this.api(true).row(e).child(t, n).show().child()[0];
    };
    this.fnPageChange = function (e, t) {
      e = this.api(true).page(e);
      if (!(t !== i && !t)) {
        e.draw(false);
      }
    };
    this.fnSetColumnVis = function (e, t, n) {
      e = this.api(true).column(e).visible(t);
      if (!(n !== i && !n)) {
        e.columns.adjust().draw();
      }
    };
    this.fnSettings = function () {
      return at(this[d.iApiIndex]);
    };
    this.fnSort = function (e) {
      this.api(true).order(e).draw();
    };
    this.fnSortListener = function (e, t, n) {
      this.api(true).order.listener(e, t, n);
    };
    this.fnUpdate = function (e, t, n, r, o) {
      var a = this.api(true);
      (n === i || n === null ? a.row(t) : a.cell(t, n)).data(e);
      if (!(o !== i && !o)) {
        a.columns.adjust();
      }
      if (!(r !== i && !r)) {
        a.draw();
      }
      return 0;
    };
    this.fnVersionCheck = d.fnVersionCheck;
    var r;
    var o = this;
    var a = n === i;
    var s = this.length;
    if (a) {
      n = {};
    }
    this.oApi = this.internal = d.internal;
    for (r in p.ext.internal) {
      if (r) {
        this[r] = Wt(r);
      }
    }
    this.each(function () {
      var t = s > 1 ? ct({}, n, true) : n;
      var r = 0;
      var l = this.getAttribute("id");
      var c = false;
      var u = p.defaults;
      var d = e(this);
      if (this.nodeName.toLowerCase() != "table") {
        st(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
      } else {
        O(u);
        M(u.column);
        A(u, u, true);
        A(u.column, u.column, true);
        A(u, e.extend(t, d.data()), true);
        for (var h = p.settings, f = (r = 0, h.length); r < f; r++) {
          var g = h[r];
          if (g.nTable == this || g.nTHead && g.nTHead.parentNode == this || g.nTFoot && g.nTFoot.parentNode == this) {
            var m = (t.bRetrieve !== i ? t : u).bRetrieve;
            var v = (t.bDestroy !== i ? t : u).bDestroy;
            if (a || m) {
              return g.oInstance;
            }
            if (v) {
              g.oInstance.fnDestroy();
              break;
            }
            return void st(g, 0, "Cannot reinitialise DataTable", 3);
          }
          if (g.sTableId == this.id) {
            h.splice(r, 1);
            break;
          }
        }
        if (!(l !== null && l !== "")) {
          l = "DataTables_Table_" + p.ext._unique++;
          this.id = l;
        }
        var y;
        var b;
        var w = e.extend(true, {}, p.models.oSettings, {
          sDestroyWidth: d[0].style.width,
          sInstance: l,
          sTableId: l
        });
        w.nTable = this;
        w.oApi = o.internal;
        w.oInit = t;
        h.push(w);
        w.oInstance = o.length === 1 ? o : d.dataTable();
        O(t);
        D(t.oLanguage);
        if (t.aLengthMenu && !t.iDisplayLength) {
          t.iDisplayLength = (Array.isArray(t.aLengthMenu[0]) ? t.aLengthMenu[0] : t.aLengthMenu)[0];
        }
        t = ct(e.extend(true, {}, u), t);
        lt(w.oFeatures, t, ["bPaginate", "bLengthChange", "bFilter", "bSort", "bSortMulti", "bInfo", "bProcessing", "bAutoWidth", "bSortClasses", "bServerSide", "bDeferRender"]);
        lt(w, t, ["asStripeClasses", "ajax", "fnServerData", "fnFormatNumber", "sServerMethod", "aaSorting", "aaSortingFixed", "aLengthMenu", "sPaginationType", "sAjaxSource", "sAjaxDataProp", "iStateDuration", "sDom", "bSortCellsTop", "iTabIndex", "fnStateLoadCallback", "fnStateSaveCallback", "renderer", "searchDelay", "rowId", ["iCookieDuration", "iStateDuration"], ["oSearch", "oPreviousSearch"], ["aoSearchCols", "aoPreSearchCols"], ["iDisplayLength", "_iDisplayLength"]]);
        lt(w.oScroll, t, [["sScrollX", "sX"], ["sScrollXInner", "sXInner"], ["sScrollY", "sY"], ["bScrollCollapse", "bCollapse"]]);
        lt(w.oLanguage, t, "fnInfoCallback");
        dt(w, "aoDrawCallback", t.fnDrawCallback, "user");
        dt(w, "aoServerParams", t.fnServerParams, "user");
        dt(w, "aoStateSaveParams", t.fnStateSaveParams, "user");
        dt(w, "aoStateLoadParams", t.fnStateLoadParams, "user");
        dt(w, "aoStateLoaded", t.fnStateLoaded, "user");
        dt(w, "aoRowCallback", t.fnRowCallback, "user");
        dt(w, "aoRowCreatedCallback", t.fnCreatedRow, "user");
        dt(w, "aoHeaderCallback", t.fnHeaderCallback, "user");
        dt(w, "aoFooterCallback", t.fnFooterCallback, "user");
        dt(w, "aoInitComplete", t.fnInitComplete, "user");
        dt(w, "aoPreDrawCallback", t.fnPreDrawCallback, "user");
        w.rowIdFn = K(t.rowId);
        I(w);
        var x = w.oClasses;
        e.extend(x, p.ext.classes, t.oClasses);
        d.addClass(x.sTable);
        if (w.iInitDisplayStart === i) {
          w.iInitDisplayStart = t.iDisplayStart;
          w._iDisplayStart = t.iDisplayStart;
        }
        if (t.iDeferLoading !== null) {
          w.bDeferLoading = true;
          l = Array.isArray(t.iDeferLoading);
          w._iRecordsDisplay = l ? t.iDeferLoading[0] : t.iDeferLoading;
          w._iRecordsTotal = l ? t.iDeferLoading[1] : t.iDeferLoading;
        }
        var _ = w.oLanguage;
        l = (e.extend(true, _, t.oLanguage), _.sUrl ? (e.ajax({
          dataType: "json",
          url: _.sUrl,
          success: function (t) {
            A(u.oLanguage, t);
            D(t);
            e.extend(true, _, t, w.oInit.oLanguage);
            ht(w, null, "i18n", [w]);
            Ie(w);
          },
          error: function () {
            Ie(w);
          }
        }), c = true) : ht(w, null, "i18n", [w]), t.asStripeClasses === null && (w.asStripeClasses = [x.sStripeOdd, x.sStripeEven]), w.asStripeClasses);
        var C = d.children("tbody").find("tr").eq(0);
        if (e.inArray(true, e.map(l, function (e, t) {
          return C.hasClass(e);
        })) !== -1) {
          e("tbody tr", this).removeClass(l.join(" "));
          w.asDestroyStripes = l.slice();
        }
        var S = [];
        if ((l = this.getElementsByTagName("thead")).length !== 0) {
          ue(w.aoHeader, l[0]);
          S = de(w);
        }
        if (t.aoColumns === null) {
          y = [];
          r = 0;
          f = S.length;
          y = [];
          r = 0;
          f = S.length;
          for (; r < f; r++) {
            y.push(null);
          }
        } else {
          y = t.aoColumns;
        }
        r = 0;
        f = y.length;
        for (; r < f; r++) {
          L(w, S ? S[r] : null);
        }
        B(w, t.aoColumnDefs, y, function (e, t) {
          N(w, e, t);
        });
        if (C.length) {
          b = function (e, t) {
            if (e.getAttribute("data-" + t) !== null) {
              return t;
            } else {
              return null;
            }
          };
          e(C[0]).children("th, td").each(function (e, t) {
            var n;
            var r = w.aoColumns[e];
            if (!r) {
              st(w, 0, "Incorrect column count", 18);
            }
            if (r.mData === e) {
              n = b(t, "sort") || b(t, "order");
              t = b(t, "filter") || b(t, "search");
              if (!(n === null && t === null)) {
                r.mData = {
                  _: e + ".display",
                  sort: n !== null ? e + ".@data-" + n : i,
                  type: n !== null ? e + ".@data-" + n : i,
                  filter: t !== null ? e + ".@data-" + t : i
                };
                N(w, e);
              }
            }
          });
        }
        var k = w.oFeatures;
        l = function () {
          if (t.aaSorting === i) {
            var n = w.aaSorting;
            r = 0;
            f = n.length;
            for (; r < f; r++) {
              n[r][1] = w.aoColumns[r].asSorting[0];
            }
          }
          tt(w);
          if (k.bSort) {
            dt(w, "aoDrawCallback", function () {
              var t;
              var n;
              if (w.bSorted) {
                t = Ke(w);
                n = {};
                e.each(t, function (e, t) {
                  n[t.src] = t.dir;
                });
                ht(w, null, "order", [w, t, n]);
                Ze(w);
              }
            });
          }
          dt(w, "aoDrawCallback", function () {
            if (w.bSorted || gt(w) === "ssp" || k.bDeferRender) {
              tt(w);
            }
          }, "sc");
          var o;
          var a = d.children("caption").each(function () {
            this._captionSide = e(this).css("caption-side");
          });
          if ((o = d.children("thead")).length === 0) {
            o = e("<thead/>").appendTo(d);
          }
          w.nTHead = o[0];
          var s = d.children("tbody");
          if ((o = (o = (s.length === 0 && (s = e("<tbody/>").insertAfter(o)), w.nTBody = s[0], d.children("tfoot"))).length === 0 && a.length > 0 && (w.oScroll.sX !== "" || w.oScroll.sY !== "") ? e("<tfoot/>").appendTo(d) : o).length === 0 || o.children().length === 0) {
            d.addClass(x.sNoFooter);
          } else if (o.length > 0) {
            w.nTFoot = o[0];
            ue(w.aoFooter, w.nTFoot);
          }
          if (t.aaData) {
            for (r = 0; r < t.aaData.length; r++) {
              q(w, t.aaData[r]);
            }
          } else if (!(!w.bDeferLoading && gt(w) != "dom")) {
            W(w, e(w.nTBody).children("tr"));
          }
          w.aiDisplay = w.aiDisplayMaster.slice();
          if (!(w.bInitialised = true) === c) {
            Ie(w);
          }
        };
        dt(w, "aoDrawCallback", it, "state_save");
        if (t.bStateSave) {
          k.bStateSave = true;
          rt(w, 0, l);
        } else {
          l();
        }
      }
    });
    o = null;
    return this;
  };
  var g = {};
  var m = /[\r\n\u2028]/g;
  var v = /<.*?>/g;
  var y = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/;
  var b = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g");
  var w = /['\u00A0,$Â£â¬Â¥%\u2009\u202F\u20BD\u20a9\u20BArfkÉÎ]/gi;
  var x = function (e) {
    return !e || e === true || e === "-";
  };
  var _ = function (e, t) {
    if (!g[t]) {
      g[t] = new RegExp(Ce(t), "g");
    }
    if (typeof e == "string" && t !== ".") {
      return e.replace(/\./g, "").replace(g[t], ".");
    } else {
      return e;
    }
  };
  var C = function (e, t, n) {
    var r = [];
    var o = 0;
    var a = e.length;
    if (n !== i) {
      for (; o < a; o++) {
        if (e[o] && e[o][t]) {
          r.push(e[o][t][n]);
        }
      }
    } else {
      for (; o < a; o++) {
        if (e[o]) {
          r.push(e[o][t]);
        }
      }
    }
    return r;
  };
  var S = function (e) {
    if (function (e) {
      if (!(e.length < 2)) {
        for (var t = e.slice().sort(), n = t[0], i = 1, r = t.length; i < r; i++) {
          if (t[i] === n) {
            return false;
          }
          n = t[i];
        }
      }
      return true;
    }(e)) {
      return e.slice();
    }
    var t;
    var n;
    var i;
    var r = [];
    var o = e.length;
    var a = 0;
    e: for (n = 0; n < o; n++) {
      t = e[n];
      i = 0;
      for (; i < a; i++) {
        if (r[i] === t) {
          continue e;
        }
      }
      r.push(t);
      a++;
    }
    return r;
  };
  var k = function (e, t) {
    if (Array.isArray(t)) {
      for (var n = 0; n < t.length; n++) {
        k(e, t[n]);
      }
    } else {
      e.push(t);
    }
    return e;
  };
  function T(t) {
    var n;
    var i;
    var r = {};
    e.each(t, function (e, o) {
      if ((n = e.match(/^([^A-Z]+?)([A-Z])/)) && "a aa ai ao as b fn i m o s ".indexOf(n[1] + " ") !== -1) {
        i = e.replace(n[0], n[2].toLowerCase());
        r[i] = e;
        if (n[1] === "o") {
          T(t[e]);
        }
      }
    });
    t._hungarianMap = r;
  }
  function A(t, n, r) {
    var o;
    if (!t._hungarianMap) {
      T(t);
    }
    e.each(n, function (a, s) {
      if (!((o = t._hungarianMap[a]) === i || !r && n[o] !== i)) {
        if (o.charAt(0) === "o") {
          if (!n[o]) {
            n[o] = {};
          }
          e.extend(true, n[o], n[a]);
          A(t[o], n[o], r);
        } else {
          n[o] = n[a];
        }
      }
    });
  }
  function D(e) {
    var t;
    var n = p.defaults.oLanguage;
    var i = n.sDecimal;
    if (i) {
      Lt(i);
    }
    if (e) {
      t = e.sZeroRecords;
      if (!e.sEmptyTable && t && n.sEmptyTable === "No data available in table") {
        lt(e, e, "sZeroRecords", "sEmptyTable");
      }
      if (!e.sLoadingRecords && t && n.sLoadingRecords === "Loading...") {
        lt(e, e, "sZeroRecords", "sLoadingRecords");
      }
      if (e.sInfoThousands) {
        e.sThousands = e.sInfoThousands;
      }
      if ((t = e.sDecimal) && i !== t) {
        Lt(t);
      }
    }
  }
  if (!Array.isArray) {
    Array.isArray = function (e) {
      return Object.prototype.toString.call(e) === "[object Array]";
    };
  }
  if (!Array.prototype.includes) {
    Array.prototype.includes = u;
  }
  if (!String.prototype.trim) {
    String.prototype.trim = function () {
      return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    };
  }
  if (!String.prototype.includes) {
    String.prototype.includes = u;
  }
  p.util = {
    throttle: function (e, t) {
      var n;
      var r;
      var o = t !== i ? t : 200;
      return function () {
        var t = this;
        var a = +new Date();
        var s = arguments;
        if (n && a < n + o) {
          clearTimeout(r);
          r = setTimeout(function () {
            n = i;
            e.apply(t, s);
          }, o);
        } else {
          n = a;
          e.apply(t, s);
        }
      };
    },
    escapeRegex: function (e) {
      return e.replace(b, "\\$1");
    },
    set: function (t) {
      var n;
      if (e.isPlainObject(t)) {
        return p.util.set(t._);
      } else if (t === null) {
        return function () {};
      } else if (typeof t == "function") {
        return function (e, n, i) {
          t(e, "set", n, i);
        };
      } else if (typeof t != "string" || t.indexOf(".") === -1 && t.indexOf("[") === -1 && t.indexOf("(") === -1) {
        return function (e, n) {
          e[t] = n;
        };
      } else {
        n = function (e, t, r) {
          for (var o, a, s, l, c = G(r), u = (r = c[c.length - 1], 0), d = c.length - 1; u < d; u++) {
            if (c[u] === "__proto__" || c[u] === "constructor") {
              throw new Error("Cannot set prototype values");
            }
            o = c[u].match(Y);
            a = c[u].match(X);
            if (o) {
              c[u] = c[u].replace(Y, "");
              e[c[u]] = [];
              (o = c.slice()).splice(0, u + 1);
              l = o.join(".");
              if (Array.isArray(t)) {
                for (var h = 0, f = t.length; h < f; h++) {
                  n(s = {}, t[h], l);
                  e[c[u]].push(s);
                }
              } else {
                e[c[u]] = t;
              }
              return;
            }
            if (a) {
              c[u] = c[u].replace(X, "");
              e = e[c[u]](t);
            }
            if (!(e[c[u]] !== null && e[c[u]] !== i)) {
              e[c[u]] = {};
            }
            e = e[c[u]];
          }
          if (r.match(X)) {
            e[r.replace(X, "")](t);
          } else {
            e[r.replace(Y, "")] = t;
          }
        };
        return function (e, i) {
          return n(e, i, t);
        };
      }
    },
    get: function (t) {
      var n;
      var r;
      if (e.isPlainObject(t)) {
        n = {};
        e.each(t, function (e, t) {
          if (t) {
            n[e] = p.util.get(t);
          }
        });
        return function (e, t, r, o) {
          var a = n[t] || n._;
          if (a !== i) {
            return a(e, t, r, o);
          } else {
            return e;
          }
        };
      } else if (t === null) {
        return function (e) {
          return e;
        };
      } else if (typeof t == "function") {
        return function (e, n, i, r) {
          return t(e, n, i, r);
        };
      } else if (typeof t != "string" || t.indexOf(".") === -1 && t.indexOf("[") === -1 && t.indexOf("(") === -1) {
        return function (e, n) {
          return e[t];
        };
      } else {
        r = function (e, t, n) {
          var o;
          var a;
          var s;
          if (n !== "") {
            for (var l = G(n), c = 0, u = l.length; c < u; c++) {
              f = l[c].match(Y);
              o = l[c].match(X);
              if (f) {
                l[c] = l[c].replace(Y, "");
                if (l[c] !== "") {
                  e = e[l[c]];
                }
                a = [];
                l.splice(0, c + 1);
                s = l.join(".");
                if (Array.isArray(e)) {
                  for (var d = 0, h = e.length; d < h; d++) {
                    a.push(r(e[d], t, s));
                  }
                }
                var f = f[0].substring(1, f[0].length - 1);
                e = f === "" ? a : a.join(f);
                break;
              }
              if (o) {
                l[c] = l[c].replace(X, "");
                e = e[l[c]]();
              } else {
                if (e === null || e[l[c]] === i) {
                  return i;
                }
                e = e[l[c]];
              }
            }
          }
          return e;
        };
        return function (e, n) {
          return r(e, n, t);
        };
      }
    }
  };
  var E = function (e, t, n) {
    if (e[t] !== i) {
      e[n] = e[t];
    }
  };
  function O(e) {
    E(e, "ordering", "bSort");
    E(e, "orderMulti", "bSortMulti");
    E(e, "orderClasses", "bSortClasses");
    E(e, "orderCellsTop", "bSortCellsTop");
    E(e, "order", "aaSorting");
    E(e, "orderFixed", "aaSortingFixed");
    E(e, "paging", "bPaginate");
    E(e, "pagingType", "sPaginationType");
    E(e, "pageLength", "iDisplayLength");
    E(e, "searching", "bFilter");
    if (typeof e.sScrollX == "boolean") {
      e.sScrollX = e.sScrollX ? "100%" : "";
    }
    if (typeof e.scrollX == "boolean") {
      e.scrollX = e.scrollX ? "100%" : "";
    }
    var t = e.aoSearchCols;
    if (t) {
      for (var n = 0, i = t.length; n < i; n++) {
        if (t[n]) {
          A(p.models.oSearch, t[n]);
        }
      }
    }
  }
  function M(e) {
    E(e, "orderable", "bSortable");
    E(e, "orderData", "aDataSort");
    E(e, "orderSequence", "asSorting");
    E(e, "orderDataType", "sortDataType");
    var t = e.aDataSort;
    if (!(typeof t != "number" || Array.isArray(t))) {
      e.aDataSort = [t];
    }
  }
  function I(n) {
    var i;
    var r;
    var o;
    var a;
    if (!p.__browser) {
      p.__browser = i = {};
      a = (o = (r = e("<div/>").css({
        position: "fixed",
        top: 0,
        left: e(t).scrollLeft() * -1,
        height: 1,
        width: 1,
        overflow: "hidden"
      }).append(e("<div/>").css({
        position: "absolute",
        top: 1,
        left: 1,
        width: 100,
        overflow: "scroll"
      }).append(e("<div/>").css({
        width: "100%",
        height: 10
      }))).appendTo("body")).children()).children();
      i.barWidth = o[0].offsetWidth - o[0].clientWidth;
      i.bScrollOversize = a[0].offsetWidth === 100 && o[0].clientWidth !== 100;
      i.bScrollbarLeft = Math.round(a.offset().left) !== 1;
      i.bBounding = !!r[0].getBoundingClientRect().width;
      r.remove();
    }
    e.extend(n.oBrowser, p.__browser);
    n.oScroll.iBarWidth = p.__browser.barWidth;
  }
  function P(e, t, n, r, o, a) {
    var s;
    var l = r;
    var c = false;
    for (n !== i && (s = n, c = true); l !== o;) {
      if (e.hasOwnProperty(l)) {
        s = c ? t(s, e[l], l, e) : e[l];
        c = true;
        l += a;
      }
    }
    return s;
  }
  function L(t, i) {
    var r = p.defaults.column;
    var o = t.aoColumns.length;
    r = e.extend({}, p.models.oColumn, r, {
      nTh: i || n.createElement("th"),
      sTitle: r.sTitle || (i ? i.innerHTML : ""),
      aDataSort: r.aDataSort || [o],
      mData: r.mData || o,
      idx: o
    });
    (r = (t.aoColumns.push(r), t.aoPreSearchCols))[o] = e.extend({}, p.models.oSearch, r[o]);
    N(t, o, e(i).data());
  }
  function N(t, n, r) {
    function o(e) {
      return typeof e == "string" && e.indexOf("@") !== -1;
    }
    n = t.aoColumns[n];
    var a = t.oClasses;
    var s = e(n.nTh);
    if (!n.sWidthOrig) {
      n.sWidthOrig = s.attr("width") || null;
      if (d = (s.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/)) {
        n.sWidthOrig = d[1];
      }
    }
    if (r !== i && r !== null) {
      M(r);
      A(p.defaults.column, r, true);
      if (!(r.mDataProp === i || r.mData)) {
        r.mData = r.mDataProp;
      }
      if (r.sType) {
        n._sManualType = r.sType;
      }
      if (r.className && !r.sClass) {
        r.sClass = r.className;
      }
      if (r.sClass) {
        s.addClass(r.sClass);
      }
      d = n.sClass;
      e.extend(n, r);
      lt(n, r, "sWidth", "sWidthOrig");
      if (d !== n.sClass) {
        n.sClass = d + " " + n.sClass;
      }
      if (r.iDataSort !== i) {
        n.aDataSort = [r.iDataSort];
      }
      lt(n, r, "aDataSort");
    }
    var l = n.mData;
    var c = K(l);
    var u = n.mRender ? K(n.mRender) : null;
    n._bAttrSrc = e.isPlainObject(l) && (o(l.sort) || o(l.type) || o(l.filter));
    n._setter = null;
    n.fnGetData = function (e, t, n) {
      var r = c(e, t, i, n);
      if (u && t) {
        return u(r, t, e, n);
      } else {
        return r;
      }
    };
    n.fnSetData = function (e, t, n) {
      return Q(l)(e, t, n);
    };
    if (typeof l != "number") {
      t._rowReadObject = true;
    }
    if (!t.oFeatures.bSort) {
      n.bSortable = false;
      s.addClass(a.sSortableNone);
    }
    var d = e.inArray("asc", n.asSorting) !== -1;
    r = e.inArray("desc", n.asSorting) !== -1;
    if (n.bSortable && (d || r)) {
      if (d && !r) {
        n.sSortingClass = a.sSortableAsc;
        n.sSortingClassJUI = a.sSortJUIAscAllowed;
      } else if (!d && r) {
        n.sSortingClass = a.sSortableDesc;
        n.sSortingClassJUI = a.sSortJUIDescAllowed;
      } else {
        n.sSortingClass = a.sSortable;
        n.sSortingClassJUI = a.sSortJUI;
      }
    } else {
      n.sSortingClass = a.sSortableNone;
      n.sSortingClassJUI = "";
    }
  }
  function F(e) {
    if (e.oFeatures.bAutoWidth !== false) {
      var t = e.aoColumns;
      We(e);
      for (var n = 0, i = t.length; n < i; n++) {
        t[n].nTh.style.width = t[n].sWidth;
      }
    }
    var r = e.oScroll;
    if (!(r.sY === "" && r.sX === "")) {
      He(e);
    }
    ht(e, null, "column-sizing", [e]);
  }
  function R(e, t) {
    if (typeof (e = z(e, "bVisible"))[t] == "number") {
      return e[t];
    } else {
      return null;
    }
  }
  function j(t, n) {
    t = z(t, "bVisible");
    if ((n = e.inArray(n, t)) !== -1) {
      return n;
    } else {
      return null;
    }
  }
  function $(t) {
    var n = 0;
    e.each(t.aoColumns, function (t, i) {
      if (i.bVisible && e(i.nTh).css("display") !== "none") {
        n++;
      }
    });
    return n;
  }
  function z(t, n) {
    var i = [];
    e.map(t.aoColumns, function (e, t) {
      if (e[n]) {
        i.push(t);
      }
    });
    return i;
  }
  function H(e) {
    for (var t, n, r, o, a, s, l, c = e.aoColumns, u = e.aoData, d = p.ext.type.detect, h = 0, f = c.length; h < f; h++) {
      l = [];
      if (!(a = c[h]).sType && a._sManualType) {
        a.sType = a._sManualType;
      } else if (!a.sType) {
        t = 0;
        n = d.length;
        for (; t < n; t++) {
          r = 0;
          o = u.length;
          for (; r < o && (l[r] === i && (l[r] = U(e, r, h, "type")), (s = d[t](l[r], e)) || t === d.length - 1) && (s !== "html" || x(l[r])); r++);
          if (s) {
            a.sType = s;
            break;
          }
        }
        if (!a.sType) {
          a.sType = "string";
        }
      }
    }
  }
  function B(t, n, r, o) {
    var a;
    var s;
    var l;
    var c;
    var u = t.aoColumns;
    if (n) {
      for (a = n.length - 1; a >= 0; a--) {
        for (var d, h = (d = n[a]).target !== i ? d.target : d.targets !== i ? d.targets : d.aTargets, f = 0, p = (h = Array.isArray(h) ? h : [h]).length; f < p; f++) {
          if (typeof h[f] == "number" && h[f] >= 0) {
            for (; u.length <= h[f];) {
              L(t);
            }
            o(h[f], d);
          } else if (typeof h[f] == "number" && h[f] < 0) {
            o(u.length + h[f], d);
          } else if (typeof h[f] == "string") {
            l = 0;
            c = u.length;
            l = 0;
            c = u.length;
            for (; l < c; l++) {
              if (!(h[f] != "_all" && !e(u[l].nTh).hasClass(h[f]))) {
                o(l, d);
              }
            }
          }
        }
      }
    }
    if (r) {
      a = 0;
      s = r.length;
      a = 0;
      s = r.length;
      for (; a < s; a++) {
        o(a, r[a]);
      }
    }
  }
  function q(t, n, r, o) {
    for (var a = t.aoData.length, s = e.extend(true, {}, p.models.oRow, {
        src: r ? "dom" : "data",
        idx: a
      }), l = (s._aData = n, t.aoData.push(s), t.aoColumns), c = 0, u = l.length; c < u; c++) {
      l[c].sType = null;
    }
    t.aiDisplayMaster.push(a);
    if ((n = t.rowIdFn(n)) !== i) {
      t.aIds[n] = s;
    }
    if (!(!r && t.oFeatures.bDeferRender)) {
      ie(t, a, r, o);
    }
    return a;
  }
  function W(t, n) {
    var i;
    return (n = n instanceof e ? n : e(n)).map(function (e, n) {
      i = ne(t, n);
      return q(t, i.data, n, i.cells);
    });
  }
  function U(e, t, n, r) {
    if (r === "search") {
      r = "filter";
    } else if (r === "order") {
      r = "sort";
    }
    var o = e.iDraw;
    var a = e.aoColumns[n];
    var s = e.aoData[t]._aData;
    var l = a.sDefaultContent;
    var c = a.fnGetData(s, r, {
      settings: e,
      row: t,
      col: n
    });
    if (c === i) {
      if (e.iDrawError != o && l === null) {
        st(e, 0, "Requested unknown parameter " + (typeof a.mData == "function" ? "{function}" : "'" + a.mData + "'") + " for row " + t + ", column " + n, 4);
        e.iDrawError = o;
      }
      return l;
    }
    if (c !== s && c !== null || l === null || r === i) {
      if (typeof c == "function") {
        return c.call(s);
      }
    } else {
      c = l;
    }
    if (c === null && r === "display") {
      return "";
    } else if (r === "filter" && (t = p.ext.type.search)[a.sType]) {
      return t[a.sType](c);
    } else {
      return c;
    }
  }
  function V(e, t, n, i) {
    var r = e.aoColumns[n];
    var o = e.aoData[t]._aData;
    r.fnSetData(o, i, {
      settings: e,
      row: t,
      col: n
    });
  }
  var Y = /\[.*?\]$/;
  var X = /\(\)$/;
  function G(t) {
    return e.map(t.match(/(\\.|[^\.])+/g) || [""], function (e) {
      return e.replace(/\\\./g, ".");
    });
  }
  var K = p.util.get;
  var Q = p.util.set;
  function Z(e) {
    return C(e.aoData, "_aData");
  }
  function J(e) {
    e.aoData.length = 0;
    e.aiDisplayMaster.length = 0;
    e.aiDisplay.length = 0;
    e.aIds = {};
  }
  function ee(e, t, n) {
    for (var r = -1, o = 0, a = e.length; o < a; o++) {
      if (e[o] == t) {
        r = o;
      } else if (e[o] > t) {
        e[o]--;
      }
    }
    if (r != -1 && n === i) {
      e.splice(r, 1);
    }
  }
  function te(e, t, n, r) {
    function o(n, i) {
      for (; n.childNodes.length;) {
        n.removeChild(n.firstChild);
      }
      n.innerHTML = U(e, t, i, "display");
    }
    var a;
    var s;
    var l = e.aoData[t];
    if (n !== "dom" && (n && n !== "auto" || l.src !== "dom")) {
      var c = l.anCells;
      if (c) {
        if (r !== i) {
          o(c[r], r);
        } else {
          a = 0;
          s = c.length;
          a = 0;
          s = c.length;
          for (; a < s; a++) {
            o(c[a], a);
          }
        }
      }
    } else {
      l._aData = ne(e, l, r, r === i ? i : l._aData).data;
    }
    l._aSortData = null;
    l._aFilterData = null;
    var u = e.aoColumns;
    if (r !== i) {
      u[r].sType = null;
    } else {
      a = 0;
      s = u.length;
      for (; a < s; a++) {
        u[a].sType = null;
      }
      re(e, l);
    }
  }
  function ne(e, t, n, r) {
    function o(e, t) {
      var n;
      if (typeof e == "string" && (n = e.indexOf("@")) !== -1) {
        n = e.substring(n + 1);
        Q(e)(r, t.getAttribute(n));
      }
    }
    function a(e) {
      if (!(n !== i && n !== h)) {
        l = f[h];
        c = e.innerHTML.trim();
        if (l && l._bAttrSrc) {
          Q(l.mData._)(r, c);
          o(l.mData.sort, e);
          o(l.mData.type, e);
          o(l.mData.filter, e);
        } else if (p) {
          if (!l._setter) {
            l._setter = Q(l.mData);
          }
          l._setter(r, c);
        } else {
          r[h] = c;
        }
      }
      h++;
    }
    var s;
    var l;
    var c;
    var u = [];
    var d = t.firstChild;
    var h = 0;
    var f = e.aoColumns;
    var p = e._rowReadObject;
    r = r !== i ? r : p ? {} : [];
    if (d) {
      for (; d;) {
        if (!((s = d.nodeName.toUpperCase()) != "TD" && s != "TH")) {
          a(d);
          u.push(d);
        }
        d = d.nextSibling;
      }
    } else {
      for (var g = 0, m = (u = t.anCells).length; g < m; g++) {
        a(u[g]);
      }
    }
    if ((t = t.firstChild ? t : t.nTr) && (t = t.getAttribute("id"))) {
      Q(e.rowId)(r, t);
    }
    return {
      data: r,
      cells: u
    };
  }
  function ie(t, i, r, o) {
    var a;
    var s;
    var l;
    var c;
    var u;
    var d;
    var h = t.aoData[i];
    var f = h._aData;
    var p = [];
    if (h.nTr === null) {
      a = r || n.createElement("tr");
      h.nTr = a;
      h.anCells = p;
      a._DT_RowIndex = i;
      re(t, h);
      c = 0;
      u = t.aoColumns.length;
      for (; c < u; c++) {
        l = t.aoColumns[c];
        if (!(s = (d = !r) ? n.createElement(l.sCellType) : o[c])) {
          st(t, 0, "Incorrect column count", 18);
        }
        s._DT_CellIndex = {
          row: i,
          column: c
        };
        p.push(s);
        if (!(!d && (!l.mRender && l.mData === c || e.isPlainObject(l.mData) && l.mData._ === c + ".display"))) {
          s.innerHTML = U(t, i, c, "display");
        }
        if (l.sClass) {
          s.className += " " + l.sClass;
        }
        if (l.bVisible && !r) {
          a.appendChild(s);
        } else if (!l.bVisible && r) {
          s.parentNode.removeChild(s);
        }
        if (l.fnCreatedCell) {
          l.fnCreatedCell.call(t.oInstance, s, U(t, i, c), f, i, c);
        }
      }
      ht(t, "aoRowCreatedCallback", null, [a, f, i, p]);
    }
  }
  function re(t, n) {
    var i = n.nTr;
    var r = n._aData;
    if (i) {
      if (t = t.rowIdFn(r)) {
        i.id = t;
      }
      if (r.DT_RowClass) {
        t = r.DT_RowClass.split(" ");
        n.__rowc = n.__rowc ? S(n.__rowc.concat(t)) : t;
        e(i).removeClass(n.__rowc.join(" ")).addClass(r.DT_RowClass);
      }
      if (r.DT_RowAttr) {
        e(i).attr(r.DT_RowAttr);
      }
      if (r.DT_RowData) {
        e(i).data(r.DT_RowData);
      }
    }
  }
  function oe(t) {
    var n;
    var i;
    var r;
    var o = t.nTHead;
    var a = t.nTFoot;
    var s = e("th, td", o).length === 0;
    var l = t.oClasses;
    var c = t.aoColumns;
    if (s) {
      i = e("<tr/>").appendTo(o);
    }
    d = 0;
    h = c.length;
    for (; d < h; d++) {
      r = c[d];
      n = e(r.nTh).addClass(r.sClass);
      if (s) {
        n.appendTo(i);
      }
      if (t.oFeatures.bSort) {
        n.addClass(r.sSortingClass);
        if (r.bSortable !== false) {
          n.attr("tabindex", t.iTabIndex).attr("aria-controls", t.sTableId);
          et(t, r.nTh, d);
        }
      }
      if (r.sTitle != n[0].innerHTML) {
        n.html(r.sTitle);
      }
      pt(t, "header")(t, n, r, l);
    }
    if (s) {
      ue(t.aoHeader, o);
    }
    e(o).children("tr").children("th, td").addClass(l.sHeaderTH);
    e(a).children("tr").children("th, td").addClass(l.sFooterTH);
    if (a !== null) {
      for (var u = t.aoFooter[0], d = 0, h = u.length; d < h; d++) {
        if (r = c[d]) {
          r.nTf = u[d].cell;
          if (r.sClass) {
            e(r.nTf).addClass(r.sClass);
          }
        } else {
          st(t, 0, "Incorrect column count", 18);
        }
      }
    }
  }
  function ae(t, n, r) {
    var o;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d;
    var h;
    var f;
    var p = [];
    var g = [];
    var m = t.aoColumns.length;
    if (n) {
      if (r === i) {
        r = false;
      }
      o = 0;
      a = n.length;
      for (; o < a; o++) {
        p[o] = n[o].slice();
        p[o].nTr = n[o].nTr;
        s = m - 1;
        for (; s >= 0; s--) {
          if (!(t.aoColumns[s].bVisible || r)) {
            p[o].splice(s, 1);
          }
        }
        g.push([]);
      }
      o = 0;
      a = p.length;
      for (; o < a; o++) {
        if (d = p[o].nTr) {
          for (; u = d.firstChild;) {
            d.removeChild(u);
          }
        }
        s = 0;
        l = p[o].length;
        for (; s < l; s++) {
          f = h = 1;
          if (g[o][s] === i) {
            d.appendChild(p[o][s].cell);
            g[o][s] = 1;
            for (; p[o + h] !== i && p[o][s].cell == p[o + h][s].cell;) {
              g[o + h][s] = 1;
              h++;
            }
            for (; p[o][s + f] !== i && p[o][s].cell == p[o][s + f].cell;) {
              for (c = 0; c < h; c++) {
                g[o + c][s + f] = 1;
              }
              f++;
            }
            e(p[o][s].cell).attr("rowspan", h).attr("colspan", f);
          }
        }
      }
    }
  }
  function se(t, n) {
    r = gt(u = t) == "ssp";
    if ((c = u.iInitDisplayStart) !== i && c !== -1) {
      u._iDisplayStart = !r && c >= u.fnRecordsDisplay() ? 0 : c;
      u.iInitDisplayStart = -1;
    }
    var r = ht(t, "aoPreDrawCallback", "preDraw", [t]);
    if (e.inArray(false, r) !== -1) {
      $e(t, false);
    } else {
      var o = [];
      var a = 0;
      var s = t.asStripeClasses;
      var l = s.length;
      var c = t.oLanguage;
      var u = gt(t) == "ssp";
      var d = t.aiDisplay;
      r = t._iDisplayStart;
      var h = t.fnDisplayEnd();
      t.bDrawing = true;
      if (t.bDeferLoading) {
        t.bDeferLoading = false;
        t.iDraw++;
        $e(t, false);
      } else if (u) {
        if (!t.bDestroying && !n) {
          return void fe(t);
        }
      } else {
        t.iDraw++;
      }
      if (d.length !== 0) {
        for (var f = u ? t.aoData.length : h, p = u ? 0 : r; p < f; p++) {
          var g;
          var m = d[p];
          var v = t.aoData[m];
          if (v.nTr === null) {
            ie(t, m);
          }
          var y = v.nTr;
          if (l !== 0) {
            g = s[a % l];
            if (v._sRowStripe != g) {
              e(y).removeClass(v._sRowStripe).addClass(g);
              v._sRowStripe = g;
            }
          }
          ht(t, "aoRowCallback", null, [y, v._aData, a, p, m]);
          o.push(y);
          a++;
        }
      } else {
        n = c.sZeroRecords;
        if (t.iDraw == 1 && gt(t) == "ajax") {
          n = c.sLoadingRecords;
        } else if (c.sEmptyTable && t.fnRecordsTotal() === 0) {
          n = c.sEmptyTable;
        }
        o[0] = e("<tr/>", {
          class: l ? s[0] : ""
        }).append(e("<td />", {
          valign: "top",
          colSpan: $(t),
          class: t.oClasses.sRowEmpty
        }).html(n))[0];
      }
      ht(t, "aoHeaderCallback", "header", [e(t.nTHead).children("tr")[0], Z(t), r, h, d]);
      ht(t, "aoFooterCallback", "footer", [e(t.nTFoot).children("tr")[0], Z(t), r, h, d]);
      (u = e(t.nTBody)).children().detach();
      u.append(e(o));
      ht(t, "aoDrawCallback", "draw", [t]);
      t.bSorted = false;
      t.bFiltered = false;
      t.bDrawing = false;
    }
  }
  function le(e, t) {
    var n = (i = e.oFeatures).bSort;
    var i = i.bFilter;
    if (n) {
      Qe(e);
    }
    if (i) {
      ye(e, e.oPreviousSearch);
    } else {
      e.aiDisplay = e.aiDisplayMaster.slice();
    }
    if (t !== true) {
      e._iDisplayStart = 0;
    }
    e._drawHold = t;
    se(e);
    e._drawHold = false;
  }
  function ce(t) {
    for (var n, i, r, o, a, s, l, c = t.oClasses, u = e(t.nTable), d = (u = e("<div/>").insertBefore(u), t.oFeatures), h = e("<div/>", {
        id: t.sTableId + "_wrapper",
        class: c.sWrapper + (t.nTFoot ? "" : " " + c.sNoFooter)
      }), f = (t.nHolding = u[0], t.nTableWrapper = h[0], t.nTableReinsertBefore = t.nTable.nextSibling, t.sDom.split("")), g = 0; g < f.length; g++) {
      n = null;
      if ((i = f[g]) == "<") {
        r = e("<div/>")[0];
        if ((o = f[g + 1]) == "'" || o == "\"") {
          a = "";
          s = 2;
          for (; f[g + s] != o;) {
            a += f[g + s];
            s++;
          }
          if (a == "H") {
            a = c.sJUIHeader;
          } else if (a == "F") {
            a = c.sJUIFooter;
          }
          if (a.indexOf(".") != -1) {
            l = a.split(".");
            r.id = l[0].substr(1, l[0].length - 1);
            r.className = l[1];
          } else if (a.charAt(0) == "#") {
            r.id = a.substr(1, a.length - 1);
          } else {
            r.className = a;
          }
          g += s;
        }
        h.append(r);
        h = e(r);
      } else if (i == ">") {
        h = h.parent();
      } else if (i == "l" && d.bPaginate && d.bLengthChange) {
        n = Ne(t);
      } else if (i == "f" && d.bFilter) {
        n = ve(t);
      } else if (i == "r" && d.bProcessing) {
        n = je(t);
      } else if (i == "t") {
        n = ze(t);
      } else if (i == "i" && d.bInfo) {
        n = Ee(t);
      } else if (i == "p" && d.bPaginate) {
        n = Fe(t);
      } else if (p.ext.feature.length !== 0) {
        for (var m = p.ext.feature, v = 0, y = m.length; v < y; v++) {
          if (i == m[v].cFeature) {
            n = m[v].fnInit(t);
            break;
          }
        }
      }
      if (n) {
        if (!(l = t.aanFeatures)[i]) {
          l[i] = [];
        }
        l[i].push(n);
        h.append(n);
      }
    }
    u.replaceWith(h);
    t.nHolding = null;
  }
  function ue(t, n) {
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d;
    var h;
    var f = e(n).children("tr");
    t.splice(0, t.length);
    o = 0;
    l = f.length;
    for (; o < l; o++) {
      t.push([]);
    }
    o = 0;
    l = f.length;
    for (; o < l; o++) {
      for (r = (i = f[o]).firstChild; r;) {
        if (r.nodeName.toUpperCase() == "TD" || r.nodeName.toUpperCase() == "TH") {
          u = (u = +r.getAttribute("colspan")) && u !== 0 && u !== 1 ? u : 1;
          d = (d = +r.getAttribute("rowspan")) && d !== 0 && d !== 1 ? d : 1;
          c = function (e, t, n) {
            for (var i = e[t]; i[n];) {
              n++;
            }
            return n;
          }(t, o, 0);
          h = u === 1;
          s = 0;
          u = (u = +r.getAttribute("colspan")) && u !== 0 && u !== 1 ? u : 1;
          d = (d = +r.getAttribute("rowspan")) && d !== 0 && d !== 1 ? d : 1;
          c = function (e, t, n) {
            for (var i = e[t]; i[n];) {
              n++;
            }
            return n;
          }(t, o, 0);
          h = u === 1;
          s = 0;
          for (; s < u; s++) {
            for (a = 0; a < d; a++) {
              t[o + a][c + s] = {
                cell: r,
                unique: h
              };
              t[o + a].nTr = i;
            }
          }
        }
        r = r.nextSibling;
      }
    }
  }
  function de(e, t, n) {
    var i = [];
    if (!n) {
      n = e.aoHeader;
      if (t) {
        ue(n = [], t);
      }
    }
    for (var r = 0, o = n.length; r < o; r++) {
      for (var a = 0, s = n[r].length; a < s; a++) {
        if (!(!n[r][a].unique || i[a] && e.bSortCellsTop)) {
          i[a] = n[r][a].cell;
        }
      }
    }
    return i;
  }
  function he(t, n, i) {
    function r(e) {
      var n = t.jqXHR ? t.jqXHR.status : null;
      if (e === null || typeof n == "number" && n == 204) {
        me(t, e = {}, []);
      }
      if (n = e.error || e.sError) {
        st(t, 0, n);
      }
      t.json = e;
      ht(t, null, "xhr", [t, e, t.jqXHR]);
      i(e);
    }
    ht(t, "aoServerParams", "serverParams", [n]);
    if (n && Array.isArray(n)) {
      o = {};
      a = /(.*?)\[\]$/;
      e.each(n, function (e, t) {
        var n = t.name.match(a);
        if (n) {
          n = n[0];
          if (!o[n]) {
            o[n] = [];
          }
          o[n].push(t.value);
        } else {
          o[t.name] = t.value;
        }
      });
      n = o;
    }
    var o;
    var a;
    var s;
    var l = t.ajax;
    var c = t.oInstance;
    if (e.isPlainObject(l) && l.data) {
      u = typeof (s = l.data) == "function" ? s(n, t) : s;
      n = typeof s == "function" && u ? u : e.extend(true, n, u);
      delete l.data;
    }
    var u = {
      data: n,
      success: r,
      dataType: "json",
      cache: false,
      type: t.sServerMethod,
      error: function (n, i, r) {
        var o = ht(t, null, "xhr", [t, null, t.jqXHR]);
        if (e.inArray(true, o) === -1) {
          if (i == "parsererror") {
            st(t, 0, "Invalid JSON response", 1);
          } else if (n.readyState === 4) {
            st(t, 0, "Ajax error", 7);
          }
        }
        $e(t, false);
      }
    };
    t.oAjaxData = n;
    ht(t, null, "preXhr", [t, n]);
    if (t.fnServerData) {
      t.fnServerData.call(c, t.sAjaxSource, e.map(n, function (e, t) {
        return {
          name: t,
          value: e
        };
      }), r, t);
    } else if (t.sAjaxSource || typeof l == "string") {
      t.jqXHR = e.ajax(e.extend(u, {
        url: l || t.sAjaxSource
      }));
    } else if (typeof l == "function") {
      t.jqXHR = l.call(c, n, r, t);
    } else {
      t.jqXHR = e.ajax(e.extend(u, l));
      l.data = s;
    }
  }
  function fe(e) {
    e.iDraw++;
    $e(e, true);
    he(e, pe(e), function (t) {
      ge(e, t);
    });
  }
  function pe(t) {
    for (var n, i, r, o = t.aoColumns, a = o.length, s = t.oFeatures, l = t.oPreviousSearch, c = t.aoPreSearchCols, u = [], d = Ke(t), h = t._iDisplayStart, f = s.bPaginate !== false ? t._iDisplayLength : -1, g = function (e, t) {
        u.push({
          name: e,
          value: t
        });
      }, m = (g("sEcho", t.iDraw), g("iColumns", a), g("sColumns", C(o, "sName").join(",")), g("iDisplayStart", h), g("iDisplayLength", f), {
        draw: t.iDraw,
        columns: [],
        order: [],
        start: h,
        length: f,
        search: {
          value: l.sSearch,
          regex: l.bRegex
        }
      }), v = 0; v < a; v++) {
      i = o[v];
      r = c[v];
      n = typeof i.mData == "function" ? "function" : i.mData;
      m.columns.push({
        data: n,
        name: i.sName,
        searchable: i.bSearchable,
        orderable: i.bSortable,
        search: {
          value: r.sSearch,
          regex: r.bRegex
        }
      });
      g("mDataProp_" + v, n);
      if (s.bFilter) {
        g("sSearch_" + v, r.sSearch);
        g("bRegex_" + v, r.bRegex);
        g("bSearchable_" + v, i.bSearchable);
      }
      if (s.bSort) {
        g("bSortable_" + v, i.bSortable);
      }
    }
    if (s.bFilter) {
      g("sSearch", l.sSearch);
      g("bRegex", l.bRegex);
    }
    if (s.bSort) {
      e.each(d, function (e, t) {
        m.order.push({
          column: t.col,
          dir: t.dir
        });
        g("iSortCol_" + e, t.col);
        g("sSortDir_" + e, t.dir);
      });
      g("iSortingCols", d.length);
    }
    if ((h = p.ext.legacy.ajax) === null) {
      if (t.sAjaxSource) {
        return u;
      } else {
        return m;
      }
    } else if (h) {
      return u;
    } else {
      return m;
    }
  }
  function ge(e, t) {
    function n(e, n) {
      if (t[e] !== i) {
        return t[e];
      } else {
        return t[n];
      }
    }
    var r = me(e, t);
    var o = n("sEcho", "draw");
    var a = n("iTotalRecords", "recordsTotal");
    var s = n("iTotalDisplayRecords", "recordsFiltered");
    if (o !== i) {
      if (+o < e.iDraw) {
        return;
      }
      e.iDraw = +o;
    }
    r = r || [];
    J(e);
    e._iRecordsTotal = parseInt(a, 10);
    e._iRecordsDisplay = parseInt(s, 10);
    for (var l = 0, c = r.length; l < c; l++) {
      q(e, r[l]);
    }
    e.aiDisplay = e.aiDisplayMaster.slice();
    se(e, true);
    if (!e._bInitComplete) {
      Pe(e, t);
    }
    $e(e, false);
  }
  function me(t, n, r) {
    t = e.isPlainObject(t.ajax) && t.ajax.dataSrc !== i ? t.ajax.dataSrc : t.sAjaxDataProp;
    if (!r) {
      if (t === "data") {
        return n.aaData || n[t];
      } else if (t !== "") {
        return K(t)(n);
      } else {
        return n;
      }
    }
    Q(t)(n, r);
  }
  function ve(t) {
    function i(e) {
      l.f;
      var n = this.value || "";
      if (!(s.return && e.key !== "Enter")) {
        if (n != s.sSearch) {
          ye(t, {
            sSearch: n,
            bRegex: s.bRegex,
            bSmart: s.bSmart,
            bCaseInsensitive: s.bCaseInsensitive,
            return: s.return
          });
          t._iDisplayStart = 0;
          se(t);
        }
      }
    }
    var r = t.oClasses;
    var o = t.sTableId;
    var a = t.oLanguage;
    var s = t.oPreviousSearch;
    var l = t.aanFeatures;
    var c = "<input type=\"search\" class=\"" + r.sFilterInput + "\"/>";
    var u = (u = a.sSearch).match(/_INPUT_/) ? u.replace("_INPUT_", c) : u + c;
    c = e("<div/>", {
      id: l.f ? null : o + "_filter",
      class: r.sFilter
    }).append(e("<label/>").append(u));
    r = t.searchDelay !== null ? t.searchDelay : gt(t) === "ssp" ? 400 : 0;
    var d = e("input", c).val(s.sSearch).attr("placeholder", a.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", r ? Ue(i, r) : i).on("mouseup", function (e) {
      setTimeout(function () {
        i.call(d[0], e);
      }, 10);
    }).on("keypress.DT", function (e) {
      if (e.keyCode == 13) {
        return false;
      }
    }).attr("aria-controls", o);
    e(t.nTable).on("search.dt.DT", function (e, i) {
      if (t === i) {
        try {
          if (d[0] !== n.activeElement) {
            d.val(s.sSearch);
          }
        } catch (e) {}
      }
    });
    return c[0];
  }
  function ye(e, t, n) {
    function r(e) {
      a.sSearch = e.sSearch;
      a.bRegex = e.bRegex;
      a.bSmart = e.bSmart;
      a.bCaseInsensitive = e.bCaseInsensitive;
      a.return = e.return;
    }
    function o(e) {
      if (e.bEscapeRegex !== i) {
        return !e.bEscapeRegex;
      } else {
        return e.bRegex;
      }
    }
    var a = e.oPreviousSearch;
    var s = e.aoPreSearchCols;
    H(e);
    if (gt(e) != "ssp") {
      xe(e, t.sSearch, n, o(t), t.bSmart, t.bCaseInsensitive, t.return);
      r(t);
      for (var l = 0; l < s.length; l++) {
        we(e, s[l].sSearch, l, o(s[l]), s[l].bSmart, s[l].bCaseInsensitive);
      }
      be(e);
    } else {
      r(t);
    }
    e.bFiltered = true;
    ht(e, null, "search", [e]);
  }
  function be(t) {
    for (var n, i, r = p.ext.search, o = t.aiDisplay, a = 0, s = r.length; a < s; a++) {
      for (var l = [], c = 0, u = o.length; c < u; c++) {
        i = o[c];
        n = t.aoData[i];
        if (r[a](t, n._aFilterData, i, n._aData, c)) {
          l.push(i);
        }
      }
      o.length = 0;
      e.merge(o, l);
    }
  }
  function we(e, t, n, i, r, o) {
    if (t !== "") {
      for (var a, s = [], l = e.aiDisplay, c = _e(t, i, r, o), u = 0; u < l.length; u++) {
        a = e.aoData[l[u]]._aFilterData[n];
        if (c.test(a)) {
          s.push(l[u]);
        }
      }
      e.aiDisplay = s;
    }
  }
  function xe(e, t, n, i, r, o) {
    var a;
    var s;
    var l;
    var c = _e(t, i, r, o);
    r = e.oPreviousSearch.sSearch;
    o = e.aiDisplayMaster;
    var u = [];
    if (p.ext.search.length !== 0) {
      n = true;
    }
    s = Te(e);
    if (t.length <= 0) {
      e.aiDisplay = o.slice();
    } else {
      if (s || n || i || r.length > t.length || t.indexOf(r) !== 0 || e.bSorted) {
        e.aiDisplay = o.slice();
      }
      a = e.aiDisplay;
      l = 0;
      for (; l < a.length; l++) {
        if (c.test(e.aoData[a[l]]._sFilterRow)) {
          u.push(a[l]);
        }
      }
      e.aiDisplay = u;
    }
  }
  function _e(t, n, i, r) {
    t = n ? t : Ce(t);
    if (i) {
      t = "^(?=.*?" + e.map(t.match(/"[^"]+"|[^ ]+/g) || [""], function (e) {
        var t;
        return (e = e.charAt(0) === "\"" && (t = e.match(/^"(.*)"$/)) ? t[1] : e).replace("\"", "");
      }).join(")(?=.*?") + ").*$";
    }
    return new RegExp(t, r ? "i" : "");
  }
  var Ce = p.util.escapeRegex;
  var Se = e("<div>")[0];
  var ke = Se.textContent !== i;
  function Te(e) {
    for (var t, n, i, r, o, a = e.aoColumns, s = false, l = 0, c = e.aoData.length; l < c; l++) {
      if (!(o = e.aoData[l])._aFilterData) {
        i = [];
        t = 0;
        n = a.length;
        for (; t < n; t++) {
          if (a[t].bSearchable) {
            if (typeof (r = (r = U(e, l, t, "filter")) === null ? "" : r) != "string" && r.toString) {
              r = r.toString();
            }
          } else {
            r = "";
          }
          if (r.indexOf && r.indexOf("&") !== -1) {
            Se.innerHTML = r;
            r = ke ? Se.textContent : Se.innerText;
          }
          if (r.replace) {
            r = r.replace(/[\r\n\u2028]/g, "");
          }
          i.push(r);
        }
        o._aFilterData = i;
        o._sFilterRow = i.join("  ");
        s = true;
      }
    }
    return s;
  }
  function Ae(e) {
    return {
      search: e.sSearch,
      smart: e.bSmart,
      regex: e.bRegex,
      caseInsensitive: e.bCaseInsensitive
    };
  }
  function De(e) {
    return {
      sSearch: e.search,
      bSmart: e.smart,
      bRegex: e.regex,
      bCaseInsensitive: e.caseInsensitive
    };
  }
  function Ee(t) {
    var n = t.sTableId;
    var i = t.aanFeatures.i;
    var r = e("<div/>", {
      class: t.oClasses.sInfo,
      id: i ? null : n + "_info"
    });
    if (!i) {
      t.aoDrawCallback.push({
        fn: Oe,
        sName: "information"
      });
      r.attr("role", "status").attr("aria-live", "polite");
      e(t.nTable).attr("aria-describedby", n + "_info");
    }
    return r[0];
  }
  function Oe(t) {
    var n;
    var i;
    var r;
    var o;
    var a;
    var s;
    var l = t.aanFeatures.i;
    if (l.length !== 0) {
      s = t.oLanguage;
      n = t._iDisplayStart + 1;
      i = t.fnDisplayEnd();
      r = t.fnRecordsTotal();
      a = (o = t.fnRecordsDisplay()) ? s.sInfo : s.sInfoEmpty;
      if (o !== r) {
        a += " " + s.sInfoFiltered;
      }
      a = Me(t, a += s.sInfoPostFix);
      if ((s = s.fnInfoCallback) !== null) {
        a = s.call(t.oInstance, t, n, i, r, o, a);
      }
      e(l).html(a);
    }
  }
  function Me(e, t) {
    var n = e.fnFormatNumber;
    var i = e._iDisplayStart + 1;
    var r = e._iDisplayLength;
    var o = e.fnRecordsDisplay();
    var a = r === -1;
    return t.replace(/_START_/g, n.call(e, i)).replace(/_END_/g, n.call(e, e.fnDisplayEnd())).replace(/_MAX_/g, n.call(e, e.fnRecordsTotal())).replace(/_TOTAL_/g, n.call(e, o)).replace(/_PAGE_/g, n.call(e, a ? 1 : Math.ceil(i / r))).replace(/_PAGES_/g, n.call(e, a ? 1 : Math.ceil(o / r)));
  }
  function Ie(e) {
    var t;
    var n;
    var i;
    var r = e.iInitDisplayStart;
    var o = e.aoColumns;
    var a = e.oFeatures;
    var s = e.bDeferLoading;
    if (e.bInitialised) {
      ce(e);
      oe(e);
      ae(e, e.aoHeader);
      ae(e, e.aoFooter);
      $e(e, true);
      if (a.bAutoWidth) {
        We(e);
      }
      t = 0;
      n = o.length;
      for (; t < n; t++) {
        if ((i = o[t]).sWidth) {
          i.nTh.style.width = Ge(i.sWidth);
        }
      }
      ht(e, null, "preInit", [e]);
      le(e);
      if (!((a = gt(e)) == "ssp" && !s)) {
        if (a == "ajax") {
          he(e, [], function (n) {
            var i = me(e, n);
            for (t = 0; t < i.length; t++) {
              q(e, i[t]);
            }
            e.iInitDisplayStart = r;
            le(e);
            $e(e, false);
            Pe(e, n);
          });
        } else {
          $e(e, false);
          Pe(e);
        }
      }
    } else {
      setTimeout(function () {
        Ie(e);
      }, 200);
    }
  }
  function Pe(e, t) {
    e._bInitComplete = true;
    if (t || e.oInit.aaData) {
      F(e);
    }
    ht(e, null, "plugin-init", [e, t]);
    ht(e, "aoInitComplete", "init", [e, t]);
  }
  function Le(e, t) {
    t = parseInt(t, 10);
    e._iDisplayLength = t;
    ft(e);
    ht(e, null, "length", [e, t]);
  }
  function Ne(t) {
    for (var n = t.oClasses, i = t.sTableId, r = t.aLengthMenu, o = Array.isArray(r[0]), a = o ? r[0] : r, s = o ? r[1] : r, l = e("<select/>", {
        name: i + "_length",
        "aria-controls": i,
        class: n.sLengthSelect
      }), c = 0, u = a.length; c < u; c++) {
      l[0][c] = new Option(typeof s[c] == "number" ? t.fnFormatNumber(s[c]) : s[c], a[c]);
    }
    var d = e("<div><label/></div>").addClass(n.sLength);
    if (!t.aanFeatures.l) {
      d[0].id = i + "_length";
    }
    d.children().append(t.oLanguage.sLengthMenu.replace("_MENU_", l[0].outerHTML));
    e("select", d).val(t._iDisplayLength).on("change.DT", function (n) {
      Le(t, e(this).val());
      se(t);
    });
    e(t.nTable).on("length.dt.DT", function (n, i, r) {
      if (t === i) {
        e("select", d).val(r);
      }
    });
    return d[0];
  }
  function Fe(t) {
    function n(e) {
      se(e);
    }
    var i = t.sPaginationType;
    var r = p.ext.pager[i];
    var o = typeof r == "function";
    i = e("<div/>").addClass(t.oClasses.sPaging + i)[0];
    var a = t.aanFeatures;
    if (!o) {
      r.fnInit(t, i, n);
    }
    if (!a.p) {
      i.id = t.sTableId + "_paginate";
      t.aoDrawCallback.push({
        fn: function (e) {
          if (o) {
            for (var t = e._iDisplayStart, i = e._iDisplayLength, s = e.fnRecordsDisplay(), l = i === -1, c = l ? 0 : Math.ceil(t / i), u = l ? 1 : Math.ceil(s / i), d = r(c, u), h = 0, f = a.p.length; h < f; h++) {
              pt(e, "pageButton")(e, a.p[h], h, d, c, u);
            }
          } else {
            r.fnUpdate(e, n);
          }
        },
        sName: "pagination"
      });
    }
    return i;
  }
  function Re(e, t, n) {
    var i = e._iDisplayStart;
    var r = e._iDisplayLength;
    if ((o = e.fnRecordsDisplay()) === 0 || r === -1) {
      i = 0;
    } else if (typeof t == "number") {
      if (o < (i = t * r)) {
        i = 0;
      }
    } else if (t == "first") {
      i = 0;
    } else if (t == "previous") {
      if ((i = r >= 0 ? i - r : 0) < 0) {
        i = 0;
      }
    } else if (t == "next") {
      if (i + r < o) {
        i += r;
      }
    } else if (t == "last") {
      i = Math.floor((o - 1) / r) * r;
    } else {
      st(e, 0, "Unknown paging action: " + t, 5);
    }
    var o = e._iDisplayStart !== i;
    e._iDisplayStart = i;
    if (o) {
      ht(e, null, "page", [e]);
      if (n) {
        se(e);
      }
    } else {
      ht(e, null, "page-nc", [e]);
    }
    return o;
  }
  function je(t) {
    return e("<div/>", {
      id: t.aanFeatures.r ? null : t.sTableId + "_processing",
      class: t.oClasses.sProcessing
    }).html(t.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>").insertBefore(t.nTable)[0];
  }
  function $e(t, n) {
    if (t.oFeatures.bProcessing) {
      e(t.aanFeatures.r).css("display", n ? "block" : "none");
    }
    ht(t, null, "processing", [t, n]);
  }
  function ze(t) {
    var n;
    var i;
    var r;
    var o;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d;
    var h;
    var f;
    var p = e(t.nTable);
    var g = t.oScroll;
    if (g.sX === "" && g.sY === "") {
      return t.nTable;
    } else {
      n = g.sX;
      i = g.sY;
      r = t.oClasses;
      a = (o = p.children("caption")).length ? o[0]._captionSide : null;
      c = e(p[0].cloneNode(false));
      s = e(p[0].cloneNode(false));
      u = function (e) {
        if (e) {
          return Ge(e);
        } else {
          return null;
        }
      };
      if (!(l = p.children("tfoot")).length) {
        l = null;
      }
      c = e(h = "<div/>", {
        class: r.sScrollWrapper
      }).append(e(h, {
        class: r.sScrollHead
      }).css({
        overflow: "hidden",
        position: "relative",
        border: 0,
        width: n ? u(n) : "100%"
      }).append(e(h, {
        class: r.sScrollHeadInner
      }).css({
        "box-sizing": "content-box",
        width: g.sXInner || "100%"
      }).append(c.removeAttr("id").css("margin-left", 0).append(a === "top" ? o : null).append(p.children("thead"))))).append(e(h, {
        class: r.sScrollBody
      }).css({
        position: "relative",
        overflow: "auto",
        width: u(n)
      }).append(p));
      if (l) {
        c.append(e(h, {
          class: r.sScrollFoot
        }).css({
          overflow: "hidden",
          border: 0,
          width: n ? u(n) : "100%"
        }).append(e(h, {
          class: r.sScrollFootInner
        }).append(s.removeAttr("id").css("margin-left", 0).append(a === "bottom" ? o : null).append(p.children("tfoot")))));
      }
      u = c.children();
      d = u[0];
      h = u[1];
      f = l ? u[2] : null;
      if (n) {
        e(h).on("scroll.DT", function (e) {
          var t = this.scrollLeft;
          d.scrollLeft = t;
          if (l) {
            f.scrollLeft = t;
          }
        });
      }
      e(h).css("max-height", i);
      if (!g.bCollapse) {
        e(h).css("height", i);
      }
      t.nScrollHead = d;
      t.nScrollBody = h;
      t.nScrollFoot = f;
      t.aoDrawCallback.push({
        fn: He,
        sName: "scrolling"
      });
      return c[0];
    }
  }
  function He(n) {
    function r(e) {
      (e = e.style).paddingTop = "0";
      e.paddingBottom = "0";
      e.borderTopWidth = "0";
      e.borderBottomWidth = "0";
      e.height = 0;
    }
    var o;
    var a;
    var s;
    var l;
    var c;
    var u = (f = n.oScroll).sX;
    var d = f.sXInner;
    var h = f.sY;
    var f = f.iBarWidth;
    var p = e(n.nScrollHead);
    var g = p[0].style;
    var m = (v = p.children("div"))[0].style;
    var v = v.children("table");
    var y = n.nScrollBody;
    var b = e(y);
    var w = y.style;
    var x = e(n.nScrollFoot).children("div");
    var _ = x.children("table");
    var S = e(n.nTHead);
    var k = e(n.nTable);
    var T = k[0];
    var A = T.style;
    var D = n.nTFoot ? e(n.nTFoot) : null;
    var E = n.oBrowser;
    var O = E.bScrollOversize;
    C(n.aoColumns, "nTh");
    var M = [];
    var I = [];
    var P = [];
    var L = [];
    var N = y.scrollHeight > y.clientHeight;
    if (n.scrollBarVis !== N && n.scrollBarVis !== i) {
      n.scrollBarVis = N;
      F(n);
    } else {
      n.scrollBarVis = N;
      k.children("thead, tfoot").remove();
      if (D) {
        N = D.clone().prependTo(k);
        c = D.find("tr");
        a = N.find("tr");
        N.find("[id]").removeAttr("id");
      }
      N = S.clone().prependTo(k);
      S = S.find("tr");
      o = N.find("tr");
      N.find("th, td").removeAttr("tabindex");
      N.find("[id]").removeAttr("id");
      if (!u) {
        w.width = "100%";
        p[0].style.width = "100%";
      }
      e.each(de(n, N), function (e, t) {
        s = R(n, e);
        t.style.width = n.aoColumns[s].sWidth;
      });
      if (D) {
        Be(function (e) {
          e.style.width = "";
        }, a);
      }
      p = k.outerWidth();
      if (u === "") {
        A.width = "100%";
        if (O && (k.find("tbody").height() > y.offsetHeight || b.css("overflow-y") == "scroll")) {
          A.width = Ge(k.outerWidth() - f);
        }
        p = k.outerWidth();
      } else if (d !== "") {
        A.width = Ge(d);
        p = k.outerWidth();
      }
      Be(r, o);
      Be(function (n) {
        var i = t.getComputedStyle ? t.getComputedStyle(n).width : Ge(e(n).width());
        P.push(n.innerHTML);
        M.push(i);
      }, o);
      Be(function (e, t) {
        e.style.width = M[t];
      }, S);
      e(o).css("height", 0);
      if (D) {
        Be(r, a);
        Be(function (t) {
          L.push(t.innerHTML);
          I.push(Ge(e(t).css("width")));
        }, a);
        Be(function (e, t) {
          e.style.width = I[t];
        }, c);
        e(a).height(0);
      }
      Be(function (e, t) {
        e.innerHTML = "<div class=\"dataTables_sizing\">" + P[t] + "</div>";
        e.childNodes[0].style.height = "0";
        e.childNodes[0].style.overflow = "hidden";
        e.style.width = M[t];
      }, o);
      if (D) {
        Be(function (e, t) {
          e.innerHTML = "<div class=\"dataTables_sizing\">" + L[t] + "</div>";
          e.childNodes[0].style.height = "0";
          e.childNodes[0].style.overflow = "hidden";
          e.style.width = I[t];
        }, a);
      }
      if (Math.round(k.outerWidth()) < Math.round(p)) {
        l = y.scrollHeight > y.offsetHeight || b.css("overflow-y") == "scroll" ? p + f : p;
        if (O && (y.scrollHeight > y.offsetHeight || b.css("overflow-y") == "scroll")) {
          A.width = Ge(l - f);
        }
        if (!(u !== "" && d === "")) {
          st(n, 1, "Possible column misalignment", 6);
        }
      } else {
        l = "100%";
      }
      w.width = Ge(l);
      g.width = Ge(l);
      if (D) {
        n.nScrollFoot.style.width = Ge(l);
      }
      if (!h) {
        if (O) {
          w.height = Ge(T.offsetHeight + f);
        }
      }
      N = k.outerWidth();
      v[0].style.width = Ge(N);
      m.width = Ge(N);
      S = k.height() > y.clientHeight || b.css("overflow-y") == "scroll";
      m[c = "padding" + (E.bScrollbarLeft ? "Left" : "Right")] = S ? f + "px" : "0px";
      if (D) {
        _[0].style.width = Ge(N);
        x[0].style.width = Ge(N);
        x[0].style[c] = S ? f + "px" : "0px";
      }
      k.children("colgroup").insertBefore(k.children("thead"));
      b.trigger("scroll");
      if (!(!n.bSorted && !n.bFiltered || n._drawHold)) {
        y.scrollTop = 0;
      }
    }
  }
  function Be(e, t, n) {
    for (var i, r, o = 0, a = 0, s = t.length; a < s;) {
      i = t[a].firstChild;
      r = n ? n[a].firstChild : null;
      for (; i;) {
        if (i.nodeType === 1) {
          if (n) {
            e(i, r, o);
          } else {
            e(i, o);
          }
          o++;
        }
        i = i.nextSibling;
        r = n ? r.nextSibling : null;
      }
      a++;
    }
  }
  var qe = /<.*?>/g;
  function We(n) {
    var i;
    var r;
    var o = n.nTable;
    var a = n.aoColumns;
    var s = (c = n.oScroll).sY;
    var l = c.sX;
    var c = c.sXInner;
    var u = a.length;
    var d = z(n, "bVisible");
    var h = e("th", n.nTHead);
    var f = o.getAttribute("width");
    var p = o.parentNode;
    var g = false;
    var m = n.oBrowser;
    var v = m.bScrollOversize;
    if ((b = o.style.width) && b.indexOf("%") !== -1) {
      f = b;
    }
    C = 0;
    for (; C < d.length; C++) {
      if ((i = a[d[C]]).sWidth !== null) {
        i.sWidth = Ve(i.sWidthOrig, p);
        g = true;
      }
    }
    if (v || !g && !l && !s && u == $(n) && u == h.length) {
      for (C = 0; C < u; C++) {
        var y = R(n, C);
        if (y !== null) {
          a[y].sWidth = Ge(h.eq(C).width());
        }
      }
    } else {
      var b;
      (b = e(o).clone().css("visibility", "hidden").removeAttr("id")).find("tbody tr").remove();
      var w = e("<tr/>").appendTo(b.find("tbody"));
      b.find("thead, tfoot").remove();
      b.append(e(n.nTHead).clone()).append(e(n.nTFoot).clone());
      b.find("tfoot th, tfoot td").css("width", "");
      h = de(n, b.find("thead")[0]);
      C = 0;
      for (; C < d.length; C++) {
        i = a[d[C]];
        h[C].style.width = i.sWidthOrig !== null && i.sWidthOrig !== "" ? Ge(i.sWidthOrig) : "";
        if (i.sWidthOrig && l) {
          e(h[C]).append(e("<div/>").css({
            width: i.sWidthOrig,
            margin: 0,
            padding: 0,
            border: 0,
            height: 1
          }));
        }
      }
      if (n.aoData.length) {
        for (C = 0; C < d.length; C++) {
          i = a[r = d[C]];
          e(Ye(n, r)).clone(false).append(i.sContentPadding).appendTo(w);
        }
      }
      e("[name]", b).removeAttr("name");
      for (var x = e("<div/>").css(l || s ? {
          position: "absolute",
          top: 0,
          left: 0,
          height: 1,
          right: 0,
          overflow: "hidden"
        } : {}).append(b).appendTo(p), _ = (l && c ? b.width(c) : l ? (b.css("width", "auto"), b.removeAttr("width"), b.width() < p.clientWidth && f && b.width(p.clientWidth)) : s ? b.width(p.clientWidth) : f && b.width(f), 0), C = 0; C < d.length; C++) {
        var S;
        var k = (S = e(h[C])).outerWidth() - S.width();
        _ += S = m.bBounding ? Math.ceil(h[C].getBoundingClientRect().width) : S.outerWidth();
        a[d[C]].sWidth = Ge(S - k);
      }
      o.style.width = Ge(_);
      x.remove();
    }
    if (f) {
      o.style.width = Ge(f);
    }
    if (!(!f && !l || n._reszEvt)) {
      c = function () {
        e(t).on("resize.DT-" + n.sInstance, Ue(function () {
          F(n);
        }));
      };
      if (v) {
        setTimeout(c, 1000);
      } else {
        c();
      }
      n._reszEvt = true;
    }
  }
  var Ue = p.util.throttle;
  function Ve(t, i) {
    if (t) {
      i = (t = e("<div/>").css("width", Ge(t)).appendTo(i || n.body))[0].offsetWidth;
      t.remove();
      return i;
    } else {
      return 0;
    }
  }
  function Ye(t, n) {
    var i;
    var r = Xe(t, n);
    if (r < 0) {
      return null;
    } else if ((i = t.aoData[r]).nTr) {
      return i.anCells[n];
    } else {
      return e("<td/>").html(U(t, r, n, "display"))[0];
    }
  }
  function Xe(e, t) {
    for (var n, i = -1, r = -1, o = 0, a = e.aoData.length; o < a; o++) {
      if ((n = (n = (n = U(e, o, t, "display") + "").replace(qe, "")).replace(/&nbsp;/g, " ")).length > i) {
        i = n.length;
        r = o;
      }
    }
    return r;
  }
  function Ge(e) {
    if (e === null) {
      return "0px";
    } else if (typeof e == "number") {
      if (e < 0) {
        return "0px";
      } else {
        return e + "px";
      }
    } else if (e.match(/\d$/)) {
      return e + "px";
    } else {
      return e;
    }
  }
  function Ke(t) {
    function n(t) {
      if (t.length && !Array.isArray(t[0])) {
        m.push(t);
      } else {
        e.merge(m, t);
      }
    }
    var r;
    var o;
    var a;
    var s;
    var l;
    var c;
    var u;
    var d = [];
    var h = t.aoColumns;
    var f = t.aaSortingFixed;
    var g = e.isPlainObject(f);
    var m = [];
    if (Array.isArray(f)) {
      n(f);
    }
    if (g && f.pre) {
      n(f.pre);
    }
    n(t.aaSorting);
    if (g && f.post) {
      n(f.post);
    }
    r = 0;
    for (; r < m.length; r++) {
      for (a = (s = h[u = m[r][o = 0]].aDataSort).length; o < a; o++) {
        c = h[l = s[o]].sType || "string";
        if (m[r]._idx === i) {
          m[r]._idx = e.inArray(m[r][1], h[l].asSorting);
        }
        d.push({
          src: u,
          col: l,
          dir: m[r][1],
          index: m[r]._idx,
          type: c,
          formatter: p.ext.type.order[c + "-pre"]
        });
      }
    }
    return d;
  }
  function Qe(e) {
    var t;
    var n;
    var i;
    var r;
    var o;
    var a = [];
    var s = p.ext.type.order;
    var l = e.aoData;
    e.aoColumns;
    var c = 0;
    var u = e.aiDisplayMaster;
    H(e);
    t = 0;
    n = (o = Ke(e)).length;
    for (; t < n; t++) {
      if ((r = o[t]).formatter) {
        c++;
      }
      nt(e, r.col);
    }
    if (gt(e) != "ssp" && o.length !== 0) {
      t = 0;
      i = u.length;
      for (; t < i; t++) {
        a[u[t]] = t;
      }
      if (c === o.length) {
        u.sort(function (e, t) {
          for (var n, i, r, s, c = o.length, u = l[e]._aSortData, d = l[t]._aSortData, h = 0; h < c; h++) {
            if ((r = (n = u[(s = o[h]).col]) < (i = d[s.col]) ? -1 : i < n ? 1 : 0) != 0) {
              if (s.dir === "asc") {
                return r;
              } else {
                return -r;
              }
            }
          }
          if ((n = a[e]) < (i = a[t])) {
            return -1;
          } else if (i < n) {
            return 1;
          } else {
            return 0;
          }
        });
      } else {
        u.sort(function (e, t) {
          for (var n, i, r, c = o.length, u = l[e]._aSortData, d = l[t]._aSortData, h = 0; h < c; h++) {
            n = u[(r = o[h]).col];
            i = d[r.col];
            if ((r = (s[r.type + "-" + r.dir] || s["string-" + r.dir])(n, i)) !== 0) {
              return r;
            }
          }
          if ((n = a[e]) < (i = a[t])) {
            return -1;
          } else if (i < n) {
            return 1;
          } else {
            return 0;
          }
        });
      }
    }
    e.bSorted = true;
  }
  function Ze(e) {
    for (var t = e.aoColumns, n = Ke(e), i = e.oLanguage.oAria, r = 0, o = t.length; r < o; r++) {
      var a = t[r];
      var s = a.asSorting;
      var l = a.ariaTitle || a.sTitle.replace(/<.*?>/g, "");
      var c = a.nTh;
      c.removeAttribute("aria-sort");
      a = a.bSortable ? l + ((n.length > 0 && n[0].col == r && (c.setAttribute("aria-sort", n[0].dir == "asc" ? "ascending" : "descending"), s[n[0].index + 1]) || s[0]) === "asc" ? i.sSortAscending : i.sSortDescending) : l;
      c.setAttribute("aria-label", a);
    }
  }
  function Je(t, n, r, o) {
    function a(t, n) {
      var r = t._idx;
      if ((r = r === i ? e.inArray(t[1], u) : r) + 1 < u.length) {
        return r + 1;
      } else if (n) {
        return null;
      } else {
        return 0;
      }
    }
    var s;
    var l = t.aoColumns[n];
    var c = t.aaSorting;
    var u = l.asSorting;
    if (typeof c[0] == "number") {
      c = t.aaSorting = [c];
    }
    if (r && t.oFeatures.bSortMulti) {
      if ((l = e.inArray(n, C(c, "0"))) !== -1) {
        if ((s = (s = a(c[l], true)) === null && c.length === 1 ? 0 : s) === null) {
          c.splice(l, 1);
        } else {
          c[l][1] = u[s];
          c[l]._idx = s;
        }
      } else {
        c.push([n, u[0], 0]);
        c[c.length - 1]._idx = 0;
      }
    } else if (c.length && c[0][0] == n) {
      s = a(c[0]);
      c.length = 1;
      c[0][1] = u[s];
      c[0]._idx = s;
    } else {
      c.length = 0;
      c.push([n, u[0]]);
      c[0]._idx = 0;
    }
    le(t);
    if (typeof o == "function") {
      o(t);
    }
  }
  function et(e, t, n, i) {
    var r = e.aoColumns[n];
    ut(t, {}, function (t) {
      if (r.bSortable !== false) {
        if (e.oFeatures.bProcessing) {
          $e(e, true);
          setTimeout(function () {
            Je(e, n, t.shiftKey, i);
            if (gt(e) !== "ssp") {
              $e(e, false);
            }
          }, 0);
        } else {
          Je(e, n, t.shiftKey, i);
        }
      }
    });
  }
  function tt(t) {
    var n;
    var i;
    var r;
    var o = t.aLastSort;
    var a = t.oClasses.sSortColumn;
    var s = Ke(t);
    var l = t.oFeatures;
    if (l.bSort && l.bSortClasses) {
      n = 0;
      i = o.length;
      for (; n < i; n++) {
        r = o[n].src;
        e(C(t.aoData, "anCells", r)).removeClass(a + (n < 2 ? n + 1 : 3));
      }
      n = 0;
      i = s.length;
      for (; n < i; n++) {
        r = s[n].src;
        e(C(t.aoData, "anCells", r)).addClass(a + (n < 2 ? n + 1 : 3));
      }
    }
    t.aLastSort = s;
  }
  function nt(e, t) {
    for (var n, i, r, o = e.aoColumns[t], a = p.ext.order[o.sSortDataType], s = (a && (n = a.call(e.oInstance, e, t, j(e, t))), p.ext.type.order[o.sType + "-pre"]), l = 0, c = e.aoData.length; l < c; l++) {
      if (!(i = e.aoData[l])._aSortData) {
        i._aSortData = [];
      }
      if (!(i._aSortData[t] && !a)) {
        r = a ? n[l] : U(e, l, t, "sort");
        i._aSortData[t] = s ? s(r) : r;
      }
    }
  }
  function it(t) {
    var n;
    if (!t._bLoadingState) {
      n = {
        time: +new Date(),
        start: t._iDisplayStart,
        length: t._iDisplayLength,
        order: e.extend(true, [], t.aaSorting),
        search: Ae(t.oPreviousSearch),
        columns: e.map(t.aoColumns, function (e, n) {
          return {
            visible: e.bVisible,
            search: Ae(t.aoPreSearchCols[n])
          };
        })
      };
      t.oSavedState = n;
      ht(t, "aoStateSaveParams", "stateSaveParams", [t, n]);
      if (t.oFeatures.bStateSave && !t.bDestroying) {
        t.fnStateSaveCallback.call(t.oInstance, t, n);
      }
    }
  }
  function rt(e, t, n) {
    var r;
    if (e.oFeatures.bStateSave) {
      if ((r = e.fnStateLoadCallback.call(e.oInstance, e, function (t) {
        ot(e, t, n);
      })) !== i) {
        ot(e, r, n);
      }
      return true;
    }
    n();
  }
  function ot(t, n, r) {
    var o;
    var a;
    var s = t.aoColumns;
    t._bLoadingState = true;
    var l = t._bInitComplete ? new p.Api(t) : null;
    if (n && n.time) {
      var c = ht(t, "aoStateLoadParams", "stateLoadParams", [t, n]);
      if (e.inArray(false, c) !== -1) {
        t._bLoadingState = false;
      } else if ((c = t.iStateDuration) > 0 && n.time < +new Date() - c * 1000) {
        t._bLoadingState = false;
      } else if (n.columns && s.length !== n.columns.length) {
        t._bLoadingState = false;
      } else {
        t.oLoadedState = e.extend(true, {}, n);
        if (n.length !== i) {
          if (l) {
            l.page.len(n.length);
          } else {
            t._iDisplayLength = n.length;
          }
        }
        if (n.start !== i) {
          if (l === null) {
            t._iDisplayStart = n.start;
            t.iInitDisplayStart = n.start;
          } else {
            Re(t, n.start / t._iDisplayLength);
          }
        }
        if (n.order !== i) {
          t.aaSorting = [];
          e.each(n.order, function (e, n) {
            t.aaSorting.push(n[0] >= s.length ? [0, n[1]] : n);
          });
        }
        if (n.search !== i) {
          e.extend(t.oPreviousSearch, De(n.search));
        }
        if (n.columns) {
          o = 0;
          a = n.columns.length;
          for (; o < a; o++) {
            var u = n.columns[o];
            if (u.visible !== i) {
              if (l) {
                l.column(o).visible(u.visible, false);
              } else {
                s[o].bVisible = u.visible;
              }
            }
            if (u.search !== i) {
              e.extend(t.aoPreSearchCols[o], De(u.search));
            }
          }
          if (l) {
            l.columns.adjust();
          }
        }
        t._bLoadingState = false;
        ht(t, "aoStateLoaded", "stateLoaded", [t, n]);
      }
    } else {
      t._bLoadingState = false;
    }
    r();
  }
  function at(t) {
    var n = p.settings;
    if ((t = e.inArray(t, C(n, "nTable"))) !== -1) {
      return n[t];
    } else {
      return null;
    }
  }
  function st(e, n, i, r) {
    i = "DataTables warning: " + (e ? "table id=" + e.sTableId + " - " : "") + i;
    if (r) {
      i += ". For more information about this error, please see http://datatables.net/tn/" + r;
    }
    if (n) {
      if (t.console && console.log) {
        console.log(i);
      }
    } else {
      n = (n = p.ext).sErrMode || n.errMode;
      if (e) {
        ht(e, null, "error", [e, r, i]);
      }
      if (n == "alert") {
        alert(i);
      } else {
        if (n == "throw") {
          throw new Error(i);
        }
        if (typeof n == "function") {
          n(e, r, i);
        }
      }
    }
  }
  function lt(t, n, r, o) {
    if (Array.isArray(r)) {
      e.each(r, function (e, i) {
        if (Array.isArray(i)) {
          lt(t, n, i[0], i[1]);
        } else {
          lt(t, n, i);
        }
      });
    } else {
      if (o === i) {
        o = r;
      }
      if (n[r] !== i) {
        t[o] = n[r];
      }
    }
  }
  function ct(t, n, i) {
    var r;
    var o;
    for (o in n) {
      if (n.hasOwnProperty(o)) {
        r = n[o];
        if (e.isPlainObject(r)) {
          if (!e.isPlainObject(t[o])) {
            t[o] = {};
          }
          e.extend(true, t[o], r);
        } else if (i && o !== "data" && o !== "aaData" && Array.isArray(r)) {
          t[o] = r.slice();
        } else {
          t[o] = r;
        }
      }
    }
    return t;
  }
  function ut(t, n, i) {
    e(t).on("click.DT", n, function (n) {
      e(t).trigger("blur");
      i(n);
    }).on("keypress.DT", n, function (e) {
      if (e.which === 13) {
        e.preventDefault();
        i(e);
      }
    }).on("selectstart.DT", function () {
      return false;
    });
  }
  function dt(e, t, n, i) {
    if (n) {
      e[t].push({
        fn: n,
        sName: i
      });
    }
  }
  function ht(t, n, i, r) {
    var o = [];
    if (n) {
      o = e.map(t[n].slice().reverse(), function (e, n) {
        return e.fn.apply(t.oInstance, r);
      });
    }
    if (i !== null) {
      n = e.Event(i + ".dt");
      e(t.nTable).trigger(n, r);
      o.push(n.result);
    }
    return o;
  }
  function ft(e) {
    var t = e._iDisplayStart;
    var n = e.fnDisplayEnd();
    var i = e._iDisplayLength;
    if (n <= t) {
      t = n - i;
    }
    t -= t % i;
    e._iDisplayStart = t = i === -1 || t < 0 ? 0 : t;
  }
  function pt(t, n) {
    t = t.renderer;
    var i = p.ext.renderer[n];
    if (e.isPlainObject(t) && t[n]) {
      return i[t[n]] || i._;
    } else {
      return typeof t == "string" && i[t] || i._;
    }
  }
  function gt(e) {
    if (e.oFeatures.bServerSide) {
      return "ssp";
    } else if (e.ajax || e.sAjaxSource) {
      return "ajax";
    } else {
      return "dom";
    }
  }
  function mt(e, t, n) {
    var i;
    var r;
    if (n) {
      (i = new St(e)).one("draw", function () {
        n(i.ajax.json());
      });
    }
    if (gt(e) == "ssp") {
      le(e, t);
    } else {
      $e(e, true);
      if ((r = e.jqXHR) && r.readyState !== 4) {
        r.abort();
      }
      he(e, [], function (n) {
        J(e);
        for (var i = me(e, n), r = 0, o = i.length; r < o; r++) {
          q(e, i[r]);
        }
        le(e, t);
        $e(e, false);
      });
    }
  }
  function vt(e, t, n, r, o) {
    for (var a, s, l, c, u = [], h = typeof t, f = 0, p = (t = t && h != "string" && h != "function" && t.length !== i ? t : [t]).length; f < p; f++) {
      l = 0;
      c = (s = t[f] && t[f].split && !t[f].match(/[\[\(:]/) ? t[f].split(",") : [t[f]]).length;
      l = 0;
      c = (s = t[f] && t[f].split && !t[f].match(/[\[\(:]/) ? t[f].split(",") : [t[f]]).length;
      for (; l < c; l++) {
        if ((a = n(typeof s[l] == "string" ? s[l].trim() : s[l])) && a.length) {
          u = u.concat(a);
        }
      }
    }
    var g = d.selector[e];
    if (g.length) {
      f = 0;
      p = g.length;
      f = 0;
      p = g.length;
      for (; f < p; f++) {
        u = g[f](r, o, u);
      }
    }
    return S(u);
  }
  function yt(t) {
    if ((t = t || {}).filter && t.search === i) {
      t.search = t.filter;
    }
    return e.extend({
      search: "none",
      order: "current",
      page: "all"
    }, t);
  }
  function bt(e) {
    for (var t = 0, n = e.length; t < n; t++) {
      if (e[t].length > 0) {
        e[0] = e[t];
        e[0].length = 1;
        e.length = 1;
        e.context = [e.context[t]];
        return e;
      }
    }
    e.length = 0;
    return e;
  }
  function wt(t, n) {
    var i = t.context;
    if (i.length && t.length && (a = i[0].aoData[t[0]])._details) {
      if (a._detailsShow = n) {
        a._details.insertAfter(a.nTr);
        e(a.nTr).addClass("dt-hasChild");
      } else {
        a._details.detach();
        e(a.nTr).removeClass("dt-hasChild");
      }
      ht(i[0], null, "childRow", [n, t.row(t[0])]);
      var r = i[0];
      var o = new St(r);
      n = "draw" + (a = ".dt.DT_details");
      t = "column-sizing" + a;
      var a = "destroy" + a;
      var s = r.aoData;
      o.off(n + " " + t + " " + a);
      if (C(s, "_details").length > 0) {
        o.on(n, function (e, t) {
          if (r === t) {
            o.rows({
              page: "current"
            }).eq(0).each(function (e) {
              var t = s[e];
              if (t._detailsShow) {
                t._details.insertAfter(t.nTr);
              }
            });
          }
        });
        o.on(t, function (e, t, n, i) {
          if (r === t) {
            for (var o, a = $(t), l = 0, c = s.length; l < c; l++) {
              if ((o = s[l])._details) {
                o._details.children("td[colspan]").attr("colspan", a);
              }
            }
          }
        });
        o.on(a, function (e, t) {
          if (r === t) {
            for (var n = 0, i = s.length; n < i; n++) {
              if (s[n]._details) {
                At(o, n);
              }
            }
          }
        });
      }
      Tt(i);
    }
  }
  function xt(e, t, n, i, r) {
    for (var o = [], a = 0, s = r.length; a < s; a++) {
      o.push(U(e, r[a], t));
    }
    return o;
  }
  var _t = [];
  var Ct = Array.prototype;
  var St = function (t, n) {
    if (!(this instanceof St)) {
      return new St(t, n);
    }
    function i(t) {
      var n;
      var i;
      var o;
      var a;
      t = t;
      o = p.settings;
      a = e.map(o, function (e, t) {
        return e.nTable;
      });
      if (t = t ? t.nTable && t.oApi ? [t] : t.nodeName && t.nodeName.toLowerCase() === "table" ? (n = e.inArray(t, a)) !== -1 ? [o[n]] : null : t && typeof t.settings == "function" ? t.settings().toArray() : (typeof t == "string" ? i = e(t) : t instanceof e && (i = t), i ? i.map(function (t) {
        if ((n = e.inArray(this, a)) !== -1) {
          return o[n];
        } else {
          return null;
        }
      }).toArray() : undefined) : []) {
        r.push.apply(r, t);
      }
    }
    var r = [];
    if (Array.isArray(t)) {
      for (var o = 0, a = t.length; o < a; o++) {
        i(t[o]);
      }
    } else {
      i(t);
    }
    this.context = S(r);
    if (n) {
      e.merge(this, n);
    }
    this.selector = {
      rows: null,
      cols: null,
      opts: null
    };
    St.extend(this, this, _t);
  };
  p.Api = St;
  e.extend(St.prototype, {
    any: function () {
      return this.count() !== 0;
    },
    concat: Ct.concat,
    context: [],
    count: function () {
      return this.flatten().length;
    },
    each: function (e) {
      for (var t = 0, n = this.length; t < n; t++) {
        e.call(this, this[t], t, this);
      }
      return this;
    },
    eq: function (e) {
      var t = this.context;
      if (t.length > e) {
        return new St(t[e], this[e]);
      } else {
        return null;
      }
    },
    filter: function (e) {
      var t = [];
      if (Ct.filter) {
        t = Ct.filter.call(this, e, this);
      } else {
        for (var n = 0, i = this.length; n < i; n++) {
          if (e.call(this, this[n], n, this)) {
            t.push(this[n]);
          }
        }
      }
      return new St(this.context, t);
    },
    flatten: function () {
      var e = [];
      return new St(this.context, e.concat.apply(e, this.toArray()));
    },
    join: Ct.join,
    indexOf: Ct.indexOf || function (e, t) {
      for (var n = t || 0, i = this.length; n < i; n++) {
        if (this[n] === e) {
          return n;
        }
      }
      return -1;
    },
    iterator: function (e, t, n, r) {
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d;
      var h;
      var f = [];
      var p = this.context;
      var g = this.selector;
      if (typeof e == "string") {
        r = n;
        n = t;
        t = e;
        e = false;
      }
      a = 0;
      s = p.length;
      for (; a < s; a++) {
        var m = new St(p[a]);
        if (t === "table") {
          if ((o = n.call(m, p[a], a)) !== i) {
            f.push(o);
          }
        } else if (t === "columns" || t === "rows") {
          if ((o = n.call(m, p[a], this[a], a)) !== i) {
            f.push(o);
          }
        } else if (t === "column" || t === "column-rows" || t === "row" || t === "cell") {
          d = this[a];
          if (t === "column-rows") {
            u = kt(p[a], g.opts);
          }
          l = 0;
          c = d.length;
          d = this[a];
          if (t === "column-rows") {
            u = kt(p[a], g.opts);
          }
          l = 0;
          c = d.length;
          for (; l < c; l++) {
            h = d[l];
            if ((o = t === "cell" ? n.call(m, p[a], h.row, h.column, a, l) : n.call(m, p[a], h, a, l, u)) !== i) {
              f.push(o);
            }
          }
        }
      }
      if (f.length || r) {
        (e = (r = new St(p, e ? f.concat.apply([], f) : f)).selector).rows = g.rows;
        e.cols = g.cols;
        e.opts = g.opts;
        return r;
      } else {
        return this;
      }
    },
    lastIndexOf: Ct.lastIndexOf || function (e, t) {
      return this.indexOf.apply(this.toArray.reverse(), arguments);
    },
    length: 0,
    map: function (e) {
      var t = [];
      if (Ct.map) {
        t = Ct.map.call(this, e, this);
      } else {
        for (var n = 0, i = this.length; n < i; n++) {
          t.push(e.call(this, this[n], n));
        }
      }
      return new St(this.context, t);
    },
    pluck: function (e) {
      let t = p.util.get(e);
      return this.map(function (e) {
        return t(e);
      });
    },
    pop: Ct.pop,
    push: Ct.push,
    reduce: Ct.reduce || function (e, t) {
      return P(this, e, t, 0, this.length, 1);
    },
    reduceRight: Ct.reduceRight || function (e, t) {
      return P(this, e, t, this.length - 1, -1, -1);
    },
    reverse: Ct.reverse,
    selector: null,
    shift: Ct.shift,
    slice: function () {
      return new St(this.context, this);
    },
    sort: Ct.sort,
    splice: Ct.splice,
    toArray: function () {
      return Ct.slice.call(this);
    },
    to$: function () {
      return e(this);
    },
    toJQuery: function () {
      return e(this);
    },
    unique: function () {
      return new St(this.context, S(this));
    },
    unshift: Ct.unshift
  });
  St.extend = function (e, t, n) {
    if (n.length && t && (t instanceof St || t.__dt_wrapper)) {
      for (var i, r = 0, o = n.length; r < o; r++) {
        t[(i = n[r]).name] = i.type === "function" ? function (e, t, n) {
          return function () {
            var i = t.apply(e, arguments);
            St.extend(i, i, n.methodExt);
            return i;
          };
        }(e, i.val, i) : i.type === "object" ? {} : i.val;
        t[i.name].__dt_wrapper = true;
        St.extend(e, t[i.name], i.propExt);
      }
    }
  };
  St.register = h = function (t, n) {
    if (Array.isArray(t)) {
      for (var i = 0, r = t.length; i < r; i++) {
        St.register(t[i], n);
      }
    } else {
      for (var o = t.split("."), a = _t, s = 0, l = o.length; s < l; s++) {
        var c;
        var u;
        var d = function (e, t) {
          for (var n = 0, i = e.length; n < i; n++) {
            if (e[n].name === t) {
              return e[n];
            }
          }
          return null;
        }(a, u = (c = o[s].indexOf("()") !== -1) ? o[s].replace("()", "") : o[s]);
        if (!d) {
          a.push(d = {
            name: u,
            val: {},
            methodExt: [],
            propExt: [],
            type: "object"
          });
        }
        if (s === l - 1) {
          d.val = n;
          d.type = typeof n == "function" ? "function" : e.isPlainObject(n) ? "object" : "other";
        } else {
          a = c ? d.methodExt : d.propExt;
        }
      }
    }
  };
  St.registerPlural = f = function (e, t, n) {
    St.register(e, n);
    St.register(t, function () {
      var e = n.apply(this, arguments);
      if (e === this) {
        return this;
      } else if (e instanceof St) {
        if (e.length) {
          if (Array.isArray(e[0])) {
            return new St(e.context, e[0]);
          } else {
            return e[0];
          }
        } else {
          return i;
        }
      } else {
        return e;
      }
    });
  };
  h("tables()", function (t) {
    if (t !== i && t !== null) {
      return new St(function t(n, i) {
        var r;
        if (Array.isArray(n)) {
          return e.map(n, function (e) {
            return t(e, i);
          });
        } else if (typeof n == "number") {
          return [i[n]];
        } else {
          r = e.map(i, function (e, t) {
            return e.nTable;
          });
          return e(r).filter(n).map(function (t) {
            var n = e.inArray(this, r);
            return i[n];
          }).toArray();
        }
      }(t, this.context));
    } else {
      return this;
    }
  });
  h("table()", function (e) {
    var t = (e = this.tables(e)).context;
    if (t.length) {
      return new St(t[0]);
    } else {
      return e;
    }
  });
  f("tables().nodes()", "table().node()", function () {
    return this.iterator("table", function (e) {
      return e.nTable;
    }, 1);
  });
  f("tables().body()", "table().body()", function () {
    return this.iterator("table", function (e) {
      return e.nTBody;
    }, 1);
  });
  f("tables().header()", "table().header()", function () {
    return this.iterator("table", function (e) {
      return e.nTHead;
    }, 1);
  });
  f("tables().footer()", "table().footer()", function () {
    return this.iterator("table", function (e) {
      return e.nTFoot;
    }, 1);
  });
  f("tables().containers()", "table().container()", function () {
    return this.iterator("table", function (e) {
      return e.nTableWrapper;
    }, 1);
  });
  h("draw()", function (e) {
    return this.iterator("table", function (t) {
      if (e === "page") {
        se(t);
      } else {
        le(t, (e = typeof e == "string" ? e !== "full-hold" : e) === false);
      }
    });
  });
  h("page()", function (e) {
    if (e === i) {
      return this.page.info().page;
    } else {
      return this.iterator("table", function (t) {
        Re(t, e);
      });
    }
  });
  h("page.info()", function (e) {
    var t;
    var n;
    var r;
    var o;
    var a;
    if (this.context.length === 0) {
      return i;
    } else {
      n = (t = this.context[0])._iDisplayStart;
      r = t.oFeatures.bPaginate ? t._iDisplayLength : -1;
      o = t.fnRecordsDisplay();
      return {
        page: (a = r === -1) ? 0 : Math.floor(n / r),
        pages: a ? 1 : Math.ceil(o / r),
        start: n,
        end: t.fnDisplayEnd(),
        length: r,
        recordsTotal: t.fnRecordsTotal(),
        recordsDisplay: o,
        serverSide: gt(t) === "ssp"
      };
    }
  });
  h("page.len()", function (e) {
    if (e === i) {
      if (this.context.length !== 0) {
        return this.context[0]._iDisplayLength;
      } else {
        return i;
      }
    } else {
      return this.iterator("table", function (t) {
        Le(t, e);
      });
    }
  });
  h("ajax.json()", function () {
    var e = this.context;
    if (e.length > 0) {
      return e[0].json;
    }
  });
  h("ajax.params()", function () {
    var e = this.context;
    if (e.length > 0) {
      return e[0].oAjaxData;
    }
  });
  h("ajax.reload()", function (e, t) {
    return this.iterator("table", function (n) {
      mt(n, t === false, e);
    });
  });
  h("ajax.url()", function (t) {
    var n = this.context;
    if (t === i) {
      if (n.length === 0) {
        return i;
      } else if ((n = n[0]).ajax) {
        if (e.isPlainObject(n.ajax)) {
          return n.ajax.url;
        } else {
          return n.ajax;
        }
      } else {
        return n.sAjaxSource;
      }
    } else {
      return this.iterator("table", function (n) {
        if (e.isPlainObject(n.ajax)) {
          n.ajax.url = t;
        } else {
          n.ajax = t;
        }
      });
    }
  });
  h("ajax.url().load()", function (e, t) {
    return this.iterator("table", function (n) {
      mt(n, t === false, e);
    });
  });
  var kt = function (t, n) {
    var i;
    var r = [];
    var o = t.aiDisplay;
    var a = t.aiDisplayMaster;
    var s = n.search;
    var c = n.order;
    n = n.page;
    if (gt(t) == "ssp") {
      if (s === "removed") {
        return [];
      } else {
        return l(0, a.length);
      }
    }
    if (n == "current") {
      d = t._iDisplayStart;
      h = t.fnDisplayEnd();
      d = t._iDisplayStart;
      h = t.fnDisplayEnd();
      for (; d < h; d++) {
        r.push(o[d]);
      }
    } else if (c == "current" || c == "applied") {
      if (s == "none") {
        r = a.slice();
      } else if (s == "applied") {
        r = o.slice();
      } else if (s == "removed") {
        for (var u = {}, d = 0, h = o.length; d < h; d++) {
          u[o[d]] = null;
        }
        r = e.map(a, function (e) {
          if (u.hasOwnProperty(e)) {
            return null;
          } else {
            return e;
          }
        });
      }
    } else if (c == "index" || c == "original") {
      d = 0;
      h = t.aoData.length;
      d = 0;
      h = t.aoData.length;
      for (; d < h; d++) {
        if (s == "none" || (i = e.inArray(d, o)) === -1 && s == "removed" || i >= 0 && s == "applied") {
          r.push(d);
        }
      }
    }
    return r;
  };
  h("rows()", function (t, n) {
    if (t === i) {
      t = "";
    } else if (e.isPlainObject(t)) {
      n = t;
      t = "";
    }
    n = yt(n);
    var o = this.iterator("table", function (o) {
      return vt("row", t, function (t) {
        var n = r(t);
        var o = a.aoData;
        if (n !== null && !l) {
          return [n];
        }
        u = u || kt(a, l);
        if (n !== null && e.inArray(n, u) !== -1) {
          return [n];
        }
        if (t === null || t === i || t === "") {
          return u;
        }
        if (typeof t == "function") {
          return e.map(u, function (e) {
            var n = o[e];
            if (t(e, n._aData, n.nTr)) {
              return e;
            } else {
              return null;
            }
          });
        }
        if (t.nodeName) {
          n = t._DT_RowIndex;
          d = t._DT_CellIndex;
          if (n !== i) {
            if (o[n] && o[n].nTr === t) {
              return [n];
            } else {
              return [];
            }
          } else if (d) {
            if (o[d.row] && o[d.row].nTr === t.parentNode) {
              return [d.row];
            } else {
              return [];
            }
          } else if ((n = e(t).closest("*[data-dt-row]")).length) {
            return [n.data("dt-row")];
          } else {
            return [];
          }
        }
        if (typeof t == "string" && t.charAt(0) === "#") {
          var d = a.aIds[t.replace(/^#/, "")];
          if (d !== i) {
            return [d.idx];
          }
        }
        n = c(s(a.aoData, u, "nTr"));
        return e(n).filter(t).map(function () {
          return this._DT_RowIndex;
        }).toArray();
      }, a = o, l = n);
      var a;
      var l;
      var u;
    }, 1);
    o.selector.rows = t;
    o.selector.opts = n;
    return o;
  });
  h("rows().nodes()", function () {
    return this.iterator("row", function (e, t) {
      return e.aoData[t].nTr || i;
    }, 1);
  });
  h("rows().data()", function () {
    return this.iterator(true, "rows", function (e, t) {
      return s(e.aoData, t, "_aData");
    }, 1);
  });
  f("rows().cache()", "row().cache()", function (e) {
    return this.iterator("row", function (t, n) {
      t = t.aoData[n];
      if (e === "search") {
        return t._aFilterData;
      } else {
        return t._aSortData;
      }
    }, 1);
  });
  f("rows().invalidate()", "row().invalidate()", function (e) {
    return this.iterator("row", function (t, n) {
      te(t, n, e);
    });
  });
  f("rows().indexes()", "row().index()", function () {
    return this.iterator("row", function (e, t) {
      return t;
    }, 1);
  });
  f("rows().ids()", "row().id()", function (e) {
    for (var t = [], n = this.context, i = 0, r = n.length; i < r; i++) {
      for (var o = 0, a = this[i].length; o < a; o++) {
        var s = n[i].rowIdFn(n[i].aoData[this[i][o]]._aData);
        t.push((e === true ? "#" : "") + s);
      }
    }
    return new St(n, t);
  });
  f("rows().remove()", "row().remove()", function () {
    var e = this;
    this.iterator("row", function (t, n, r) {
      var o;
      var a;
      var s;
      var l;
      var c;
      var u;
      var d = t.aoData;
      var h = d[n];
      d.splice(n, 1);
      o = 0;
      a = d.length;
      for (; o < a; o++) {
        u = (c = d[o]).anCells;
        if (c.nTr !== null) {
          c.nTr._DT_RowIndex = o;
        }
        if (u !== null) {
          s = 0;
          l = u.length;
          s = 0;
          l = u.length;
          for (; s < l; s++) {
            u[s]._DT_CellIndex.row = o;
          }
        }
      }
      ee(t.aiDisplayMaster, n);
      ee(t.aiDisplay, n);
      ee(e[r], n, false);
      if (t._iRecordsDisplay > 0) {
        t._iRecordsDisplay--;
      }
      ft(t);
      if ((r = t.rowIdFn(h._aData)) !== i) {
        delete t.aIds[r];
      }
    });
    this.iterator("table", function (e) {
      for (var t = 0, n = e.aoData.length; t < n; t++) {
        e.aoData[t].idx = t;
      }
    });
    return this;
  });
  h("rows.add()", function (t) {
    var n = this.iterator("table", function (e) {
      for (var n, i = [], r = 0, o = t.length; r < o; r++) {
        if ((n = t[r]).nodeName && n.nodeName.toUpperCase() === "TR") {
          i.push(W(e, n)[0]);
        } else {
          i.push(q(e, n));
        }
      }
      return i;
    }, 1);
    var i = this.rows(-1);
    i.pop();
    e.merge(i, n);
    return i;
  });
  h("row()", function (e, t) {
    return bt(this.rows(e, t));
  });
  h("row().data()", function (e) {
    var t;
    var n = this.context;
    if (e === i) {
      if (n.length && this.length) {
        return n[0].aoData[this[0]]._aData;
      } else {
        return i;
      }
    } else {
      (t = n[0].aoData[this[0]])._aData = e;
      if (Array.isArray(e) && t.nTr && t.nTr.id) {
        Q(n[0].rowId)(e, t.nTr.id);
      }
      te(n[0], this[0], "data");
      return this;
    }
  });
  h("row().node()", function () {
    var e = this.context;
    return e.length && this.length && e[0].aoData[this[0]].nTr || null;
  });
  h("row.add()", function (t) {
    if (t instanceof e && t.length) {
      t = t[0];
    }
    var n = this.iterator("table", function (e) {
      if (t.nodeName && t.nodeName.toUpperCase() === "TR") {
        return W(e, t)[0];
      } else {
        return q(e, t);
      }
    });
    return this.row(n[0]);
  });
  e(n).on("plugin-init.dt", function (t, n) {
    var i = new St(n);
    var r = "on-plugin-init";
    const o = "stateSaveParams." + r;
    const a = "destroy." + r;
    i.on(o, function (e, t, n) {
      for (var i = t.rowIdFn, r = t.aoData, o = [], a = 0; a < r.length; a++) {
        if (r[a]._detailsShow) {
          o.push("#" + i(r[a]._aData));
        }
      }
      n.childRows = o;
    });
    i.on(a, function () {
      i.off(o + " " + a);
    });
    if ((r = i.state.loaded()) && r.childRows) {
      i.rows(e.map(r.childRows, function (e) {
        return e.replace(/:/g, "\\:");
      })).every(function () {
        ht(n, null, "requestChild", [this]);
      });
    }
  });
  var Tt = p.util.throttle(function (e) {
    it(e[0]);
  }, 500);
  var At = function (t, n) {
    var r = t.context;
    if (r.length && (n = r[0].aoData[n !== i ? n : t[0]]) && n._details) {
      n._details.remove();
      n._detailsShow = i;
      n._details = i;
      e(n.nTr).removeClass("dt-hasChild");
      Tt(r);
    }
  };
  var Dt = "row().child";
  var Et = Dt + "()";
  h(Et, function (t, n) {
    var r = this.context;
    if (t === i) {
      if (r.length && this.length) {
        return r[0].aoData[this[0]]._details;
      } else {
        return i;
      }
    } else {
      if (t === true) {
        this.child.show();
      } else if (t === false) {
        At(this);
      } else if (r.length && this.length) {
        (function (t, n, i, r) {
          var o = [];
          (function n(i, r) {
            var a;
            if (Array.isArray(i) || i instanceof e) {
              for (var s = 0, l = i.length; s < l; s++) {
                n(i[s], r);
              }
            } else if (i.nodeName && i.nodeName.toLowerCase() === "tr") {
              o.push(i);
            } else {
              a = e("<tr><td></td></tr>").addClass(r);
              e("td", a).addClass(r).html(i)[0].colSpan = $(t);
              o.push(a[0]);
            }
          })(i, r);
          if (n._details) {
            n._details.detach();
          }
          n._details = e(o);
          if (n._detailsShow) {
            n._details.insertAfter(n.nTr);
          }
        })(r[0], r[0].aoData[this[0]], t, n);
      }
      return this;
    }
  });
  h([Dt + ".show()", Et + ".show()"], function (e) {
    wt(this, true);
    return this;
  });
  h([Dt + ".hide()", Et + ".hide()"], function () {
    wt(this, false);
    return this;
  });
  h([Dt + ".remove()", Et + ".remove()"], function () {
    At(this);
    return this;
  });
  h(Dt + ".isShown()", function () {
    var e = this.context;
    return e.length && this.length && e[0].aoData[this[0]]._detailsShow || false;
  });
  var Ot = /^([^:]+):(name|visIdx|visible)$/;
  h("columns()", function (t, n) {
    if (t === i) {
      t = "";
    } else if (e.isPlainObject(t)) {
      n = t;
      t = "";
    }
    n = yt(n);
    var o = this.iterator("table", function (i) {
      a = t;
      s = n;
      c = (o = i).aoColumns;
      u = C(c, "sName");
      d = C(c, "nTh");
      return vt("column", a, function (t) {
        var n;
        var i = r(t);
        if (t === "") {
          return l(c.length);
        }
        if (i !== null) {
          return [i >= 0 ? i : c.length + i];
        }
        if (typeof t == "function") {
          n = kt(o, s);
          return e.map(c, function (e, i) {
            if (t(i, xt(o, i, 0, 0, n), d[i])) {
              return i;
            } else {
              return null;
            }
          });
        }
        var a = typeof t == "string" ? t.match(Ot) : "";
        if (a) {
          switch (a[2]) {
            case "visIdx":
            case "visible":
              var h;
              var f = parseInt(a[1], 10);
              if (f < 0) {
                return [(h = e.map(c, function (e, t) {
                  if (e.bVisible) {
                    return t;
                  } else {
                    return null;
                  }
                }))[h.length + f]];
              } else {
                return [R(o, f)];
              }
            case "name":
              return e.map(u, function (e, t) {
                if (e === a[1]) {
                  return t;
                } else {
                  return null;
                }
              });
            default:
              return [];
          }
        }
        if (t.nodeName && t._DT_CellIndex) {
          return [t._DT_CellIndex.column];
        } else if ((i = e(d).filter(t).map(function () {
          return e.inArray(this, d);
        }).toArray()).length || !t.nodeName) {
          return i;
        } else if ((i = e(t).closest("*[data-dt-column]")).length) {
          return [i.data("dt-column")];
        } else {
          return [];
        }
      }, o, s);
      var o;
      var a;
      var s;
      var c;
      var u;
      var d;
    }, 1);
    o.selector.cols = t;
    o.selector.opts = n;
    return o;
  });
  f("columns().header()", "column().header()", function (e, t) {
    return this.iterator("column", function (e, t) {
      return e.aoColumns[t].nTh;
    }, 1);
  });
  f("columns().footer()", "column().footer()", function (e, t) {
    return this.iterator("column", function (e, t) {
      return e.aoColumns[t].nTf;
    }, 1);
  });
  f("columns().data()", "column().data()", function () {
    return this.iterator("column-rows", xt, 1);
  });
  f("columns().dataSrc()", "column().dataSrc()", function () {
    return this.iterator("column", function (e, t) {
      return e.aoColumns[t].mData;
    }, 1);
  });
  f("columns().cache()", "column().cache()", function (e) {
    return this.iterator("column-rows", function (t, n, i, r, o) {
      return s(t.aoData, o, e === "search" ? "_aFilterData" : "_aSortData", n);
    }, 1);
  });
  f("columns().nodes()", "column().nodes()", function () {
    return this.iterator("column-rows", function (e, t, n, i, r) {
      return s(e.aoData, r, "anCells", t);
    }, 1);
  });
  f("columns().visible()", "column().visible()", function (t, n) {
    var r = this;
    var o = this.iterator("column", function (n, r) {
      if (t === i) {
        return n.aoColumns[r].bVisible;
      }
      var o;
      var a;
      var s = r;
      r = t;
      var l = n.aoColumns;
      var c = l[s];
      var u = n.aoData;
      if (r === i) {
        c.bVisible;
      } else if (c.bVisible !== r) {
        if (r) {
          for (var d = e.inArray(true, C(l, "bVisible"), s + 1), h = 0, f = u.length; h < f; h++) {
            a = u[h].nTr;
            o = u[h].anCells;
            if (a) {
              a.insertBefore(o[s], o[d] || null);
            }
          }
        } else {
          e(C(n.aoData, "anCells", s)).detach();
        }
        c.bVisible = r;
      }
    });
    if (t !== i) {
      this.iterator("table", function (o) {
        ae(o, o.aoHeader);
        ae(o, o.aoFooter);
        if (!o.aiDisplay.length) {
          e(o.nTBody).find("td[colspan]").attr("colspan", $(o));
        }
        it(o);
        r.iterator("column", function (e, i) {
          ht(e, null, "column-visibility", [e, i, t, n]);
        });
        if (!(n !== i && !n)) {
          r.columns.adjust();
        }
      });
    }
    return o;
  });
  f("columns().indexes()", "column().index()", function (e) {
    return this.iterator("column", function (t, n) {
      if (e === "visible") {
        return j(t, n);
      } else {
        return n;
      }
    }, 1);
  });
  h("columns.adjust()", function () {
    return this.iterator("table", function (e) {
      F(e);
    }, 1);
  });
  h("column.index()", function (e, t) {
    var n;
    if (this.context.length !== 0) {
      n = this.context[0];
      if (e === "fromVisible" || e === "toData") {
        return R(n, t);
      } else if (e === "fromData" || e === "toVisible") {
        return j(n, t);
      } else {
        return undefined;
      }
    }
  });
  h("column()", function (e, t) {
    return bt(this.columns(e, t));
  });
  h("cells()", function (t, n, r) {
    var o;
    var a;
    var l;
    var u;
    var d;
    var h;
    var f;
    if (e.isPlainObject(t)) {
      if (t.row === i) {
        r = t;
        t = null;
      } else {
        r = n;
        n = null;
      }
    }
    if (e.isPlainObject(n)) {
      r = n;
      n = null;
    }
    if (n === null || n === i) {
      return this.iterator("table", function (n) {
        o = n;
        n = t;
        a = yt(r);
        m = o.aoData;
        v = kt(o, a);
        y = c(s(m, v, "anCells"));
        b = e(k([], y));
        w = o.aoColumns.length;
        return vt("cell", n, function (t) {
          var n;
          var r = typeof t == "function";
          if (t === null || t === i || r) {
            u = [];
            d = 0;
            h = v.length;
            for (; d < h; d++) {
              l = v[d];
              f = 0;
              l = v[d];
              f = 0;
              for (; f < w; f++) {
                p = {
                  row: l,
                  column: f
                };
                if (!r || (g = m[l], t(p, U(o, l, f), g.anCells ? g.anCells[f] : null))) {
                  u.push(p);
                }
              }
            }
            return u;
          }
          if (e.isPlainObject(t)) {
            if (t.column !== i && t.row !== i && e.inArray(t.row, v) !== -1) {
              return [t];
            } else {
              return [];
            }
          } else if ((n = b.filter(t).map(function (e, t) {
            return {
              row: t._DT_CellIndex.row,
              column: t._DT_CellIndex.column
            };
          }).toArray()).length || !t.nodeName) {
            return n;
          } else if ((g = e(t).closest("*[data-dt-row]")).length) {
            return [{
              row: g.data("dt-row"),
              column: g.data("dt-column")
            }];
          } else {
            return [];
          }
        }, o, a);
        var o;
        var a;
        var l;
        var u;
        var d;
        var h;
        var f;
        var p;
        var g;
        var m;
        var v;
        var y;
        var b;
        var w;
      });
    } else {
      f = r ? {
        page: r.page,
        order: r.order,
        search: r.search
      } : {};
      o = this.columns(n, f);
      a = this.rows(t, f);
      f = this.iterator("table", function (e, t) {
        var n = [];
        l = 0;
        u = a[t].length;
        for (; l < u; l++) {
          d = 0;
          h = o[t].length;
          d = 0;
          h = o[t].length;
          for (; d < h; d++) {
            n.push({
              row: a[t][l],
              column: o[t][d]
            });
          }
        }
        return n;
      }, 1);
      f = r && r.selected ? this.cells(f, r) : f;
      e.extend(f.selector, {
        cols: n,
        rows: t,
        opts: r
      });
      return f;
    }
  });
  f("cells().nodes()", "cell().node()", function () {
    return this.iterator("cell", function (e, t, n) {
      if ((e = e.aoData[t]) && e.anCells) {
        return e.anCells[n];
      } else {
        return i;
      }
    }, 1);
  });
  h("cells().data()", function () {
    return this.iterator("cell", function (e, t, n) {
      return U(e, t, n);
    }, 1);
  });
  f("cells().cache()", "cell().cache()", function (e) {
    e = e === "search" ? "_aFilterData" : "_aSortData";
    return this.iterator("cell", function (t, n, i) {
      return t.aoData[n][e][i];
    }, 1);
  });
  f("cells().render()", "cell().render()", function (e) {
    return this.iterator("cell", function (t, n, i) {
      return U(t, n, i, e);
    }, 1);
  });
  f("cells().indexes()", "cell().index()", function () {
    return this.iterator("cell", function (e, t, n) {
      return {
        row: t,
        column: n,
        columnVisible: j(e, n)
      };
    }, 1);
  });
  f("cells().invalidate()", "cell().invalidate()", function (e) {
    return this.iterator("cell", function (t, n, i) {
      te(t, n, e, i);
    });
  });
  h("cell()", function (e, t, n) {
    return bt(this.cells(e, t, n));
  });
  h("cell().data()", function (e) {
    var t = this.context;
    var n = this[0];
    if (e === i) {
      if (t.length && n.length) {
        return U(t[0], n[0].row, n[0].column);
      } else {
        return i;
      }
    } else {
      V(t[0], n[0].row, n[0].column, e);
      te(t[0], n[0].row, "data", n[0].column);
      return this;
    }
  });
  h("order()", function (e, t) {
    var n = this.context;
    if (e === i) {
      if (n.length !== 0) {
        return n[0].aaSorting;
      } else {
        return i;
      }
    } else {
      if (typeof e == "number") {
        e = [[e, t]];
      } else if (e.length && !Array.isArray(e[0])) {
        e = Array.prototype.slice.call(arguments);
      }
      return this.iterator("table", function (t) {
        t.aaSorting = e.slice();
      });
    }
  });
  h("order.listener()", function (e, t, n) {
    return this.iterator("table", function (i) {
      et(i, e, t, n);
    });
  });
  h("order.fixed()", function (t) {
    var n;
    if (t) {
      return this.iterator("table", function (n) {
        n.aaSortingFixed = e.extend(true, {}, t);
      });
    } else {
      n = (n = this.context).length ? n[0].aaSortingFixed : i;
      if (Array.isArray(n)) {
        return {
          pre: n
        };
      } else {
        return n;
      }
    }
  });
  h(["columns().order()", "column().order()"], function (t) {
    var n = this;
    return this.iterator("table", function (i, r) {
      var o = [];
      e.each(n[r], function (e, n) {
        o.push([n, t]);
      });
      i.aaSorting = o;
    });
  });
  h("search()", function (t, n, r, o) {
    var a = this.context;
    if (t === i) {
      if (a.length !== 0) {
        return a[0].oPreviousSearch.sSearch;
      } else {
        return i;
      }
    } else {
      return this.iterator("table", function (i) {
        if (i.oFeatures.bFilter) {
          ye(i, e.extend({}, i.oPreviousSearch, {
            sSearch: t + "",
            bRegex: n !== null && n,
            bSmart: r === null || r,
            bCaseInsensitive: o === null || o
          }), 1);
        }
      });
    }
  });
  f("columns().search()", "column().search()", function (t, n, r, o) {
    return this.iterator("column", function (a, s) {
      var l = a.aoPreSearchCols;
      if (t === i) {
        return l[s].sSearch;
      }
      if (a.oFeatures.bFilter) {
        e.extend(l[s], {
          sSearch: t + "",
          bRegex: n !== null && n,
          bSmart: r === null || r,
          bCaseInsensitive: o === null || o
        });
        ye(a, a.oPreviousSearch, 1);
      }
    });
  });
  h("state()", function () {
    if (this.context.length) {
      return this.context[0].oSavedState;
    } else {
      return null;
    }
  });
  h("state.clear()", function () {
    return this.iterator("table", function (e) {
      e.fnStateSaveCallback.call(e.oInstance, e, {});
    });
  });
  h("state.loaded()", function () {
    if (this.context.length) {
      return this.context[0].oLoadedState;
    } else {
      return null;
    }
  });
  h("state.save()", function () {
    return this.iterator("table", function (e) {
      it(e);
    });
  });
  p.versionCheck = p.fnVersionCheck = function (e) {
    for (var t, n, i = p.version.split("."), r = e.split("."), o = 0, a = r.length; o < a; o++) {
      if ((t = parseInt(i[o], 10) || 0) !== (n = parseInt(r[o], 10) || 0)) {
        return n < t;
      }
    }
    return true;
  };
  p.isDataTable = p.fnIsDataTable = function (t) {
    var n = e(t).get(0);
    var i = false;
    return t instanceof p.Api || (e.each(p.settings, function (t, r) {
      var o = r.nScrollHead ? e("table", r.nScrollHead)[0] : null;
      var a = r.nScrollFoot ? e("table", r.nScrollFoot)[0] : null;
      if (!(r.nTable !== n && o !== n && a !== n)) {
        i = true;
      }
    }), i);
  };
  p.tables = p.fnTables = function (t) {
    var n = false;
    if (e.isPlainObject(t)) {
      n = t.api;
      t = t.visible;
    }
    var i = e.map(p.settings, function (n) {
      if (!t || e(n.nTable).is(":visible")) {
        return n.nTable;
      }
    });
    if (n) {
      return new St(i);
    } else {
      return i;
    }
  };
  p.camelToHungarian = A;
  h("$()", function (t, n) {
    n = this.rows(n).nodes();
    n = e(n);
    return e([].concat(n.filter(t).toArray(), n.find(t).toArray()));
  });
  e.each(["on", "one", "off"], function (t, n) {
    h(n + "()", function () {
      var t = Array.prototype.slice.call(arguments);
      t[0] = e.map(t[0].split(/\s/), function (e) {
        if (e.match(/\.dt\b/)) {
          return e;
        } else {
          return e + ".dt";
        }
      }).join(" ");
      var i = e(this.tables().nodes());
      i[n].apply(i, t);
      return this;
    });
  });
  h("clear()", function () {
    return this.iterator("table", function (e) {
      J(e);
    });
  });
  h("settings()", function () {
    return new St(this.context, this.context);
  });
  h("init()", function () {
    var e = this.context;
    if (e.length) {
      return e[0].oInit;
    } else {
      return null;
    }
  });
  h("data()", function () {
    return this.iterator("table", function (e) {
      return C(e.aoData, "_aData");
    }).flatten();
  });
  h("destroy()", function (n) {
    n = n || false;
    return this.iterator("table", function (i) {
      var r;
      var o = i.oClasses;
      var a = i.nTable;
      var s = i.nTBody;
      var l = i.nTHead;
      var c = i.nTFoot;
      var u = e(a);
      s = e(s);
      var d = e(i.nTableWrapper);
      var h = e.map(i.aoData, function (e) {
        return e.nTr;
      });
      i.bDestroying = true;
      ht(i, "aoDestroyCallback", "destroy", [i]);
      if (!n) {
        new St(i).columns().visible(true);
      }
      d.off(".DT").find(":not(tbody *)").off(".DT");
      e(t).off(".DT-" + i.sInstance);
      if (a != l.parentNode) {
        u.children("thead").detach();
        u.append(l);
      }
      if (c && a != c.parentNode) {
        u.children("tfoot").detach();
        u.append(c);
      }
      i.aaSorting = [];
      i.aaSortingFixed = [];
      tt(i);
      e(h).removeClass(i.asStripeClasses.join(" "));
      e("th, td", l).removeClass(o.sSortable + " " + o.sSortableAsc + " " + o.sSortableDesc + " " + o.sSortableNone);
      s.children().detach();
      s.append(h);
      c = i.nTableWrapper.parentNode;
      if ((h = (u[l = n ? "remove" : "detach"](), d[l](), !n && c && (c.insertBefore(a, i.nTableReinsertBefore), u.css("width", i.sDestroyWidth).removeClass(o.sTable), (r = i.asDestroyStripes.length) && s.children().each(function (t) {
        e(this).addClass(i.asDestroyStripes[t % r]);
      })), e.inArray(i, p.settings))) !== -1) {
        p.settings.splice(h, 1);
      }
    });
  });
  e.each(["column", "row", "cell"], function (e, t) {
    h(t + "s().every()", function (e) {
      var n = this.selector.opts;
      var r = this;
      return this.iterator(t, function (o, a, s, l, c) {
        e.call(r[t](a, t === "cell" ? s : n, t === "cell" ? n : i), a, s, l, c);
      });
    });
  });
  h("i18n()", function (t, n, r) {
    var o = this.context[0];
    if ((t = K(t)(o.oLanguage)) === i) {
      t = n;
    }
    return (t = r !== i && e.isPlainObject(t) ? t[r] !== i ? t[r] : t._ : t).replace("%d", r);
  });
  p.version = "1.13.1";
  p.settings = [];
  p.models = {};
  p.models.oSearch = {
    bCaseInsensitive: true,
    sSearch: "",
    bRegex: false,
    bSmart: true,
    return: false
  };
  p.models.oRow = {
    nTr: null,
    anCells: null,
    _aData: [],
    _aSortData: null,
    _aFilterData: null,
    _sFilterRow: null,
    _sRowStripe: "",
    src: null,
    idx: -1
  };
  p.models.oColumn = {
    idx: null,
    aDataSort: null,
    asSorting: null,
    bSearchable: null,
    bSortable: null,
    bVisible: null,
    _sManualType: null,
    _bAttrSrc: false,
    fnCreatedCell: null,
    fnGetData: null,
    fnSetData: null,
    mData: null,
    mRender: null,
    nTh: null,
    nTf: null,
    sClass: null,
    sContentPadding: null,
    sDefaultContent: null,
    sName: null,
    sSortDataType: "std",
    sSortingClass: null,
    sSortingClassJUI: null,
    sTitle: null,
    sType: null,
    sWidth: null,
    sWidthOrig: null
  };
  p.defaults = {
    aaData: null,
    aaSorting: [[0, "asc"]],
    aaSortingFixed: [],
    ajax: null,
    aLengthMenu: [10, 25, 50, 100],
    aoColumns: null,
    aoColumnDefs: null,
    aoSearchCols: [],
    asStripeClasses: null,
    bAutoWidth: true,
    bDeferRender: false,
    bDestroy: false,
    bFilter: true,
    bInfo: true,
    bLengthChange: true,
    bPaginate: true,
    bProcessing: false,
    bRetrieve: false,
    bScrollCollapse: false,
    bServerSide: false,
    bSort: true,
    bSortMulti: true,
    bSortCellsTop: false,
    bSortClasses: true,
    bStateSave: false,
    fnCreatedRow: null,
    fnDrawCallback: null,
    fnFooterCallback: null,
    fnFormatNumber: function (e) {
      return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, this.oLanguage.sThousands);
    },
    fnHeaderCallback: null,
    fnInfoCallback: null,
    fnInitComplete: null,
    fnPreDrawCallback: null,
    fnRowCallback: null,
    fnServerData: null,
    fnServerParams: null,
    fnStateLoadCallback: function (e) {
      try {
        return JSON.parse((e.iStateDuration === -1 ? sessionStorage : localStorage).getItem("DataTables_" + e.sInstance + "_" + location.pathname));
      } catch (e) {
        return {};
      }
    },
    fnStateLoadParams: null,
    fnStateLoaded: null,
    fnStateSaveCallback: function (e, t) {
      try {
        (e.iStateDuration === -1 ? sessionStorage : localStorage).setItem("DataTables_" + e.sInstance + "_" + location.pathname, JSON.stringify(t));
      } catch (e) {}
    },
    fnStateSaveParams: null,
    iStateDuration: 7200,
    iDeferLoading: null,
    iDisplayLength: 10,
    iDisplayStart: 0,
    iTabIndex: 0,
    oClasses: {},
    oLanguage: {
      oAria: {
        sSortAscending: ": activate to sort column ascending",
        sSortDescending: ": activate to sort column descending"
      },
      oPaginate: {
        sFirst: "First",
        sLast: "Last",
        sNext: "Next",
        sPrevious: "Previous"
      },
      sEmptyTable: "No data available in table",
      sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
      sInfoEmpty: "Showing 0 to 0 of 0 entries",
      sInfoFiltered: "(filtered from _MAX_ total entries)",
      sInfoPostFix: "",
      sDecimal: "",
      sThousands: ",",
      sLengthMenu: "Show _MENU_ entries",
      sLoadingRecords: "Loading...",
      sProcessing: "",
      sSearch: "Search:",
      sSearchPlaceholder: "",
      sUrl: "",
      sZeroRecords: "No matching records found"
    },
    oSearch: e.extend({}, p.models.oSearch),
    sAjaxDataProp: "data",
    sAjaxSource: null,
    sDom: "lfrtip",
    searchDelay: null,
    sPaginationType: "simple_numbers",
    sScrollX: "",
    sScrollXInner: "",
    sScrollY: "",
    sServerMethod: "GET",
    renderer: null,
    rowId: "DT_RowId"
  };
  T(p.defaults);
  p.defaults.column = {
    aDataSort: null,
    iDataSort: -1,
    asSorting: ["asc", "desc"],
    bSearchable: true,
    bSortable: true,
    bVisible: true,
    fnCreatedCell: null,
    mData: null,
    mRender: null,
    sCellType: "td",
    sClass: "",
    sContentPadding: "",
    sDefaultContent: null,
    sName: "",
    sSortDataType: "std",
    sTitle: null,
    sType: null,
    sWidth: null
  };
  T(p.defaults.column);
  p.models.oSettings = {
    oFeatures: {
      bAutoWidth: null,
      bDeferRender: null,
      bFilter: null,
      bInfo: null,
      bLengthChange: null,
      bPaginate: null,
      bProcessing: null,
      bServerSide: null,
      bSort: null,
      bSortMulti: null,
      bSortClasses: null,
      bStateSave: null
    },
    oScroll: {
      bCollapse: null,
      iBarWidth: 0,
      sX: null,
      sXInner: null,
      sY: null
    },
    oLanguage: {
      fnInfoCallback: null
    },
    oBrowser: {
      bScrollOversize: false,
      bScrollbarLeft: false,
      bBounding: false,
      barWidth: 0
    },
    ajax: null,
    aanFeatures: [],
    aoData: [],
    aiDisplay: [],
    aiDisplayMaster: [],
    aIds: {},
    aoColumns: [],
    aoHeader: [],
    aoFooter: [],
    oPreviousSearch: {},
    aoPreSearchCols: [],
    aaSorting: null,
    aaSortingFixed: [],
    asStripeClasses: null,
    asDestroyStripes: [],
    sDestroyWidth: 0,
    aoRowCallback: [],
    aoHeaderCallback: [],
    aoFooterCallback: [],
    aoDrawCallback: [],
    aoRowCreatedCallback: [],
    aoPreDrawCallback: [],
    aoInitComplete: [],
    aoStateSaveParams: [],
    aoStateLoadParams: [],
    aoStateLoaded: [],
    sTableId: "",
    nTable: null,
    nTHead: null,
    nTFoot: null,
    nTBody: null,
    nTableWrapper: null,
    bDeferLoading: false,
    bInitialised: false,
    aoOpenRows: [],
    sDom: null,
    searchDelay: null,
    sPaginationType: "two_button",
    iStateDuration: 0,
    aoStateSave: [],
    aoStateLoad: [],
    oSavedState: null,
    oLoadedState: null,
    sAjaxSource: null,
    sAjaxDataProp: null,
    jqXHR: null,
    json: i,
    oAjaxData: i,
    fnServerData: null,
    aoServerParams: [],
    sServerMethod: null,
    fnFormatNumber: null,
    aLengthMenu: null,
    iDraw: 0,
    bDrawing: false,
    iDrawError: -1,
    _iDisplayLength: 10,
    _iDisplayStart: 0,
    _iRecordsTotal: 0,
    _iRecordsDisplay: 0,
    oClasses: {},
    bFiltered: false,
    bSorted: false,
    bSortCellsTop: null,
    oInit: null,
    aoDestroyCallback: [],
    fnRecordsTotal: function () {
      if (gt(this) == "ssp") {
        return +this._iRecordsTotal;
      } else {
        return this.aiDisplayMaster.length;
      }
    },
    fnRecordsDisplay: function () {
      if (gt(this) == "ssp") {
        return +this._iRecordsDisplay;
      } else {
        return this.aiDisplay.length;
      }
    },
    fnDisplayEnd: function () {
      var e = this._iDisplayLength;
      var t = this._iDisplayStart;
      var n = t + e;
      var i = this.aiDisplay.length;
      var r = this.oFeatures;
      var o = r.bPaginate;
      if (r.bServerSide) {
        if (o === false || e === -1) {
          return t + i;
        } else {
          return Math.min(t + e, this._iRecordsDisplay);
        }
      } else if (!o || i < n || e === -1) {
        return i;
      } else {
        return n;
      }
    },
    oInstance: null,
    sInstance: null,
    iTabIndex: 0,
    nScrollHead: null,
    nScrollFoot: null,
    aLastSort: [],
    oPlugins: {},
    rowIdFn: null,
    rowId: null
  };
  p.ext = d = {
    buttons: {},
    classes: {},
    builder: "-source-",
    errMode: "alert",
    feature: [],
    search: [],
    selector: {
      cell: [],
      column: [],
      row: []
    },
    internal: {},
    legacy: {
      ajax: null
    },
    pager: {},
    renderer: {
      pageButton: {},
      header: {}
    },
    order: {},
    type: {
      detect: [],
      search: {},
      order: {}
    },
    _unique: 0,
    fnVersionCheck: p.fnVersionCheck,
    iApiIndex: 0,
    oJUIClasses: {},
    sVersion: p.version
  };
  e.extend(d, {
    afnFiltering: d.search,
    aTypes: d.type.detect,
    ofnSearch: d.type.search,
    oSort: d.type.order,
    afnSortData: d.order,
    aoFeatures: d.feature,
    oApi: d.internal,
    oStdClasses: d.classes,
    oPagination: d.pager
  });
  e.extend(p.ext.classes, {
    sTable: "dataTable",
    sNoFooter: "no-footer",
    sPageButton: "paginate_button",
    sPageButtonActive: "current",
    sPageButtonDisabled: "disabled",
    sStripeOdd: "odd",
    sStripeEven: "even",
    sRowEmpty: "dataTables_empty",
    sWrapper: "dataTables_wrapper",
    sFilter: "dataTables_filter",
    sInfo: "dataTables_info",
    sPaging: "dataTables_paginate paging_",
    sLength: "dataTables_length",
    sProcessing: "dataTables_processing",
    sSortAsc: "sorting_asc",
    sSortDesc: "sorting_desc",
    sSortable: "sorting",
    sSortableAsc: "sorting_desc_disabled",
    sSortableDesc: "sorting_asc_disabled",
    sSortableNone: "sorting_disabled",
    sSortColumn: "sorting_",
    sFilterInput: "",
    sLengthSelect: "",
    sScrollWrapper: "dataTables_scroll",
    sScrollHead: "dataTables_scrollHead",
    sScrollHeadInner: "dataTables_scrollHeadInner",
    sScrollBody: "dataTables_scrollBody",
    sScrollFoot: "dataTables_scrollFoot",
    sScrollFootInner: "dataTables_scrollFootInner",
    sHeaderTH: "",
    sFooterTH: "",
    sSortJUIAsc: "",
    sSortJUIDesc: "",
    sSortJUI: "",
    sSortJUIAscAllowed: "",
    sSortJUIDescAllowed: "",
    sSortJUIWrapper: "",
    sSortIcon: "",
    sJUIHeader: "",
    sJUIFooter: ""
  });
  var Mt = p.ext.pager;
  function It(e, t) {
    var n = [];
    var i = Mt.numbers_length;
    var r = Math.floor(i / 2);
    if (t <= i) {
      n = l(0, t);
    } else if (e <= r) {
      (n = l(0, i - 2)).push("ellipsis");
      n.push(t - 1);
    } else {
      (t - 1 - r <= e ? n = l(t - (i - 2), t) : ((n = l(e - r + 2, e + r - 1)).push("ellipsis"), n.push(t - 1), n)).splice(0, 0, "ellipsis");
      n.splice(0, 0, 0);
    }
    n.DT_el = "span";
    return n;
  }
  function Pt(e, t, n, i) {
    if (e === 0 || e && e !== "-") {
      if ((e = t ? _(e, t) : e).replace) {
        if (n) {
          e = e.replace(n, "");
        }
        if (i) {
          e = e.replace(i, "");
        }
      }
      return +e;
    } else {
      return -1 / 0;
    }
  }
  function Lt(t) {
    e.each({
      num: function (e) {
        return Pt(e, t);
      },
      "num-fmt": function (e) {
        return Pt(e, t, w);
      },
      "html-num": function (e) {
        return Pt(e, t, v);
      },
      "html-num-fmt": function (e) {
        return Pt(e, t, v, w);
      }
    }, function (e, n) {
      d.type.order[e + t + "-pre"] = n;
      if (e.match(/^html\-/)) {
        d.type.search[e + t] = d.type.search.html;
      }
    });
  }
  function Nt(e) {
    if (typeof (e = Array.isArray(e) ? e.join(",") : e) == "string") {
      return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
    } else {
      return e;
    }
  }
  function Ft(e, n, i, r, o) {
    if (t.moment) {
      return e[n](o);
    } else if (t.luxon) {
      return e[i](o);
    } else if (r) {
      return e[r](o);
    } else {
      return e;
    }
  }
  e.extend(Mt, {
    simple: function (e, t) {
      return ["previous", "next"];
    },
    full: function (e, t) {
      return ["first", "previous", "next", "last"];
    },
    numbers: function (e, t) {
      return [It(e, t)];
    },
    simple_numbers: function (e, t) {
      return ["previous", It(e, t), "next"];
    },
    full_numbers: function (e, t) {
      return ["first", "previous", It(e, t), "next", "last"];
    },
    first_last_numbers: function (e, t) {
      return ["first", It(e, t), "last"];
    },
    _numbers: It,
    numbers_length: 7
  });
  e.extend(true, p.ext.renderer, {
    pageButton: {
      _: function (t, r, o, a, s, l) {
        var c;
        var u;
        var d;
        var h = t.oClasses;
        var f = t.oLanguage.oPaginate;
        var p = t.oLanguage.oAria.paginate || {};
        try {
          d = e(r).find(n.activeElement).data("dt-idx");
        } catch (r) {}
        (function n(i, r) {
          for (var a, d, g = h.sPageButtonDisabled, m = function (e) {
              Re(t, e.data.action, true);
            }, v = 0, y = r.length; v < y; v++) {
            a = r[v];
            if (Array.isArray(a)) {
              n(e("<" + (a.DT_el || "div") + "/>").appendTo(i), a);
            } else {
              c = null;
              u = a;
              d = t.iTabIndex;
              switch (a) {
                case "ellipsis":
                  i.append("<span class=\"ellipsis\">&#x2026;</span>");
                  break;
                case "first":
                  c = f.sFirst;
                  if (s === 0) {
                    d = -1;
                    u += " " + g;
                  }
                  break;
                case "previous":
                  c = f.sPrevious;
                  if (s === 0) {
                    d = -1;
                    u += " " + g;
                  }
                  break;
                case "next":
                  c = f.sNext;
                  if (!(l !== 0 && s !== l - 1)) {
                    d = -1;
                    u += " " + g;
                  }
                  break;
                case "last":
                  c = f.sLast;
                  if (!(l !== 0 && s !== l - 1)) {
                    d = -1;
                    u += " " + g;
                  }
                  break;
                default:
                  c = t.fnFormatNumber(a + 1);
                  u = s === a ? h.sPageButtonActive : "";
              }
              if (c !== null) {
                ut(e("<a>", {
                  class: h.sPageButton + " " + u,
                  "aria-controls": t.sTableId,
                  "aria-label": p[a],
                  "data-dt-idx": a,
                  tabindex: d,
                  id: o === 0 && typeof a == "string" ? t.sTableId + "_" + a : null
                }).html(c).appendTo(i), {
                  action: a
                }, m);
              }
            }
          }
        })(e(r).empty(), a);
        if (d !== i) {
          e(r).find("[data-dt-idx=" + d + "]").trigger("focus");
        }
      }
    }
  });
  e.extend(p.ext.type.detect, [function (e, t) {
    if (o(e, t = t.oLanguage.sDecimal)) {
      return "num" + t;
    } else {
      return null;
    }
  }, function (e, t) {
    var n;
    if ((!e || e instanceof Date || y.test(e)) && ((n = Date.parse(e)) !== null && !isNaN(n) || x(e))) {
      return "date";
    } else {
      return null;
    }
  }, function (e, t) {
    if (o(e, t = t.oLanguage.sDecimal, true)) {
      return "num-fmt" + t;
    } else {
      return null;
    }
  }, function (e, t) {
    if (a(e, t = t.oLanguage.sDecimal)) {
      return "html-num" + t;
    } else {
      return null;
    }
  }, function (e, t) {
    if (a(e, t = t.oLanguage.sDecimal, true)) {
      return "html-num-fmt" + t;
    } else {
      return null;
    }
  }, function (e, t) {
    if (x(e) || typeof e == "string" && e.indexOf("<") !== -1) {
      return "html";
    } else {
      return null;
    }
  }]);
  e.extend(p.ext.type.search, {
    html: function (e) {
      if (x(e)) {
        return e;
      } else if (typeof e == "string") {
        return e.replace(m, " ").replace(v, "");
      } else {
        return "";
      }
    },
    string: function (e) {
      if (x(e) || typeof e != "string") {
        return e;
      } else {
        return e.replace(m, " ");
      }
    }
  });
  e.extend(d.type.order, {
    "date-pre": function (e) {
      e = Date.parse(e);
      if (isNaN(e)) {
        return -1 / 0;
      } else {
        return e;
      }
    },
    "html-pre": function (e) {
      if (x(e)) {
        return "";
      } else if (e.replace) {
        return e.replace(/<.*?>/g, "").toLowerCase();
      } else {
        return e + "";
      }
    },
    "string-pre": function (e) {
      if (x(e)) {
        return "";
      } else if (typeof e == "string") {
        return e.toLowerCase();
      } else if (e.toString) {
        return e.toString();
      } else {
        return "";
      }
    },
    "string-asc": function (e, t) {
      if (e < t) {
        return -1;
      } else if (t < e) {
        return 1;
      } else {
        return 0;
      }
    },
    "string-desc": function (e, t) {
      if (e < t) {
        return 1;
      } else if (t < e) {
        return -1;
      } else {
        return 0;
      }
    }
  });
  Lt("");
  e.extend(true, p.ext.renderer, {
    header: {
      _: function (t, n, i, r) {
        e(t.nTable).on("order.dt.DT", function (e, o, a, s) {
          if (t === o) {
            o = i.idx;
            n.removeClass(r.sSortAsc + " " + r.sSortDesc).addClass(s[o] == "asc" ? r.sSortAsc : s[o] == "desc" ? r.sSortDesc : i.sSortingClass);
          }
        });
      },
      jqueryui: function (t, n, i, r) {
        e("<div/>").addClass(r.sSortJUIWrapper).append(n.contents()).append(e("<span/>").addClass(r.sSortIcon + " " + i.sSortingClassJUI)).appendTo(n);
        e(t.nTable).on("order.dt.DT", function (e, o, a, s) {
          if (t === o) {
            o = i.idx;
            n.removeClass(r.sSortAsc + " " + r.sSortDesc).addClass(s[o] == "asc" ? r.sSortAsc : s[o] == "desc" ? r.sSortDesc : i.sSortingClass);
            n.find("span." + r.sSortIcon).removeClass(r.sSortJUIAsc + " " + r.sSortJUIDesc + " " + r.sSortJUI + " " + r.sSortJUIAscAllowed + " " + r.sSortJUIDescAllowed).addClass(s[o] == "asc" ? r.sSortJUIAsc : s[o] == "desc" ? r.sSortJUIDesc : i.sSortingClassJUI);
          }
        });
      }
    }
  });
  var Rt = false;
  function jt(e, n, i) {
    var r;
    if (t.moment) {
      if (!(r = t.moment.utc(e, n, i, true)).isValid()) {
        return null;
      }
    } else if (t.luxon) {
      if (!(r = n && typeof e == "string" ? t.luxon.DateTime.fromFormat(e, n) : t.luxon.DateTime.fromISO(e)).isValid) {
        return null;
      }
      r.setLocale(i);
    } else if (n) {
      if (!Rt) {
        alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17");
      }
      Rt = true;
    } else {
      r = new Date(e);
    }
    return r;
  }
  function $t(e) {
    return function (t, n, r, o) {
      if (arguments.length === 0) {
        r = "en";
        t = n = null;
      } else if (arguments.length === 1) {
        r = "en";
        n = t;
        t = null;
      } else if (arguments.length === 2) {
        r = n;
        n = t;
        t = null;
      }
      var a = "datetime-" + n;
      if (!p.ext.type.order[a]) {
        p.ext.type.detect.unshift(function (e) {
          return e === a && a;
        });
        p.ext.type.order[a + "-asc"] = function (e, t) {
          if ((e = e.valueOf()) === (t = t.valueOf())) {
            return 0;
          } else if (e < t) {
            return -1;
          } else {
            return 1;
          }
        };
        p.ext.type.order[a + "-desc"] = function (e, t) {
          if ((e = e.valueOf()) === (t = t.valueOf())) {
            return 0;
          } else if (t < e) {
            return -1;
          } else {
            return 1;
          }
        };
      }
      return function (s, l) {
        var c;
        if (!(s !== null && s !== i)) {
          s = o === "--now" ? (c = new Date(), new Date(Date.UTC(c.getFullYear(), c.getMonth(), c.getDate(), c.getHours(), c.getMinutes(), c.getSeconds()))) : "";
        }
        if (l === "type") {
          return a;
        } else if (s === "") {
          if (l !== "sort") {
            return "";
          } else {
            return jt("0000-01-01 00:00:00", null, r);
          }
        } else if ((n === null || t !== n || l === "sort" || l === "type" || s instanceof Date) && (c = jt(s, t, r)) !== null) {
          if (l === "sort") {
            return c;
          } else {
            s = n === null ? Ft(c, "toDate", "toJSDate", "")[e]() : Ft(c, "format", "toFormat", "toISOString", n);
            if (l === "display") {
              return Nt(s);
            } else {
              return s;
            }
          }
        } else {
          return s;
        }
      };
    };
  }
  var zt = ",";
  var Ht = ".";
  if (Intl) {
    try {
      for (var Bt = new Intl.NumberFormat().formatToParts(100000.1), qt = 0; qt < Bt.length; qt++) {
        if (Bt[qt].type === "group") {
          zt = Bt[qt].value;
        } else if (Bt[qt].type === "decimal") {
          Ht = Bt[qt].value;
        }
      }
    } catch (f) {}
  }
  function Wt(e) {
    return function () {
      var t = [at(this[p.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
      return p.ext.internal[e].apply(this, t);
    };
  }
  p.datetime = function (e, t) {
    var n = "datetime-detect-" + e;
    t = t || "en";
    if (!p.ext.type.order[n]) {
      p.ext.type.detect.unshift(function (i) {
        var r = jt(i, e, t);
        return !(i !== "" && !r) && n;
      });
      p.ext.type.order[n + "-pre"] = function (n) {
        return jt(n, e, t) || 0;
      };
    }
  };
  p.render = {
    date: $t("toLocaleDateString"),
    datetime: $t("toLocaleString"),
    time: $t("toLocaleTimeString"),
    number: function (e, t, n, r, o) {
      if (!(e !== null && e !== i)) {
        e = zt;
      }
      if (!(t !== null && t !== i)) {
        t = Ht;
      }
      return {
        display: function (i) {
          if (typeof i != "number" && typeof i != "string") {
            return i;
          }
          if (i === "" || i === null) {
            return i;
          }
          var a = i < 0 ? "-" : "";
          var s = parseFloat(i);
          if (isNaN(s)) {
            return Nt(i);
          } else {
            s = s.toFixed(n);
            i = Math.abs(s);
            s = parseInt(i, 10);
            i = n ? t + (i - s).toFixed(n).substring(2) : "";
            return (a = s === 0 && parseFloat(i) === 0 ? "" : a) + (r || "") + s.toString().replace(/\B(?=(\d{3})+(?!\d))/g, e) + i + (o || "");
          }
        }
      };
    },
    text: function () {
      return {
        display: Nt,
        filter: Nt
      };
    }
  };
  e.extend(p.ext.internal, {
    _fnExternApiFunc: Wt,
    _fnBuildAjax: he,
    _fnAjaxUpdate: fe,
    _fnAjaxParameters: pe,
    _fnAjaxUpdateDraw: ge,
    _fnAjaxDataSrc: me,
    _fnAddColumn: L,
    _fnColumnOptions: N,
    _fnAdjustColumnSizing: F,
    _fnVisibleToColumnIndex: R,
    _fnColumnIndexToVisible: j,
    _fnVisbleColumns: $,
    _fnGetColumns: z,
    _fnColumnTypes: H,
    _fnApplyColumnDefs: B,
    _fnHungarianMap: T,
    _fnCamelToHungarian: A,
    _fnLanguageCompat: D,
    _fnBrowserDetect: I,
    _fnAddData: q,
    _fnAddTr: W,
    _fnNodeToDataIndex: function (e, t) {
      if (t._DT_RowIndex !== i) {
        return t._DT_RowIndex;
      } else {
        return null;
      }
    },
    _fnNodeToColumnIndex: function (t, n, i) {
      return e.inArray(i, t.aoData[n].anCells);
    },
    _fnGetCellData: U,
    _fnSetCellData: V,
    _fnSplitObjNotation: G,
    _fnGetObjectDataFn: K,
    _fnSetObjectDataFn: Q,
    _fnGetDataMaster: Z,
    _fnClearTable: J,
    _fnDeleteIndex: ee,
    _fnInvalidate: te,
    _fnGetRowElements: ne,
    _fnCreateTr: ie,
    _fnBuildHead: oe,
    _fnDrawHead: ae,
    _fnDraw: se,
    _fnReDraw: le,
    _fnAddOptionsHtml: ce,
    _fnDetectHeader: ue,
    _fnGetUniqueThs: de,
    _fnFeatureHtmlFilter: ve,
    _fnFilterComplete: ye,
    _fnFilterCustom: be,
    _fnFilterColumn: we,
    _fnFilter: xe,
    _fnFilterCreateSearch: _e,
    _fnEscapeRegex: Ce,
    _fnFilterData: Te,
    _fnFeatureHtmlInfo: Ee,
    _fnUpdateInfo: Oe,
    _fnInfoMacros: Me,
    _fnInitialise: Ie,
    _fnInitComplete: Pe,
    _fnLengthChange: Le,
    _fnFeatureHtmlLength: Ne,
    _fnFeatureHtmlPaginate: Fe,
    _fnPageChange: Re,
    _fnFeatureHtmlProcessing: je,
    _fnProcessingDisplay: $e,
    _fnFeatureHtmlTable: ze,
    _fnScrollDraw: He,
    _fnApplyToChildren: Be,
    _fnCalculateColumnWidths: We,
    _fnThrottle: Ue,
    _fnConvertToWidth: Ve,
    _fnGetWidestNode: Ye,
    _fnGetMaxLenString: Xe,
    _fnStringToCss: Ge,
    _fnSortFlatten: Ke,
    _fnSort: Qe,
    _fnSortAria: Ze,
    _fnSortListener: Je,
    _fnSortAttachListener: et,
    _fnSortingClasses: tt,
    _fnSortData: nt,
    _fnSaveState: it,
    _fnLoadState: rt,
    _fnImplementState: ot,
    _fnSettingsFromNode: at,
    _fnLog: st,
    _fnMap: lt,
    _fnBindAction: ut,
    _fnCallbackReg: dt,
    _fnCallbackFire: ht,
    _fnLengthOverflow: ft,
    _fnRenderer: pt,
    _fnDataSource: gt,
    _fnRowAttributes: re,
    _fnExtend: ct,
    _fnCalculateEnd: function () {}
  });
  ((e.fn.dataTable = p).$ = e).fn.dataTableSettings = p.settings;
  e.fn.dataTableExt = p.ext;
  e.fn.DataTable = function (t) {
    return e(this).dataTable(t).api();
  };
  e.each(p, function (t, n) {
    e.fn.DataTable[t] = n;
  });
  return p;
});
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery", "datatables.net"], function (t) {
      return e(t, window, document);
    });
  } else if (typeof exports == "object") {
    module.exports = function (t, n) {
      t = t || window;
      if (!(n = n || (typeof window != "undefined" ? require("jquery") : require("jquery")(t))).fn.dataTable) {
        require("datatables.net")(t, n);
      }
      return e(n, t, t.document);
    };
  } else {
    e(jQuery, window, document);
  }
})(function (e, t, n, i) {
  "use strict";

  function r(t, n) {
    if (!o.versionCheck || !o.versionCheck("1.10.10")) {
      throw "DataTables Responsive requires DataTables 1.10.10 or newer";
    }
    this.s = {
      childNodeStore: {},
      columns: [],
      current: [],
      dt: new o.Api(t)
    };
    if (!this.s.dt.settings()[0].responsive) {
      if (n && typeof n.details == "string") {
        n.details = {
          type: n.details
        };
      } else if (n && n.details === false) {
        n.details = {
          type: false
        };
      } else if (n && n.details === true) {
        n.details = {
          type: "inline"
        };
      }
      this.c = e.extend(true, {}, r.defaults, o.defaults.responsive, n);
      (t.responsive = this)._constructor();
    }
  }
  var o = e.fn.dataTable;
  e.extend(r.prototype, {
    _constructor: function () {
      var n = this;
      var i = this.s.dt;
      var r = i.settings()[0];
      var a = e(t).innerWidth();
      if ((r = (i.settings()[0]._responsive = this, e(t).on("resize.dtr orientationchange.dtr", o.util.throttle(function () {
        var i = e(t).innerWidth();
        if (i !== a) {
          n._resize();
          a = i;
        }
      })), r.oApi._fnCallbackReg(r, "aoRowCreatedCallback", function (t, r, o) {
        if (e.inArray(false, n.s.current) !== -1) {
          e(">td, >th", t).each(function (t) {
            t = i.column.index("toData", t);
            if (n.s.current[t] === false) {
              e(this).css("display", "none");
            }
          });
        }
      }), i.on("destroy.dtr", function () {
        i.off(".dtr");
        e(i.table().body()).off(".dtr");
        e(t).off("resize.dtr orientationchange.dtr");
        i.cells(".dtr-control").nodes().to$().removeClass("dtr-control");
        e.each(n.s.current, function (e, t) {
          if (t === false) {
            n._setColumnVis(e, true);
          }
        });
      }), this.c.breakpoints.sort(function (e, t) {
        if (e.width < t.width) {
          return 1;
        } else if (e.width > t.width) {
          return -1;
        } else {
          return 0;
        }
      }), this._classLogic(), this._resizeAuto(), this.c.details)).type !== false) {
        n._detailsInit();
        i.on("column-visibility.dtr", function () {
          if (n._timer) {
            clearTimeout(n._timer);
          }
          n._timer = setTimeout(function () {
            n._timer = null;
            n._classLogic();
            n._resizeAuto();
            n._resize(true);
            n._redrawChildren();
          }, 100);
        });
        i.on("draw.dtr", function () {
          n._redrawChildren();
        });
        e(i.table().node()).addClass("dtr-" + r.type);
      }
      i.on("column-reorder.dtr", function (e, t, i) {
        n._classLogic();
        n._resizeAuto();
        n._resize(true);
      });
      i.on("column-sizing.dtr", function () {
        n._resizeAuto();
        n._resize();
      });
      i.on("column-calc.dt", function (e, t) {
        for (var i = n.s.current, r = 0; r < i.length; r++) {
          var o = t.visible.indexOf(r);
          if (i[r] === false && o >= 0) {
            t.visible.splice(o, 1);
          }
        }
      });
      i.on("preXhr.dtr", function () {
        var e = [];
        i.rows().every(function () {
          if (this.child.isShown()) {
            e.push(this.id(true));
          }
        });
        i.one("draw.dtr", function () {
          n._resizeAuto();
          n._resize();
          i.rows(e).every(function () {
            n._detailsDisplay(this, false);
          });
        });
      });
      i.on("draw.dtr", function () {
        n._controlClass();
      }).on("init.dtr", function (t, r, o) {
        if (t.namespace === "dt") {
          n._resizeAuto();
          n._resize();
          if (e.inArray(false, n.s.current)) {
            i.columns.adjust();
          }
        }
      });
      this._resize();
    },
    _childNodes: function (e, t, n) {
      var i = t + "-" + n;
      if (this.s.childNodeStore[i]) {
        return this.s.childNodeStore[i];
      }
      for (var r = [], o = e.cell(t, n).node().childNodes, a = 0, s = o.length; a < s; a++) {
        r.push(o[a]);
      }
      return this.s.childNodeStore[i] = r;
    },
    _childNodesRestore: function (e, t, n) {
      var r = t + "-" + n;
      if (this.s.childNodeStore[r]) {
        for (var o = e.cell(t, n).node(), a = this.s.childNodeStore[r][0].parentNode.childNodes, s = [], l = 0, c = a.length; l < c; l++) {
          s.push(a[l]);
        }
        for (var u = 0, d = s.length; u < d; u++) {
          o.appendChild(s[u]);
        }
        this.s.childNodeStore[r] = i;
      }
    },
    _columnsVisiblity: function (t) {
      for (var n = this.s.dt, i = this.s.columns, r = i.map(function (e, t) {
          return {
            columnIdx: t,
            priority: e.priority
          };
        }).sort(function (e, t) {
          if (e.priority !== t.priority) {
            return e.priority - t.priority;
          } else {
            return e.columnIdx - t.columnIdx;
          }
        }), o = e.map(i, function (i, r) {
          if (n.column(r).visible() === false) {
            return "not-visible";
          } else {
            return (!i.auto || i.minWidth !== null) && (i.auto === true ? "-" : e.inArray(t, i.includeIn) !== -1);
          }
        }), a = 0, s = 0, l = o.length; s < l; s++) {
        if (o[s] === true) {
          a += i[s].minWidth;
        }
      }
      var c = (c = n.settings()[0].oScroll).sY || c.sX ? c.iBarWidth : 0;
      var u = n.table().container().offsetWidth - c - a;
      s = 0;
      l = o.length;
      for (; s < l; s++) {
        if (i[s].control) {
          u -= i[s].minWidth;
        }
      }
      var d = false;
      s = 0;
      l = r.length;
      for (; s < l; s++) {
        var h = r[s].columnIdx;
        if (o[h] === "-" && !i[h].control && i[h].minWidth) {
          if (d || u - i[h].minWidth < 0) {
            o[h] = !(d = true);
          } else {
            o[h] = true;
          }
          u -= i[h].minWidth;
        }
      }
      var f = false;
      s = 0;
      l = i.length;
      for (; s < l; s++) {
        if (!i[s].control && !i[s].never && o[s] === false) {
          f = true;
          break;
        }
      }
      s = 0;
      l = i.length;
      for (; s < l; s++) {
        if (i[s].control) {
          o[s] = f;
        }
        if (o[s] === "not-visible") {
          o[s] = false;
        }
      }
      if (e.inArray(true, o) === -1) {
        o[0] = true;
      }
      return o;
    },
    _classLogic: function () {
      function t(e, t, i, o) {
        var l;
        var c;
        var u;
        if (i) {
          if (i === "max-") {
            l = n._find(t).width;
            c = 0;
            u = r.length;
            l = n._find(t).width;
            c = 0;
            u = r.length;
            for (; c < u; c++) {
              if (r[c].width <= l) {
                s(e, r[c].name);
              }
            }
          } else if (i === "min-") {
            l = n._find(t).width;
            c = 0;
            u = r.length;
            l = n._find(t).width;
            c = 0;
            u = r.length;
            for (; c < u; c++) {
              if (r[c].width >= l) {
                s(e, r[c].name);
              }
            }
          } else if (i === "not-") {
            c = 0;
            u = r.length;
            c = 0;
            u = r.length;
            for (; c < u; c++) {
              if (r[c].name.indexOf(o) === -1) {
                s(e, r[c].name);
              }
            }
          }
        } else {
          a[e].includeIn.push(t);
        }
      }
      var n = this;
      var r = this.c.breakpoints;
      var o = this.s.dt;
      var a = o.columns().eq(0).map(function (e) {
        var t = (n = this.column(e)).header().className;
        e = o.settings()[0].aoColumns[e].responsivePriority;
        var n = n.header().getAttribute("data-priority");
        if (e === i) {
          e = n === i || n === null ? 10000 : +n;
        }
        return {
          className: t,
          includeIn: [],
          auto: false,
          control: false,
          never: !!t.match(/\b(dtr\-)?never\b/),
          priority: e
        };
      });
      var s = function (t, n) {
        t = a[t].includeIn;
        if (e.inArray(n, t) === -1) {
          t.push(n);
        }
      };
      a.each(function (n, i) {
        for (var o = n.className.split(" "), a = false, s = 0, l = o.length; s < l; s++) {
          var c = o[s].trim();
          if (c === "all" || c === "dtr-all") {
            a = true;
            return void (n.includeIn = e.map(r, function (e) {
              return e.name;
            }));
          }
          if (c === "none" || c === "dtr-none" || n.never) {
            return void (a = true);
          }
          if (c === "control" || c === "dtr-control") {
            a = true;
            return void (n.control = true);
          }
          e.each(r, function (e, n) {
            var r = n.name.split("-");
            var o = new RegExp("(min\\-|max\\-|not\\-)?(" + r[0] + ")(\\-[_a-zA-Z0-9])?");
            if (o = c.match(o)) {
              a = true;
              if (o[2] === r[0] && o[3] === "-" + r[1]) {
                t(i, n.name, o[1], o[2] + o[3]);
              } else if (!(o[2] !== r[0] || o[3])) {
                t(i, n.name, o[1], o[2]);
              }
            }
          });
        }
        if (!a) {
          n.auto = true;
        }
      });
      this.s.columns = a;
    },
    _controlClass: function () {
      var t;
      var n;
      var i;
      if (this.c.details.type === "inline") {
        t = this.s.dt;
        n = this.s.current;
        i = e.inArray(true, n);
        t.cells(null, function (e) {
          return e !== i;
        }, {
          page: "current"
        }).nodes().to$().filter(".dtr-control").removeClass("dtr-control");
        t.cells(null, i, {
          page: "current"
        }).nodes().to$().addClass("dtr-control");
      }
    },
    _detailsDisplay: function (t, n) {
      var i;
      var o = this;
      var a = this.s.dt;
      var s = this.c.details;
      if (s && s.type !== false) {
        i = typeof s.renderer == "string" ? r.renderer[s.renderer]() : s.renderer;
        if (!((s = s.display(t, n, function () {
          return i.call(o, a, t[0], o._detailsObj(t[0]));
        })) !== true && s !== false)) {
          e(a.table().node()).triggerHandler("responsive-display.dt", [a, t, s, n]);
        }
      }
    },
    _detailsInit: function () {
      var t = this;
      var n = this.s.dt;
      if ((o = this.c.details).type === "inline") {
        o.target = "td.dtr-control, th.dtr-control";
      }
      n.on("draw.dtr", function () {
        t._tabIndexes();
      });
      t._tabIndexes();
      e(n.table().body()).on("keyup.dtr", "td, th", function (t) {
        if (t.keyCode === 13 && e(this).data("dtr-keyboard")) {
          e(this).click();
        }
      });
      var r = o.target;
      var o = typeof r == "string" ? r : "td, th";
      if (!(r === i && r === null)) {
        e(n.table().body()).on("click.dtr mousedown.dtr mouseup.dtr", o, function (i) {
          if (e(n.table().node()).hasClass("collapsed") && e.inArray(e(this).closest("tr").get(0), n.rows().nodes().toArray()) !== -1) {
            if (typeof r == "number") {
              var o = r < 0 ? n.columns().eq(0).length + r : r;
              if (n.cell(this).index().column !== o) {
                return;
              }
            }
            o = n.row(e(this).closest("tr"));
            if (i.type === "click") {
              t._detailsDisplay(o, false);
            } else if (i.type === "mousedown") {
              e(this).css("outline", "none");
            } else if (i.type === "mouseup") {
              e(this).trigger("blur").css("outline", "");
            }
          }
        });
      }
    },
    _detailsObj: function (t) {
      var n = this;
      var i = this.s.dt;
      return e.map(this.s.columns, function (r, o) {
        if (!r.never && !r.control) {
          return {
            className: (r = i.settings()[0].aoColumns[o]).sClass,
            columnIndex: o,
            data: i.cell(t, o).render(n.c.orthogonal),
            hidden: i.column(o).visible() && !n.s.current[o],
            rowIndex: t,
            title: r.sTitle !== null ? r.sTitle : e(i.column(o).header()).text()
          };
        }
      });
    },
    _find: function (e) {
      for (var t = this.c.breakpoints, n = 0, i = t.length; n < i; n++) {
        if (t[n].name === e) {
          return t[n];
        }
      }
    },
    _redrawChildren: function () {
      var e = this;
      var t = this.s.dt;
      t.rows({
        page: "current"
      }).iterator("row", function (n, i) {
        t.row(i);
        e._detailsDisplay(t.row(i), true);
      });
    },
    _resize: function (n) {
      for (var i, r = this, o = this.s.dt, a = e(t).innerWidth(), s = this.c.breakpoints, l = s[0].name, c = this.s.columns, u = this.s.current.slice(), d = s.length - 1; d >= 0; d--) {
        if (a <= s[d].width) {
          l = s[d].name;
          break;
        }
      }
      var h = this._columnsVisiblity(l);
      this.s.current = h;
      var f = false;
      d = 0;
      i = c.length;
      for (; d < i; d++) {
        if (h[d] === false && !c[d].never && !c[d].control && !o.column(d).visible() == 0) {
          f = true;
          break;
        }
      }
      e(o.table().node()).toggleClass("collapsed", f);
      var p = false;
      var g = 0;
      o.columns().eq(0).each(function (e, t) {
        if (h[t] === true) {
          g++;
        }
        if (!(!n && h[t] === u[t])) {
          p = true;
          r._setColumnVis(e, h[t]);
        }
      });
      this._redrawChildren();
      if (p) {
        e(o.table().node()).trigger("responsive-resize.dt", [o, this.s.current]);
        if (o.page.info().recordsDisplay === 0) {
          e("td", o.table().body()).eq(0).attr("colspan", g);
        }
      }
      r._controlClass();
    },
    _resizeAuto: function () {
      var t;
      var n;
      var i;
      var r;
      var o;
      var a = this.s.dt;
      var s = this.s.columns;
      var l = this;
      if (this.c.auto && e.inArray(true, e.map(s, function (e) {
        return e.auto;
      })) !== -1) {
        if (!e.isEmptyObject(this.s.childNodeStore)) {
          e.each(this.s.childNodeStore, function (e) {
            e = e.split("-");
            l._childNodesRestore(a, +e[0], +e[1]);
          });
        }
        a.table().node().offsetWidth;
        a.columns;
        t = a.table().node().cloneNode(false);
        n = e(a.table().header().cloneNode(false)).appendTo(t);
        r = e(a.table().body()).clone(false, false).empty().appendTo(t);
        t.style.width = "auto";
        i = a.columns().header().filter(function (e) {
          return a.column(e).visible();
        }).to$().clone(false).css("display", "table-cell").css("width", "auto").css("min-width", 0);
        e(r).append(e(a.rows({
          page: "current"
        }).nodes()).clone(false)).find("th, td").css("display", "");
        if (r = a.table().footer()) {
          r = e(r.cloneNode(false)).appendTo(t);
          o = a.columns().footer().filter(function (e) {
            return a.column(e).visible();
          }).to$().clone(false).css("display", "table-cell");
          e("<tr/>").append(o).appendTo(r);
        }
        e("<tr/>").append(i).appendTo(n);
        if (this.c.details.type === "inline") {
          e(t).addClass("dtr-inline collapsed");
        }
        e(t).find("[name]").removeAttr("name");
        e(t).css("position", "relative");
        (o = e("<div/>").css({
          width: 1,
          height: 1,
          overflow: "hidden",
          clear: "both"
        }).append(t)).insertBefore(a.table().node());
        i.each(function (e) {
          e = a.column.index("fromVisible", e);
          s[e].minWidth = this.offsetWidth || 0;
        });
        o.remove();
      }
    },
    _responsiveOnlyHidden: function () {
      var t = this.s.dt;
      return e.map(this.s.current, function (e, n) {
        return t.column(n).visible() === false || e;
      });
    },
    _setColumnVis: function (t, n) {
      var i = this;
      var r = this.s.dt;
      var o = n ? "" : "none";
      e(r.column(t).header()).css("display", o).toggleClass("dtr-hidden", !n);
      e(r.column(t).footer()).css("display", o).toggleClass("dtr-hidden", !n);
      r.column(t).nodes().to$().css("display", o).toggleClass("dtr-hidden", !n);
      if (!e.isEmptyObject(this.s.childNodeStore)) {
        r.cells(null, t).indexes().each(function (e) {
          i._childNodesRestore(r, e.row, e.column);
        });
      }
    },
    _tabIndexes: function () {
      var t = this.s.dt;
      var n = t.cells({
        page: "current"
      }).nodes().to$();
      var i = t.settings()[0];
      var r = this.c.details.target;
      n.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");
      (typeof r == "number" ? t.cells(null, r, {
        page: "current"
      }).nodes().to$() : e(r = r === "td:first-child, th:first-child" ? ">td:first-child, >th:first-child" : r, t.rows({
        page: "current"
      }).nodes())).attr("tabIndex", i.iTabIndex).data("dtr-keyboard", 1);
    }
  });
  r.defaults = {
    breakpoints: r.breakpoints = [{
      name: "desktop",
      width: 1 / 0
    }, {
      name: "tablet-l",
      width: 1024
    }, {
      name: "tablet-p",
      width: 768
    }, {
      name: "mobile-l",
      width: 480
    }, {
      name: "mobile-p",
      width: 320
    }],
    auto: true,
    details: {
      display: (r.display = {
        childRow: function (t, n, i) {
          if (n) {
            if (e(t.node()).hasClass("parent")) {
              t.child(i(), "child").show();
              return true;
            } else {
              return undefined;
            }
          } else if (t.child.isShown()) {
            t.child(false);
            e(t.node()).removeClass("parent");
            return false;
          } else {
            t.child(i(), "child").show();
            e(t.node()).addClass("parent");
            return true;
          }
        },
        childRowImmediate: function (t, n, i) {
          if (!n && t.child.isShown() || !t.responsive.hasHidden()) {
            t.child(false);
            e(t.node()).removeClass("parent");
            return false;
          } else {
            t.child(i(), "child").show();
            e(t.node()).addClass("parent");
            return true;
          }
        },
        modal: function (t) {
          return function (i, r, o) {
            var a;
            var s;
            if (r) {
              e("div.dtr-modal-content").empty().append(o());
            } else {
              a = function () {
                s.remove();
                e(n).off("keypress.dtr");
              };
              s = e("<div class=\"dtr-modal\"/>").append(e("<div class=\"dtr-modal-display\"/>").append(e("<div class=\"dtr-modal-content\"/>").append(o())).append(e("<div class=\"dtr-modal-close\">&times;</div>").click(function () {
                a();
              }))).append(e("<div class=\"dtr-modal-background\"/>").click(function () {
                a();
              })).appendTo("body");
              e(n).on("keyup.dtr", function (e) {
                if (e.keyCode === 27) {
                  e.stopPropagation();
                  a();
                }
              });
            }
            if (t && t.header) {
              e("div.dtr-modal-content").prepend("<h2>" + t.header(i) + "</h2>");
            }
          };
        }
      }).childRow,
      renderer: (r.renderer = {
        listHiddenNodes: function () {
          return function (t, n, i) {
            var r = this;
            var o = e("<ul data-dtr-index=\"" + n + "\" class=\"dtr-details\"/>");
            var a = false;
            e.each(i, function (n, i) {
              var s;
              if (i.hidden) {
                s = i.className ? "class=\"" + i.className + "\"" : "";
                e("<li " + s + " data-dtr-index=\"" + i.columnIndex + "\" data-dt-row=\"" + i.rowIndex + "\" data-dt-column=\"" + i.columnIndex + "\"><span class=\"dtr-title\">" + i.title + "</span> </li>").append(e("<span class=\"dtr-data\"/>").append(r._childNodes(t, i.rowIndex, i.columnIndex))).appendTo(o);
                a = true;
              }
            });
            return !!a && o;
          };
        },
        listHidden: function () {
          return function (t, n, i) {
            return !!(i = e.map(i, function (e) {
              var t = e.className ? "class=\"" + e.className + "\"" : "";
              if (e.hidden) {
                return "<li " + t + " data-dtr-index=\"" + e.columnIndex + "\" data-dt-row=\"" + e.rowIndex + "\" data-dt-column=\"" + e.columnIndex + "\"><span class=\"dtr-title\">" + e.title + "</span> <span class=\"dtr-data\">" + e.data + "</span></li>";
              } else {
                return "";
              }
            }).join("")) && e("<ul data-dtr-index=\"" + n + "\" class=\"dtr-details\"/>").append(i);
          };
        },
        tableAll: function (t) {
          t = e.extend({
            tableClass: ""
          }, t);
          return function (n, i, r) {
            r = e.map(r, function (e) {
              return "<tr " + (e.className ? "class=\"" + e.className + "\"" : "") + " data-dt-row=\"" + e.rowIndex + "\" data-dt-column=\"" + e.columnIndex + "\"><td>" + e.title + ":</td> <td>" + e.data + "</td></tr>";
            }).join("");
            return e("<table class=\"" + t.tableClass + " dtr-details\" width=\"100%\"/>").append(r);
          };
        }
      }).listHidden(),
      target: 0,
      type: "inline"
    },
    orthogonal: "display"
  };
  var a = e.fn.dataTable.Api;
  a.register("responsive()", function () {
    return this;
  });
  a.register("responsive.index()", function (t) {
    return {
      column: (t = e(t)).data("dtr-index"),
      row: t.parent().data("dtr-index")
    };
  });
  a.register("responsive.rebuild()", function () {
    return this.iterator("table", function (e) {
      if (e._responsive) {
        e._responsive._classLogic();
      }
    });
  });
  a.register("responsive.recalc()", function () {
    return this.iterator("table", function (e) {
      if (e._responsive) {
        e._responsive._resizeAuto();
        e._responsive._resize();
      }
    });
  });
  a.register("responsive.hasHidden()", function () {
    var t = this.context[0];
    return !!t._responsive && e.inArray(false, t._responsive._responsiveOnlyHidden()) !== -1;
  });
  a.registerPlural("columns().responsiveHidden()", "column().responsiveHidden()", function () {
    return this.iterator("column", function (e, t) {
      return !!e._responsive && e._responsive._responsiveOnlyHidden()[t];
    }, 1);
  });
  r.version = "2.4.0";
  e.fn.dataTable.Responsive = r;
  e.fn.DataTable.Responsive = r;
  e(n).on("preInit.dt.dtr", function (t, n, i) {
    if (t.namespace === "dt" && (e(n.nTable).hasClass("responsive") || e(n.nTable).hasClass("dt-responsive") || n.oInit.responsive || o.defaults.responsive) && (t = n.oInit.responsive) !== false) {
      new r(n, e.isPlainObject(t) ? t : {});
    }
  });
  return o;
});
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery", "datatables.net"], function (t) {
      return e(t, window, document);
    });
  } else if (typeof exports == "object") {
    module.exports = function (t, n) {
      t = t || window;
      if (!(n = n || (typeof window != "undefined" ? require("jquery") : require("jquery")(t))).fn.dataTable) {
        require("datatables.net")(t, n);
      }
      return e(n, 0, t.document);
    };
  } else {
    e(jQuery, window, document);
  }
})(function (e, t, n, i) {
  "use strict";

  var r = e.fn.dataTable;
  e.extend(true, r.defaults, {
    dom: "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
    renderer: "bootstrap"
  });
  e.extend(r.ext.classes, {
    sWrapper: "dataTables_wrapper dt-bootstrap4",
    sFilterInput: "form-control form-control-sm",
    sLengthSelect: "custom-select custom-select-sm form-control form-control-sm",
    sProcessing: "dataTables_processing card",
    sPageButton: "paginate_button page-item"
  });
  r.ext.renderer.pageButton.bootstrap = function (t, o, a, s, l, c) {
    var u;
    var d;
    var h;
    var f = new r.Api(t);
    var p = t.oClasses;
    var g = t.oLanguage.oPaginate;
    var m = t.oLanguage.oAria.paginate || {};
    try {
      h = e(o).find(n.activeElement).data("dt-idx");
    } catch (o) {}
    (function n(i, r) {
      for (var o, s, h = function (t) {
          t.preventDefault();
          if (!(e(t.currentTarget).hasClass("disabled") || f.page() == t.data.action)) {
            f.page(t.data.action).draw("page");
          }
        }, v = 0, y = r.length; v < y; v++) {
        s = r[v];
        if (Array.isArray(s)) {
          n(i, s);
        } else {
          d = u = "";
          switch (s) {
            case "ellipsis":
              u = "&#x2026;";
              d = "disabled";
              break;
            case "first":
              u = g.sFirst;
              d = s + (l > 0 ? "" : " disabled");
              break;
            case "previous":
              u = g.sPrevious;
              d = s + (l > 0 ? "" : " disabled");
              break;
            case "next":
              u = g.sNext;
              d = s + (l < c - 1 ? "" : " disabled");
              break;
            case "last":
              u = g.sLast;
              d = s + (l < c - 1 ? "" : " disabled");
              break;
            default:
              u = s + 1;
              d = l === s ? "active" : "";
          }
          if (u) {
            o = e("<li>", {
              class: p.sPageButton + " " + d,
              id: a === 0 && typeof s == "string" ? t.sTableId + "_" + s : null
            }).append(e("<a>", {
              href: "#",
              "aria-controls": t.sTableId,
              "aria-label": m[s],
              "data-dt-idx": s,
              tabindex: t.iTabIndex,
              class: "page-link"
            }).html(u)).appendTo(i);
            t.oApi._fnBindAction(o, {
              action: s
            }, h);
          }
        }
      }
    })(e(o).empty().html("<ul class=\"pagination\"/>").children("ul"), s);
    if (h !== i) {
      e(o).find("[data-dt-idx=" + h + "]").trigger("focus");
    }
  };
  return r;
});
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery", "datatables.net-bs4", "datatables.net-responsive"], function (t) {
      return e(t, window, document);
    });
  } else if (typeof exports == "object") {
    module.exports = function (t, n) {
      t = t || window;
      if (!(n = n || (typeof window != "undefined" ? require("jquery") : require("jquery")(t))).fn.dataTable) {
        require("datatables.net-bs4")(t, n);
      }
      if (!n.fn.dataTable) {
        require("datatables.net-responsive")(t, n);
      }
      return e(n, 0, t.document);
    };
  } else {
    e(jQuery, window, document);
  }
})(function (e, t, n, i) {
  "use strict";

  var r = e.fn.dataTable;
  var o = r.Responsive.display;
  var a = o.modal;
  var s = e("<div class=\"modal fade dtr-bs-modal\" role=\"dialog\"><div class=\"modal-dialog\" role=\"document\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div><div class=\"modal-body\"/></div></div></div>");
  o.modal = function (t) {
    return function (n, i, r) {
      var o;
      var l;
      if (e.fn.modal) {
        if (!i) {
          if (t && t.header) {
            l = (o = s.find("div.modal-header")).find("button").detach();
            o.empty().append("<h4 class=\"modal-title\">" + t.header(n) + "</h4>").append(l);
          }
          s.find("div.modal-body").empty().append(r());
          s.appendTo("body").modal();
        }
      } else {
        a(n, i, r);
      }
    };
  };
  return r;
});
(function (e, t) {
  if (typeof exports == "object" && typeof module == "object") {
    module.exports = t();
  } else if (typeof define == "function" && define.amd) {
    define([], t);
  } else {
    var n = t();
    for (var i in n) {
      (typeof exports == "object" ? exports : e)[i] = n[i];
    }
  }
})(self, function () {
  return function () {
    var e = {
      3099: function (e) {
        e.exports = function (e) {
          if (typeof e != "function") {
            throw TypeError(String(e) + " is not a function");
          }
          return e;
        };
      },
      6077: function (e, t, n) {
        var i = n(111);
        e.exports = function (e) {
          if (!i(e) && e !== null) {
            throw TypeError("Can't set " + String(e) + " as a prototype");
          }
          return e;
        };
      },
      1223: function (e, t, n) {
        var i = n(5112);
        var r = n(30);
        var o = n(3070);
        var a = i("unscopables");
        var s = Array.prototype;
        if (s[a] == null) {
          o.f(s, a, {
            configurable: true,
            value: r(null)
          });
        }
        e.exports = function (e) {
          s[a][e] = true;
        };
      },
      1530: function (e, t, n) {
        "use strict";

        var i = n(8710).charAt;
        e.exports = function (e, t, n) {
          return t + (n ? i(e, t).length : 1);
        };
      },
      5787: function (e) {
        e.exports = function (e, t, n) {
          if (!(e instanceof t)) {
            throw TypeError("Incorrect " + (n ? n + " " : "") + "invocation");
          }
          return e;
        };
      },
      9670: function (e, t, n) {
        var i = n(111);
        e.exports = function (e) {
          if (!i(e)) {
            throw TypeError(String(e) + " is not an object");
          }
          return e;
        };
      },
      4019: function (e) {
        e.exports = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined";
      },
      260: function (e, t, n) {
        "use strict";

        var i;
        var r = n(4019);
        var o = n(9781);
        var a = n(7854);
        var s = n(111);
        var l = n(6656);
        var c = n(648);
        var u = n(8880);
        var d = n(1320);
        var h = n(3070).f;
        var f = n(9518);
        var p = n(7674);
        var g = n(5112);
        var m = n(9711);
        var v = a.Int8Array;
        var y = v && v.prototype;
        var b = a.Uint8ClampedArray;
        var w = b && b.prototype;
        var x = v && f(v);
        var _ = y && f(y);
        var C = Object.prototype;
        var S = C.isPrototypeOf;
        var k = g("toStringTag");
        var T = m("TYPED_ARRAY_TAG");
        var A = r && !!p && c(a.opera) !== "Opera";
        var D = false;
        var E = {
          Int8Array: 1,
          Uint8Array: 1,
          Uint8ClampedArray: 1,
          Int16Array: 2,
          Uint16Array: 2,
          Int32Array: 4,
          Uint32Array: 4,
          Float32Array: 4,
          Float64Array: 8
        };
        var O = {
          BigInt64Array: 8,
          BigUint64Array: 8
        };
        var M = function (e) {
          if (!s(e)) {
            return false;
          }
          var t = c(e);
          return l(E, t) || l(O, t);
        };
        for (i in E) {
          if (!a[i]) {
            A = false;
          }
        }
        if ((!A || typeof x != "function" || x === Function.prototype) && (x = function () {
          throw TypeError("Incorrect invocation");
        }, A)) {
          for (i in E) {
            if (a[i]) {
              p(a[i], x);
            }
          }
        }
        if ((!A || !_ || _ === C) && (_ = x.prototype, A)) {
          for (i in E) {
            if (a[i]) {
              p(a[i].prototype, _);
            }
          }
        }
        if (A && f(w) !== _) {
          p(w, _);
        }
        if (o && !l(_, k)) {
          D = true;
          h(_, k, {
            get: function () {
              if (s(this)) {
                return this[T];
              } else {
                return undefined;
              }
            }
          });
          for (i in E) {
            if (a[i]) {
              u(a[i], T, i);
            }
          }
        }
        e.exports = {
          NATIVE_ARRAY_BUFFER_VIEWS: A,
          TYPED_ARRAY_TAG: D && T,
          aTypedArray: function (e) {
            if (M(e)) {
              return e;
            }
            throw TypeError("Target is not a typed array");
          },
          aTypedArrayConstructor: function (e) {
            if (p) {
              if (S.call(x, e)) {
                return e;
              }
            } else {
              for (var t in E) {
                if (l(E, i)) {
                  var n = a[t];
                  if (n && (e === n || S.call(n, e))) {
                    return e;
                  }
                }
              }
            }
            throw TypeError("Target is not a typed array constructor");
          },
          exportTypedArrayMethod: function (e, t, n) {
            if (o) {
              if (n) {
                for (var i in E) {
                  var r = a[i];
                  if (r && l(r.prototype, e)) {
                    delete r.prototype[e];
                  }
                }
              }
              if (!(_[e] && !n)) {
                d(_, e, n ? t : A && y[e] || t);
              }
            }
          },
          exportTypedArrayStaticMethod: function (e, t, n) {
            var i;
            var r;
            if (o) {
              if (p) {
                if (n) {
                  for (i in E) {
                    if ((r = a[i]) && l(r, e)) {
                      delete r[e];
                    }
                  }
                }
                if (x[e] && !n) {
                  return;
                }
                try {
                  return d(x, e, n ? t : A && v[e] || t);
                } catch (e) {}
              }
              for (i in E) {
                if (!(!(r = a[i]) || r[e] && !n)) {
                  d(r, e, t);
                }
              }
            }
          },
          isView: function (e) {
            if (!s(e)) {
              return false;
            }
            var t = c(e);
            return t === "DataView" || l(E, t) || l(O, t);
          },
          isTypedArray: M,
          TypedArray: x,
          TypedArrayPrototype: _
        };
      },
      3331: function (e, t, n) {
        "use strict";

        var i = n(7854);
        var r = n(9781);
        var o = n(4019);
        var a = n(8880);
        var s = n(2248);
        var l = n(7293);
        var c = n(5787);
        var u = n(9958);
        var d = n(7466);
        var h = n(7067);
        var f = n(1179);
        var p = n(9518);
        var g = n(7674);
        var m = n(8006).f;
        var v = n(3070).f;
        var y = n(1285);
        var b = n(8003);
        var w = n(9909);
        var x = w.get;
        var _ = w.set;
        var C = "ArrayBuffer";
        var S = "DataView";
        var k = "Wrong index";
        var T = i.ArrayBuffer;
        var A = T;
        var D = i.DataView;
        var E = D && D.prototype;
        var O = Object.prototype;
        var M = i.RangeError;
        var I = f.pack;
        var P = f.unpack;
        var L = function (e) {
          return [e & 255];
        };
        var N = function (e) {
          return [e & 255, e >> 8 & 255];
        };
        var F = function (e) {
          return [e & 255, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255];
        };
        var R = function (e) {
          return e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0];
        };
        var j = function (e) {
          return I(e, 23, 4);
        };
        var $ = function (e) {
          return I(e, 52, 8);
        };
        var z = function (e, t) {
          v(e.prototype, t, {
            get: function () {
              return x(this)[t];
            }
          });
        };
        var H = function (e, t, n, i) {
          var r = h(n);
          var o = x(e);
          if (r + t > o.byteLength) {
            throw M(k);
          }
          var a = x(o.buffer).bytes;
          var s = r + o.byteOffset;
          var l = a.slice(s, s + t);
          if (i) {
            return l;
          } else {
            return l.reverse();
          }
        };
        var B = function (e, t, n, i, r, o) {
          var a = h(n);
          var s = x(e);
          if (a + t > s.byteLength) {
            throw M(k);
          }
          for (var l = x(s.buffer).bytes, c = a + s.byteOffset, u = i(+r), d = 0; d < t; d++) {
            l[c + d] = u[o ? d : t - d - 1];
          }
        };
        if (o) {
          if (!l(function () {
            T(1);
          }) || !l(function () {
            new T(-1);
          }) || l(function () {
            new T();
            new T(1.5);
            new T(NaN);
            return T.name != C;
          })) {
            for (var q, W = (A = function (e) {
                c(this, A);
                return new T(h(e));
              }).prototype = T.prototype, U = m(T), V = 0; U.length > V;) {
              if (!((q = U[V++]) in A)) {
                a(A, q, T[q]);
              }
            }
            W.constructor = A;
          }
          if (g && p(E) !== O) {
            g(E, O);
          }
          var Y = new D(new A(2));
          var X = E.setInt8;
          Y.setInt8(0, 2147483648);
          Y.setInt8(1, 2147483649);
          if (!(!Y.getInt8(0) && Y.getInt8(1))) {
            s(E, {
              setInt8: function (e, t) {
                X.call(this, e, t << 24 >> 24);
              },
              setUint8: function (e, t) {
                X.call(this, e, t << 24 >> 24);
              }
            }, {
              unsafe: true
            });
          }
        } else {
          A = function (e) {
            c(this, A, C);
            var t = h(e);
            _(this, {
              bytes: y.call(new Array(t), 0),
              byteLength: t
            });
            if (!r) {
              this.byteLength = t;
            }
          };
          D = function (e, t, n) {
            c(this, D, S);
            c(e, A, S);
            var i = x(e).byteLength;
            var o = u(t);
            if (o < 0 || o > i) {
              throw M("Wrong offset");
            }
            if (o + (n = n === undefined ? i - o : d(n)) > i) {
              throw M("Wrong length");
            }
            _(this, {
              buffer: e,
              byteLength: n,
              byteOffset: o
            });
            if (!r) {
              this.buffer = e;
              this.byteLength = n;
              this.byteOffset = o;
            }
          };
          if (r) {
            z(A, "byteLength");
            z(D, "buffer");
            z(D, "byteLength");
            z(D, "byteOffset");
          }
          s(D.prototype, {
            getInt8: function (e) {
              return H(this, 1, e)[0] << 24 >> 24;
            },
            getUint8: function (e) {
              return H(this, 1, e)[0];
            },
            getInt16: function (e) {
              var t = H(this, 2, e, arguments.length > 1 ? arguments[1] : undefined);
              return (t[1] << 8 | t[0]) << 16 >> 16;
            },
            getUint16: function (e) {
              var t = H(this, 2, e, arguments.length > 1 ? arguments[1] : undefined);
              return t[1] << 8 | t[0];
            },
            getInt32: function (e) {
              return R(H(this, 4, e, arguments.length > 1 ? arguments[1] : undefined));
            },
            getUint32: function (e) {
              return R(H(this, 4, e, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
            },
            getFloat32: function (e) {
              return P(H(this, 4, e, arguments.length > 1 ? arguments[1] : undefined), 23);
            },
            getFloat64: function (e) {
              return P(H(this, 8, e, arguments.length > 1 ? arguments[1] : undefined), 52);
            },
            setInt8: function (e, t) {
              B(this, 1, e, L, t);
            },
            setUint8: function (e, t) {
              B(this, 1, e, L, t);
            },
            setInt16: function (e, t) {
              B(this, 2, e, N, t, arguments.length > 2 ? arguments[2] : undefined);
            },
            setUint16: function (e, t) {
              B(this, 2, e, N, t, arguments.length > 2 ? arguments[2] : undefined);
            },
            setInt32: function (e, t) {
              B(this, 4, e, F, t, arguments.length > 2 ? arguments[2] : undefined);
            },
            setUint32: function (e, t) {
              B(this, 4, e, F, t, arguments.length > 2 ? arguments[2] : undefined);
            },
            setFloat32: function (e, t) {
              B(this, 4, e, j, t, arguments.length > 2 ? arguments[2] : undefined);
            },
            setFloat64: function (e, t) {
              B(this, 8, e, $, t, arguments.length > 2 ? arguments[2] : undefined);
            }
          });
        }
        b(A, C);
        b(D, S);
        e.exports = {
          ArrayBuffer: A,
          DataView: D
        };
      },
      1048: function (e, t, n) {
        "use strict";

        var i = n(7908);
        var r = n(1400);
        var o = n(7466);
        var a = Math.min;
        e.exports = [].copyWithin || function (e, t) {
          var n = i(this);
          var s = o(n.length);
          var l = r(e, s);
          var c = r(t, s);
          var u = arguments.length > 2 ? arguments[2] : undefined;
          var d = a((u === undefined ? s : r(u, s)) - c, s - l);
          var h = 1;
          for (c < l && l < c + d && (h = -1, c += d - 1, l += d - 1); d-- > 0;) {
            if (c in n) {
              n[l] = n[c];
            } else {
              delete n[l];
            }
            l += h;
            c += h;
          }
          return n;
        };
      },
      1285: function (e, t, n) {
        "use strict";

        var i = n(7908);
        var r = n(1400);
        var o = n(7466);
        e.exports = function (e) {
          for (var t = i(this), n = o(t.length), a = arguments.length, s = r(a > 1 ? arguments[1] : undefined, n), l = a > 2 ? arguments[2] : undefined, c = l === undefined ? n : r(l, n); c > s;) {
            t[s++] = e;
          }
          return t;
        };
      },
      8533: function (e, t, n) {
        "use strict";

        var i = n(2092).forEach;
        var r = n(9341)("forEach");
        e.exports = r ? [].forEach : function (e) {
          return i(this, e, arguments.length > 1 ? arguments[1] : undefined);
        };
      },
      8457: function (e, t, n) {
        "use strict";

        var i = n(9974);
        var r = n(7908);
        var o = n(3411);
        var a = n(7659);
        var s = n(7466);
        var l = n(6135);
        var c = n(1246);
        e.exports = function (e) {
          var t;
          var n;
          var u;
          var d;
          var h;
          var f;
          var p = r(e);
          var g = typeof this == "function" ? this : Array;
          var m = arguments.length;
          var v = m > 1 ? arguments[1] : undefined;
          var y = v !== undefined;
          var b = c(p);
          var w = 0;
          if (y) {
            v = i(v, m > 2 ? arguments[2] : undefined, 2);
          }
          if (b == null || g == Array && a(b)) {
            for (n = new g(t = s(p.length)); t > w; w++) {
              f = y ? v(p[w], w) : p[w];
              l(n, w, f);
            }
          } else {
            h = (d = b.call(p)).next;
            n = new g();
            h = (d = b.call(p)).next;
            n = new g();
            for (; !(u = h.call(d)).done; w++) {
              f = y ? o(d, v, [u.value, w], true) : u.value;
              l(n, w, f);
            }
          }
          n.length = w;
          return n;
        };
      },
      1318: function (e, t, n) {
        var i = n(5656);
        var r = n(7466);
        var o = n(1400);
        var a = function (e) {
          return function (t, n, a) {
            var s;
            var l = i(t);
            var c = r(l.length);
            var u = o(a, c);
            if (e && n != n) {
              for (; c > u;) {
                if ((s = l[u++]) != s) {
                  return true;
                }
              }
            } else {
              for (; c > u; u++) {
                if ((e || u in l) && l[u] === n) {
                  return e || u || 0;
                }
              }
            }
            return !e && -1;
          };
        };
        e.exports = {
          includes: a(true),
          indexOf: a(false)
        };
      },
      2092: function (e, t, n) {
        var i = n(9974);
        var r = n(8361);
        var o = n(7908);
        var a = n(7466);
        var s = n(5417);
        var l = [].push;
        var c = function (e) {
          var t = e == 1;
          var n = e == 2;
          var c = e == 3;
          var u = e == 4;
          var d = e == 6;
          var h = e == 7;
          var f = e == 5 || d;
          return function (p, g, m, v) {
            for (var y, b, w = o(p), x = r(w), _ = i(g, m, 3), C = a(x.length), S = 0, k = v || s, T = t ? k(p, C) : n || h ? k(p, 0) : undefined; C > S; S++) {
              if ((f || S in x) && (b = _(y = x[S], S, w), e)) {
                if (t) {
                  T[S] = b;
                } else if (b) {
                  switch (e) {
                    case 3:
                      return true;
                    case 5:
                      return y;
                    case 6:
                      return S;
                    case 2:
                      l.call(T, y);
                  }
                } else {
                  switch (e) {
                    case 4:
                      return false;
                    case 7:
                      l.call(T, y);
                  }
                }
              }
            }
            if (d) {
              return -1;
            } else if (c || u) {
              return u;
            } else {
              return T;
            }
          };
        };
        e.exports = {
          forEach: c(0),
          map: c(1),
          filter: c(2),
          some: c(3),
          every: c(4),
          find: c(5),
          findIndex: c(6),
          filterOut: c(7)
        };
      },
      6583: function (e, t, n) {
        "use strict";

        var i = n(5656);
        var r = n(9958);
        var o = n(7466);
        var a = n(9341);
        var s = Math.min;
        var l = [].lastIndexOf;
        var c = !!l && 1 / [1].lastIndexOf(1, -0) < 0;
        var u = a("lastIndexOf");
        var d = c || !u;
        e.exports = d ? function (e) {
          if (c) {
            return l.apply(this, arguments) || 0;
          }
          var t = i(this);
          var n = o(t.length);
          var a = n - 1;
          if (arguments.length > 1) {
            a = s(a, r(arguments[1]));
          }
          if (a < 0) {
            a = n + a;
          }
          for (; a >= 0; a--) {
            if (a in t && t[a] === e) {
              return a || 0;
            }
          }
          return -1;
        } : l;
      },
      1194: function (e, t, n) {
        var i = n(7293);
        var r = n(5112);
        var o = n(7392);
        var a = r("species");
        e.exports = function (e) {
          return o >= 51 || !i(function () {
            var t = [];
            (t.constructor = {})[a] = function () {
              return {
                foo: 1
              };
            };
            return t[e](Boolean).foo !== 1;
          });
        };
      },
      9341: function (e, t, n) {
        "use strict";

        var i = n(7293);
        e.exports = function (e, t) {
          var n = [][e];
          return !!n && i(function () {
            n.call(null, t || function () {
              throw 1;
            }, 1);
          });
        };
      },
      3671: function (e, t, n) {
        var i = n(3099);
        var r = n(7908);
        var o = n(8361);
        var a = n(7466);
        var s = function (e) {
          return function (t, n, s, l) {
            i(n);
            var c = r(t);
            var u = o(c);
            var d = a(c.length);
            var h = e ? d - 1 : 0;
            var f = e ? -1 : 1;
            if (s < 2) {
              for (;;) {
                if (h in u) {
                  l = u[h];
                  h += f;
                  break;
                }
                h += f;
                if (e ? h < 0 : d <= h) {
                  throw TypeError("Reduce of empty array with no initial value");
                }
              }
            }
            for (; e ? h >= 0 : d > h; h += f) {
              if (h in u) {
                l = n(l, u[h], h, c);
              }
            }
            return l;
          };
        };
        e.exports = {
          left: s(false),
          right: s(true)
        };
      },
      5417: function (e, t, n) {
        var i = n(111);
        var r = n(3157);
        var o = n(5112)("species");
        e.exports = function (e, t) {
          var n;
          if (r(e)) {
            if (typeof (n = e.constructor) != "function" || n !== Array && !r(n.prototype)) {
              if (i(n) && (n = n[o]) === null) {
                n = undefined;
              }
            } else {
              n = undefined;
            }
          }
          return new (n === undefined ? Array : n)(t === 0 ? 0 : t);
        };
      },
      3411: function (e, t, n) {
        var i = n(9670);
        var r = n(9212);
        e.exports = function (e, t, n, o) {
          try {
            if (o) {
              return t(i(n)[0], n[1]);
            } else {
              return t(n);
            }
          } catch (t) {
            r(e);
            throw t;
          }
        };
      },
      7072: function (e, t, n) {
        var i = n(5112)("iterator");
        var r = false;
        try {
          var o = 0;
          var a = {
            next: function () {
              return {
                done: !!o++
              };
            },
            return: function () {
              r = true;
            }
          };
          a[i] = function () {
            return this;
          };
          Array.from(a, function () {
            throw 2;
          });
        } catch (e) {}
        e.exports = function (e, t) {
          if (!t && !r) {
            return false;
          }
          var n = false;
          try {
            var o = {
              [i]: function () {
                return {
                  next: function () {
                    return {
                      done: n = true
                    };
                  }
                };
              }
            };
            e(o);
          } catch (e) {}
          return n;
        };
      },
      4326: function (e) {
        var t = {}.toString;
        e.exports = function (e) {
          return t.call(e).slice(8, -1);
        };
      },
      648: function (e, t, n) {
        var i = n(1694);
        var r = n(4326);
        var o = n(5112)("toStringTag");
        var a = r(function () {
          return arguments;
        }()) == "Arguments";
        e.exports = i ? r : function (e) {
          var t;
          var n;
          var i;
          if (e === undefined) {
            return "Undefined";
          } else if (e === null) {
            return "Null";
          } else if (typeof (n = function (e, t) {
            try {
              return e[t];
            } catch (e) {}
          }(t = Object(e), o)) == "string") {
            return n;
          } else if (a) {
            return r(t);
          } else if ((i = r(t)) == "Object" && typeof t.callee == "function") {
            return "Arguments";
          } else {
            return i;
          }
        };
      },
      9920: function (e, t, n) {
        var i = n(6656);
        var r = n(3887);
        var o = n(1236);
        var a = n(3070);
        e.exports = function (e, t) {
          for (var n = r(t), s = a.f, l = o.f, c = 0; c < n.length; c++) {
            var u = n[c];
            if (!i(e, u)) {
              s(e, u, l(t, u));
            }
          }
        };
      },
      8544: function (e, t, n) {
        var i = n(7293);
        e.exports = !i(function () {
          function e() {}
          e.prototype.constructor = null;
          return Object.getPrototypeOf(new e()) !== e.prototype;
        });
      },
      4994: function (e, t, n) {
        "use strict";

        var i = n(3383).IteratorPrototype;
        var r = n(30);
        var o = n(9114);
        var a = n(8003);
        var s = n(7497);
        var l = function () {
          return this;
        };
        e.exports = function (e, t, n) {
          var c = t + " Iterator";
          e.prototype = r(i, {
            next: o(1, n)
          });
          a(e, c, false, true);
          s[c] = l;
          return e;
        };
      },
      8880: function (e, t, n) {
        var i = n(9781);
        var r = n(3070);
        var o = n(9114);
        e.exports = i ? function (e, t, n) {
          return r.f(e, t, o(1, n));
        } : function (e, t, n) {
          e[t] = n;
          return e;
        };
      },
      9114: function (e) {
        e.exports = function (e, t) {
          return {
            enumerable: !(e & 1),
            configurable: !(e & 2),
            writable: !(e & 4),
            value: t
          };
        };
      },
      6135: function (e, t, n) {
        "use strict";

        var i = n(7593);
        var r = n(3070);
        var o = n(9114);
        e.exports = function (e, t, n) {
          var a = i(t);
          if (a in e) {
            r.f(e, a, o(0, n));
          } else {
            e[a] = n;
          }
        };
      },
      654: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(4994);
        var o = n(9518);
        var a = n(7674);
        var s = n(8003);
        var l = n(8880);
        var c = n(1320);
        var u = n(5112);
        var d = n(1913);
        var h = n(7497);
        var f = n(3383);
        var p = f.IteratorPrototype;
        var g = f.BUGGY_SAFARI_ITERATORS;
        var m = u("iterator");
        var v = "keys";
        var y = "values";
        var b = "entries";
        var w = function () {
          return this;
        };
        e.exports = function (e, t, n, u, f, x, _) {
          r(n, t, u);
          var C;
          var S;
          var k;
          var T = function (e) {
            if (e === f && M) {
              return M;
            }
            if (!g && e in E) {
              return E[e];
            }
            switch (e) {
              case v:
              case y:
              case b:
                return function () {
                  return new n(this, e);
                };
            }
            return function () {
              return new n(this);
            };
          };
          var A = t + " Iterator";
          var D = false;
          var E = e.prototype;
          var O = E[m] || E["@@iterator"] || f && E[f];
          var M = !g && O || T(f);
          var I = t == "Array" && E.entries || O;
          if (I) {
            C = o(I.call(new e()));
            if (p !== Object.prototype && C.next) {
              if (!(d || o(C) === p)) {
                if (a) {
                  a(C, p);
                } else if (typeof C[m] != "function") {
                  l(C, m, w);
                }
              }
              s(C, A, true, true);
              if (d) {
                h[A] = w;
              }
            }
          }
          if (f == y && O && O.name !== y) {
            D = true;
            M = function () {
              return O.call(this);
            };
          }
          if (!(d && !_ || E[m] === M)) {
            l(E, m, M);
          }
          h[t] = M;
          if (f) {
            S = {
              values: T(y),
              keys: x ? M : T(v),
              entries: T(b)
            };
            if (_) {
              for (k in S) {
                if (g || D || !(k in E)) {
                  c(E, k, S[k]);
                }
              }
            } else {
              i({
                target: t,
                proto: true,
                forced: g || D
              }, S);
            }
          }
          return S;
        };
      },
      9781: function (e, t, n) {
        var i = n(7293);
        e.exports = !i(function () {
          return Object.defineProperty({}, 1, {
            get: function () {
              return 7;
            }
          })[1] != 7;
        });
      },
      317: function (e, t, n) {
        var i = n(7854);
        var r = n(111);
        var o = i.document;
        var a = r(o) && r(o.createElement);
        e.exports = function (e) {
          if (a) {
            return o.createElement(e);
          } else {
            return {};
          }
        };
      },
      8324: function (e) {
        e.exports = {
          CSSRuleList: 0,
          CSSStyleDeclaration: 0,
          CSSValueList: 0,
          ClientRectList: 0,
          DOMRectList: 0,
          DOMStringList: 0,
          DOMTokenList: 1,
          DataTransferItemList: 0,
          FileList: 0,
          HTMLAllCollection: 0,
          HTMLCollection: 0,
          HTMLFormElement: 0,
          HTMLSelectElement: 0,
          MediaList: 0,
          MimeTypeArray: 0,
          NamedNodeMap: 0,
          NodeList: 1,
          PaintRequestList: 0,
          Plugin: 0,
          PluginArray: 0,
          SVGLengthList: 0,
          SVGNumberList: 0,
          SVGPathSegList: 0,
          SVGPointList: 0,
          SVGStringList: 0,
          SVGTransformList: 0,
          SourceBufferList: 0,
          StyleSheetList: 0,
          TextTrackCueList: 0,
          TextTrackList: 0,
          TouchList: 0
        };
      },
      8113: function (e, t, n) {
        var i = n(5005);
        e.exports = i("navigator", "userAgent") || "";
      },
      7392: function (e, t, n) {
        var i;
        var r;
        var o = n(7854);
        var a = n(8113);
        var s = o.process;
        var l = s && s.versions;
        var c = l && l.v8;
        if (c) {
          r = (i = c.split("."))[0] + i[1];
        } else if (a && (!(i = a.match(/Edge\/(\d+)/)) || i[1] >= 74) && (i = a.match(/Chrome\/(\d+)/))) {
          r = i[1];
        }
        e.exports = r && +r;
      },
      748: function (e) {
        e.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
      },
      2109: function (e, t, n) {
        var i = n(7854);
        var r = n(1236).f;
        var o = n(8880);
        var a = n(1320);
        var s = n(3505);
        var l = n(9920);
        var c = n(4705);
        e.exports = function (e, t) {
          var n;
          var u;
          var d;
          var h;
          var f;
          var p = e.target;
          var g = e.global;
          var m = e.stat;
          if (n = g ? i : m ? i[p] || s(p, {}) : (i[p] || {}).prototype) {
            for (u in t) {
              h = t[u];
              d = e.noTargetGet ? (f = r(n, u)) && f.value : n[u];
              if (!c(g ? u : p + (m ? "." : "#") + u, e.forced) && d !== undefined) {
                if (typeof h == typeof d) {
                  continue;
                }
                l(h, d);
              }
              if (e.sham || d && d.sham) {
                o(h, "sham", true);
              }
              a(n, u, h, e);
            }
          }
        };
      },
      7293: function (e) {
        e.exports = function (e) {
          try {
            return !!e();
          } catch (e) {
            return true;
          }
        };
      },
      7007: function (e, t, n) {
        "use strict";

        n(4916);
        var i = n(1320);
        var r = n(7293);
        var o = n(5112);
        var a = n(2261);
        var s = n(8880);
        var l = o("species");
        var c = !r(function () {
          var e = /./;
          e.exec = function () {
            var e = [];
            e.groups = {
              a: "7"
            };
            return e;
          };
          return "".replace(e, "$<a>") !== "7";
        });
        var u = "a".replace(/./, "$0") === "$0";
        var d = o("replace");
        var h = !!/./[d] && /./[d]("a", "$0") === "";
        var f = !r(function () {
          var e = /(?:)/;
          var t = e.exec;
          e.exec = function () {
            return t.apply(this, arguments);
          };
          var n = "ab".split(e);
          return n.length !== 2 || n[0] !== "a" || n[1] !== "b";
        });
        e.exports = function (e, t, n, d) {
          var p = o(e);
          var g = !r(function () {
            var t = {
              [p]: function () {
                return 7;
              }
            };
            return ""[e](t) != 7;
          });
          var m = g && !r(function () {
            var t = false;
            var n = /a/;
            if (e === "split") {
              (n = {}).constructor = {};
              n.constructor[l] = function () {
                return n;
              };
              n.flags = "";
              n[p] = /./[p];
            }
            n.exec = function () {
              t = true;
              return null;
            };
            n[p]("");
            return !t;
          });
          if (!g || !m || e === "replace" && (!c || !u || h) || e === "split" && !f) {
            var v = /./[p];
            var y = n(p, ""[e], function (e, t, n, i, r) {
              if (t.exec === a) {
                if (g && !r) {
                  return {
                    done: true,
                    value: v.call(t, n, i)
                  };
                } else {
                  return {
                    done: true,
                    value: e.call(n, t, i)
                  };
                }
              } else {
                return {
                  done: false
                };
              }
            }, {
              REPLACE_KEEPS_$0: u,
              REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: h
            });
            var b = y[0];
            var w = y[1];
            i(String.prototype, e, b);
            i(RegExp.prototype, p, t == 2 ? function (e, t) {
              return w.call(e, this, t);
            } : function (e) {
              return w.call(e, this);
            });
          }
          if (d) {
            s(RegExp.prototype[p], "sham", true);
          }
        };
      },
      9974: function (e, t, n) {
        var i = n(3099);
        e.exports = function (e, t, n) {
          i(e);
          if (t === undefined) {
            return e;
          }
          switch (n) {
            case 0:
              return function () {
                return e.call(t);
              };
            case 1:
              return function (n) {
                return e.call(t, n);
              };
            case 2:
              return function (n, i) {
                return e.call(t, n, i);
              };
            case 3:
              return function (n, i, r) {
                return e.call(t, n, i, r);
              };
          }
          return function () {
            return e.apply(t, arguments);
          };
        };
      },
      5005: function (e, t, n) {
        var i = n(857);
        var r = n(7854);
        var o = function (e) {
          if (typeof e == "function") {
            return e;
          } else {
            return undefined;
          }
        };
        e.exports = function (e, t) {
          if (arguments.length < 2) {
            return o(i[e]) || o(r[e]);
          } else {
            return i[e] && i[e][t] || r[e] && r[e][t];
          }
        };
      },
      1246: function (e, t, n) {
        var i = n(648);
        var r = n(7497);
        var o = n(5112)("iterator");
        e.exports = function (e) {
          if (e != null) {
            return e[o] || e["@@iterator"] || r[i(e)];
          }
        };
      },
      8554: function (e, t, n) {
        var i = n(9670);
        var r = n(1246);
        e.exports = function (e) {
          var t = r(e);
          if (typeof t != "function") {
            throw TypeError(String(e) + " is not iterable");
          }
          return i(t.call(e));
        };
      },
      647: function (e, t, n) {
        var i = n(7908);
        var r = Math.floor;
        var o = "".replace;
        var a = /\$([$&'`]|\d\d?|<[^>]*>)/g;
        var s = /\$([$&'`]|\d\d?)/g;
        e.exports = function (e, t, n, l, c, u) {
          var d = n + e.length;
          var h = l.length;
          var f = s;
          if (c !== undefined) {
            c = i(c);
            f = a;
          }
          return o.call(u, f, function (i, o) {
            var a;
            switch (o.charAt(0)) {
              case "$":
                return "$";
              case "&":
                return e;
              case "`":
                return t.slice(0, n);
              case "'":
                return t.slice(d);
              case "<":
                a = c[o.slice(1, -1)];
                break;
              default:
                var s = +o;
                if (s === 0) {
                  return i;
                }
                if (s > h) {
                  var u = r(s / 10);
                  if (u === 0) {
                    return i;
                  } else if (u <= h) {
                    if (l[u - 1] === undefined) {
                      return o.charAt(1);
                    } else {
                      return l[u - 1] + o.charAt(1);
                    }
                  } else {
                    return i;
                  }
                }
                a = l[s - 1];
            }
            if (a === undefined) {
              return "";
            } else {
              return a;
            }
          });
        };
      },
      7854: function (e, t, n) {
        var i = function (e) {
          return e && e.Math == Math && e;
        };
        e.exports = i(typeof globalThis == "object" && globalThis) || i(typeof window == "object" && window) || i(typeof self == "object" && self) || i(typeof n.g == "object" && n.g) || function () {
          return this;
        }() || Function("return this")();
      },
      6656: function (e) {
        var t = {}.hasOwnProperty;
        e.exports = function (e, n) {
          return t.call(e, n);
        };
      },
      3501: function (e) {
        e.exports = {};
      },
      490: function (e, t, n) {
        var i = n(5005);
        e.exports = i("document", "documentElement");
      },
      4664: function (e, t, n) {
        var i = n(9781);
        var r = n(7293);
        var o = n(317);
        e.exports = !i && !r(function () {
          return Object.defineProperty(o("div"), "a", {
            get: function () {
              return 7;
            }
          }).a != 7;
        });
      },
      1179: function (e) {
        var t = Math.abs;
        var n = Math.pow;
        var i = Math.floor;
        var r = Math.log;
        var o = Math.LN2;
        e.exports = {
          pack: function (e, a, s) {
            var l;
            var c;
            var u;
            var d = new Array(s);
            var h = s * 8 - a - 1;
            var f = (1 << h) - 1;
            var p = f >> 1;
            var g = a === 23 ? n(2, -24) - n(2, -77) : 0;
            var m = e < 0 || e === 0 && 1 / e < 0 ? 1 : 0;
            var v = 0;
            for ((e = t(e)) != e || e === 1 / 0 ? (c = e != e ? 1 : 0, l = f) : (l = i(r(e) / o), e * (u = n(2, -l)) < 1 && (l--, u *= 2), (e += l + p >= 1 ? g / u : g * n(2, 1 - p)) * u >= 2 && (l++, u /= 2), l + p >= f ? (c = 0, l = f) : l + p >= 1 ? (c = (e * u - 1) * n(2, a), l += p) : (c = e * n(2, p - 1) * n(2, a), l = 0)); a >= 8; d[v++] = c & 255, c /= 256, a -= 8);
            l = l << a | c;
            h += a;
            for (; h > 0; d[v++] = l & 255, l /= 256, h -= 8);
            d[--v] |= m * 128;
            return d;
          },
          unpack: function (e, t) {
            var i;
            var r = e.length;
            var o = r * 8 - t - 1;
            var a = (1 << o) - 1;
            var s = a >> 1;
            var l = o - 7;
            var c = r - 1;
            var u = e[c--];
            var d = u & 127;
            for (u >>= 7; l > 0; d = d * 256 + e[c], c--, l -= 8);
            i = d & (1 << -l) - 1;
            d >>= -l;
            l += t;
            for (; l > 0; i = i * 256 + e[c], c--, l -= 8);
            if (d === 0) {
              d = 1 - s;
            } else {
              if (d === a) {
                if (i) {
                  return NaN;
                } else if (u) {
                  return -1 / 0;
                } else {
                  return 1 / 0;
                }
              }
              i += n(2, t);
              d -= s;
            }
            return (u ? -1 : 1) * i * n(2, d - t);
          }
        };
      },
      8361: function (e, t, n) {
        var i = n(7293);
        var r = n(4326);
        var o = "".split;
        e.exports = i(function () {
          return !Object("z").propertyIsEnumerable(0);
        }) ? function (e) {
          if (r(e) == "String") {
            return o.call(e, "");
          } else {
            return Object(e);
          }
        } : Object;
      },
      9587: function (e, t, n) {
        var i = n(111);
        var r = n(7674);
        e.exports = function (e, t, n) {
          var o;
          var a;
          if (r && typeof (o = t.constructor) == "function" && o !== n && i(a = o.prototype) && a !== n.prototype) {
            r(e, a);
          }
          return e;
        };
      },
      2788: function (e, t, n) {
        var i = n(5465);
        var r = Function.toString;
        if (typeof i.inspectSource != "function") {
          i.inspectSource = function (e) {
            return r.call(e);
          };
        }
        e.exports = i.inspectSource;
      },
      9909: function (e, t, n) {
        var i;
        var r;
        var o;
        var a = n(8536);
        var s = n(7854);
        var l = n(111);
        var c = n(8880);
        var u = n(6656);
        var d = n(5465);
        var h = n(6200);
        var f = n(3501);
        var p = s.WeakMap;
        if (a) {
          var g = d.state || (d.state = new p());
          var m = g.get;
          var v = g.has;
          var y = g.set;
          i = function (e, t) {
            t.facade = e;
            y.call(g, e, t);
            return t;
          };
          r = function (e) {
            return m.call(g, e) || {};
          };
          o = function (e) {
            return v.call(g, e);
          };
        } else {
          var b = h("state");
          f[b] = true;
          i = function (e, t) {
            t.facade = e;
            c(e, b, t);
            return t;
          };
          r = function (e) {
            if (u(e, b)) {
              return e[b];
            } else {
              return {};
            }
          };
          o = function (e) {
            return u(e, b);
          };
        }
        e.exports = {
          set: i,
          get: r,
          has: o,
          enforce: function (e) {
            if (o(e)) {
              return r(e);
            } else {
              return i(e, {});
            }
          },
          getterFor: function (e) {
            return function (t) {
              var n;
              if (!l(t) || (n = r(t)).type !== e) {
                throw TypeError("Incompatible receiver, " + e + " required");
              }
              return n;
            };
          }
        };
      },
      7659: function (e, t, n) {
        var i = n(5112);
        var r = n(7497);
        var o = i("iterator");
        var a = Array.prototype;
        e.exports = function (e) {
          return e !== undefined && (r.Array === e || a[o] === e);
        };
      },
      3157: function (e, t, n) {
        var i = n(4326);
        e.exports = Array.isArray || function (e) {
          return i(e) == "Array";
        };
      },
      4705: function (e, t, n) {
        var i = n(7293);
        var r = /#|\.prototype\./;
        var o = function (e, t) {
          var n = s[a(e)];
          return n == c || n != l && (typeof t == "function" ? i(t) : !!t);
        };
        var a = o.normalize = function (e) {
          return String(e).replace(r, ".").toLowerCase();
        };
        var s = o.data = {};
        var l = o.NATIVE = "N";
        var c = o.POLYFILL = "P";
        e.exports = o;
      },
      111: function (e) {
        e.exports = function (e) {
          if (typeof e == "object") {
            return e !== null;
          } else {
            return typeof e == "function";
          }
        };
      },
      1913: function (e) {
        e.exports = false;
      },
      7850: function (e, t, n) {
        var i = n(111);
        var r = n(4326);
        var o = n(5112)("match");
        e.exports = function (e) {
          var t;
          return i(e) && ((t = e[o]) !== undefined ? !!t : r(e) == "RegExp");
        };
      },
      9212: function (e, t, n) {
        var i = n(9670);
        e.exports = function (e) {
          var t = e.return;
          if (t !== undefined) {
            return i(t.call(e)).value;
          }
        };
      },
      3383: function (e, t, n) {
        "use strict";

        var i;
        var r;
        var o;
        var a = n(7293);
        var s = n(9518);
        var l = n(8880);
        var c = n(6656);
        var u = n(5112);
        var d = n(1913);
        var h = u("iterator");
        var f = false;
        if ([].keys) {
          if ("next" in (o = [].keys())) {
            if ((r = s(s(o))) !== Object.prototype) {
              i = r;
            }
          } else {
            f = true;
          }
        }
        var p = i == null || a(function () {
          var e = {};
          return i[h].call(e) !== e;
        });
        if (p) {
          i = {};
        }
        if (!(d && !p || c(i, h))) {
          l(i, h, function () {
            return this;
          });
        }
        e.exports = {
          IteratorPrototype: i,
          BUGGY_SAFARI_ITERATORS: f
        };
      },
      7497: function (e) {
        e.exports = {};
      },
      133: function (e, t, n) {
        var i = n(7293);
        e.exports = !!Object.getOwnPropertySymbols && !i(function () {
          return !String(Symbol());
        });
      },
      590: function (e, t, n) {
        var i = n(7293);
        var r = n(5112);
        var o = n(1913);
        var a = r("iterator");
        e.exports = !i(function () {
          var e = new URL("b?a=1&b=2&c=3", "http://a");
          var t = e.searchParams;
          var n = "";
          e.pathname = "c%20d";
          t.forEach(function (e, i) {
            t.delete("b");
            n += i + e;
          });
          return o && !e.toJSON || !t.sort || e.href !== "http://a/c%20d?a=1&c=3" || t.get("c") !== "3" || String(new URLSearchParams("?a=1")) !== "a=1" || !t[a] || new URL("https://a@b").username !== "a" || new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" || new URL("http://ÑÐµÑÑ").host !== "xn--e1aybc" || new URL("http://a#Ð±").hash !== "#%D0%B1" || n !== "a1c3" || new URL("http://x", undefined).host !== "x";
        });
      },
      8536: function (e, t, n) {
        var i = n(7854);
        var r = n(2788);
        var o = i.WeakMap;
        e.exports = typeof o == "function" && /native code/.test(r(o));
      },
      1574: function (e, t, n) {
        "use strict";

        var i = n(9781);
        var r = n(7293);
        var o = n(1956);
        var a = n(5181);
        var s = n(5296);
        var l = n(7908);
        var c = n(8361);
        var u = Object.assign;
        var d = Object.defineProperty;
        e.exports = !u || r(function () {
          if (i && u({
            b: 1
          }, u(d({}, "a", {
            enumerable: true,
            get: function () {
              d(this, "b", {
                value: 3,
                enumerable: false
              });
            }
          }), {
            b: 2
          })).b !== 1) {
            return true;
          }
          var e = {};
          var t = {};
          var n = Symbol();
          var r = "abcdefghijklmnopqrst";
          e[n] = 7;
          r.split("").forEach(function (e) {
            t[e] = e;
          });
          return u({}, e)[n] != 7 || o(u({}, t)).join("") != r;
        }) ? function (e, t) {
          for (var n = l(e), r = arguments.length, u = 1, d = a.f, h = s.f; r > u;) {
            for (var f, p = c(arguments[u++]), g = d ? o(p).concat(d(p)) : o(p), m = g.length, v = 0; m > v;) {
              f = g[v++];
              if (!(i && !h.call(p, f))) {
                n[f] = p[f];
              }
            }
          }
          return n;
        } : u;
      },
      30: function (e, t, n) {
        var i;
        var r = n(9670);
        var o = n(6048);
        var a = n(748);
        var s = n(3501);
        var l = n(490);
        var c = n(317);
        var u = n(6200)("IE_PROTO");
        var d = function () {};
        var h = function (e) {
          return "<script>" + e + "</script>";
        };
        var f = function () {
          try {
            i = document.domain && new ActiveXObject("htmlfile");
          } catch (e) {}
          var e;
          var t;
          f = i ? function (e) {
            e.write(h(""));
            e.close();
            var t = e.parentWindow.Object;
            e = null;
            return t;
          }(i) : ((t = c("iframe")).style.display = "none", l.appendChild(t), t.src = String("javascript:"), (e = t.contentWindow.document).open(), e.write(h("document.F=Object")), e.close(), e.F);
          for (var n = a.length; n--;) {
            delete f.prototype[a[n]];
          }
          return f();
        };
        s[u] = true;
        e.exports = Object.create || function (e, t) {
          var n;
          if (e !== null) {
            d.prototype = r(e);
            n = new d();
            d.prototype = null;
            n[u] = e;
          } else {
            n = f();
          }
          if (t === undefined) {
            return n;
          } else {
            return o(n, t);
          }
        };
      },
      6048: function (e, t, n) {
        var i = n(9781);
        var r = n(3070);
        var o = n(9670);
        var a = n(1956);
        e.exports = i ? Object.defineProperties : function (e, t) {
          o(e);
          for (var n, i = a(t), s = i.length, l = 0; s > l;) {
            r.f(e, n = i[l++], t[n]);
          }
          return e;
        };
      },
      3070: function (e, t, n) {
        var i = n(9781);
        var r = n(4664);
        var o = n(9670);
        var a = n(7593);
        var s = Object.defineProperty;
        t.f = i ? s : function (e, t, n) {
          o(e);
          t = a(t, true);
          o(n);
          if (r) {
            try {
              return s(e, t, n);
            } catch (e) {}
          }
          if ("get" in n || "set" in n) {
            throw TypeError("Accessors not supported");
          }
          if ("value" in n) {
            e[t] = n.value;
          }
          return e;
        };
      },
      1236: function (e, t, n) {
        var i = n(9781);
        var r = n(5296);
        var o = n(9114);
        var a = n(5656);
        var s = n(7593);
        var l = n(6656);
        var c = n(4664);
        var u = Object.getOwnPropertyDescriptor;
        t.f = i ? u : function (e, t) {
          e = a(e);
          t = s(t, true);
          if (c) {
            try {
              return u(e, t);
            } catch (e) {}
          }
          if (l(e, t)) {
            return o(!r.f.call(e, t), e[t]);
          }
        };
      },
      8006: function (e, t, n) {
        var i = n(6324);
        var r = n(748).concat("length", "prototype");
        t.f = Object.getOwnPropertyNames || function (e) {
          return i(e, r);
        };
      },
      5181: function (e, t) {
        t.f = Object.getOwnPropertySymbols;
      },
      9518: function (e, t, n) {
        var i = n(6656);
        var r = n(7908);
        var o = n(6200);
        var a = n(8544);
        var s = o("IE_PROTO");
        var l = Object.prototype;
        e.exports = a ? Object.getPrototypeOf : function (e) {
          e = r(e);
          if (i(e, s)) {
            return e[s];
          } else if (typeof e.constructor == "function" && e instanceof e.constructor) {
            return e.constructor.prototype;
          } else if (e instanceof Object) {
            return l;
          } else {
            return null;
          }
        };
      },
      6324: function (e, t, n) {
        var i = n(6656);
        var r = n(5656);
        var o = n(1318).indexOf;
        var a = n(3501);
        e.exports = function (e, t) {
          var n;
          var s = r(e);
          var l = 0;
          var c = [];
          for (n in s) {
            if (!i(a, n) && i(s, n)) {
              c.push(n);
            }
          }
          for (; t.length > l;) {
            if (i(s, n = t[l++])) {
              if (!~o(c, n)) {
                c.push(n);
              }
            }
          }
          return c;
        };
      },
      1956: function (e, t, n) {
        var i = n(6324);
        var r = n(748);
        e.exports = Object.keys || function (e) {
          return i(e, r);
        };
      },
      5296: function (e, t) {
        "use strict";

        var n = {}.propertyIsEnumerable;
        var i = Object.getOwnPropertyDescriptor;
        var r = i && !n.call({
          1: 2
        }, 1);
        t.f = r ? function (e) {
          var t = i(this, e);
          return !!t && t.enumerable;
        } : n;
      },
      7674: function (e, t, n) {
        var i = n(9670);
        var r = n(6077);
        e.exports = Object.setPrototypeOf || ("__proto__" in {} ? function () {
          var e;
          var t = false;
          var n = {};
          try {
            (e = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(n, []);
            t = n instanceof Array;
          } catch (e) {}
          return function (n, o) {
            i(n);
            r(o);
            if (t) {
              e.call(n, o);
            } else {
              n.__proto__ = o;
            }
            return n;
          };
        }() : undefined);
      },
      288: function (e, t, n) {
        "use strict";

        var i = n(1694);
        var r = n(648);
        e.exports = i ? {}.toString : function () {
          return "[object " + r(this) + "]";
        };
      },
      3887: function (e, t, n) {
        var i = n(5005);
        var r = n(8006);
        var o = n(5181);
        var a = n(9670);
        e.exports = i("Reflect", "ownKeys") || function (e) {
          var t = r.f(a(e));
          var n = o.f;
          if (n) {
            return t.concat(n(e));
          } else {
            return t;
          }
        };
      },
      857: function (e, t, n) {
        var i = n(7854);
        e.exports = i;
      },
      2248: function (e, t, n) {
        var i = n(1320);
        e.exports = function (e, t, n) {
          for (var r in t) {
            i(e, r, t[r], n);
          }
          return e;
        };
      },
      1320: function (e, t, n) {
        var i = n(7854);
        var r = n(8880);
        var o = n(6656);
        var a = n(3505);
        var s = n(2788);
        var l = n(9909);
        var c = l.get;
        var u = l.enforce;
        var d = String(String).split("String");
        (e.exports = function (e, t, n, s) {
          var l;
          var c = !!s && !!s.unsafe;
          var h = !!s && !!s.enumerable;
          var f = !!s && !!s.noTargetGet;
          if (typeof n == "function") {
            if (!(typeof t != "string" || o(n, "name"))) {
              r(n, "name", t);
            }
            if (!(l = u(n)).source) {
              l.source = d.join(typeof t == "string" ? t : "");
            }
          }
          if (e !== i) {
            if (c) {
              if (!f && e[t]) {
                h = true;
              }
            } else {
              delete e[t];
            }
            if (h) {
              e[t] = n;
            } else {
              r(e, t, n);
            }
          } else if (h) {
            e[t] = n;
          } else {
            a(t, n);
          }
        })(Function.prototype, "toString", function () {
          return typeof this == "function" && c(this).source || s(this);
        });
      },
      7651: function (e, t, n) {
        var i = n(4326);
        var r = n(2261);
        e.exports = function (e, t) {
          var n = e.exec;
          if (typeof n == "function") {
            var o = n.call(e, t);
            if (typeof o != "object") {
              throw TypeError("RegExp exec method returned something other than an Object or null");
            }
            return o;
          }
          if (i(e) !== "RegExp") {
            throw TypeError("RegExp#exec called on incompatible receiver");
          }
          return r.call(e, t);
        };
      },
      2261: function (e, t, n) {
        "use strict";

        var i;
        var r;
        var o = n(7066);
        var a = n(2999);
        var s = RegExp.prototype.exec;
        var l = String.prototype.replace;
        var c = s;
        i = /a/;
        r = /b*/g;
        s.call(i, "a");
        s.call(r, "a");
        var u = i.lastIndex !== 0 || r.lastIndex !== 0;
        var d = a.UNSUPPORTED_Y || a.BROKEN_CARET;
        var h = /()??/.exec("")[1] !== undefined;
        if (u || h || d) {
          c = function (e) {
            var t;
            var n;
            var i;
            var r;
            var a = this;
            var c = d && a.sticky;
            var f = o.call(a);
            var p = a.source;
            var g = 0;
            var m = e;
            if (c) {
              if ((f = f.replace("y", "")).indexOf("g") === -1) {
                f += "g";
              }
              m = String(e).slice(a.lastIndex);
              if (a.lastIndex > 0 && (!a.multiline || a.multiline && e[a.lastIndex - 1] !== "\n")) {
                p = "(?: " + p + ")";
                m = " " + m;
                g++;
              }
              n = new RegExp("^(?:" + p + ")", f);
            }
            if (h) {
              n = new RegExp("^" + p + "$(?!\\s)", f);
            }
            if (u) {
              t = a.lastIndex;
            }
            i = s.call(c ? n : a, m);
            if (c) {
              if (i) {
                i.input = i.input.slice(g);
                i[0] = i[0].slice(g);
                i.index = a.lastIndex;
                a.lastIndex += i[0].length;
              } else {
                a.lastIndex = 0;
              }
            } else if (u && i) {
              a.lastIndex = a.global ? i.index + i[0].length : t;
            }
            if (h && i && i.length > 1) {
              l.call(i[0], n, function () {
                for (r = 1; r < arguments.length - 2; r++) {
                  if (arguments[r] === undefined) {
                    i[r] = undefined;
                  }
                }
              });
            }
            return i;
          };
        }
        e.exports = c;
      },
      7066: function (e, t, n) {
        "use strict";

        var i = n(9670);
        e.exports = function () {
          var e = i(this);
          var t = "";
          if (e.global) {
            t += "g";
          }
          if (e.ignoreCase) {
            t += "i";
          }
          if (e.multiline) {
            t += "m";
          }
          if (e.dotAll) {
            t += "s";
          }
          if (e.unicode) {
            t += "u";
          }
          if (e.sticky) {
            t += "y";
          }
          return t;
        };
      },
      2999: function (e, t, n) {
        "use strict";

        var i = n(7293);
        function r(e, t) {
          return RegExp(e, t);
        }
        t.UNSUPPORTED_Y = i(function () {
          var e = r("a", "y");
          e.lastIndex = 2;
          return e.exec("abcd") != null;
        });
        t.BROKEN_CARET = i(function () {
          var e = r("^r", "gy");
          e.lastIndex = 2;
          return e.exec("str") != null;
        });
      },
      4488: function (e) {
        e.exports = function (e) {
          if (e == null) {
            throw TypeError("Can't call method on " + e);
          }
          return e;
        };
      },
      3505: function (e, t, n) {
        var i = n(7854);
        var r = n(8880);
        e.exports = function (e, t) {
          try {
            r(i, e, t);
          } catch (n) {
            i[e] = t;
          }
          return t;
        };
      },
      6340: function (e, t, n) {
        "use strict";

        var i = n(5005);
        var r = n(3070);
        var o = n(5112);
        var a = n(9781);
        var s = o("species");
        e.exports = function (e) {
          var t = i(e);
          var n = r.f;
          if (a && t && !t[s]) {
            n(t, s, {
              configurable: true,
              get: function () {
                return this;
              }
            });
          }
        };
      },
      8003: function (e, t, n) {
        var i = n(3070).f;
        var r = n(6656);
        var o = n(5112)("toStringTag");
        e.exports = function (e, t, n) {
          if (e && !r(e = n ? e : e.prototype, o)) {
            i(e, o, {
              configurable: true,
              value: t
            });
          }
        };
      },
      6200: function (e, t, n) {
        var i = n(2309);
        var r = n(9711);
        var o = i("keys");
        e.exports = function (e) {
          return o[e] || (o[e] = r(e));
        };
      },
      5465: function (e, t, n) {
        var i = n(7854);
        var r = n(3505);
        var o = "__core-js_shared__";
        var a = i[o] || r(o, {});
        e.exports = a;
      },
      2309: function (e, t, n) {
        var i = n(1913);
        var r = n(5465);
        (e.exports = function (e, t) {
          return r[e] || (r[e] = t !== undefined ? t : {});
        })("versions", []).push({
          version: "3.9.0",
          mode: i ? "pure" : "global",
          copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"
        });
      },
      6707: function (e, t, n) {
        var i = n(9670);
        var r = n(3099);
        var o = n(5112)("species");
        e.exports = function (e, t) {
          var n;
          var a = i(e).constructor;
          if (a === undefined || (n = i(a)[o]) == null) {
            return t;
          } else {
            return r(n);
          }
        };
      },
      8710: function (e, t, n) {
        var i = n(9958);
        var r = n(4488);
        var o = function (e) {
          return function (t, n) {
            var o;
            var a;
            var s = String(r(t));
            var l = i(n);
            var c = s.length;
            if (l < 0 || l >= c) {
              if (e) {
                return "";
              } else {
                return undefined;
              }
            } else if ((o = s.charCodeAt(l)) < 55296 || o > 56319 || l + 1 === c || (a = s.charCodeAt(l + 1)) < 56320 || a > 57343) {
              if (e) {
                return s.charAt(l);
              } else {
                return o;
              }
            } else if (e) {
              return s.slice(l, l + 2);
            } else {
              return a - 56320 + (o - 55296 << 10) + 65536;
            }
          };
        };
        e.exports = {
          codeAt: o(false),
          charAt: o(true)
        };
      },
      3197: function (e) {
        "use strict";

        var t = 2147483647;
        var n = /[^\0-\u007E]/;
        var i = /[.\u3002\uFF0E\uFF61]/g;
        var r = "Overflow: input needs wider integers to process";
        var o = Math.floor;
        var a = String.fromCharCode;
        var s = function (e) {
          return e + 22 + (e < 26) * 75;
        };
        var l = function (e, t, n) {
          var i = 0;
          e = n ? o(e / 700) : e >> 1;
          e += o(e / t);
          for (; e > 455; i += 36) {
            e = o(e / 35);
          }
          return o(i + e * 36 / (e + 38));
        };
        var c = function (e) {
          var n;
          var i;
          var c = [];
          var u = (e = function (e) {
            for (var t = [], n = 0, i = e.length; n < i;) {
              var r = e.charCodeAt(n++);
              if (r >= 55296 && r <= 56319 && n < i) {
                var o = e.charCodeAt(n++);
                if ((o & 64512) == 56320) {
                  t.push(((r & 1023) << 10) + (o & 1023) + 65536);
                } else {
                  t.push(r);
                  n--;
                }
              } else {
                t.push(r);
              }
            }
            return t;
          }(e)).length;
          var d = 128;
          var h = 0;
          var f = 72;
          for (n = 0; n < e.length; n++) {
            if ((i = e[n]) < 128) {
              c.push(a(i));
            }
          }
          var p = c.length;
          var g = p;
          for (p && c.push("-"); g < u;) {
            var m = t;
            for (n = 0; n < e.length; n++) {
              if ((i = e[n]) >= d && i < m) {
                m = i;
              }
            }
            var v = g + 1;
            if (m - d > o((t - h) / v)) {
              throw RangeError(r);
            }
            h += (m - d) * v;
            d = m;
            n = 0;
            for (; n < e.length; n++) {
              if ((i = e[n]) < d && ++h > t) {
                throw RangeError(r);
              }
              if (i == d) {
                for (var y = h, b = 36;; b += 36) {
                  var w = b <= f ? 1 : b >= f + 26 ? 26 : b - f;
                  if (y < w) {
                    break;
                  }
                  var x = y - w;
                  var _ = 36 - w;
                  c.push(a(s(w + x % _)));
                  y = o(x / _);
                }
                c.push(a(s(y)));
                f = l(h, v, g == p);
                h = 0;
                ++g;
              }
            }
            ++h;
            ++d;
          }
          return c.join("");
        };
        e.exports = function (e) {
          var t;
          var r;
          var o = [];
          var a = e.toLowerCase().replace(i, ".").split(".");
          for (t = 0; t < a.length; t++) {
            r = a[t];
            o.push(n.test(r) ? "xn--" + c(r) : r);
          }
          return o.join(".");
        };
      },
      6091: function (e, t, n) {
        var i = n(7293);
        var r = n(1361);
        e.exports = function (e) {
          return i(function () {
            return !!r[e]() || "âÂá "[e]() != "âÂá " || r[e].name !== e;
          });
        };
      },
      3111: function (e, t, n) {
        var i = n(4488);
        var r = "[" + n(1361) + "]";
        var o = RegExp("^" + r + r + "*");
        var a = RegExp(r + r + "*$");
        var s = function (e) {
          return function (t) {
            var n = String(i(t));
            if (e & 1) {
              n = n.replace(o, "");
            }
            if (e & 2) {
              n = n.replace(a, "");
            }
            return n;
          };
        };
        e.exports = {
          start: s(1),
          end: s(2),
          trim: s(3)
        };
      },
      1400: function (e, t, n) {
        var i = n(9958);
        var r = Math.max;
        var o = Math.min;
        e.exports = function (e, t) {
          var n = i(e);
          if (n < 0) {
            return r(n + t, 0);
          } else {
            return o(n, t);
          }
        };
      },
      7067: function (e, t, n) {
        var i = n(9958);
        var r = n(7466);
        e.exports = function (e) {
          if (e === undefined) {
            return 0;
          }
          var t = i(e);
          var n = r(t);
          if (t !== n) {
            throw RangeError("Wrong length or index");
          }
          return n;
        };
      },
      5656: function (e, t, n) {
        var i = n(8361);
        var r = n(4488);
        e.exports = function (e) {
          return i(r(e));
        };
      },
      9958: function (e) {
        var t = Math.ceil;
        var n = Math.floor;
        e.exports = function (e) {
          if (isNaN(e = +e)) {
            return 0;
          } else {
            return (e > 0 ? n : t)(e);
          }
        };
      },
      7466: function (e, t, n) {
        var i = n(9958);
        var r = Math.min;
        e.exports = function (e) {
          if (e > 0) {
            return r(i(e), 9007199254740991);
          } else {
            return 0;
          }
        };
      },
      7908: function (e, t, n) {
        var i = n(4488);
        e.exports = function (e) {
          return Object(i(e));
        };
      },
      4590: function (e, t, n) {
        var i = n(3002);
        e.exports = function (e, t) {
          var n = i(e);
          if (n % t) {
            throw RangeError("Wrong offset");
          }
          return n;
        };
      },
      3002: function (e, t, n) {
        var i = n(9958);
        e.exports = function (e) {
          var t = i(e);
          if (t < 0) {
            throw RangeError("The argument can't be less than 0");
          }
          return t;
        };
      },
      7593: function (e, t, n) {
        var i = n(111);
        e.exports = function (e, t) {
          if (!i(e)) {
            return e;
          }
          var n;
          var r;
          if (t && typeof (n = e.toString) == "function" && !i(r = n.call(e))) {
            return r;
          }
          if (typeof (n = e.valueOf) == "function" && !i(r = n.call(e))) {
            return r;
          }
          if (!t && typeof (n = e.toString) == "function" && !i(r = n.call(e))) {
            return r;
          }
          throw TypeError("Can't convert object to primitive value");
        };
      },
      1694: function (e, t, n) {
        var i = {
          [n(5112)("toStringTag")]: "z"
        };
        e.exports = String(i) === "[object z]";
      },
      9843: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(7854);
        var o = n(9781);
        var a = n(3832);
        var s = n(260);
        var l = n(3331);
        var c = n(5787);
        var u = n(9114);
        var d = n(8880);
        var h = n(7466);
        var f = n(7067);
        var p = n(4590);
        var g = n(7593);
        var m = n(6656);
        var v = n(648);
        var y = n(111);
        var b = n(30);
        var w = n(7674);
        var x = n(8006).f;
        var _ = n(7321);
        var C = n(2092).forEach;
        var S = n(6340);
        var k = n(3070);
        var T = n(1236);
        var A = n(9909);
        var D = n(9587);
        var E = A.get;
        var O = A.set;
        var M = k.f;
        var I = T.f;
        var P = Math.round;
        var L = r.RangeError;
        var N = l.ArrayBuffer;
        var F = l.DataView;
        var R = s.NATIVE_ARRAY_BUFFER_VIEWS;
        var j = s.TYPED_ARRAY_TAG;
        var $ = s.TypedArray;
        var z = s.TypedArrayPrototype;
        var H = s.aTypedArrayConstructor;
        var B = s.isTypedArray;
        var q = "BYTES_PER_ELEMENT";
        var W = "Wrong length";
        var U = function (e, t) {
          for (var n = 0, i = t.length, r = new (H(e))(i); i > n;) {
            r[n] = t[n++];
          }
          return r;
        };
        var V = function (e, t) {
          M(e, t, {
            get: function () {
              return E(this)[t];
            }
          });
        };
        var Y = function (e) {
          var t;
          return e instanceof N || (t = v(e)) == "ArrayBuffer" || t == "SharedArrayBuffer";
        };
        var X = function (e, t) {
          return B(e) && typeof t != "symbol" && t in e && String(+t) == String(t);
        };
        var G = function (e, t) {
          if (X(e, t = g(t, true))) {
            return u(2, e[t]);
          } else {
            return I(e, t);
          }
        };
        var K = function (e, t, n) {
          if (!(X(e, t = g(t, true)) && y(n) && m(n, "value")) || m(n, "get") || m(n, "set") || n.configurable || m(n, "writable") && !n.writable || m(n, "enumerable") && !n.enumerable) {
            return M(e, t, n);
          } else {
            e[t] = n.value;
            return e;
          }
        };
        if (o) {
          if (!R) {
            T.f = G;
            k.f = K;
            V(z, "buffer");
            V(z, "byteOffset");
            V(z, "byteLength");
            V(z, "length");
          }
          i({
            target: "Object",
            stat: true,
            forced: !R
          }, {
            getOwnPropertyDescriptor: G,
            defineProperty: K
          });
          e.exports = function (e, t, n) {
            var o = e.match(/\d+$/)[0] / 8;
            var s = e + (n ? "Clamped" : "") + "Array";
            var l = "get" + e;
            var u = "set" + e;
            var g = r[s];
            var m = g;
            var v = m && m.prototype;
            var k = {};
            var T = function (e, t) {
              M(e, t, {
                get: function () {
                  return function (e, t) {
                    var n = E(e);
                    return n.view[l](t * o + n.byteOffset, true);
                  }(this, t);
                },
                set: function (e) {
                  return function (e, t, i) {
                    var r = E(e);
                    if (n) {
                      i = (i = P(i)) < 0 ? 0 : i > 255 ? 255 : i & 255;
                    }
                    r.view[u](t * o + r.byteOffset, i, true);
                  }(this, t, e);
                },
                enumerable: true
              });
            };
            if (R) {
              if (a) {
                m = t(function (e, t, n, i) {
                  c(e, m, s);
                  return D(y(t) ? Y(t) ? i !== undefined ? new g(t, p(n, o), i) : n !== undefined ? new g(t, p(n, o)) : new g(t) : B(t) ? U(m, t) : _.call(m, t) : new g(f(t)), e, m);
                });
                if (w) {
                  w(m, $);
                }
                C(x(g), function (e) {
                  if (!(e in m)) {
                    d(m, e, g[e]);
                  }
                });
                m.prototype = v;
              }
            } else {
              m = t(function (e, t, n, i) {
                c(e, m, s);
                var r;
                var a;
                var l;
                var u = 0;
                var d = 0;
                if (y(t)) {
                  if (!Y(t)) {
                    if (B(t)) {
                      return U(m, t);
                    } else {
                      return _.call(m, t);
                    }
                  }
                  r = t;
                  d = p(n, o);
                  var g = t.byteLength;
                  if (i === undefined) {
                    if (g % o) {
                      throw L(W);
                    }
                    if ((a = g - d) < 0) {
                      throw L(W);
                    }
                  } else if ((a = h(i) * o) + d > g) {
                    throw L(W);
                  }
                  l = a / o;
                } else {
                  l = f(t);
                  r = new N(a = l * o);
                }
                for (O(e, {
                  buffer: r,
                  byteOffset: d,
                  byteLength: a,
                  length: l,
                  view: new F(r)
                }); u < l;) {
                  T(e, u++);
                }
              });
              if (w) {
                w(m, $);
              }
              v = m.prototype = b(z);
            }
            if (v.constructor !== m) {
              d(v, "constructor", m);
            }
            if (j) {
              d(v, j, s);
            }
            k[s] = m;
            i({
              global: true,
              forced: m != g,
              sham: !R
            }, k);
            if (!(q in m)) {
              d(m, q, o);
            }
            if (!(q in v)) {
              d(v, q, o);
            }
            S(s);
          };
        } else {
          e.exports = function () {};
        }
      },
      3832: function (e, t, n) {
        var i = n(7854);
        var r = n(7293);
        var o = n(7072);
        var a = n(260).NATIVE_ARRAY_BUFFER_VIEWS;
        var s = i.ArrayBuffer;
        var l = i.Int8Array;
        e.exports = !a || !r(function () {
          l(1);
        }) || !r(function () {
          new l(-1);
        }) || !o(function (e) {
          new l();
          new l(null);
          new l(1.5);
          new l(e);
        }, true) || r(function () {
          return new l(new s(2), 1, undefined).length !== 1;
        });
      },
      3074: function (e, t, n) {
        var i = n(260).aTypedArrayConstructor;
        var r = n(6707);
        e.exports = function (e, t) {
          for (var n = r(e, e.constructor), o = 0, a = t.length, s = new (i(n))(a); a > o;) {
            s[o] = t[o++];
          }
          return s;
        };
      },
      7321: function (e, t, n) {
        var i = n(7908);
        var r = n(7466);
        var o = n(1246);
        var a = n(7659);
        var s = n(9974);
        var l = n(260).aTypedArrayConstructor;
        e.exports = function (e) {
          var t;
          var n;
          var c;
          var u;
          var d;
          var h;
          var f = i(e);
          var p = arguments.length;
          var g = p > 1 ? arguments[1] : undefined;
          var m = g !== undefined;
          var v = o(f);
          if (v != null && !a(v)) {
            h = (d = v.call(f)).next;
            f = [];
            h = (d = v.call(f)).next;
            f = [];
            for (; !(u = h.call(d)).done;) {
              f.push(u.value);
            }
          }
          if (m && p > 2) {
            g = s(g, arguments[2], 2);
          }
          n = r(f.length);
          c = new (l(this))(n);
          t = 0;
          for (; n > t; t++) {
            c[t] = m ? g(f[t], t) : f[t];
          }
          return c;
        };
      },
      9711: function (e) {
        var t = 0;
        var n = Math.random();
        e.exports = function (e) {
          return "Symbol(" + String(e === undefined ? "" : e) + ")_" + (++t + n).toString(36);
        };
      },
      3307: function (e, t, n) {
        var i = n(133);
        e.exports = i && !Symbol.sham && typeof Symbol.iterator == "symbol";
      },
      5112: function (e, t, n) {
        var i = n(7854);
        var r = n(2309);
        var o = n(6656);
        var a = n(9711);
        var s = n(133);
        var l = n(3307);
        var c = r("wks");
        var u = i.Symbol;
        var d = l ? u : u && u.withoutSetter || a;
        e.exports = function (e) {
          if (!o(c, e)) {
            if (s && o(u, e)) {
              c[e] = u[e];
            } else {
              c[e] = d("Symbol." + e);
            }
          }
          return c[e];
        };
      },
      1361: function (e) {
        e.exports = "\t\n\f\r Â áââââââââââââ¯âã\u2028\u2029ï»¿";
      },
      8264: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(7854);
        var o = n(3331);
        var a = n(6340);
        var s = o.ArrayBuffer;
        i({
          global: true,
          forced: r.ArrayBuffer !== s
        }, {
          ArrayBuffer: s
        });
        a("ArrayBuffer");
      },
      2222: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(7293);
        var o = n(3157);
        var a = n(111);
        var s = n(7908);
        var l = n(7466);
        var c = n(6135);
        var u = n(5417);
        var d = n(1194);
        var h = n(5112);
        var f = n(7392);
        var p = h("isConcatSpreadable");
        var g = 9007199254740991;
        var m = "Maximum allowed index exceeded";
        var v = f >= 51 || !r(function () {
          var e = [];
          e[p] = false;
          return e.concat()[0] !== e;
        });
        var y = d("concat");
        var b = function (e) {
          if (!a(e)) {
            return false;
          }
          var t = e[p];
          if (t !== undefined) {
            return !!t;
          } else {
            return o(e);
          }
        };
        i({
          target: "Array",
          proto: true,
          forced: !v || !y
        }, {
          concat: function (e) {
            var t;
            var n;
            var i;
            var r;
            var o;
            var a = s(this);
            var d = u(a, 0);
            var h = 0;
            t = -1;
            i = arguments.length;
            for (; t < i; t++) {
              if (b(o = t === -1 ? a : arguments[t])) {
                if (h + (r = l(o.length)) > g) {
                  throw TypeError(m);
                }
                for (n = 0; n < r; n++, h++) {
                  if (n in o) {
                    c(d, h, o[n]);
                  }
                }
              } else {
                if (h >= g) {
                  throw TypeError(m);
                }
                c(d, h++, o);
              }
            }
            d.length = h;
            return d;
          }
        });
      },
      7327: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(2092).filter;
        i({
          target: "Array",
          proto: true,
          forced: !n(1194)("filter")
        }, {
          filter: function (e) {
            return r(this, e, arguments.length > 1 ? arguments[1] : undefined);
          }
        });
      },
      2772: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(1318).indexOf;
        var o = n(9341);
        var a = [].indexOf;
        var s = !!a && 1 / [1].indexOf(1, -0) < 0;
        var l = o("indexOf");
        i({
          target: "Array",
          proto: true,
          forced: s || !l
        }, {
          indexOf: function (e) {
            if (s) {
              return a.apply(this, arguments) || 0;
            } else {
              return r(this, e, arguments.length > 1 ? arguments[1] : undefined);
            }
          }
        });
      },
      6992: function (e, t, n) {
        "use strict";

        var i = n(5656);
        var r = n(1223);
        var o = n(7497);
        var a = n(9909);
        var s = n(654);
        var l = "Array Iterator";
        var c = a.set;
        var u = a.getterFor(l);
        e.exports = s(Array, "Array", function (e, t) {
          c(this, {
            type: l,
            target: i(e),
            index: 0,
            kind: t
          });
        }, function () {
          var e = u(this);
          var t = e.target;
          var n = e.kind;
          var i = e.index++;
          if (!t || i >= t.length) {
            e.target = undefined;
            return {
              value: undefined,
              done: true
            };
          } else if (n == "keys") {
            return {
              value: i,
              done: false
            };
          } else if (n == "values") {
            return {
              value: t[i],
              done: false
            };
          } else {
            return {
              value: [i, t[i]],
              done: false
            };
          }
        }, "values");
        o.Arguments = o.Array;
        r("keys");
        r("values");
        r("entries");
      },
      1249: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(2092).map;
        i({
          target: "Array",
          proto: true,
          forced: !n(1194)("map")
        }, {
          map: function (e) {
            return r(this, e, arguments.length > 1 ? arguments[1] : undefined);
          }
        });
      },
      7042: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(111);
        var o = n(3157);
        var a = n(1400);
        var s = n(7466);
        var l = n(5656);
        var c = n(6135);
        var u = n(5112);
        var d = n(1194)("slice");
        var h = u("species");
        var f = [].slice;
        var p = Math.max;
        i({
          target: "Array",
          proto: true,
          forced: !d
        }, {
          slice: function (e, t) {
            var n;
            var i;
            var u;
            var d = l(this);
            var g = s(d.length);
            var m = a(e, g);
            var v = a(t === undefined ? g : t, g);
            if (o(d) && (typeof (n = d.constructor) != "function" || n !== Array && !o(n.prototype) ? r(n) && (n = n[h]) === null && (n = undefined) : n = undefined, n === Array || n === undefined)) {
              return f.call(d, m, v);
            }
            i = new (n === undefined ? Array : n)(p(v - m, 0));
            u = 0;
            for (; m < v; m++, u++) {
              if (m in d) {
                c(i, u, d[m]);
              }
            }
            i.length = u;
            return i;
          }
        });
      },
      561: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(1400);
        var o = n(9958);
        var a = n(7466);
        var s = n(7908);
        var l = n(5417);
        var c = n(6135);
        var u = n(1194)("splice");
        var d = Math.max;
        var h = Math.min;
        var f = 9007199254740991;
        var p = "Maximum allowed length exceeded";
        i({
          target: "Array",
          proto: true,
          forced: !u
        }, {
          splice: function (e, t) {
            var n;
            var i;
            var u;
            var g;
            var m;
            var v;
            var y = s(this);
            var b = a(y.length);
            var w = r(e, b);
            var x = arguments.length;
            if (x === 0) {
              n = i = 0;
            } else if (x === 1) {
              n = 0;
              i = b - w;
            } else {
              n = x - 2;
              i = h(d(o(t), 0), b - w);
            }
            if (b + n - i > f) {
              throw TypeError(p);
            }
            u = l(y, i);
            g = 0;
            for (; g < i; g++) {
              if ((m = w + g) in y) {
                c(u, g, y[m]);
              }
            }
            u.length = i;
            if (n < i) {
              for (g = w; g < b - i; g++) {
                v = g + n;
                if ((m = g + i) in y) {
                  y[v] = y[m];
                } else {
                  delete y[v];
                }
              }
              for (g = b; g > b - i + n; g--) {
                delete y[g - 1];
              }
            } else if (n > i) {
              for (g = b - i; g > w; g--) {
                v = g + n - 1;
                if ((m = g + i - 1) in y) {
                  y[v] = y[m];
                } else {
                  delete y[v];
                }
              }
            }
            for (g = 0; g < n; g++) {
              y[g + w] = arguments[g + 2];
            }
            y.length = b - i + n;
            return u;
          }
        });
      },
      8309: function (e, t, n) {
        var i = n(9781);
        var r = n(3070).f;
        var o = Function.prototype;
        var a = o.toString;
        var s = /^\s*function ([^ (]*)/;
        var l = "name";
        if (i && !(l in o)) {
          r(o, l, {
            configurable: true,
            get: function () {
              try {
                return a.call(this).match(s)[1];
              } catch (e) {
                return "";
              }
            }
          });
        }
      },
      489: function (e, t, n) {
        var i = n(2109);
        var r = n(7293);
        var o = n(7908);
        var a = n(9518);
        var s = n(8544);
        i({
          target: "Object",
          stat: true,
          forced: r(function () {
            a(1);
          }),
          sham: !s
        }, {
          getPrototypeOf: function (e) {
            return a(o(e));
          }
        });
      },
      1539: function (e, t, n) {
        var i = n(1694);
        var r = n(1320);
        var o = n(288);
        if (!i) {
          r(Object.prototype, "toString", o, {
            unsafe: true
          });
        }
      },
      4916: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(2261);
        i({
          target: "RegExp",
          proto: true,
          forced: /./.exec !== r
        }, {
          exec: r
        });
      },
      9714: function (e, t, n) {
        "use strict";

        var i = n(1320);
        var r = n(9670);
        var o = n(7293);
        var a = n(7066);
        var s = "toString";
        var l = RegExp.prototype;
        var c = l.toString;
        var u = o(function () {
          return c.call({
            source: "a",
            flags: "b"
          }) != "/a/b";
        });
        var d = c.name != s;
        if (u || d) {
          i(RegExp.prototype, s, function () {
            var e = r(this);
            var t = String(e.source);
            var n = e.flags;
            return "/" + t + "/" + String(n === undefined && e instanceof RegExp && !("flags" in l) ? a.call(e) : n);
          }, {
            unsafe: true
          });
        }
      },
      8783: function (e, t, n) {
        "use strict";

        var i = n(8710).charAt;
        var r = n(9909);
        var o = n(654);
        var a = "String Iterator";
        var s = r.set;
        var l = r.getterFor(a);
        o(String, "String", function (e) {
          s(this, {
            type: a,
            string: String(e),
            index: 0
          });
        }, function () {
          var e;
          var t = l(this);
          var n = t.string;
          var r = t.index;
          if (r >= n.length) {
            return {
              value: undefined,
              done: true
            };
          } else {
            e = i(n, r);
            t.index += e.length;
            return {
              value: e,
              done: false
            };
          }
        });
      },
      4723: function (e, t, n) {
        "use strict";

        var i = n(7007);
        var r = n(9670);
        var o = n(7466);
        var a = n(4488);
        var s = n(1530);
        var l = n(7651);
        i("match", 1, function (e, t, n) {
          return [function (t) {
            var n = a(this);
            var i = t == null ? undefined : t[e];
            if (i !== undefined) {
              return i.call(t, n);
            } else {
              return new RegExp(t)[e](String(n));
            }
          }, function (e) {
            var i = n(t, e, this);
            if (i.done) {
              return i.value;
            }
            var a = r(e);
            var c = String(this);
            if (!a.global) {
              return l(a, c);
            }
            var u = a.unicode;
            a.lastIndex = 0;
            for (var d, h = [], f = 0; (d = l(a, c)) !== null;) {
              var p = String(d[0]);
              h[f] = p;
              if (p === "") {
                a.lastIndex = s(c, o(a.lastIndex), u);
              }
              f++;
            }
            if (f === 0) {
              return null;
            } else {
              return h;
            }
          }];
        });
      },
      5306: function (e, t, n) {
        "use strict";

        var i = n(7007);
        var r = n(9670);
        var o = n(7466);
        var a = n(9958);
        var s = n(4488);
        var l = n(1530);
        var c = n(647);
        var u = n(7651);
        var d = Math.max;
        var h = Math.min;
        i("replace", 2, function (e, t, n, i) {
          var f = i.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
          var p = i.REPLACE_KEEPS_$0;
          var g = f ? "$" : "$0";
          return [function (n, i) {
            var r = s(this);
            var o = n == null ? undefined : n[e];
            if (o !== undefined) {
              return o.call(n, r, i);
            } else {
              return t.call(String(r), n, i);
            }
          }, function (e, i) {
            if (!f && p || typeof i == "string" && i.indexOf(g) === -1) {
              var s = n(t, e, this, i);
              if (s.done) {
                return s.value;
              }
            }
            var m = r(e);
            var v = String(this);
            var y = typeof i == "function";
            if (!y) {
              i = String(i);
            }
            var b = m.global;
            if (b) {
              var w = m.unicode;
              m.lastIndex = 0;
            }
            for (var x = [];;) {
              var _ = u(m, v);
              if (_ === null) {
                break;
              }
              x.push(_);
              if (!b) {
                break;
              }
              if (String(_[0]) === "") {
                m.lastIndex = l(v, o(m.lastIndex), w);
              }
            }
            for (var C, S = "", k = 0, T = 0; T < x.length; T++) {
              _ = x[T];
              for (var A = String(_[0]), D = d(h(a(_.index), v.length), 0), E = [], O = 1; O < _.length; O++) {
                E.push((C = _[O]) === undefined ? C : String(C));
              }
              var M = _.groups;
              if (y) {
                var I = [A].concat(E, D, v);
                if (M !== undefined) {
                  I.push(M);
                }
                var P = String(i.apply(undefined, I));
              } else {
                P = c(A, v, D, E, M, i);
              }
              if (D >= k) {
                S += v.slice(k, D) + P;
                k = D + A.length;
              }
            }
            return S + v.slice(k);
          }];
        });
      },
      3123: function (e, t, n) {
        "use strict";

        var i = n(7007);
        var r = n(7850);
        var o = n(9670);
        var a = n(4488);
        var s = n(6707);
        var l = n(1530);
        var c = n(7466);
        var u = n(7651);
        var d = n(2261);
        var h = n(7293);
        var f = [].push;
        var p = Math.min;
        var g = 4294967295;
        var m = !h(function () {
          return !RegExp(g, "y");
        });
        i("split", 2, function (e, t, n) {
          var i;
          i = "abbc".split(/(b)*/)[1] == "c" || "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function (e, n) {
            var i = String(a(this));
            var o = n === undefined ? g : n >>> 0;
            if (o === 0) {
              return [];
            }
            if (e === undefined) {
              return [i];
            }
            if (!r(e)) {
              return t.call(i, e, o);
            }
            for (var s, l, c, u = [], h = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""), p = 0, m = new RegExp(e.source, h + "g"); (s = d.call(m, i)) && !((l = m.lastIndex) > p && (u.push(i.slice(p, s.index)), s.length > 1 && s.index < i.length && f.apply(u, s.slice(1)), c = s[0].length, p = l, u.length >= o));) {
              if (m.lastIndex === s.index) {
                m.lastIndex++;
              }
            }
            if (p === i.length) {
              if (!(!c && m.test(""))) {
                u.push("");
              }
            } else {
              u.push(i.slice(p));
            }
            if (u.length > o) {
              return u.slice(0, o);
            } else {
              return u;
            }
          } : "0".split(undefined, 0).length ? function (e, n) {
            if (e === undefined && n === 0) {
              return [];
            } else {
              return t.call(this, e, n);
            }
          } : t;
          return [function (t, n) {
            var r = a(this);
            var o = t == null ? undefined : t[e];
            if (o !== undefined) {
              return o.call(t, r, n);
            } else {
              return i.call(String(r), t, n);
            }
          }, function (e, r) {
            var a = n(i, e, this, r, i !== t);
            if (a.done) {
              return a.value;
            }
            var d = o(e);
            var h = String(this);
            var f = s(d, RegExp);
            var v = d.unicode;
            var y = (d.ignoreCase ? "i" : "") + (d.multiline ? "m" : "") + (d.unicode ? "u" : "") + (m ? "y" : "g");
            var b = new f(m ? d : "^(?:" + d.source + ")", y);
            var w = r === undefined ? g : r >>> 0;
            if (w === 0) {
              return [];
            }
            if (h.length === 0) {
              if (u(b, h) === null) {
                return [h];
              } else {
                return [];
              }
            }
            for (var x = 0, _ = 0, C = []; _ < h.length;) {
              b.lastIndex = m ? _ : 0;
              var S;
              var k = u(b, m ? h : h.slice(_));
              if (k === null || (S = p(c(b.lastIndex + (m ? 0 : _)), h.length)) === x) {
                _ = l(h, _, v);
              } else {
                C.push(h.slice(x, _));
                if (C.length === w) {
                  return C;
                }
                for (var T = 1; T <= k.length - 1; T++) {
                  C.push(k[T]);
                  if (C.length === w) {
                    return C;
                  }
                }
                _ = x = S;
              }
            }
            C.push(h.slice(x));
            return C;
          }];
        }, !m);
      },
      3210: function (e, t, n) {
        "use strict";

        var i = n(2109);
        var r = n(3111).trim;
        i({
          target: "String",
          proto: true,
          forced: n(6091)("trim")
        }, {
          trim: function () {
            return r(this);
          }
        });
      },
      2990: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(1048);
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("copyWithin", function (e, t) {
          return r.call(o(this), e, t, arguments.length > 2 ? arguments[2] : undefined);
        });
      },
      8927: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(2092).every;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("every", function (e) {
          return r(o(this), e, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      3105: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(1285);
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("fill", function (e) {
          return r.apply(o(this), arguments);
        });
      },
      5035: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(2092).filter;
        var o = n(3074);
        var a = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("filter", function (e) {
          var t = r(a(this), e, arguments.length > 1 ? arguments[1] : undefined);
          return o(this, t);
        });
      },
      7174: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(2092).findIndex;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("findIndex", function (e) {
          return r(o(this), e, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      4345: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(2092).find;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("find", function (e) {
          return r(o(this), e, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      2846: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(2092).forEach;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("forEach", function (e) {
          r(o(this), e, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      4731: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(1318).includes;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("includes", function (e) {
          return r(o(this), e, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      7209: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(1318).indexOf;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("indexOf", function (e) {
          return r(o(this), e, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      6319: function (e, t, n) {
        "use strict";

        var i = n(7854);
        var r = n(260);
        var o = n(6992);
        var a = n(5112)("iterator");
        var s = i.Uint8Array;
        var l = o.values;
        var c = o.keys;
        var u = o.entries;
        var d = r.aTypedArray;
        var h = r.exportTypedArrayMethod;
        var f = s && s.prototype[a];
        var p = !!f && (f.name == "values" || f.name == null);
        var g = function () {
          return l.call(d(this));
        };
        h("entries", function () {
          return u.call(d(this));
        });
        h("keys", function () {
          return c.call(d(this));
        });
        h("values", g, !p);
        h(a, g, !p);
      },
      8867: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = i.aTypedArray;
        var o = i.exportTypedArrayMethod;
        var a = [].join;
        o("join", function (e) {
          return a.apply(r(this), arguments);
        });
      },
      7789: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(6583);
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("lastIndexOf", function (e) {
          return r.apply(o(this), arguments);
        });
      },
      3739: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(2092).map;
        var o = n(6707);
        var a = i.aTypedArray;
        var s = i.aTypedArrayConstructor;
        (0, i.exportTypedArrayMethod)("map", function (e) {
          return r(a(this), e, arguments.length > 1 ? arguments[1] : undefined, function (e, t) {
            return new (s(o(e, e.constructor)))(t);
          });
        });
      },
      4483: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(3671).right;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("reduceRight", function (e) {
          return r(o(this), e, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      9368: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(3671).left;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("reduce", function (e) {
          return r(o(this), e, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      2056: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = i.aTypedArray;
        var o = i.exportTypedArrayMethod;
        var a = Math.floor;
        o("reverse", function () {
          for (var e, t = this, n = r(t).length, i = a(n / 2), o = 0; o < i;) {
            e = t[o];
            t[o++] = t[--n];
            t[n] = e;
          }
          return t;
        });
      },
      3462: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(7466);
        var o = n(4590);
        var a = n(7908);
        var s = n(7293);
        var l = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("set", function (e) {
          l(this);
          var t = o(arguments.length > 1 ? arguments[1] : undefined, 1);
          var n = this.length;
          var i = a(e);
          var s = r(i.length);
          var c = 0;
          if (s + t > n) {
            throw RangeError("Wrong length");
          }
          for (; c < s;) {
            this[t + c] = i[c++];
          }
        }, s(function () {
          new Int8Array(1).set({});
        }));
      },
      678: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(6707);
        var o = n(7293);
        var a = i.aTypedArray;
        var s = i.aTypedArrayConstructor;
        var l = i.exportTypedArrayMethod;
        var c = [].slice;
        l("slice", function (e, t) {
          for (var n = c.call(a(this), e, t), i = r(this, this.constructor), o = 0, l = n.length, u = new (s(i))(l); l > o;) {
            u[o] = n[o++];
          }
          return u;
        }, o(function () {
          new Int8Array(1).slice();
        }));
      },
      7462: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(2092).some;
        var o = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("some", function (e) {
          return r(o(this), e, arguments.length > 1 ? arguments[1] : undefined);
        });
      },
      3824: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = i.aTypedArray;
        var o = i.exportTypedArrayMethod;
        var a = [].sort;
        o("sort", function (e) {
          return a.call(r(this), e);
        });
      },
      5021: function (e, t, n) {
        "use strict";

        var i = n(260);
        var r = n(7466);
        var o = n(1400);
        var a = n(6707);
        var s = i.aTypedArray;
        (0, i.exportTypedArrayMethod)("subarray", function (e, t) {
          var n = s(this);
          var i = n.length;
          var l = o(e, i);
          return new (a(n, n.constructor))(n.buffer, n.byteOffset + l * n.BYTES_PER_ELEMENT, r((t === undefined ? i : o(t, i)) - l));
        });
      },
      2974: function (e, t, n) {
        "use strict";

        var i = n(7854);
        var r = n(260);
        var o = n(7293);
        var a = i.Int8Array;
        var s = r.aTypedArray;
        var l = r.exportTypedArrayMethod;
        var c = [].toLocaleString;
        var u = [].slice;
        var d = !!a && o(function () {
          c.call(new a(1));
        });
        l("toLocaleString", function () {
          return c.apply(d ? u.call(s(this)) : s(this), arguments);
        }, o(function () {
          return [1, 2].toLocaleString() != new a([1, 2]).toLocaleString();
        }) || !o(function () {
          a.prototype.toLocaleString.call([1, 2]);
        }));
      },
      5016: function (e, t, n) {
        "use strict";

        var i = n(260).exportTypedArrayMethod;
        var r = n(7293);
        var o = n(7854).Uint8Array;
        var a = o && o.prototype || {};
        var s = [].toString;
        var l = [].join;
        if (r(function () {
          s.call({});
        })) {
          s = function () {
            return l.call(this);
          };
        }
        var c = a.toString != s;
        i("toString", s, c);
      },
      2472: function (e, t, n) {
        n(9843)("Uint8", function (e) {
          return function (t, n, i) {
            return e(this, t, n, i);
          };
        });
      },
      4747: function (e, t, n) {
        var i = n(7854);
        var r = n(8324);
        var o = n(8533);
        var a = n(8880);
        for (var s in r) {
          var l = i[s];
          var c = l && l.prototype;
          if (c && c.forEach !== o) {
            try {
              a(c, "forEach", o);
            } catch (e) {
              c.forEach = o;
            }
          }
        }
      },
      3948: function (e, t, n) {
        var i = n(7854);
        var r = n(8324);
        var o = n(6992);
        var a = n(8880);
        var s = n(5112);
        var l = s("iterator");
        var c = s("toStringTag");
        var u = o.values;
        for (var d in r) {
          var h = i[d];
          var f = h && h.prototype;
          if (f) {
            if (f[l] !== u) {
              try {
                a(f, l, u);
              } catch (e) {
                f[l] = u;
              }
            }
            if (!f[c]) {
              a(f, c, d);
            }
            if (r[d]) {
              for (var p in o) {
                if (f[p] !== o[p]) {
                  try {
                    a(f, p, o[p]);
                  } catch (e) {
                    f[p] = o[p];
                  }
                }
              }
            }
          }
        }
      },
      1637: function (e, t, n) {
        "use strict";

        n(6992);
        var i = n(2109);
        var r = n(5005);
        var o = n(590);
        var a = n(1320);
        var s = n(2248);
        var l = n(8003);
        var c = n(4994);
        var u = n(9909);
        var d = n(5787);
        var h = n(6656);
        var f = n(9974);
        var p = n(648);
        var g = n(9670);
        var m = n(111);
        var v = n(30);
        var y = n(9114);
        var b = n(8554);
        var w = n(1246);
        var x = n(5112);
        var _ = r("fetch");
        var C = r("Headers");
        var S = x("iterator");
        var k = "URLSearchParams";
        var T = "URLSearchParamsIterator";
        var A = u.set;
        var D = u.getterFor(k);
        var E = u.getterFor(T);
        var O = /\+/g;
        var M = Array(4);
        var I = function (e) {
          return M[e - 1] || (M[e - 1] = RegExp("((?:%[\\da-f]{2}){" + e + "})", "gi"));
        };
        var P = function (e) {
          try {
            return decodeURIComponent(e);
          } catch (t) {
            return e;
          }
        };
        var L = function (e) {
          var t = e.replace(O, " ");
          var n = 4;
          try {
            return decodeURIComponent(t);
          } catch (e) {
            for (; n;) {
              t = t.replace(I(n--), P);
            }
            return t;
          }
        };
        var N = /[!'()~]|%20/g;
        var F = {
          "!": "%21",
          "'": "%27",
          "(": "%28",
          ")": "%29",
          "~": "%7E",
          "%20": "+"
        };
        var R = function (e) {
          return F[e];
        };
        var j = function (e) {
          return encodeURIComponent(e).replace(N, R);
        };
        var $ = function (e, t) {
          if (t) {
            for (var n, i, r = t.split("&"), o = 0; o < r.length;) {
              if ((n = r[o++]).length) {
                i = n.split("=");
                e.push({
                  key: L(i.shift()),
                  value: L(i.join("="))
                });
              }
            }
          }
        };
        var z = function (e) {
          this.entries.length = 0;
          $(this.entries, e);
        };
        var H = function (e, t) {
          if (e < t) {
            throw TypeError("Not enough arguments");
          }
        };
        var B = c(function (e, t) {
          A(this, {
            type: T,
            iterator: b(D(e).entries),
            kind: t
          });
        }, "Iterator", function () {
          var e = E(this);
          var t = e.kind;
          var n = e.iterator.next();
          var i = n.value;
          if (!n.done) {
            n.value = t === "keys" ? i.key : t === "values" ? i.value : [i.key, i.value];
          }
          return n;
        });
        var q = function () {
          d(this, q, k);
          var e;
          var t;
          var n;
          var i;
          var r;
          var o;
          var a;
          var s;
          var l;
          var c = arguments.length > 0 ? arguments[0] : undefined;
          var u = this;
          var f = [];
          A(u, {
            type: k,
            entries: f,
            updateURL: function () {},
            updateSearchParams: z
          });
          if (c !== undefined) {
            if (m(c)) {
              if (typeof (e = w(c)) == "function") {
                for (n = (t = e.call(c)).next; !(i = n.call(t)).done;) {
                  if ((a = (o = (r = b(g(i.value))).next).call(r)).done || (s = o.call(r)).done || !o.call(r).done) {
                    throw TypeError("Expected sequence with length 2");
                  }
                  f.push({
                    key: a.value + "",
                    value: s.value + ""
                  });
                }
              } else {
                for (l in c) {
                  if (h(c, l)) {
                    f.push({
                      key: l,
                      value: c[l] + ""
                    });
                  }
                }
              }
            } else {
              $(f, typeof c == "string" ? c.charAt(0) === "?" ? c.slice(1) : c : c + "");
            }
          }
        };
        var W = q.prototype;
        s(W, {
          append: function (e, t) {
            H(arguments.length, 2);
            var n = D(this);
            n.entries.push({
              key: e + "",
              value: t + ""
            });
            n.updateURL();
          },
          delete: function (e) {
            H(arguments.length, 1);
            for (var t = D(this), n = t.entries, i = e + "", r = 0; r < n.length;) {
              if (n[r].key === i) {
                n.splice(r, 1);
              } else {
                r++;
              }
            }
            t.updateURL();
          },
          get: function (e) {
            H(arguments.length, 1);
            for (var t = D(this).entries, n = e + "", i = 0; i < t.length; i++) {
              if (t[i].key === n) {
                return t[i].value;
              }
            }
            return null;
          },
          getAll: function (e) {
            H(arguments.length, 1);
            for (var t = D(this).entries, n = e + "", i = [], r = 0; r < t.length; r++) {
              if (t[r].key === n) {
                i.push(t[r].value);
              }
            }
            return i;
          },
          has: function (e) {
            H(arguments.length, 1);
            for (var t = D(this).entries, n = e + "", i = 0; i < t.length;) {
              if (t[i++].key === n) {
                return true;
              }
            }
            return false;
          },
          set: function (e, t) {
            H(arguments.length, 1);
            for (var n, i = D(this), r = i.entries, o = false, a = e + "", s = t + "", l = 0; l < r.length; l++) {
              if ((n = r[l]).key === a) {
                if (o) {
                  r.splice(l--, 1);
                } else {
                  o = true;
                  n.value = s;
                }
              }
            }
            if (!o) {
              r.push({
                key: a,
                value: s
              });
            }
            i.updateURL();
          },
          sort: function () {
            var e;
            var t;
            var n;
            var i = D(this);
            var r = i.entries;
            var o = r.slice();
            r.length = 0;
            n = 0;
            for (; n < o.length; n++) {
              e = o[n];
              t = 0;
              for (; t < n; t++) {
                if (r[t].key > e.key) {
                  r.splice(t, 0, e);
                  break;
                }
              }
              if (t === n) {
                r.push(e);
              }
            }
            i.updateURL();
          },
          forEach: function (e) {
            for (var t, n = D(this).entries, i = f(e, arguments.length > 1 ? arguments[1] : undefined, 3), r = 0; r < n.length;) {
              i((t = n[r++]).value, t.key, this);
            }
          },
          keys: function () {
            return new B(this, "keys");
          },
          values: function () {
            return new B(this, "values");
          },
          entries: function () {
            return new B(this, "entries");
          }
        }, {
          enumerable: true
        });
        a(W, S, W.entries);
        a(W, "toString", function () {
          for (var e, t = D(this).entries, n = [], i = 0; i < t.length;) {
            e = t[i++];
            n.push(j(e.key) + "=" + j(e.value));
          }
          return n.join("&");
        }, {
          enumerable: true
        });
        l(q, k);
        i({
          global: true,
          forced: !o
        }, {
          URLSearchParams: q
        });
        if (!(o || typeof _ != "function" || typeof C != "function")) {
          i({
            global: true,
            enumerable: true,
            forced: true
          }, {
            fetch: function (e) {
              var t;
              var n;
              var i;
              var r = [e];
              if (arguments.length > 1) {
                if (m(t = arguments[1])) {
                  n = t.body;
                  if (p(n) === k) {
                    if (!(i = t.headers ? new C(t.headers) : new C()).has("content-type")) {
                      i.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
                    }
                    t = v(t, {
                      body: y(0, String(n)),
                      headers: y(0, i)
                    });
                  }
                }
                r.push(t);
              }
              return _.apply(this, r);
            }
          });
        }
        e.exports = {
          URLSearchParams: q,
          getState: D
        };
      },
      285: function (e, t, n) {
        "use strict";

        n(8783);
        var i;
        var r = n(2109);
        var o = n(9781);
        var a = n(590);
        var s = n(7854);
        var l = n(6048);
        var c = n(1320);
        var u = n(5787);
        var d = n(6656);
        var h = n(1574);
        var f = n(8457);
        var p = n(8710).codeAt;
        var g = n(3197);
        var m = n(8003);
        var v = n(1637);
        var y = n(9909);
        var b = s.URL;
        var w = v.URLSearchParams;
        var x = v.getState;
        var _ = y.set;
        var C = y.getterFor("URL");
        var S = Math.floor;
        var k = Math.pow;
        var T = "Invalid scheme";
        var A = "Invalid host";
        var D = "Invalid port";
        var E = /[A-Za-z]/;
        var O = /[\d+-.A-Za-z]/;
        var M = /\d/;
        var I = /^(0x|0X)/;
        var P = /^[0-7]+$/;
        var L = /^\d+$/;
        var N = /^[\dA-Fa-f]+$/;
        var F = /[\u0000\t\u000A\u000D #%/:?@[\\]]/;
        var R = /[\u0000\t\u000A\u000D #/:?@[\\]]/;
        var j = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g;
        var $ = /[\t\u000A\u000D]/g;
        var z = function (e, t) {
          var n;
          var i;
          var r;
          if (t.charAt(0) == "[") {
            if (t.charAt(t.length - 1) != "]") {
              return A;
            }
            if (!(n = B(t.slice(1, -1)))) {
              return A;
            }
            e.host = n;
          } else if (K(e)) {
            t = g(t);
            if (F.test(t)) {
              return A;
            }
            if ((n = H(t)) === null) {
              return A;
            }
            e.host = n;
          } else {
            if (R.test(t)) {
              return A;
            }
            n = "";
            i = f(t);
            r = 0;
            for (; r < i.length; r++) {
              n += X(i[r], W);
            }
            e.host = n;
          }
        };
        var H = function (e) {
          var t;
          var n;
          var i;
          var r;
          var o;
          var a;
          var s;
          var l = e.split(".");
          if (l.length && l[l.length - 1] == "") {
            l.pop();
          }
          if ((t = l.length) > 4) {
            return e;
          }
          n = [];
          i = 0;
          for (; i < t; i++) {
            if ((r = l[i]) == "") {
              return e;
            }
            o = 10;
            if (r.length > 1 && r.charAt(0) == "0") {
              o = I.test(r) ? 16 : 8;
              r = r.slice(o == 8 ? 1 : 2);
            }
            if (r === "") {
              a = 0;
            } else {
              if (!(o == 10 ? L : o == 8 ? P : N).test(r)) {
                return e;
              }
              a = parseInt(r, o);
            }
            n.push(a);
          }
          for (i = 0; i < t; i++) {
            a = n[i];
            if (i == t - 1) {
              if (a >= k(256, 5 - t)) {
                return null;
              }
            } else if (a > 255) {
              return null;
            }
          }
          s = n.pop();
          i = 0;
          for (; i < n.length; i++) {
            s += n[i] * k(256, 3 - i);
          }
          return s;
        };
        var B = function (e) {
          var t;
          var n;
          var i;
          var r;
          var o;
          var a;
          var s;
          var l = [0, 0, 0, 0, 0, 0, 0, 0];
          var c = 0;
          var u = null;
          var d = 0;
          var h = function () {
            return e.charAt(d);
          };
          if (h() == ":") {
            if (e.charAt(1) != ":") {
              return;
            }
            d += 2;
            u = ++c;
          }
          for (; h();) {
            if (c == 8) {
              return;
            }
            if (h() != ":") {
              for (t = n = 0; n < 4 && N.test(h());) {
                t = t * 16 + parseInt(h(), 16);
                d++;
                n++;
              }
              if (h() == ".") {
                if (n == 0) {
                  return;
                }
                d -= n;
                if (c > 6) {
                  return;
                }
                for (i = 0; h();) {
                  r = null;
                  if (i > 0) {
                    if (!(h() == "." && i < 4)) {
                      return;
                    }
                    d++;
                  }
                  if (!M.test(h())) {
                    return;
                  }
                  for (; M.test(h());) {
                    o = parseInt(h(), 10);
                    if (r === null) {
                      r = o;
                    } else {
                      if (r == 0) {
                        return;
                      }
                      r = r * 10 + o;
                    }
                    if (r > 255) {
                      return;
                    }
                    d++;
                  }
                  l[c] = l[c] * 256 + r;
                  if (!(++i != 2 && i != 4)) {
                    c++;
                  }
                }
                if (i != 4) {
                  return;
                }
                break;
              }
              if (h() == ":") {
                d++;
                if (!h()) {
                  return;
                }
              } else if (h()) {
                return;
              }
              l[c++] = t;
            } else {
              if (u !== null) {
                return;
              }
              d++;
              u = ++c;
            }
          }
          if (u !== null) {
            a = c - u;
            c = 7;
            a = c - u;
            c = 7;
            for (; c != 0 && a > 0;) {
              s = l[c];
              l[c--] = l[u + a - 1];
              l[u + --a] = s;
            }
          } else if (c != 8) {
            return;
          }
          return l;
        };
        var q = function (e) {
          var t;
          var n;
          var i;
          var r;
          if (typeof e == "number") {
            t = [];
            n = 0;
            for (; n < 4; n++) {
              t.unshift(e % 256);
              e = S(e / 256);
            }
            return t.join(".");
          }
          if (typeof e == "object") {
            t = "";
            i = function (e) {
              for (var t = null, n = 1, i = null, r = 0, o = 0; o < 8; o++) {
                if (e[o] !== 0) {
                  if (r > n) {
                    t = i;
                    n = r;
                  }
                  i = null;
                  r = 0;
                } else {
                  if (i === null) {
                    i = o;
                  }
                  ++r;
                }
              }
              if (r > n) {
                t = i;
                n = r;
              }
              return t;
            }(e);
            n = 0;
            for (; n < 8; n++) {
              if (!(r && e[n] === 0)) {
                if (r) {
                  r = false;
                }
                if (i === n) {
                  t += n ? ":" : "::";
                  r = true;
                } else {
                  t += e[n].toString(16);
                  if (n < 7) {
                    t += ":";
                  }
                }
              }
            }
            return "[" + t + "]";
          }
          return e;
        };
        var W = {};
        var U = h({}, W, {
          " ": 1,
          "\"": 1,
          "<": 1,
          ">": 1,
          "`": 1
        });
        var V = h({}, U, {
          "#": 1,
          "?": 1,
          "{": 1,
          "}": 1
        });
        var Y = h({}, V, {
          "/": 1,
          ":": 1,
          ";": 1,
          "=": 1,
          "@": 1,
          "[": 1,
          "\\": 1,
          "]": 1,
          "^": 1,
          "|": 1
        });
        var X = function (e, t) {
          var n = p(e, 0);
          if (n > 32 && n < 127 && !d(t, e)) {
            return e;
          } else {
            return encodeURIComponent(e);
          }
        };
        var G = {
          ftp: 21,
          file: null,
          http: 80,
          https: 443,
          ws: 80,
          wss: 443
        };
        var K = function (e) {
          return d(G, e.scheme);
        };
        var Q = function (e) {
          return e.username != "" || e.password != "";
        };
        var Z = function (e) {
          return !e.host || e.cannotBeABaseURL || e.scheme == "file";
        };
        var J = function (e, t) {
          var n;
          return e.length == 2 && E.test(e.charAt(0)) && ((n = e.charAt(1)) == ":" || !t && n == "|");
        };
        var ee = function (e) {
          var t;
          return e.length > 1 && J(e.slice(0, 2)) && (e.length == 2 || (t = e.charAt(2)) === "/" || t === "\\" || t === "?" || t === "#");
        };
        var te = function (e) {
          var t = e.path;
          var n = t.length;
          if (!(!n || e.scheme == "file" && n == 1 && J(t[0], true))) {
            t.pop();
          }
        };
        var ne = function (e) {
          return e === "." || e.toLowerCase() === "%2e";
        };
        var ie = {};
        var re = {};
        var oe = {};
        var ae = {};
        var se = {};
        var le = {};
        var ce = {};
        var ue = {};
        var de = {};
        var he = {};
        var fe = {};
        var pe = {};
        var ge = {};
        var me = {};
        var ve = {};
        var ye = {};
        var be = {};
        var we = {};
        var xe = {};
        var _e = {};
        var Ce = {};
        var Se = function (e, t, n, r) {
          var o;
          var a;
          var s;
          var l;
          var c;
          var u = n || ie;
          var h = 0;
          var p = "";
          var g = false;
          var m = false;
          var v = false;
          if (!n) {
            e.scheme = "";
            e.username = "";
            e.password = "";
            e.host = null;
            e.port = null;
            e.path = [];
            e.query = null;
            e.fragment = null;
            e.cannotBeABaseURL = false;
            t = t.replace(j, "");
          }
          t = t.replace($, "");
          o = f(t);
          for (; h <= o.length;) {
            a = o[h];
            switch (u) {
              case ie:
                if (!a || !E.test(a)) {
                  if (n) {
                    return T;
                  }
                  u = oe;
                  continue;
                }
                p += a.toLowerCase();
                u = re;
                break;
              case re:
                if (a && (O.test(a) || a == "+" || a == "-" || a == ".")) {
                  p += a.toLowerCase();
                } else {
                  if (a != ":") {
                    if (n) {
                      return T;
                    }
                    p = "";
                    u = oe;
                    h = 0;
                    continue;
                  }
                  if (n && (K(e) != d(G, p) || p == "file" && (Q(e) || e.port !== null) || e.scheme == "file" && !e.host)) {
                    return;
                  }
                  e.scheme = p;
                  if (n) {
                    return void (K(e) && G[e.scheme] == e.port && (e.port = null));
                  }
                  p = "";
                  if (e.scheme == "file") {
                    u = me;
                  } else if (K(e) && r && r.scheme == e.scheme) {
                    u = ae;
                  } else if (K(e)) {
                    u = ue;
                  } else if (o[h + 1] == "/") {
                    u = se;
                    h++;
                  } else {
                    e.cannotBeABaseURL = true;
                    e.path.push("");
                    u = xe;
                  }
                }
                break;
              case oe:
                if (!r || r.cannotBeABaseURL && a != "#") {
                  return T;
                }
                if (r.cannotBeABaseURL && a == "#") {
                  e.scheme = r.scheme;
                  e.path = r.path.slice();
                  e.query = r.query;
                  e.fragment = "";
                  e.cannotBeABaseURL = true;
                  u = Ce;
                  break;
                }
                u = r.scheme == "file" ? me : le;
                continue;
              case ae:
                if (a != "/" || o[h + 1] != "/") {
                  u = le;
                  continue;
                }
                u = de;
                h++;
                break;
              case se:
                if (a == "/") {
                  u = he;
                  break;
                }
                u = we;
                continue;
              case le:
                e.scheme = r.scheme;
                if (a == i) {
                  e.username = r.username;
                  e.password = r.password;
                  e.host = r.host;
                  e.port = r.port;
                  e.path = r.path.slice();
                  e.query = r.query;
                } else if (a == "/" || a == "\\" && K(e)) {
                  u = ce;
                } else if (a == "?") {
                  e.username = r.username;
                  e.password = r.password;
                  e.host = r.host;
                  e.port = r.port;
                  e.path = r.path.slice();
                  e.query = "";
                  u = _e;
                } else {
                  if (a != "#") {
                    e.username = r.username;
                    e.password = r.password;
                    e.host = r.host;
                    e.port = r.port;
                    e.path = r.path.slice();
                    e.path.pop();
                    u = we;
                    continue;
                  }
                  e.username = r.username;
                  e.password = r.password;
                  e.host = r.host;
                  e.port = r.port;
                  e.path = r.path.slice();
                  e.query = r.query;
                  e.fragment = "";
                  u = Ce;
                }
                break;
              case ce:
                if (!K(e) || a != "/" && a != "\\") {
                  if (a != "/") {
                    e.username = r.username;
                    e.password = r.password;
                    e.host = r.host;
                    e.port = r.port;
                    u = we;
                    continue;
                  }
                  u = he;
                } else {
                  u = de;
                }
                break;
              case ue:
                u = de;
                if (a != "/" || p.charAt(h + 1) != "/") {
                  continue;
                }
                h++;
                break;
              case de:
                if (a != "/" && a != "\\") {
                  u = he;
                  continue;
                }
                break;
              case he:
                if (a == "@") {
                  if (g) {
                    p = "%40" + p;
                  }
                  g = true;
                  s = f(p);
                  for (var y = 0; y < s.length; y++) {
                    var b = s[y];
                    if (b != ":" || v) {
                      var w = X(b, Y);
                      if (v) {
                        e.password += w;
                      } else {
                        e.username += w;
                      }
                    } else {
                      v = true;
                    }
                  }
                  p = "";
                } else if (a == i || a == "/" || a == "?" || a == "#" || a == "\\" && K(e)) {
                  if (g && p == "") {
                    return "Invalid authority";
                  }
                  h -= f(p).length + 1;
                  p = "";
                  u = fe;
                } else {
                  p += a;
                }
                break;
              case fe:
              case pe:
                if (n && e.scheme == "file") {
                  u = ye;
                  continue;
                }
                if (a != ":" || m) {
                  if (a == i || a == "/" || a == "?" || a == "#" || a == "\\" && K(e)) {
                    if (K(e) && p == "") {
                      return A;
                    }
                    if (n && p == "" && (Q(e) || e.port !== null)) {
                      return;
                    }
                    if (l = z(e, p)) {
                      return l;
                    }
                    p = "";
                    u = be;
                    if (n) {
                      return;
                    }
                    continue;
                  }
                  if (a == "[") {
                    m = true;
                  } else if (a == "]") {
                    m = false;
                  }
                  p += a;
                } else {
                  if (p == "") {
                    return A;
                  }
                  if (l = z(e, p)) {
                    return l;
                  }
                  p = "";
                  u = ge;
                  if (n == pe) {
                    return;
                  }
                }
                break;
              case ge:
                if (!M.test(a)) {
                  if (a == i || a == "/" || a == "?" || a == "#" || a == "\\" && K(e) || n) {
                    if (p != "") {
                      var x = parseInt(p, 10);
                      if (x > 65535) {
                        return D;
                      }
                      e.port = K(e) && x === G[e.scheme] ? null : x;
                      p = "";
                    }
                    if (n) {
                      return;
                    }
                    u = be;
                    continue;
                  }
                  return D;
                }
                p += a;
                break;
              case me:
                e.scheme = "file";
                if (a == "/" || a == "\\") {
                  u = ve;
                } else {
                  if (!r || r.scheme != "file") {
                    u = we;
                    continue;
                  }
                  if (a == i) {
                    e.host = r.host;
                    e.path = r.path.slice();
                    e.query = r.query;
                  } else if (a == "?") {
                    e.host = r.host;
                    e.path = r.path.slice();
                    e.query = "";
                    u = _e;
                  } else {
                    if (a != "#") {
                      if (!ee(o.slice(h).join(""))) {
                        e.host = r.host;
                        e.path = r.path.slice();
                        te(e);
                      }
                      u = we;
                      continue;
                    }
                    e.host = r.host;
                    e.path = r.path.slice();
                    e.query = r.query;
                    e.fragment = "";
                    u = Ce;
                  }
                }
                break;
              case ve:
                if (a == "/" || a == "\\") {
                  u = ye;
                  break;
                }
                if (r && r.scheme == "file" && !ee(o.slice(h).join(""))) {
                  if (J(r.path[0], true)) {
                    e.path.push(r.path[0]);
                  } else {
                    e.host = r.host;
                  }
                }
                u = we;
                continue;
              case ye:
                if (a == i || a == "/" || a == "\\" || a == "?" || a == "#") {
                  if (!n && J(p)) {
                    u = we;
                  } else if (p == "") {
                    e.host = "";
                    if (n) {
                      return;
                    }
                    u = be;
                  } else {
                    if (l = z(e, p)) {
                      return l;
                    }
                    if (e.host == "localhost") {
                      e.host = "";
                    }
                    if (n) {
                      return;
                    }
                    p = "";
                    u = be;
                  }
                  continue;
                }
                p += a;
                break;
              case be:
                if (K(e)) {
                  u = we;
                  if (a != "/" && a != "\\") {
                    continue;
                  }
                } else if (n || a != "?") {
                  if (n || a != "#") {
                    if (a != i && (u = we, a != "/")) {
                      continue;
                    }
                  } else {
                    e.fragment = "";
                    u = Ce;
                  }
                } else {
                  e.query = "";
                  u = _e;
                }
                break;
              case we:
                if (a == i || a == "/" || a == "\\" && K(e) || !n && (a == "?" || a == "#")) {
                  if ((c = (c = p).toLowerCase()) === ".." || c === "%2e." || c === ".%2e" || c === "%2e%2e") {
                    te(e);
                    if (!(a == "/" || a == "\\" && K(e))) {
                      e.path.push("");
                    }
                  } else if (ne(p)) {
                    if (!(a == "/" || a == "\\" && K(e))) {
                      e.path.push("");
                    }
                  } else {
                    if (e.scheme == "file" && !e.path.length && J(p)) {
                      if (e.host) {
                        e.host = "";
                      }
                      p = p.charAt(0) + ":";
                    }
                    e.path.push(p);
                  }
                  p = "";
                  if (e.scheme == "file" && (a == i || a == "?" || a == "#")) {
                    for (; e.path.length > 1 && e.path[0] === "";) {
                      e.path.shift();
                    }
                  }
                  if (a == "?") {
                    e.query = "";
                    u = _e;
                  } else if (a == "#") {
                    e.fragment = "";
                    u = Ce;
                  }
                } else {
                  p += X(a, V);
                }
                break;
              case xe:
                if (a == "?") {
                  e.query = "";
                  u = _e;
                } else if (a == "#") {
                  e.fragment = "";
                  u = Ce;
                } else if (a != i) {
                  e.path[0] += X(a, W);
                }
                break;
              case _e:
                if (n || a != "#") {
                  if (a != i) {
                    if (a == "'" && K(e)) {
                      e.query += "%27";
                    } else {
                      e.query += a == "#" ? "%23" : X(a, W);
                    }
                  }
                } else {
                  e.fragment = "";
                  u = Ce;
                }
                break;
              case Ce:
                if (a != i) {
                  e.fragment += X(a, U);
                }
            }
            h++;
          }
        };
        var ke = function (e) {
          var t;
          var n;
          var i = u(this, ke, "URL");
          var r = arguments.length > 1 ? arguments[1] : undefined;
          var a = String(e);
          var s = _(i, {
            type: "URL"
          });
          if (r !== undefined) {
            if (r instanceof ke) {
              t = C(r);
            } else if (n = Se(t = {}, String(r))) {
              throw TypeError(n);
            }
          }
          if (n = Se(s, a, null, t)) {
            throw TypeError(n);
          }
          var l = s.searchParams = new w();
          var c = x(l);
          c.updateSearchParams(s.query);
          c.updateURL = function () {
            s.query = String(l) || null;
          };
          if (!o) {
            i.href = Ae.call(i);
            i.origin = De.call(i);
            i.protocol = Ee.call(i);
            i.username = Oe.call(i);
            i.password = Me.call(i);
            i.host = Ie.call(i);
            i.hostname = Pe.call(i);
            i.port = Le.call(i);
            i.pathname = Ne.call(i);
            i.search = Fe.call(i);
            i.searchParams = Re.call(i);
            i.hash = je.call(i);
          }
        };
        var Te = ke.prototype;
        var Ae = function () {
          var e = C(this);
          var t = e.scheme;
          var n = e.username;
          var i = e.password;
          var r = e.host;
          var o = e.port;
          var a = e.path;
          var s = e.query;
          var l = e.fragment;
          var c = t + ":";
          if (r !== null) {
            c += "//";
            if (Q(e)) {
              c += n + (i ? ":" + i : "") + "@";
            }
            c += q(r);
            if (o !== null) {
              c += ":" + o;
            }
          } else if (t == "file") {
            c += "//";
          }
          c += e.cannotBeABaseURL ? a[0] : a.length ? "/" + a.join("/") : "";
          if (s !== null) {
            c += "?" + s;
          }
          if (l !== null) {
            c += "#" + l;
          }
          return c;
        };
        var De = function () {
          var e = C(this);
          var t = e.scheme;
          var n = e.port;
          if (t == "blob") {
            try {
              return new URL(t.path[0]).origin;
            } catch (e) {
              return "null";
            }
          }
          if (t != "file" && K(e)) {
            return t + "://" + q(e.host) + (n !== null ? ":" + n : "");
          } else {
            return "null";
          }
        };
        var Ee = function () {
          return C(this).scheme + ":";
        };
        var Oe = function () {
          return C(this).username;
        };
        var Me = function () {
          return C(this).password;
        };
        var Ie = function () {
          var e = C(this);
          var t = e.host;
          var n = e.port;
          if (t === null) {
            return "";
          } else if (n === null) {
            return q(t);
          } else {
            return q(t) + ":" + n;
          }
        };
        var Pe = function () {
          var e = C(this).host;
          if (e === null) {
            return "";
          } else {
            return q(e);
          }
        };
        var Le = function () {
          var e = C(this).port;
          if (e === null) {
            return "";
          } else {
            return String(e);
          }
        };
        var Ne = function () {
          var e = C(this);
          var t = e.path;
          if (e.cannotBeABaseURL) {
            return t[0];
          } else if (t.length) {
            return "/" + t.join("/");
          } else {
            return "";
          }
        };
        var Fe = function () {
          var e = C(this).query;
          if (e) {
            return "?" + e;
          } else {
            return "";
          }
        };
        var Re = function () {
          return C(this).searchParams;
        };
        var je = function () {
          var e = C(this).fragment;
          if (e) {
            return "#" + e;
          } else {
            return "";
          }
        };
        var $e = function (e, t) {
          return {
            get: e,
            set: t,
            configurable: true,
            enumerable: true
          };
        };
        if (o) {
          l(Te, {
            href: $e(Ae, function (e) {
              var t = C(this);
              var n = String(e);
              var i = Se(t, n);
              if (i) {
                throw TypeError(i);
              }
              x(t.searchParams).updateSearchParams(t.query);
            }),
            origin: $e(De),
            protocol: $e(Ee, function (e) {
              var t = C(this);
              Se(t, String(e) + ":", ie);
            }),
            username: $e(Oe, function (e) {
              var t = C(this);
              var n = f(String(e));
              if (!Z(t)) {
                t.username = "";
                for (var i = 0; i < n.length; i++) {
                  t.username += X(n[i], Y);
                }
              }
            }),
            password: $e(Me, function (e) {
              var t = C(this);
              var n = f(String(e));
              if (!Z(t)) {
                t.password = "";
                for (var i = 0; i < n.length; i++) {
                  t.password += X(n[i], Y);
                }
              }
            }),
            host: $e(Ie, function (e) {
              var t = C(this);
              if (!t.cannotBeABaseURL) {
                Se(t, String(e), fe);
              }
            }),
            hostname: $e(Pe, function (e) {
              var t = C(this);
              if (!t.cannotBeABaseURL) {
                Se(t, String(e), pe);
              }
            }),
            port: $e(Le, function (e) {
              var t = C(this);
              if (!Z(t)) {
                if ((e = String(e)) == "") {
                  t.port = null;
                } else {
                  Se(t, e, ge);
                }
              }
            }),
            pathname: $e(Ne, function (e) {
              var t = C(this);
              if (!t.cannotBeABaseURL) {
                t.path = [];
                Se(t, e + "", be);
              }
            }),
            search: $e(Fe, function (e) {
              var t = C(this);
              if ((e = String(e)) == "") {
                t.query = null;
              } else {
                if (e.charAt(0) == "?") {
                  e = e.slice(1);
                }
                t.query = "";
                Se(t, e, _e);
              }
              x(t.searchParams).updateSearchParams(t.query);
            }),
            searchParams: $e(Re),
            hash: $e(je, function (e) {
              var t = C(this);
              if ((e = String(e)) != "") {
                if (e.charAt(0) == "#") {
                  e = e.slice(1);
                }
                t.fragment = "";
                Se(t, e, Ce);
              } else {
                t.fragment = null;
              }
            })
          });
        }
        c(Te, "toJSON", function () {
          return Ae.call(this);
        }, {
          enumerable: true
        });
        c(Te, "toString", function () {
          return Ae.call(this);
        }, {
          enumerable: true
        });
        if (b) {
          var ze = b.createObjectURL;
          var He = b.revokeObjectURL;
          if (ze) {
            c(ke, "createObjectURL", function (e) {
              return ze.apply(b, arguments);
            });
          }
          if (He) {
            c(ke, "revokeObjectURL", function (e) {
              return He.apply(b, arguments);
            });
          }
        }
        m(ke, "URL");
        r({
          global: true,
          forced: !a,
          sham: !o
        }, {
          URL: ke
        });
      }
    };
    var t = {};
    function n(i) {
      if (t[i]) {
        return t[i].exports;
      }
      var r = t[i] = {
        exports: {}
      };
      e[i](r, r.exports, n);
      return r.exports;
    }
    n.d = function (e, t) {
      for (var i in t) {
        if (n.o(t, i) && !n.o(e, i)) {
          Object.defineProperty(e, i, {
            enumerable: true,
            get: t[i]
          });
        }
      }
    };
    n.g = function () {
      if (typeof globalThis == "object") {
        return globalThis;
      }
      try {
        return this || new Function("return this")();
      } catch (e) {
        if (typeof window == "object") {
          return window;
        }
      }
    }();
    n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    };
    n.r = function (e) {
      if (typeof Symbol != "undefined" && Symbol.toStringTag) {
        Object.defineProperty(e, Symbol.toStringTag, {
          value: "Module"
        });
      }
      Object.defineProperty(e, "__esModule", {
        value: true
      });
    };
    var i = {};
    (function () {
      "use strict";

      function e(e, n) {
        var i;
        if (typeof Symbol == "undefined" || e[Symbol.iterator] == null) {
          if (Array.isArray(e) || (i = function (e, n) {
            if (e) {
              if (typeof e == "string") {
                return t(e, n);
              }
              var i = Object.prototype.toString.call(e).slice(8, -1);
              if (i === "Object" && e.constructor) {
                i = e.constructor.name;
              }
              if (i === "Map" || i === "Set") {
                return Array.from(e);
              } else if (i === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) {
                return t(e, n);
              } else {
                return undefined;
              }
            }
          }(e)) || n && e && typeof e.length == "number") {
            if (i) {
              e = i;
            }
            var r = 0;
            var o = function () {};
            return {
              s: o,
              n: function () {
                if (r >= e.length) {
                  return {
                    done: true
                  };
                } else {
                  return {
                    done: false,
                    value: e[r++]
                  };
                }
              },
              e: function (e) {
                throw e;
              },
              f: o
            };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a;
        var s = true;
        var l = false;
        return {
          s: function () {
            i = e[Symbol.iterator]();
          },
          n: function () {
            var e = i.next();
            s = e.done;
            return e;
          },
          e: function (e) {
            l = true;
            a = e;
          },
          f: function () {
            try {
              if (!(s || i.return == null)) {
                i.return();
              }
            } finally {
              if (l) {
                throw a;
              }
            }
          }
        };
      }
      function t(e, t) {
        if (t == null || t > e.length) {
          t = e.length;
        }
        for (var n = 0, i = new Array(t); n < t; n++) {
          i[n] = e[n];
        }
        return i;
      }
      n.r(i);
      n.d(i, {
        Dropzone: function () {
          return y;
        },
        default: function () {
          return C;
        }
      });
      n(2222);
      n(7327);
      n(2772);
      n(6992);
      n(1249);
      n(7042);
      n(561);
      n(8264);
      n(8309);
      n(489);
      n(1539);
      n(4916);
      n(9714);
      n(8783);
      n(4723);
      n(5306);
      n(3123);
      n(3210);
      n(2472);
      n(2990);
      n(8927);
      n(3105);
      n(5035);
      n(4345);
      n(7174);
      n(2846);
      n(4731);
      n(7209);
      n(6319);
      n(8867);
      n(7789);
      n(3739);
      n(9368);
      n(4483);
      n(2056);
      n(3462);
      n(678);
      n(7462);
      n(3824);
      n(5021);
      n(2974);
      n(5016);
      n(4747);
      n(3948);
      n(285);
      var r = function () {
        function t() {
          !function (e, t) {
            if (!(e instanceof t)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }(this, t);
        }
        var n;
        if (n = [{
          key: "on",
          value: function (e, t) {
            this._callbacks = this._callbacks || {};
            if (!this._callbacks[e]) {
              this._callbacks[e] = [];
            }
            this._callbacks[e].push(t);
            return this;
          }
        }, {
          key: "emit",
          value: function (t) {
            this._callbacks = this._callbacks || {};
            for (var n = this._callbacks[t], i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++) {
              r[o - 1] = arguments[o];
            }
            if (n) {
              var a;
              var s = e(n, true);
              try {
                for (s.s(); !(a = s.n()).done;) {
                  var l = a.value;
                  l.apply(this, r);
                }
              } catch (e) {
                s.e(e);
              } finally {
                s.f();
              }
            }
            if (this.element) {
              this.element.dispatchEvent(this.makeEvent("dropzone:" + t, {
                args: r
              }));
            }
            return this;
          }
        }, {
          key: "makeEvent",
          value: function (e, t) {
            var n = {
              bubbles: true,
              cancelable: true,
              detail: t
            };
            if (typeof window.CustomEvent == "function") {
              return new CustomEvent(e, n);
            }
            var i = document.createEvent("CustomEvent");
            i.initCustomEvent(e, n.bubbles, n.cancelable, n.detail);
            return i;
          }
        }, {
          key: "off",
          value: function (e, t) {
            if (!this._callbacks || arguments.length === 0) {
              this._callbacks = {};
              return this;
            }
            var n = this._callbacks[e];
            if (!n) {
              return this;
            }
            if (arguments.length === 1) {
              delete this._callbacks[e];
              return this;
            }
            for (var i = 0; i < n.length; i++) {
              var r = n[i];
              if (r === t) {
                n.splice(i, 1);
                break;
              }
            }
            return this;
          }
        }]) {
          (function (e, t) {
            for (var n = 0; n < t.length; n++) {
              var i = t[n];
              i.enumerable = i.enumerable || false;
              i.configurable = true;
              if ("value" in i) {
                i.writable = true;
              }
              Object.defineProperty(e, i.key, i);
            }
          })(t.prototype, n);
        }
        return t;
      }();
      function o(e, t) {
        var n;
        if (typeof Symbol == "undefined" || e[Symbol.iterator] == null) {
          if (Array.isArray(e) || (n = function (e, t) {
            if (e) {
              if (typeof e == "string") {
                return a(e, t);
              }
              var n = Object.prototype.toString.call(e).slice(8, -1);
              if (n === "Object" && e.constructor) {
                n = e.constructor.name;
              }
              if (n === "Map" || n === "Set") {
                return Array.from(e);
              } else if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {
                return a(e, t);
              } else {
                return undefined;
              }
            }
          }(e)) || t && e && typeof e.length == "number") {
            if (n) {
              e = n;
            }
            var i = 0;
            var r = function () {};
            return {
              s: r,
              n: function () {
                if (i >= e.length) {
                  return {
                    done: true
                  };
                } else {
                  return {
                    done: false,
                    value: e[i++]
                  };
                }
              },
              e: function (e) {
                throw e;
              },
              f: r
            };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o;
        var s = true;
        var l = false;
        return {
          s: function () {
            n = e[Symbol.iterator]();
          },
          n: function () {
            var e = n.next();
            s = e.done;
            return e;
          },
          e: function (e) {
            l = true;
            o = e;
          },
          f: function () {
            try {
              if (!(s || n.return == null)) {
                n.return();
              }
            } finally {
              if (l) {
                throw o;
              }
            }
          }
        };
      }
      function a(e, t) {
        if (t == null || t > e.length) {
          t = e.length;
        }
        for (var n = 0, i = new Array(t); n < t; n++) {
          i[n] = e[n];
        }
        return i;
      }
      var s = {
        url: null,
        method: "post",
        withCredentials: false,
        timeout: null,
        parallelUploads: 2,
        uploadMultiple: false,
        chunking: false,
        forceChunking: false,
        chunkSize: 2000000,
        parallelChunkUploads: false,
        retryChunks: false,
        retryChunksLimit: 3,
        maxFilesize: 256,
        paramName: "file",
        createImageThumbnails: true,
        maxThumbnailFilesize: 10,
        thumbnailWidth: 120,
        thumbnailHeight: 120,
        thumbnailMethod: "crop",
        resizeWidth: null,
        resizeHeight: null,
        resizeMimeType: null,
        resizeQuality: 0.8,
        resizeMethod: "contain",
        filesizeBase: 1000,
        maxFiles: null,
        headers: null,
        clickable: true,
        ignoreHiddenFiles: true,
        acceptedFiles: null,
        acceptedMimeTypes: null,
        autoProcessQueue: true,
        autoQueue: true,
        addRemoveLinks: false,
        previewsContainer: null,
        disablePreviews: false,
        hiddenInputContainer: "body",
        capture: null,
        renameFilename: null,
        renameFile: null,
        forceFallback: false,
        dictDefaultMessage: "Drop files here to upload",
        dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
        dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
        dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
        dictInvalidFileType: "You can't upload files of this type.",
        dictResponseError: "Server responded with {{statusCode}} code.",
        dictCancelUpload: "Cancel upload",
        dictUploadCanceled: "Upload canceled.",
        dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
        dictRemoveFile: "Remove file",
        dictRemoveFileConfirmation: null,
        dictMaxFilesExceeded: "You can not upload any more files.",
        dictFileSizeUnits: {
          tb: "TB",
          gb: "GB",
          mb: "MB",
          kb: "KB",
          b: "b"
        },
        init: function () {},
        params: function (e, t, n) {
          if (n) {
            return {
              dzuuid: n.file.upload.uuid,
              dzchunkindex: n.index,
              dztotalfilesize: n.file.size,
              dzchunksize: this.options.chunkSize,
              dztotalchunkcount: n.file.upload.totalChunkCount,
              dzchunkbyteoffset: n.index * this.options.chunkSize
            };
          }
        },
        accept: function (e, t) {
          return t();
        },
        chunksUploaded: function (e, t) {
          t();
        },
        fallback: function () {
          var e;
          this.element.className = "".concat(this.element.className, " dz-browser-not-supported");
          var t;
          var n = o(this.element.getElementsByTagName("div"), true);
          try {
            for (n.s(); !(t = n.n()).done;) {
              var i = t.value;
              if (/(^| )dz-message($| )/.test(i.className)) {
                e = i;
                i.className = "dz-message";
                break;
              }
            }
          } catch (e) {
            n.e(e);
          } finally {
            n.f();
          }
          if (!e) {
            e = y.createElement("<div class=\"dz-message\"><span></span></div>");
            this.element.appendChild(e);
          }
          var r = e.getElementsByTagName("span")[0];
          if (r) {
            if (r.textContent != null) {
              r.textContent = this.options.dictFallbackMessage;
            } else if (r.innerText != null) {
              r.innerText = this.options.dictFallbackMessage;
            }
          }
          return this.element.appendChild(this.getFallbackForm());
        },
        resize: function (e, t, n, i) {
          var r = {
            srcX: 0,
            srcY: 0,
            srcWidth: e.width,
            srcHeight: e.height
          };
          var o = e.width / e.height;
          if (t == null && n == null) {
            t = r.srcWidth;
            n = r.srcHeight;
          } else if (t == null) {
            t = n * o;
          } else if (n == null) {
            n = t / o;
          }
          var a = (t = Math.min(t, r.srcWidth)) / (n = Math.min(n, r.srcHeight));
          if (r.srcWidth > t || r.srcHeight > n) {
            if (i === "crop") {
              if (o > a) {
                r.srcHeight = e.height;
                r.srcWidth = r.srcHeight * a;
              } else {
                r.srcWidth = e.width;
                r.srcHeight = r.srcWidth / a;
              }
            } else {
              if (i !== "contain") {
                throw new Error("Unknown resizeMethod '".concat(i, "'"));
              }
              if (o > a) {
                n = t / o;
              } else {
                t = n * o;
              }
            }
          }
          r.srcX = (e.width - r.srcWidth) / 2;
          r.srcY = (e.height - r.srcHeight) / 2;
          r.trgWidth = t;
          r.trgHeight = n;
          return r;
        },
        transformFile: function (e, t) {
          if ((this.options.resizeWidth || this.options.resizeHeight) && e.type.match(/image.*/)) {
            return this.resizeImage(e, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, t);
          } else {
            return t(e);
          }
        },
        previewTemplate: "<div class=\"dz-preview dz-file-preview\"> <div class=\"dz-image\"><img data-dz-thumbnail/></div> <div class=\"dz-details\"> <div class=\"dz-size\"><span data-dz-size></span></div> <div class=\"dz-filename\"><span data-dz-name></span></div> </div> <div class=\"dz-progress\"> <span class=\"dz-upload\" data-dz-uploadprogress></span> </div> <div class=\"dz-error-message\"><span data-dz-errormessage></span></div> <div class=\"dz-success-mark\"> <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>Check</title> <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\"></path> </g> </svg> </div> <div class=\"dz-error-mark\"> <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>Error</title> <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\"> <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\"></path> </g> </g> </svg> </div> </div> ",
        drop: function (e) {
          return this.element.classList.remove("dz-drag-hover");
        },
        dragstart: function (e) {},
        dragend: function (e) {
          return this.element.classList.remove("dz-drag-hover");
        },
        dragenter: function (e) {
          return this.element.classList.add("dz-drag-hover");
        },
        dragover: function (e) {
          return this.element.classList.add("dz-drag-hover");
        },
        dragleave: function (e) {
          return this.element.classList.remove("dz-drag-hover");
        },
        paste: function (e) {},
        reset: function () {
          return this.element.classList.remove("dz-started");
        },
        addedfile: function (e) {
          var t = this;
          if (this.element === this.previewsContainer) {
            this.element.classList.add("dz-started");
          }
          if (this.previewsContainer && !this.options.disablePreviews) {
            e.previewElement = y.createElement(this.options.previewTemplate.trim());
            e.previewTemplate = e.previewElement;
            this.previewsContainer.appendChild(e.previewElement);
            var n;
            var i = o(e.previewElement.querySelectorAll("[data-dz-name]"), true);
            try {
              for (i.s(); !(n = i.n()).done;) {
                var r = n.value;
                r.textContent = e.name;
              }
            } catch (e) {
              i.e(e);
            } finally {
              i.f();
            }
            var a;
            var s = o(e.previewElement.querySelectorAll("[data-dz-size]"), true);
            try {
              for (s.s(); !(a = s.n()).done;) {
                (r = a.value).innerHTML = this.filesize(e.size);
              }
            } catch (e) {
              s.e(e);
            } finally {
              s.f();
            }
            if (this.options.addRemoveLinks) {
              e._removeLink = y.createElement("<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>".concat(this.options.dictRemoveFile, "</a>"));
              e.previewElement.appendChild(e._removeLink);
            }
            var l;
            var c = function (n) {
              n.preventDefault();
              n.stopPropagation();
              if (e.status === y.UPLOADING) {
                return y.confirm(t.options.dictCancelUploadConfirmation, function () {
                  return t.removeFile(e);
                });
              } else if (t.options.dictRemoveFileConfirmation) {
                return y.confirm(t.options.dictRemoveFileConfirmation, function () {
                  return t.removeFile(e);
                });
              } else {
                return t.removeFile(e);
              }
            };
            var u = o(e.previewElement.querySelectorAll("[data-dz-remove]"), true);
            try {
              for (u.s(); !(l = u.n()).done;) {
                l.value.addEventListener("click", c);
              }
            } catch (e) {
              u.e(e);
            } finally {
              u.f();
            }
          }
        },
        removedfile: function (e) {
          if (e.previewElement != null && e.previewElement.parentNode != null) {
            e.previewElement.parentNode.removeChild(e.previewElement);
          }
          return this._updateMaxFilesReachedClass();
        },
        thumbnail: function (e, t) {
          if (e.previewElement) {
            e.previewElement.classList.remove("dz-file-preview");
            var n;
            var i = o(e.previewElement.querySelectorAll("[data-dz-thumbnail]"), true);
            try {
              for (i.s(); !(n = i.n()).done;) {
                var r = n.value;
                r.alt = e.name;
                r.src = t;
              }
            } catch (e) {
              i.e(e);
            } finally {
              i.f();
            }
            return setTimeout(function () {
              return e.previewElement.classList.add("dz-image-preview");
            }, 1);
          }
        },
        error: function (e, t) {
          if (e.previewElement) {
            e.previewElement.classList.add("dz-error");
            if (typeof t != "string" && t.error) {
              t = t.error;
            }
            var n;
            var i = o(e.previewElement.querySelectorAll("[data-dz-errormessage]"), true);
            try {
              for (i.s(); !(n = i.n()).done;) {
                n.value.textContent = t;
              }
            } catch (e) {
              i.e(e);
            } finally {
              i.f();
            }
          }
        },
        errormultiple: function () {},
        processing: function (e) {
          if (e.previewElement && (e.previewElement.classList.add("dz-processing"), e._removeLink)) {
            return e._removeLink.innerHTML = this.options.dictCancelUpload;
          }
        },
        processingmultiple: function () {},
        uploadprogress: function (e, t, n) {
          if (e.previewElement) {
            var i;
            var r = o(e.previewElement.querySelectorAll("[data-dz-uploadprogress]"), true);
            try {
              for (r.s(); !(i = r.n()).done;) {
                var a = i.value;
                if (a.nodeName === "PROGRESS") {
                  a.value = t;
                } else {
                  a.style.width = "".concat(t, "%");
                }
              }
            } catch (e) {
              r.e(e);
            } finally {
              r.f();
            }
          }
        },
        totaluploadprogress: function () {},
        sending: function () {},
        sendingmultiple: function () {},
        success: function (e) {
          if (e.previewElement) {
            return e.previewElement.classList.add("dz-success");
          }
        },
        successmultiple: function () {},
        canceled: function (e) {
          return this.emit("error", e, this.options.dictUploadCanceled);
        },
        canceledmultiple: function () {},
        complete: function (e) {
          if (e._removeLink) {
            e._removeLink.innerHTML = this.options.dictRemoveFile;
          }
          if (e.previewElement) {
            return e.previewElement.classList.add("dz-complete");
          }
        },
        completemultiple: function () {},
        maxfilesexceeded: function () {},
        maxfilesreached: function () {},
        queuecomplete: function () {},
        addedfiles: function () {}
      };
      function l(e) {
        return (l = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (e) {
          return typeof e;
        } : function (e) {
          if (e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype) {
            return "symbol";
          } else {
            return typeof e;
          }
        })(e);
      }
      function c(e, t) {
        var n;
        if (typeof Symbol == "undefined" || e[Symbol.iterator] == null) {
          if (Array.isArray(e) || (n = function (e, t) {
            if (e) {
              if (typeof e == "string") {
                return u(e, t);
              }
              var n = Object.prototype.toString.call(e).slice(8, -1);
              if (n === "Object" && e.constructor) {
                n = e.constructor.name;
              }
              if (n === "Map" || n === "Set") {
                return Array.from(e);
              } else if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {
                return u(e, t);
              } else {
                return undefined;
              }
            }
          }(e)) || t && e && typeof e.length == "number") {
            if (n) {
              e = n;
            }
            var i = 0;
            var r = function () {};
            return {
              s: r,
              n: function () {
                if (i >= e.length) {
                  return {
                    done: true
                  };
                } else {
                  return {
                    done: false,
                    value: e[i++]
                  };
                }
              },
              e: function (e) {
                throw e;
              },
              f: r
            };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o;
        var a = true;
        var s = false;
        return {
          s: function () {
            n = e[Symbol.iterator]();
          },
          n: function () {
            var e = n.next();
            a = e.done;
            return e;
          },
          e: function (e) {
            s = true;
            o = e;
          },
          f: function () {
            try {
              if (!(a || n.return == null)) {
                n.return();
              }
            } finally {
              if (s) {
                throw o;
              }
            }
          }
        };
      }
      function u(e, t) {
        if (t == null || t > e.length) {
          t = e.length;
        }
        for (var n = 0, i = new Array(t); n < t; n++) {
          i[n] = e[n];
        }
        return i;
      }
      function d(e, t) {
        if (!(e instanceof t)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function h(e, t) {
        for (var n = 0; n < t.length; n++) {
          var i = t[n];
          i.enumerable = i.enumerable || false;
          i.configurable = true;
          if ("value" in i) {
            i.writable = true;
          }
          Object.defineProperty(e, i.key, i);
        }
      }
      function f(e, t, n) {
        if (t) {
          h(e.prototype, t);
        }
        if (n) {
          h(e, n);
        }
        return e;
      }
      function p(e, t) {
        return (p = Object.setPrototypeOf || function (e, t) {
          e.__proto__ = t;
          return e;
        })(e, t);
      }
      function g(e, t) {
        if (!t || l(t) !== "object" && typeof t != "function") {
          return m(e);
        } else {
          return t;
        }
      }
      function m(e) {
        if (e === undefined) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
      }
      function v(e) {
        return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
          return e.__proto__ || Object.getPrototypeOf(e);
        })(e);
      }
      var y = function (e) {
        !function (e, t) {
          if (typeof t != "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
          }
          e.prototype = Object.create(t && t.prototype, {
            constructor: {
              value: e,
              writable: true,
              configurable: true
            }
          });
          if (t) {
            p(e, t);
          }
        }(o, e);
        var t;
        var n;
        t = o;
        n = function () {
          if (typeof Reflect == "undefined" || !Reflect.construct) {
            return false;
          }
          if (Reflect.construct.sham) {
            return false;
          }
          if (typeof Proxy == "function") {
            return true;
          }
          try {
            Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
            return true;
          } catch (e) {
            return false;
          }
        }();
        var i = function () {
          var e;
          var i = v(t);
          if (n) {
            var r = v(this).constructor;
            e = Reflect.construct(i, arguments, r);
          } else {
            e = i.apply(this, arguments);
          }
          return g(this, e);
        };
        function o(e, t) {
          var n;
          var r;
          var a;
          d(this, o);
          (n = i.call(this)).element = e;
          n.version = o.version;
          n.clickableElements = [];
          n.listeners = [];
          n.files = [];
          if (typeof n.element == "string") {
            n.element = document.querySelector(n.element);
          }
          if (!n.element || n.element.nodeType == null) {
            throw new Error("Invalid dropzone element.");
          }
          if (n.element.dropzone) {
            throw new Error("Dropzone already attached.");
          }
          o.instances.push(m(n));
          n.element.dropzone = m(n);
          var l = (a = o.optionsForElement(n.element)) != null ? a : {};
          n.options = o.extend({}, s, l, t != null ? t : {});
          n.options.previewTemplate = n.options.previewTemplate.replace(/\n*/g, "");
          if (n.options.forceFallback || !o.isBrowserSupported()) {
            return g(n, n.options.fallback.call(m(n)));
          }
          if (n.options.url == null) {
            n.options.url = n.element.getAttribute("action");
          }
          if (!n.options.url) {
            throw new Error("No URL provided.");
          }
          if (n.options.acceptedFiles && n.options.acceptedMimeTypes) {
            throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
          }
          if (n.options.uploadMultiple && n.options.chunking) {
            throw new Error("You cannot set both: uploadMultiple and chunking.");
          }
          if (n.options.acceptedMimeTypes) {
            n.options.acceptedFiles = n.options.acceptedMimeTypes;
            delete n.options.acceptedMimeTypes;
          }
          if (n.options.renameFilename != null) {
            n.options.renameFile = function (e) {
              return n.options.renameFilename.call(m(n), e.name, e);
            };
          }
          if (typeof n.options.method == "string") {
            n.options.method = n.options.method.toUpperCase();
          }
          if ((r = n.getExistingFallback()) && r.parentNode) {
            r.parentNode.removeChild(r);
          }
          if (n.options.previewsContainer !== false) {
            if (n.options.previewsContainer) {
              n.previewsContainer = o.getElement(n.options.previewsContainer, "previewsContainer");
            } else {
              n.previewsContainer = n.element;
            }
          }
          if (n.options.clickable) {
            if (n.options.clickable === true) {
              n.clickableElements = [n.element];
            } else {
              n.clickableElements = o.getElements(n.options.clickable, "clickable");
            }
          }
          n.init();
          return n;
        }
        f(o, [{
          key: "getAcceptedFiles",
          value: function () {
            return this.files.filter(function (e) {
              return e.accepted;
            }).map(function (e) {
              return e;
            });
          }
        }, {
          key: "getRejectedFiles",
          value: function () {
            return this.files.filter(function (e) {
              return !e.accepted;
            }).map(function (e) {
              return e;
            });
          }
        }, {
          key: "getFilesWithStatus",
          value: function (e) {
            return this.files.filter(function (t) {
              return t.status === e;
            }).map(function (e) {
              return e;
            });
          }
        }, {
          key: "getQueuedFiles",
          value: function () {
            return this.getFilesWithStatus(o.QUEUED);
          }
        }, {
          key: "getUploadingFiles",
          value: function () {
            return this.getFilesWithStatus(o.UPLOADING);
          }
        }, {
          key: "getAddedFiles",
          value: function () {
            return this.getFilesWithStatus(o.ADDED);
          }
        }, {
          key: "getActiveFiles",
          value: function () {
            return this.files.filter(function (e) {
              return e.status === o.UPLOADING || e.status === o.QUEUED;
            }).map(function (e) {
              return e;
            });
          }
        }, {
          key: "init",
          value: function () {
            var e = this;
            if (this.element.tagName === "form") {
              this.element.setAttribute("enctype", "multipart/form-data");
            }
            if (this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message")) {
              this.element.appendChild(o.createElement("<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">".concat(this.options.dictDefaultMessage, "</button></div>")));
            }
            if (this.clickableElements.length) {
              (function t() {
                if (e.hiddenFileInput) {
                  e.hiddenFileInput.parentNode.removeChild(e.hiddenFileInput);
                }
                e.hiddenFileInput = document.createElement("input");
                e.hiddenFileInput.setAttribute("type", "file");
                if (e.options.maxFiles === null || e.options.maxFiles > 1) {
                  e.hiddenFileInput.setAttribute("multiple", "multiple");
                }
                e.hiddenFileInput.className = "dz-hidden-input";
                if (e.options.acceptedFiles !== null) {
                  e.hiddenFileInput.setAttribute("accept", e.options.acceptedFiles);
                }
                if (e.options.capture !== null) {
                  e.hiddenFileInput.setAttribute("capture", e.options.capture);
                }
                e.hiddenFileInput.setAttribute("tabindex", "-1");
                e.hiddenFileInput.style.visibility = "hidden";
                e.hiddenFileInput.style.position = "absolute";
                e.hiddenFileInput.style.top = "0";
                e.hiddenFileInput.style.left = "0";
                e.hiddenFileInput.style.height = "0";
                e.hiddenFileInput.style.width = "0";
                o.getElement(e.options.hiddenInputContainer, "hiddenInputContainer").appendChild(e.hiddenFileInput);
                e.hiddenFileInput.addEventListener("change", function () {
                  var n = e.hiddenFileInput.files;
                  if (n.length) {
                    var i;
                    var r = c(n, true);
                    try {
                      for (r.s(); !(i = r.n()).done;) {
                        var o = i.value;
                        e.addFile(o);
                      }
                    } catch (e) {
                      r.e(e);
                    } finally {
                      r.f();
                    }
                  }
                  e.emit("addedfiles", n);
                  t();
                });
              })();
            }
            this.URL = window.URL !== null ? window.URL : window.webkitURL;
            var t;
            var n = c(this.events, true);
            try {
              for (n.s(); !(t = n.n()).done;) {
                var i = t.value;
                this.on(i, this.options[i]);
              }
            } catch (e) {
              n.e(e);
            } finally {
              n.f();
            }
            this.on("uploadprogress", function () {
              return e.updateTotalUploadProgress();
            });
            this.on("removedfile", function () {
              return e.updateTotalUploadProgress();
            });
            this.on("canceled", function (t) {
              return e.emit("complete", t);
            });
            this.on("complete", function (t) {
              if (e.getAddedFiles().length === 0 && e.getUploadingFiles().length === 0 && e.getQueuedFiles().length === 0) {
                return setTimeout(function () {
                  return e.emit("queuecomplete");
                }, 0);
              }
            });
            var r = function (e) {
              if (function (e) {
                if (e.dataTransfer.types) {
                  for (var t = 0; t < e.dataTransfer.types.length; t++) {
                    if (e.dataTransfer.types[t] === "Files") {
                      return true;
                    }
                  }
                }
                return false;
              }(e)) {
                e.stopPropagation();
                if (e.preventDefault) {
                  return e.preventDefault();
                } else {
                  return e.returnValue = false;
                }
              }
            };
            this.listeners = [{
              element: this.element,
              events: {
                dragstart: function (t) {
                  return e.emit("dragstart", t);
                },
                dragenter: function (t) {
                  r(t);
                  return e.emit("dragenter", t);
                },
                dragover: function (t) {
                  var n;
                  try {
                    n = t.dataTransfer.effectAllowed;
                  } catch (e) {}
                  t.dataTransfer.dropEffect = n === "move" || n === "linkMove" ? "move" : "copy";
                  r(t);
                  return e.emit("dragover", t);
                },
                dragleave: function (t) {
                  return e.emit("dragleave", t);
                },
                drop: function (t) {
                  r(t);
                  return e.drop(t);
                },
                dragend: function (t) {
                  return e.emit("dragend", t);
                }
              }
            }];
            this.clickableElements.forEach(function (t) {
              return e.listeners.push({
                element: t,
                events: {
                  click: function (n) {
                    if (t !== e.element || n.target === e.element || o.elementInside(n.target, e.element.querySelector(".dz-message"))) {
                      e.hiddenFileInput.click();
                    }
                    return true;
                  }
                }
              });
            });
            this.enable();
            return this.options.init.call(this);
          }
        }, {
          key: "destroy",
          value: function () {
            this.disable();
            this.removeAllFiles(true);
            if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {
              this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
              this.hiddenFileInput = null;
            }
            delete this.element.dropzone;
            return o.instances.splice(o.instances.indexOf(this), 1);
          }
        }, {
          key: "updateTotalUploadProgress",
          value: function () {
            var e;
            var t = 0;
            var n = 0;
            if (this.getActiveFiles().length) {
              var i;
              var r = c(this.getActiveFiles(), true);
              try {
                for (r.s(); !(i = r.n()).done;) {
                  var o = i.value;
                  t += o.upload.bytesSent;
                  n += o.upload.total;
                }
              } catch (e) {
                r.e(e);
              } finally {
                r.f();
              }
              e = t * 100 / n;
            } else {
              e = 100;
            }
            return this.emit("totaluploadprogress", e, n, t);
          }
        }, {
          key: "_getParamName",
          value: function (e) {
            if (typeof this.options.paramName == "function") {
              return this.options.paramName(e);
            } else {
              return "".concat(this.options.paramName).concat(this.options.uploadMultiple ? "[".concat(e, "]") : "");
            }
          }
        }, {
          key: "_renameFile",
          value: function (e) {
            if (typeof this.options.renameFile != "function") {
              return e.name;
            } else {
              return this.options.renameFile(e);
            }
          }
        }, {
          key: "getFallbackForm",
          value: function () {
            var e;
            var t;
            if (e = this.getExistingFallback()) {
              return e;
            }
            var n = "<div class=\"dz-fallback\">";
            if (this.options.dictFallbackText) {
              n += "<p>".concat(this.options.dictFallbackText, "</p>");
            }
            n += "<input type=\"file\" name=\"".concat(this._getParamName(0), "\" ").concat(this.options.uploadMultiple ? "multiple=\"multiple\"" : undefined, " /><input type=\"submit\" value=\"Upload!\"></div>");
            var i = o.createElement(n);
            if (this.element.tagName !== "FORM") {
              (t = o.createElement("<form action=\"".concat(this.options.url, "\" enctype=\"multipart/form-data\" method=\"").concat(this.options.method, "\"></form>"))).appendChild(i);
            } else {
              this.element.setAttribute("enctype", "multipart/form-data");
              this.element.setAttribute("method", this.options.method);
            }
            if (t != null) {
              return t;
            } else {
              return i;
            }
          }
        }, {
          key: "getExistingFallback",
          value: function () {
            for (var e = function (e) {
                var t;
                var n = c(e, true);
                try {
                  for (n.s(); !(t = n.n()).done;) {
                    var i = t.value;
                    if (/(^| )fallback($| )/.test(i.className)) {
                      return i;
                    }
                  }
                } catch (e) {
                  n.e(e);
                } finally {
                  n.f();
                }
              }, t = 0, n = ["div", "form"]; t < n.length; t++) {
              var i;
              var r = n[t];
              if (i = e(this.element.getElementsByTagName(r))) {
                return i;
              }
            }
          }
        }, {
          key: "setupEventListeners",
          value: function () {
            return this.listeners.map(function (e) {
              return function () {
                var t = [];
                for (var n in e.events) {
                  var i = e.events[n];
                  t.push(e.element.addEventListener(n, i, false));
                }
                return t;
              }();
            });
          }
        }, {
          key: "removeEventListeners",
          value: function () {
            return this.listeners.map(function (e) {
              return function () {
                var t = [];
                for (var n in e.events) {
                  var i = e.events[n];
                  t.push(e.element.removeEventListener(n, i, false));
                }
                return t;
              }();
            });
          }
        }, {
          key: "disable",
          value: function () {
            var e = this;
            this.clickableElements.forEach(function (e) {
              return e.classList.remove("dz-clickable");
            });
            this.removeEventListeners();
            this.disabled = true;
            return this.files.map(function (t) {
              return e.cancelUpload(t);
            });
          }
        }, {
          key: "enable",
          value: function () {
            delete this.disabled;
            this.clickableElements.forEach(function (e) {
              return e.classList.add("dz-clickable");
            });
            return this.setupEventListeners();
          }
        }, {
          key: "filesize",
          value: function (e) {
            var t = 0;
            var n = "b";
            if (e > 0) {
              for (var i = ["tb", "gb", "mb", "kb", "b"], r = 0; r < i.length; r++) {
                var o = i[r];
                if (e >= Math.pow(this.options.filesizeBase, 4 - r) / 10) {
                  t = e / Math.pow(this.options.filesizeBase, 4 - r);
                  n = o;
                  break;
                }
              }
              t = Math.round(t * 10) / 10;
            }
            return "<strong>".concat(t, "</strong> ").concat(this.options.dictFileSizeUnits[n]);
          }
        }, {
          key: "_updateMaxFilesReachedClass",
          value: function () {
            if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
              if (this.getAcceptedFiles().length === this.options.maxFiles) {
                this.emit("maxfilesreached", this.files);
              }
              return this.element.classList.add("dz-max-files-reached");
            } else {
              return this.element.classList.remove("dz-max-files-reached");
            }
          }
        }, {
          key: "drop",
          value: function (e) {
            if (e.dataTransfer) {
              this.emit("drop", e);
              for (var t = [], n = 0; n < e.dataTransfer.files.length; n++) {
                t[n] = e.dataTransfer.files[n];
              }
              if (t.length) {
                var i = e.dataTransfer.items;
                if (i && i.length && i[0].webkitGetAsEntry != null) {
                  this._addFilesFromItems(i);
                } else {
                  this.handleFiles(t);
                }
              }
              this.emit("addedfiles", t);
            }
          }
        }, {
          key: "paste",
          value: function (e) {
            if (((t = e != null ? e.clipboardData : undefined) != null ? function (e) {
              return e.items;
            }(t) : undefined) != null) {
              var t;
              this.emit("paste", e);
              var n = e.clipboardData.items;
              if (n.length) {
                return this._addFilesFromItems(n);
              } else {
                return undefined;
              }
            }
          }
        }, {
          key: "handleFiles",
          value: function (e) {
            var t;
            var n = c(e, true);
            try {
              for (n.s(); !(t = n.n()).done;) {
                var i = t.value;
                this.addFile(i);
              }
            } catch (e) {
              n.e(e);
            } finally {
              n.f();
            }
          }
        }, {
          key: "_addFilesFromItems",
          value: function (e) {
            var t = this;
            return function () {
              var n;
              var i = [];
              var r = c(e, true);
              try {
                for (r.s(); !(n = r.n()).done;) {
                  var o;
                  var a = n.value;
                  if (a.webkitGetAsEntry != null && (o = a.webkitGetAsEntry())) {
                    if (o.isFile) {
                      i.push(t.addFile(a.getAsFile()));
                    } else if (o.isDirectory) {
                      i.push(t._addFilesFromDirectory(o, o.name));
                    } else {
                      i.push(undefined);
                    }
                  } else if (a.getAsFile == null || a.kind != null && a.kind !== "file") {
                    i.push(undefined);
                  } else {
                    i.push(t.addFile(a.getAsFile()));
                  }
                }
              } catch (e) {
                r.e(e);
              } finally {
                r.f();
              }
              return i;
            }();
          }
        }, {
          key: "_addFilesFromDirectory",
          value: function (e, t) {
            var n = this;
            var i = e.createReader();
            var r = function (e) {
              n = function (t) {
                return t.log(e);
              };
              if ((t = console) != null && typeof t.log == "function") {
                return n(t);
              } else {
                return undefined;
              }
              var t;
              var n;
            };
            return function e() {
              return i.readEntries(function (i) {
                if (i.length > 0) {
                  var r;
                  var o = c(i, true);
                  try {
                    for (o.s(); !(r = o.n()).done;) {
                      var a = r.value;
                      if (a.isFile) {
                        a.file(function (e) {
                          if (!n.options.ignoreHiddenFiles || e.name.substring(0, 1) !== ".") {
                            e.fullPath = "".concat(t, "/").concat(e.name);
                            return n.addFile(e);
                          }
                        });
                      } else if (a.isDirectory) {
                        n._addFilesFromDirectory(a, "".concat(t, "/").concat(a.name));
                      }
                    }
                  } catch (e) {
                    o.e(e);
                  } finally {
                    o.f();
                  }
                  e();
                }
                return null;
              }, r);
            }();
          }
        }, {
          key: "accept",
          value: function (e, t) {
            if (this.options.maxFilesize && e.size > this.options.maxFilesize * 1024 * 1024) {
              t(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(e.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize));
            } else if (o.isValidFile(e, this.options.acceptedFiles)) {
              if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
                t(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles));
                this.emit("maxfilesexceeded", e);
              } else {
                this.options.accept.call(this, e, t);
              }
            } else {
              t(this.options.dictInvalidFileType);
            }
          }
        }, {
          key: "addFile",
          value: function (e) {
            var t = this;
            e.upload = {
              uuid: o.uuidv4(),
              progress: 0,
              total: e.size,
              bytesSent: 0,
              filename: this._renameFile(e)
            };
            this.files.push(e);
            e.status = o.ADDED;
            this.emit("addedfile", e);
            this._enqueueThumbnail(e);
            this.accept(e, function (n) {
              if (n) {
                e.accepted = false;
                t._errorProcessing([e], n);
              } else {
                e.accepted = true;
                if (t.options.autoQueue) {
                  t.enqueueFile(e);
                }
              }
              t._updateMaxFilesReachedClass();
            });
          }
        }, {
          key: "enqueueFiles",
          value: function (e) {
            var t;
            var n = c(e, true);
            try {
              for (n.s(); !(t = n.n()).done;) {
                var i = t.value;
                this.enqueueFile(i);
              }
            } catch (e) {
              n.e(e);
            } finally {
              n.f();
            }
            return null;
          }
        }, {
          key: "enqueueFile",
          value: function (e) {
            var t = this;
            if (e.status !== o.ADDED || e.accepted !== true) {
              throw new Error("This file can't be queued because it has already been processed or was rejected.");
            }
            e.status = o.QUEUED;
            if (this.options.autoProcessQueue) {
              return setTimeout(function () {
                return t.processQueue();
              }, 0);
            }
          }
        }, {
          key: "_enqueueThumbnail",
          value: function (e) {
            var t = this;
            if (this.options.createImageThumbnails && e.type.match(/image.*/) && e.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {
              this._thumbnailQueue.push(e);
              return setTimeout(function () {
                return t._processThumbnailQueue();
              }, 0);
            }
          }
        }, {
          key: "_processThumbnailQueue",
          value: function () {
            var e = this;
            if (!this._processingThumbnail && this._thumbnailQueue.length !== 0) {
              this._processingThumbnail = true;
              var t = this._thumbnailQueue.shift();
              return this.createThumbnail(t, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, function (n) {
                e.emit("thumbnail", t, n);
                e._processingThumbnail = false;
                return e._processThumbnailQueue();
              });
            }
          }
        }, {
          key: "removeFile",
          value: function (e) {
            if (e.status === o.UPLOADING) {
              this.cancelUpload(e);
            }
            this.files = b(this.files, e);
            this.emit("removedfile", e);
            if (this.files.length === 0) {
              return this.emit("reset");
            }
          }
        }, {
          key: "removeAllFiles",
          value: function (e) {
            if (e == null) {
              e = false;
            }
            var t;
            var n = c(this.files.slice(), true);
            try {
              for (n.s(); !(t = n.n()).done;) {
                var i = t.value;
                if (i.status !== o.UPLOADING || e) {
                  this.removeFile(i);
                }
              }
            } catch (e) {
              n.e(e);
            } finally {
              n.f();
            }
            return null;
          }
        }, {
          key: "resizeImage",
          value: function (e, t, n, i, r) {
            var a = this;
            return this.createThumbnail(e, t, n, i, true, function (t, n) {
              if (n == null) {
                return r(e);
              }
              var i = a.options.resizeMimeType;
              if (i == null) {
                i = e.type;
              }
              var s = n.toDataURL(i, a.options.resizeQuality);
              if (!(i !== "image/jpeg" && i !== "image/jpg")) {
                s = _.restore(e.dataURL, s);
              }
              return r(o.dataURItoBlob(s));
            });
          }
        }, {
          key: "createThumbnail",
          value: function (e, t, n, i, r, o) {
            var a = this;
            var s = new FileReader();
            s.onload = function () {
              e.dataURL = s.result;
              if (e.type !== "image/svg+xml") {
                a.createThumbnailFromUrl(e, t, n, i, r, o);
              } else if (o != null) {
                o(s.result);
              }
            };
            s.readAsDataURL(e);
          }
        }, {
          key: "displayExistingFile",
          value: function (e, t, n, i) {
            var r = this;
            var o = !(arguments.length > 4 && arguments[4] !== undefined) || arguments[4];
            this.emit("addedfile", e);
            this.emit("complete", e);
            if (o) {
              var a = function (t) {
                r.emit("thumbnail", e, t);
                if (n) {
                  n();
                }
              };
              e.dataURL = t;
              this.createThumbnailFromUrl(e, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, a, i);
            } else {
              this.emit("thumbnail", e, t);
              if (n) {
                n();
              }
            }
          }
        }, {
          key: "createThumbnailFromUrl",
          value: function (e, t, n, i, r, o, a) {
            var s = this;
            var l = document.createElement("img");
            if (a) {
              l.crossOrigin = a;
            }
            r = getComputedStyle(document.body).imageOrientation != "from-image" && r;
            l.onload = function () {
              var a = function (e) {
                return e(1);
              };
              if (typeof EXIF != "undefined" && EXIF !== null && r) {
                a = function (e) {
                  return EXIF.getData(l, function () {
                    return e(EXIF.getTag(this, "Orientation"));
                  });
                };
              }
              return a(function (r) {
                e.width = l.width;
                e.height = l.height;
                var a = s.options.resize.call(s, e, t, n, i);
                var c = document.createElement("canvas");
                var u = c.getContext("2d");
                c.width = a.trgWidth;
                c.height = a.trgHeight;
                if (r > 4) {
                  c.width = a.trgHeight;
                  c.height = a.trgWidth;
                }
                switch (r) {
                  case 2:
                    u.translate(c.width, 0);
                    u.scale(-1, 1);
                    break;
                  case 3:
                    u.translate(c.width, c.height);
                    u.rotate(Math.PI);
                    break;
                  case 4:
                    u.translate(0, c.height);
                    u.scale(1, -1);
                    break;
                  case 5:
                    u.rotate(Math.PI * 0.5);
                    u.scale(1, -1);
                    break;
                  case 6:
                    u.rotate(Math.PI * 0.5);
                    u.translate(0, -c.width);
                    break;
                  case 7:
                    u.rotate(Math.PI * 0.5);
                    u.translate(c.height, -c.width);
                    u.scale(-1, 1);
                    break;
                  case 8:
                    u.rotate(Math.PI * -0.5);
                    u.translate(-c.height, 0);
                }
                x(u, l, a.srcX != null ? a.srcX : 0, a.srcY != null ? a.srcY : 0, a.srcWidth, a.srcHeight, a.trgX != null ? a.trgX : 0, a.trgY != null ? a.trgY : 0, a.trgWidth, a.trgHeight);
                var d = c.toDataURL("image/png");
                if (o != null) {
                  return o(d, c);
                }
              });
            };
            if (o != null) {
              l.onerror = o;
            }
            return l.src = e.dataURL;
          }
        }, {
          key: "processQueue",
          value: function () {
            var e = this.options.parallelUploads;
            var t = this.getUploadingFiles().length;
            var n = t;
            if (!(t >= e)) {
              var i = this.getQueuedFiles();
              if (i.length > 0) {
                if (this.options.uploadMultiple) {
                  return this.processFiles(i.slice(0, e - t));
                }
                for (; n < e;) {
                  if (!i.length) {
                    return;
                  }
                  this.processFile(i.shift());
                  n++;
                }
              }
            }
          }
        }, {
          key: "processFile",
          value: function (e) {
            return this.processFiles([e]);
          }
        }, {
          key: "processFiles",
          value: function (e) {
            var t;
            var n = c(e, true);
            try {
              for (n.s(); !(t = n.n()).done;) {
                var i = t.value;
                i.processing = true;
                i.status = o.UPLOADING;
                this.emit("processing", i);
              }
            } catch (e) {
              n.e(e);
            } finally {
              n.f();
            }
            if (this.options.uploadMultiple) {
              this.emit("processingmultiple", e);
            }
            return this.uploadFiles(e);
          }
        }, {
          key: "_getFilesWithXhr",
          value: function (e) {
            return this.files.filter(function (t) {
              return t.xhr === e;
            }).map(function (e) {
              return e;
            });
          }
        }, {
          key: "cancelUpload",
          value: function (e) {
            if (e.status === o.UPLOADING) {
              var t;
              var n = this._getFilesWithXhr(e.xhr);
              var i = c(n, true);
              try {
                for (i.s(); !(t = i.n()).done;) {
                  t.value.status = o.CANCELED;
                }
              } catch (e) {
                i.e(e);
              } finally {
                i.f();
              }
              if (e.xhr !== undefined) {
                e.xhr.abort();
              }
              var r;
              var a = c(n, true);
              try {
                for (a.s(); !(r = a.n()).done;) {
                  var s = r.value;
                  this.emit("canceled", s);
                }
              } catch (e) {
                a.e(e);
              } finally {
                a.f();
              }
              if (this.options.uploadMultiple) {
                this.emit("canceledmultiple", n);
              }
            } else if (!(e.status !== o.ADDED && e.status !== o.QUEUED)) {
              e.status = o.CANCELED;
              this.emit("canceled", e);
              if (this.options.uploadMultiple) {
                this.emit("canceledmultiple", [e]);
              }
            }
            if (this.options.autoProcessQueue) {
              return this.processQueue();
            }
          }
        }, {
          key: "resolveOption",
          value: function (e) {
            if (typeof e == "function") {
              for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) {
                n[i - 1] = arguments[i];
              }
              return e.apply(this, n);
            }
            return e;
          }
        }, {
          key: "uploadFile",
          value: function (e) {
            return this.uploadFiles([e]);
          }
        }, {
          key: "uploadFiles",
          value: function (e) {
            var t = this;
            this._transformFiles(e, function (n) {
              if (t.options.chunking) {
                var i = n[0];
                e[0].upload.chunked = t.options.chunking && (t.options.forceChunking || i.size > t.options.chunkSize);
                e[0].upload.totalChunkCount = Math.ceil(i.size / t.options.chunkSize);
              }
              if (e[0].upload.chunked) {
                var r = e[0];
                var a = n[0];
                r.upload.chunks = [];
                var s = function () {
                  for (var n = 0; r.upload.chunks[n] !== undefined;) {
                    n++;
                  }
                  if (!(n >= r.upload.totalChunkCount)) {
                    var i = n * t.options.chunkSize;
                    var s = Math.min(i + t.options.chunkSize, a.size);
                    var l = {
                      name: t._getParamName(0),
                      data: a.webkitSlice ? a.webkitSlice(i, s) : a.slice(i, s),
                      filename: r.upload.filename,
                      chunkIndex: n
                    };
                    r.upload.chunks[n] = {
                      file: r,
                      index: n,
                      dataBlock: l,
                      status: o.UPLOADING,
                      progress: 0,
                      retries: 0
                    };
                    t._uploadData(e, [l]);
                  }
                };
                r.upload.finishedChunkUpload = function (n, i) {
                  var a = true;
                  n.status = o.SUCCESS;
                  n.dataBlock = null;
                  n.xhr = null;
                  for (var l = 0; l < r.upload.totalChunkCount; l++) {
                    if (r.upload.chunks[l] === undefined) {
                      return s();
                    }
                    if (r.upload.chunks[l].status !== o.SUCCESS) {
                      a = false;
                    }
                  }
                  if (a) {
                    t.options.chunksUploaded(r, function () {
                      t._finished(e, i, null);
                    });
                  }
                };
                if (t.options.parallelChunkUploads) {
                  for (var l = 0; l < r.upload.totalChunkCount; l++) {
                    s();
                  }
                } else {
                  s();
                }
              } else {
                for (var c = [], u = 0; u < e.length; u++) {
                  c[u] = {
                    name: t._getParamName(u),
                    data: n[u],
                    filename: e[u].upload.filename
                  };
                }
                t._uploadData(e, c);
              }
            });
          }
        }, {
          key: "_getChunk",
          value: function (e, t) {
            for (var n = 0; n < e.upload.totalChunkCount; n++) {
              if (e.upload.chunks[n] !== undefined && e.upload.chunks[n].xhr === t) {
                return e.upload.chunks[n];
              }
            }
          }
        }, {
          key: "_uploadData",
          value: function (e, t) {
            var n;
            var i = this;
            var r = new XMLHttpRequest();
            var a = c(e, true);
            try {
              for (a.s(); !(n = a.n()).done;) {
                n.value.xhr = r;
              }
            } catch (e) {
              a.e(e);
            } finally {
              a.f();
            }
            if (e[0].upload.chunked) {
              e[0].upload.chunks[t[0].chunkIndex].xhr = r;
            }
            var s = this.resolveOption(this.options.method, e);
            var l = this.resolveOption(this.options.url, e);
            r.open(s, l, true);
            if (this.resolveOption(this.options.timeout, e)) {
              r.timeout = this.resolveOption(this.options.timeout, e);
            }
            r.withCredentials = !!this.options.withCredentials;
            r.onload = function (t) {
              i._finishedUploading(e, r, t);
            };
            r.ontimeout = function () {
              i._handleUploadError(e, r, "Request timedout after ".concat(i.options.timeout / 1000, " seconds"));
            };
            r.onerror = function () {
              i._handleUploadError(e, r);
            };
            (r.upload != null ? r.upload : r).onprogress = function (t) {
              return i._updateFilesUploadProgress(e, r, t);
            };
            var u = {
              Accept: "application/json",
              "Cache-Control": "no-cache",
              "X-Requested-With": "XMLHttpRequest"
            };
            if (this.options.headers) {
              o.extend(u, this.options.headers);
            }
            for (var d in u) {
              var h = u[d];
              if (h) {
                r.setRequestHeader(d, h);
              }
            }
            var f = new FormData();
            if (this.options.params) {
              var p = this.options.params;
              if (typeof p == "function") {
                p = p.call(this, e, r, e[0].upload.chunked ? this._getChunk(e[0], r) : null);
              }
              for (var g in p) {
                var m = p[g];
                if (Array.isArray(m)) {
                  for (var v = 0; v < m.length; v++) {
                    f.append(g, m[v]);
                  }
                } else {
                  f.append(g, m);
                }
              }
            }
            var y;
            var b = c(e, true);
            try {
              for (b.s(); !(y = b.n()).done;) {
                var w = y.value;
                this.emit("sending", w, r, f);
              }
            } catch (e) {
              b.e(e);
            } finally {
              b.f();
            }
            if (this.options.uploadMultiple) {
              this.emit("sendingmultiple", e, r, f);
            }
            this._addFormElementData(f);
            for (var x = 0; x < t.length; x++) {
              var _ = t[x];
              f.append(_.name, _.data, _.filename);
            }
            this.submitRequest(r, f, e);
          }
        }, {
          key: "_transformFiles",
          value: function (e, t) {
            for (var n = this, i = [], r = 0, o = function (o) {
                n.options.transformFile.call(n, e[o], function (n) {
                  i[o] = n;
                  if (++r === e.length) {
                    t(i);
                  }
                });
              }, a = 0; a < e.length; a++) {
              o(a);
            }
          }
        }, {
          key: "_addFormElementData",
          value: function (e) {
            if (this.element.tagName === "FORM") {
              var t;
              var n = c(this.element.querySelectorAll("input, textarea, select, button"), true);
              try {
                for (n.s(); !(t = n.n()).done;) {
                  var i = t.value;
                  var r = i.getAttribute("name");
                  var o = i.getAttribute("type");
                  if (o) {
                    o = o.toLowerCase();
                  }
                  if (r != null) {
                    if (i.tagName === "SELECT" && i.hasAttribute("multiple")) {
                      var a;
                      var s = c(i.options, true);
                      try {
                        for (s.s(); !(a = s.n()).done;) {
                          var l = a.value;
                          if (l.selected) {
                            e.append(r, l.value);
                          }
                        }
                      } catch (e) {
                        s.e(e);
                      } finally {
                        s.f();
                      }
                    } else if (!o || o !== "checkbox" && o !== "radio" || i.checked) {
                      e.append(r, i.value);
                    }
                  }
                }
              } catch (e) {
                n.e(e);
              } finally {
                n.f();
              }
            }
          }
        }, {
          key: "_updateFilesUploadProgress",
          value: function (e, t, n) {
            if (e[0].upload.chunked) {
              var i = e[0];
              var r = this._getChunk(i, t);
              if (n) {
                r.progress = n.loaded * 100 / n.total;
                r.total = n.total;
                r.bytesSent = n.loaded;
              } else {
                r.progress = 100;
                r.bytesSent = r.total;
              }
              i.upload.progress = 0;
              i.upload.total = 0;
              i.upload.bytesSent = 0;
              for (var o = 0; o < i.upload.totalChunkCount; o++) {
                if (i.upload.chunks[o] && i.upload.chunks[o].progress !== undefined) {
                  i.upload.progress += i.upload.chunks[o].progress;
                  i.upload.total += i.upload.chunks[o].total;
                  i.upload.bytesSent += i.upload.chunks[o].bytesSent;
                }
              }
              i.upload.progress = i.upload.progress / i.upload.totalChunkCount;
              this.emit("uploadprogress", i, i.upload.progress, i.upload.bytesSent);
            } else {
              var a;
              var s = c(e, true);
              try {
                for (s.s(); !(a = s.n()).done;) {
                  var l = a.value;
                  if (!(l.upload.total && l.upload.bytesSent && l.upload.bytesSent == l.upload.total)) {
                    if (n) {
                      l.upload.progress = n.loaded * 100 / n.total;
                      l.upload.total = n.total;
                      l.upload.bytesSent = n.loaded;
                    } else {
                      l.upload.progress = 100;
                      l.upload.bytesSent = l.upload.total;
                    }
                    this.emit("uploadprogress", l, l.upload.progress, l.upload.bytesSent);
                  }
                }
              } catch (e) {
                s.e(e);
              } finally {
                s.f();
              }
            }
          }
        }, {
          key: "_finishedUploading",
          value: function (e, t, n) {
            var i;
            if (e[0].status !== o.CANCELED && t.readyState === 4) {
              if (t.responseType !== "arraybuffer" && t.responseType !== "blob" && (i = t.responseText, t.getResponseHeader("content-type") && ~t.getResponseHeader("content-type").indexOf("application/json"))) {
                try {
                  i = JSON.parse(i);
                } catch (e) {
                  n = e;
                  i = "Invalid JSON response from server.";
                }
              }
              this._updateFilesUploadProgress(e, t);
              if (t.status >= 200 && t.status < 300) {
                if (e[0].upload.chunked) {
                  e[0].upload.finishedChunkUpload(this._getChunk(e[0], t), i);
                } else {
                  this._finished(e, i, n);
                }
              } else {
                this._handleUploadError(e, t, i);
              }
            }
          }
        }, {
          key: "_handleUploadError",
          value: function (e, t, n) {
            if (e[0].status !== o.CANCELED) {
              if (e[0].upload.chunked && this.options.retryChunks) {
                var i = this._getChunk(e[0], t);
                if (i.retries++ < this.options.retryChunksLimit) {
                  return void this._uploadData(e, [i.dataBlock]);
                }
                console.warn("Retried this chunk too often. Giving up.");
              }
              this._errorProcessing(e, n || this.options.dictResponseError.replace("{{statusCode}}", t.status), t);
            }
          }
        }, {
          key: "submitRequest",
          value: function (e, t, n) {
            if (e.readyState == 1) {
              e.send(t);
            } else {
              console.warn("Cannot send this request because the XMLHttpRequest.readyState is not OPENED.");
            }
          }
        }, {
          key: "_finished",
          value: function (e, t, n) {
            var i;
            var r = c(e, true);
            try {
              for (r.s(); !(i = r.n()).done;) {
                var a = i.value;
                a.status = o.SUCCESS;
                this.emit("success", a, t, n);
                this.emit("complete", a);
              }
            } catch (e) {
              r.e(e);
            } finally {
              r.f();
            }
            if (this.options.uploadMultiple) {
              this.emit("successmultiple", e, t, n);
              this.emit("completemultiple", e);
            }
            if (this.options.autoProcessQueue) {
              return this.processQueue();
            }
          }
        }, {
          key: "_errorProcessing",
          value: function (e, t, n) {
            var i;
            var r = c(e, true);
            try {
              for (r.s(); !(i = r.n()).done;) {
                var a = i.value;
                a.status = o.ERROR;
                this.emit("error", a, t, n);
                this.emit("complete", a);
              }
            } catch (e) {
              r.e(e);
            } finally {
              r.f();
            }
            if (this.options.uploadMultiple) {
              this.emit("errormultiple", e, t, n);
              this.emit("completemultiple", e);
            }
            if (this.options.autoProcessQueue) {
              return this.processQueue();
            }
          }
        }], [{
          key: "initClass",
          value: function () {
            this.prototype.Emitter = r;
            this.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "addedfiles", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached", "queuecomplete"];
            this.prototype._thumbnailQueue = [];
            this.prototype._processingThumbnail = false;
          }
        }, {
          key: "extend",
          value: function (e) {
            for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) {
              n[i - 1] = arguments[i];
            }
            for (var r = 0, o = n; r < o.length; r++) {
              var a = o[r];
              for (var s in a) {
                var l = a[s];
                e[s] = l;
              }
            }
            return e;
          }
        }, {
          key: "uuidv4",
          value: function () {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
              var t = Math.random() * 16 | 0;
              return (e === "x" ? t : t & 3 | 8).toString(16);
            });
          }
        }]);
        return o;
      }(r);
      y.initClass();
      y.version = "5.9.3";
      y.options = {};
      y.optionsForElement = function (e) {
        if (e.getAttribute("id")) {
          return y.options[w(e.getAttribute("id"))];
        } else {
          return undefined;
        }
      };
      y.instances = [];
      y.forElement = function (e) {
        if (typeof e == "string") {
          e = document.querySelector(e);
        }
        if ((e != null ? e.dropzone : undefined) == null) {
          throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
        }
        return e.dropzone;
      };
      y.autoDiscover = true;
      y.discover = function () {
        var e;
        if (document.querySelectorAll) {
          e = document.querySelectorAll(".dropzone");
        } else {
          e = [];
          var t = function (t) {
            return function () {
              var n;
              var i = [];
              var r = c(t, true);
              try {
                for (r.s(); !(n = r.n()).done;) {
                  var o = n.value;
                  if (/(^| )dropzone($| )/.test(o.className)) {
                    i.push(e.push(o));
                  } else {
                    i.push(undefined);
                  }
                }
              } catch (e) {
                r.e(e);
              } finally {
                r.f();
              }
              return i;
            }();
          };
          t(document.getElementsByTagName("div"));
          t(document.getElementsByTagName("form"));
        }
        return function () {
          var t;
          var n = [];
          var i = c(e, true);
          try {
            for (i.s(); !(t = i.n()).done;) {
              var r = t.value;
              if (y.optionsForElement(r) !== false) {
                n.push(new y(r));
              } else {
                n.push(undefined);
              }
            }
          } catch (e) {
            i.e(e);
          } finally {
            i.f();
          }
          return n;
        }();
      };
      y.blockedBrowsers = [/opera.*(Macintosh|Windows Phone).*version\/12/i];
      y.isBrowserSupported = function () {
        var e = true;
        if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {
          if ("classList" in document.createElement("a")) {
            if (y.blacklistedBrowsers !== undefined) {
              y.blockedBrowsers = y.blacklistedBrowsers;
            }
            var t;
            var n = c(y.blockedBrowsers, true);
            try {
              for (n.s(); !(t = n.n()).done;) {
                if (t.value.test(navigator.userAgent)) {
                  e = false;
                }
              }
            } catch (e) {
              n.e(e);
            } finally {
              n.f();
            }
          } else {
            e = false;
          }
        } else {
          e = false;
        }
        return e;
      };
      y.dataURItoBlob = function (e) {
        for (var t = atob(e.split(",")[1]), n = e.split(",")[0].split(":")[1].split(";")[0], i = new ArrayBuffer(t.length), r = new Uint8Array(i), o = 0, a = t.length, s = a >= 0; s ? o <= a : o >= a; s ? o++ : o--) {
          r[o] = t.charCodeAt(o);
        }
        return new Blob([i], {
          type: n
        });
      };
      var b = function (e, t) {
        return e.filter(function (e) {
          return e !== t;
        }).map(function (e) {
          return e;
        });
      };
      var w = function (e) {
        return e.replace(/[\-_](\w)/g, function (e) {
          return e.charAt(1).toUpperCase();
        });
      };
      y.createElement = function (e) {
        var t = document.createElement("div");
        t.innerHTML = e;
        return t.childNodes[0];
      };
      y.elementInside = function (e, t) {
        if (e === t) {
          return true;
        }
        for (; e = e.parentNode;) {
          if (e === t) {
            return true;
          }
        }
        return false;
      };
      y.getElement = function (e, t) {
        var n;
        if (typeof e == "string") {
          n = document.querySelector(e);
        } else if (e.nodeType != null) {
          n = e;
        }
        if (n == null) {
          throw new Error("Invalid `".concat(t, "` option provided. Please provide a CSS selector or a plain HTML element."));
        }
        return n;
      };
      y.getElements = function (e, t) {
        var n;
        var i;
        if (e instanceof Array) {
          i = [];
          try {
            var r;
            var o = c(e, true);
            try {
              for (o.s(); !(r = o.n()).done;) {
                n = r.value;
                i.push(this.getElement(n, t));
              }
            } catch (e) {
              o.e(e);
            } finally {
              o.f();
            }
          } catch (e) {
            i = null;
          }
        } else if (typeof e == "string") {
          i = [];
          var a;
          var s = c(document.querySelectorAll(e), true);
          try {
            for (s.s(); !(a = s.n()).done;) {
              n = a.value;
              i.push(n);
            }
          } catch (e) {
            s.e(e);
          } finally {
            s.f();
          }
        } else if (e.nodeType != null) {
          i = [e];
        }
        if (i == null || !i.length) {
          throw new Error("Invalid `".concat(t, "` option provided. Please provide a CSS selector, a plain HTML element or a list of those."));
        }
        return i;
      };
      y.confirm = function (e, t, n) {
        if (window.confirm(e)) {
          return t();
        } else if (n != null) {
          return n();
        } else {
          return undefined;
        }
      };
      y.isValidFile = function (e, t) {
        if (!t) {
          return true;
        }
        t = t.split(",");
        var n;
        var i = e.type;
        var r = i.replace(/\/.*$/, "");
        var o = c(t, true);
        try {
          for (o.s(); !(n = o.n()).done;) {
            var a = n.value;
            if ((a = a.trim()).charAt(0) === ".") {
              if (e.name.toLowerCase().indexOf(a.toLowerCase(), e.name.length - a.length) !== -1) {
                return true;
              }
            } else if (/\/\*$/.test(a)) {
              if (r === a.replace(/\/.*$/, "")) {
                return true;
              }
            } else if (i === a) {
              return true;
            }
          }
        } catch (e) {
          o.e(e);
        } finally {
          o.f();
        }
        return false;
      };
      if (typeof jQuery != "undefined" && jQuery !== null) {
        jQuery.fn.dropzone = function (e) {
          return this.each(function () {
            return new y(this, e);
          });
        };
      }
      y.ADDED = "added";
      y.QUEUED = "queued";
      y.ACCEPTED = y.QUEUED;
      y.UPLOADING = "uploading";
      y.PROCESSING = y.UPLOADING;
      y.CANCELED = "canceled";
      y.ERROR = "error";
      y.SUCCESS = "success";
      var x = function (e, t, n, i, r, o, a, s, l, c) {
        var u = function (e) {
          e.naturalWidth;
          var t = e.naturalHeight;
          var n = document.createElement("canvas");
          n.width = 1;
          n.height = t;
          var i = n.getContext("2d");
          i.drawImage(e, 0, 0);
          for (var r = i.getImageData(1, 0, 1, t).data, o = 0, a = t, s = t; s > o;) {
            if (r[(s - 1) * 4 + 3] === 0) {
              a = s;
            } else {
              o = s;
            }
            s = a + o >> 1;
          }
          var l = s / t;
          if (l === 0) {
            return 1;
          } else {
            return l;
          }
        }(t);
        return e.drawImage(t, n, i, r, o, a, s, l, c / u);
      };
      var _ = function () {
        function e() {
          d(this, e);
        }
        f(e, null, [{
          key: "initClass",
          value: function () {
            this.KEY_STR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
          }
        }, {
          key: "encode64",
          value: function (e) {
            for (var t = "", n = undefined, i = undefined, r = "", o = undefined, a = undefined, s = undefined, l = "", c = 0; o = (n = e[c++]) >> 2, a = (n & 3) << 4 | (i = e[c++]) >> 4, s = (i & 15) << 2 | (r = e[c++]) >> 6, l = r & 63, isNaN(i) ? s = l = 64 : isNaN(r) && (l = 64), t = t + this.KEY_STR.charAt(o) + this.KEY_STR.charAt(a) + this.KEY_STR.charAt(s) + this.KEY_STR.charAt(l), n = i = r = "", o = a = s = l = "", c < e.length;);
            return t;
          }
        }, {
          key: "restore",
          value: function (e, t) {
            if (!e.match("data:image/jpeg;base64,")) {
              return t;
            }
            var n = this.decode64(e.replace("data:image/jpeg;base64,", ""));
            var i = this.slice2Segments(n);
            var r = this.exifManipulation(t, i);
            return "data:image/jpeg;base64,".concat(this.encode64(r));
          }
        }, {
          key: "exifManipulation",
          value: function (e, t) {
            var n = this.getExifArray(t);
            var i = this.insertExif(e, n);
            return new Uint8Array(i);
          }
        }, {
          key: "getExifArray",
          value: function (e) {
            for (var t = undefined, n = 0; n < e.length;) {
              if ((t = e[n])[0] === 255 & t[1] === 225) {
                return t;
              }
              n++;
            }
            return [];
          }
        }, {
          key: "insertExif",
          value: function (e, t) {
            var n = e.replace("data:image/jpeg;base64,", "");
            var i = this.decode64(n);
            var r = i.indexOf(255, 3);
            var o = i.slice(0, r);
            var a = i.slice(r);
            return o.concat(t).concat(a);
          }
        }, {
          key: "slice2Segments",
          value: function (e) {
            for (var t = 0, n = []; !(e[t] === 255 & e[t + 1] === 218);) {
              if (e[t] === 255 & e[t + 1] === 216) {
                t += 2;
              } else {
                var i = t + (e[t + 2] * 256 + e[t + 3]) + 2;
                var r = e.slice(t, i);
                n.push(r);
                t = i;
              }
              if (t > e.length) {
                break;
              }
            }
            return n;
          }
        }, {
          key: "decode64",
          value: function (e) {
            var t = undefined;
            var n = undefined;
            var i = "";
            var r = undefined;
            var o = undefined;
            var a = "";
            var s = 0;
            var l = [];
            if (/[^A-Za-z0-9\+\/\=]/g.exec(e)) {
              console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding.");
            }
            e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            for (; t = this.KEY_STR.indexOf(e.charAt(s++)) << 2 | (r = this.KEY_STR.indexOf(e.charAt(s++))) >> 4, n = (r & 15) << 4 | (o = this.KEY_STR.indexOf(e.charAt(s++))) >> 2, i = (o & 3) << 6 | (a = this.KEY_STR.indexOf(e.charAt(s++))), l.push(t), o !== 64 && l.push(n), a !== 64 && l.push(i), t = n = i = "", r = o = a = "", s < e.length;);
            return l;
          }
        }]);
        return e;
      }();
      _.initClass();
      y._autoDiscoverFunction = function () {
        if (y.autoDiscover) {
          return y.discover();
        }
      };
      (function (e, t) {
        var n = false;
        var i = true;
        var r = e.document;
        var o = r.documentElement;
        var a = r.addEventListener ? "addEventListener" : "attachEvent";
        var s = r.addEventListener ? "removeEventListener" : "detachEvent";
        var l = r.addEventListener ? "" : "on";
        var c = function i(o) {
          if (o.type !== "readystatechange" || r.readyState === "complete") {
            (o.type === "load" ? e : r)[s](l + o.type, i, false);
            if (!n && (n = true)) {
              return t.call(e, o.type || o);
            } else {
              return undefined;
            }
          }
        };
        if (r.readyState !== "complete") {
          if (r.createEventObject && o.doScroll) {
            try {
              i = !e.frameElement;
            } catch (e) {}
            if (i) {
              (function e() {
                try {
                  o.doScroll("left");
                } catch (t) {
                  return void setTimeout(e, 50);
                }
                return c("poll");
              })();
            }
          }
          r[a](l + "DOMContentLoaded", c, false);
          r[a](l + "readystatechange", c, false);
          e[a](l + "load", c, false);
        }
      })(window, y._autoDiscoverFunction);
      window.Dropzone = y;
      var C = y;
    })();
    return i;
  }();
});
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery"], e);
  } else {
    e(typeof exports == "object" ? require("jquery") : jQuery);
  }
})(function (e, t) {
  function n() {
    return new Date(Date.UTC.apply(Date, arguments));
  }
  function i() {
    var e = new Date();
    return n(e.getFullYear(), e.getMonth(), e.getDate());
  }
  function r(e, t) {
    return e.getUTCFullYear() === t.getUTCFullYear() && e.getUTCMonth() === t.getUTCMonth() && e.getUTCDate() === t.getUTCDate();
  }
  function o(n, i) {
    return function () {
      if (i !== t) {
        e.fn.datepicker.deprecated(i);
      }
      return this[n].apply(this, arguments);
    };
  }
  function a(t, n) {
    function i(e, t) {
      return t.toLowerCase();
    }
    var r = e(t).data();
    var o = {};
    var a = new RegExp("^" + n.toLowerCase() + "([A-Z])");
    n = new RegExp("^" + n.toLowerCase());
    for (var s in r) {
      if (n.test(s)) {
        o[s.replace(a, i)] = r[s];
      }
    }
    return o;
  }
  function s(t) {
    var n = {};
    if (g[t] || (t = t.split("-")[0], g[t])) {
      var i = g[t];
      e.each(p, function (e, t) {
        if (t in i) {
          n[t] = i[t];
        }
      });
      return n;
    }
  }
  var l = function () {
    var t = {
      get: function (e) {
        return this.slice(e)[0];
      },
      contains: function (e) {
        for (var t = e && e.valueOf(), n = 0, i = this.length; n < i; n++) {
          if (this[n].valueOf() - t >= 0 && this[n].valueOf() - t < 86400000) {
            return n;
          }
        }
        return -1;
      },
      remove: function (e) {
        this.splice(e, 1);
      },
      replace: function (t) {
        if (t) {
          if (!e.isArray(t)) {
            t = [t];
          }
          this.clear();
          this.push.apply(this, t);
        }
      },
      clear: function () {
        this.length = 0;
      },
      copy: function () {
        var e = new l();
        e.replace(this);
        return e;
      }
    };
    return function () {
      var n = [];
      n.push.apply(n, arguments);
      e.extend(n, t);
      return n;
    };
  }();
  var c = function (t, n) {
    e.data(t, "datepicker", this);
    this._events = [];
    this._secondaryEvents = [];
    this._process_options(n);
    this.dates = new l();
    this.viewDate = this.o.defaultViewDate;
    this.focusDate = null;
    this.element = e(t);
    this.isInput = this.element.is("input");
    this.inputField = this.isInput ? this.element : this.element.find("input");
    this.component = !!this.element.hasClass("date") && this.element.find(".add-on, .input-group-addon, .input-group-append, .input-group-prepend, .btn");
    if (this.component && this.component.length === 0) {
      this.component = false;
    }
    this.isInline = !this.component && this.element.is("div");
    this.picker = e(m.template);
    if (this._check_template(this.o.templates.leftArrow)) {
      this.picker.find(".prev").html(this.o.templates.leftArrow);
    }
    if (this._check_template(this.o.templates.rightArrow)) {
      this.picker.find(".next").html(this.o.templates.rightArrow);
    }
    this._buildEvents();
    this._attachEvents();
    if (this.isInline) {
      this.picker.addClass("datepicker-inline").appendTo(this.element);
    } else {
      this.picker.addClass("datepicker-dropdown dropdown-menu");
    }
    if (this.o.rtl) {
      this.picker.addClass("datepicker-rtl");
    }
    if (this.o.calendarWeeks) {
      this.picker.find(".datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear").attr("colspan", function (e, t) {
        return Number(t) + 1;
      });
    }
    this._process_options({
      startDate: this._o.startDate,
      endDate: this._o.endDate,
      daysOfWeekDisabled: this.o.daysOfWeekDisabled,
      daysOfWeekHighlighted: this.o.daysOfWeekHighlighted,
      datesDisabled: this.o.datesDisabled
    });
    this._allow_update = false;
    this.setViewMode(this.o.startView);
    this._allow_update = true;
    this.fillDow();
    this.fillMonths();
    this.update();
    if (this.isInline) {
      this.show();
    }
  };
  c.prototype = {
    constructor: c,
    _resolveViewName: function (t) {
      e.each(m.viewModes, function (n, i) {
        if (t === n || e.inArray(t, i.names) !== -1) {
          t = n;
          return false;
        }
      });
      return t;
    },
    _resolveDaysOfWeek: function (t) {
      if (!e.isArray(t)) {
        t = t.split(/[,\s]*/);
      }
      return e.map(t, Number);
    },
    _check_template: function (n) {
      try {
        return n !== t && n !== "" && ((n.match(/[<>]/g) || []).length <= 0 || e(n).length > 0);
      } catch (e) {
        return false;
      }
    },
    _process_options: function (t) {
      this._o = e.extend({}, this._o, t);
      var r = this.o = e.extend({}, this._o);
      var o = r.language;
      if (!g[o]) {
        o = o.split("-")[0];
        if (!g[o]) {
          o = f.language;
        }
      }
      r.language = o;
      r.startView = this._resolveViewName(r.startView);
      r.minViewMode = this._resolveViewName(r.minViewMode);
      r.maxViewMode = this._resolveViewName(r.maxViewMode);
      r.startView = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, r.startView));
      if (r.multidate !== true) {
        r.multidate = Number(r.multidate) || false;
        if (r.multidate !== false) {
          r.multidate = Math.max(0, r.multidate);
        }
      }
      r.multidateSeparator = String(r.multidateSeparator);
      r.weekStart %= 7;
      r.weekEnd = (r.weekStart + 6) % 7;
      var a = m.parseFormat(r.format);
      if (r.startDate !== -1 / 0) {
        if (r.startDate) {
          if (r.startDate instanceof Date) {
            r.startDate = this._local_to_utc(this._zero_time(r.startDate));
          } else {
            r.startDate = m.parseDate(r.startDate, a, r.language, r.assumeNearbyYear);
          }
        } else {
          r.startDate = -1 / 0;
        }
      }
      if (r.endDate !== 1 / 0) {
        if (r.endDate) {
          if (r.endDate instanceof Date) {
            r.endDate = this._local_to_utc(this._zero_time(r.endDate));
          } else {
            r.endDate = m.parseDate(r.endDate, a, r.language, r.assumeNearbyYear);
          }
        } else {
          r.endDate = 1 / 0;
        }
      }
      r.daysOfWeekDisabled = this._resolveDaysOfWeek(r.daysOfWeekDisabled || []);
      r.daysOfWeekHighlighted = this._resolveDaysOfWeek(r.daysOfWeekHighlighted || []);
      r.datesDisabled = r.datesDisabled || [];
      if (!e.isArray(r.datesDisabled)) {
        r.datesDisabled = r.datesDisabled.split(",");
      }
      r.datesDisabled = e.map(r.datesDisabled, function (e) {
        return m.parseDate(e, a, r.language, r.assumeNearbyYear);
      });
      var s = String(r.orientation).toLowerCase().split(/\s+/g);
      var l = r.orientation.toLowerCase();
      s = e.grep(s, function (e) {
        return /^auto|left|right|top|bottom$/.test(e);
      });
      r.orientation = {
        x: "auto",
        y: "auto"
      };
      if (l && l !== "auto") {
        if (s.length === 1) {
          switch (s[0]) {
            case "top":
            case "bottom":
              r.orientation.y = s[0];
              break;
            case "left":
            case "right":
              r.orientation.x = s[0];
          }
        } else {
          l = e.grep(s, function (e) {
            return /^left|right$/.test(e);
          });
          r.orientation.x = l[0] || "auto";
          l = e.grep(s, function (e) {
            return /^top|bottom$/.test(e);
          });
          r.orientation.y = l[0] || "auto";
        }
      }
      if (r.defaultViewDate instanceof Date || typeof r.defaultViewDate == "string") {
        r.defaultViewDate = m.parseDate(r.defaultViewDate, a, r.language, r.assumeNearbyYear);
      } else if (r.defaultViewDate) {
        var c = r.defaultViewDate.year || new Date().getFullYear();
        var u = r.defaultViewDate.month || 0;
        var d = r.defaultViewDate.day || 1;
        r.defaultViewDate = n(c, u, d);
      } else {
        r.defaultViewDate = i();
      }
    },
    _applyEvents: function (e) {
      for (var n, i, r, o = 0; o < e.length; o++) {
        n = e[o][0];
        if (e[o].length === 2) {
          i = t;
          r = e[o][1];
        } else if (e[o].length === 3) {
          i = e[o][1];
          r = e[o][2];
        }
        n.on(r, i);
      }
    },
    _unapplyEvents: function (e) {
      for (var n, i, r, o = 0; o < e.length; o++) {
        n = e[o][0];
        if (e[o].length === 2) {
          r = t;
          i = e[o][1];
        } else if (e[o].length === 3) {
          r = e[o][1];
          i = e[o][2];
        }
        n.off(i, r);
      }
    },
    _buildEvents: function () {
      var t = {
        keyup: e.proxy(function (t) {
          if (e.inArray(t.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) === -1) {
            this.update();
          }
        }, this),
        keydown: e.proxy(this.keydown, this),
        paste: e.proxy(this.paste, this)
      };
      if (this.o.showOnFocus === true) {
        t.focus = e.proxy(this.show, this);
      }
      if (this.isInput) {
        this._events = [[this.element, t]];
      } else if (this.component && this.inputField.length) {
        this._events = [[this.inputField, t], [this.component, {
          click: e.proxy(this.show, this)
        }]];
      } else {
        this._events = [[this.element, {
          click: e.proxy(this.show, this),
          keydown: e.proxy(this.keydown, this)
        }]];
      }
      this._events.push([this.element, "*", {
        blur: e.proxy(function (e) {
          this._focused_from = e.target;
        }, this)
      }], [this.element, {
        blur: e.proxy(function (e) {
          this._focused_from = e.target;
        }, this)
      }]);
      if (this.o.immediateUpdates) {
        this._events.push([this.element, {
          "changeYear changeMonth": e.proxy(function (e) {
            this.update(e.date);
          }, this)
        }]);
      }
      this._secondaryEvents = [[this.picker, {
        click: e.proxy(this.click, this)
      }], [this.picker, ".prev, .next", {
        click: e.proxy(this.navArrowsClick, this)
      }], [this.picker, ".day:not(.disabled)", {
        click: e.proxy(this.dayCellClick, this)
      }], [e(window), {
        resize: e.proxy(this.place, this)
      }], [e(document), {
        "mousedown touchstart": e.proxy(function (e) {
          if (!(this.element.is(e.target) || this.element.find(e.target).length || this.picker.is(e.target) || this.picker.find(e.target).length || this.isInline)) {
            this.hide();
          }
        }, this)
      }]];
    },
    _attachEvents: function () {
      this._detachEvents();
      this._applyEvents(this._events);
    },
    _detachEvents: function () {
      this._unapplyEvents(this._events);
    },
    _attachSecondaryEvents: function () {
      this._detachSecondaryEvents();
      this._applyEvents(this._secondaryEvents);
    },
    _detachSecondaryEvents: function () {
      this._unapplyEvents(this._secondaryEvents);
    },
    _trigger: function (t, n) {
      var i = n || this.dates.get(-1);
      var r = this._utc_to_local(i);
      this.element.trigger({
        type: t,
        date: r,
        viewMode: this.viewMode,
        dates: e.map(this.dates, this._utc_to_local),
        format: e.proxy(function (e, t) {
          if (arguments.length === 0) {
            e = this.dates.length - 1;
            t = this.o.format;
          } else if (typeof e == "string") {
            t = e;
            e = this.dates.length - 1;
          }
          t = t || this.o.format;
          var n = this.dates.get(e);
          return m.formatDate(n, t, this.o.language);
        }, this)
      });
    },
    show: function () {
      if (!(this.inputField.is(":disabled") || this.inputField.prop("readonly") && this.o.enableOnReadonly === false)) {
        if (!this.isInline) {
          this.picker.appendTo(this.o.container);
        }
        this.place();
        this.picker.show();
        this._attachSecondaryEvents();
        this._trigger("show");
        if ((window.navigator.msMaxTouchPoints || "ontouchstart" in document) && this.o.disableTouchKeyboard) {
          e(this.element).blur();
        }
        return this;
      }
    },
    hide: function () {
      if (!(this.isInline || !this.picker.is(":visible"))) {
        this.focusDate = null;
        this.picker.hide().detach();
        this._detachSecondaryEvents();
        this.setViewMode(this.o.startView);
        if (this.o.forceParse && this.inputField.val()) {
          this.setValue();
        }
        this._trigger("hide");
      }
      return this;
    },
    destroy: function () {
      this.hide();
      this._detachEvents();
      this._detachSecondaryEvents();
      this.picker.remove();
      delete this.element.data().datepicker;
      if (!this.isInput) {
        delete this.element.data().date;
      }
      return this;
    },
    paste: function (t) {
      var n;
      if (t.originalEvent.clipboardData && t.originalEvent.clipboardData.types && e.inArray("text/plain", t.originalEvent.clipboardData.types) !== -1) {
        n = t.originalEvent.clipboardData.getData("text/plain");
      } else {
        if (!window.clipboardData) {
          return;
        }
        n = window.clipboardData.getData("Text");
      }
      this.setDate(n);
      this.update();
      t.preventDefault();
    },
    _utc_to_local: function (e) {
      if (!e) {
        return e;
      }
      var t = new Date(e.getTime() + e.getTimezoneOffset() * 60000);
      if (t.getTimezoneOffset() !== e.getTimezoneOffset()) {
        t = new Date(e.getTime() + t.getTimezoneOffset() * 60000);
      }
      return t;
    },
    _local_to_utc: function (e) {
      return e && new Date(e.getTime() - e.getTimezoneOffset() * 60000);
    },
    _zero_time: function (e) {
      return e && new Date(e.getFullYear(), e.getMonth(), e.getDate());
    },
    _zero_utc_time: function (e) {
      return e && n(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate());
    },
    getDates: function () {
      return e.map(this.dates, this._utc_to_local);
    },
    getUTCDates: function () {
      return e.map(this.dates, function (e) {
        return new Date(e);
      });
    },
    getDate: function () {
      return this._utc_to_local(this.getUTCDate());
    },
    getUTCDate: function () {
      var e = this.dates.get(-1);
      if (e !== t) {
        return new Date(e);
      } else {
        return null;
      }
    },
    clearDates: function () {
      this.inputField.val("");
      this.update();
      this._trigger("changeDate");
      if (this.o.autoclose) {
        this.hide();
      }
    },
    setDates: function () {
      var t = e.isArray(arguments[0]) ? arguments[0] : arguments;
      this.update.apply(this, t);
      this._trigger("changeDate");
      this.setValue();
      return this;
    },
    setUTCDates: function () {
      var t = e.isArray(arguments[0]) ? arguments[0] : arguments;
      this.setDates.apply(this, e.map(t, this._utc_to_local));
      return this;
    },
    setDate: o("setDates"),
    setUTCDate: o("setUTCDates"),
    remove: o("destroy", "Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead"),
    setValue: function () {
      var e = this.getFormattedDate();
      this.inputField.val(e);
      return this;
    },
    getFormattedDate: function (n) {
      if (n === t) {
        n = this.o.format;
      }
      var i = this.o.language;
      return e.map(this.dates, function (e) {
        return m.formatDate(e, n, i);
      }).join(this.o.multidateSeparator);
    },
    getStartDate: function () {
      return this.o.startDate;
    },
    setStartDate: function (e) {
      this._process_options({
        startDate: e
      });
      this.update();
      this.updateNavArrows();
      return this;
    },
    getEndDate: function () {
      return this.o.endDate;
    },
    setEndDate: function (e) {
      this._process_options({
        endDate: e
      });
      this.update();
      this.updateNavArrows();
      return this;
    },
    setDaysOfWeekDisabled: function (e) {
      this._process_options({
        daysOfWeekDisabled: e
      });
      this.update();
      return this;
    },
    setDaysOfWeekHighlighted: function (e) {
      this._process_options({
        daysOfWeekHighlighted: e
      });
      this.update();
      return this;
    },
    setDatesDisabled: function (e) {
      this._process_options({
        datesDisabled: e
      });
      this.update();
      return this;
    },
    place: function () {
      if (this.isInline) {
        return this;
      }
      var t = this.picker.outerWidth();
      var n = this.picker.outerHeight();
      var i = e(this.o.container);
      var r = i.width();
      var o = this.o.container === "body" ? e(document).scrollTop() : i.scrollTop();
      var a = i.offset();
      var s = [0];
      this.element.parents().each(function () {
        var t = e(this).css("z-index");
        if (t !== "auto" && Number(t) !== 0) {
          s.push(Number(t));
        }
      });
      var l = Math.max.apply(Math, s) + this.o.zIndexOffset;
      var c = this.component ? this.component.parent().offset() : this.element.offset();
      var u = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false);
      var d = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false);
      var h = c.left - a.left;
      var f = c.top - a.top;
      if (this.o.container !== "body") {
        f += o;
      }
      this.picker.removeClass("datepicker-orient-top datepicker-orient-bottom datepicker-orient-right datepicker-orient-left");
      if (this.o.orientation.x !== "auto") {
        this.picker.addClass("datepicker-orient-" + this.o.orientation.x);
        if (this.o.orientation.x === "right") {
          h -= t - d;
        }
      } else if (c.left < 0) {
        this.picker.addClass("datepicker-orient-left");
        h -= c.left - 10;
      } else if (h + t > r) {
        this.picker.addClass("datepicker-orient-right");
        h += d - t;
      } else if (this.o.rtl) {
        this.picker.addClass("datepicker-orient-right");
      } else {
        this.picker.addClass("datepicker-orient-left");
      }
      var p = this.o.orientation.y;
      if (p === "auto") {
        p = -o + f - n < 0 ? "bottom" : "top";
      }
      this.picker.addClass("datepicker-orient-" + p);
      if (p === "top") {
        f -= n + parseInt(this.picker.css("padding-top"));
      } else {
        f += u;
      }
      if (this.o.rtl) {
        var g = r - (h + d);
        this.picker.css({
          top: f,
          right: g,
          zIndex: l
        });
      } else {
        this.picker.css({
          top: f,
          left: h,
          zIndex: l
        });
      }
      return this;
    },
    _allow_update: true,
    update: function () {
      if (!this._allow_update) {
        return this;
      }
      var t = this.dates.copy();
      var n = [];
      var i = false;
      if (arguments.length) {
        e.each(arguments, e.proxy(function (e, t) {
          if (t instanceof Date) {
            t = this._local_to_utc(t);
          }
          n.push(t);
        }, this));
        i = true;
      } else {
        n = (n = this.isInput ? this.element.val() : this.element.data("date") || this.inputField.val()) && this.o.multidate ? n.split(this.o.multidateSeparator) : [n];
        delete this.element.data().date;
      }
      n = e.map(n, e.proxy(function (e) {
        return m.parseDate(e, this.o.format, this.o.language, this.o.assumeNearbyYear);
      }, this));
      n = e.grep(n, e.proxy(function (e) {
        return !this.dateWithinRange(e) || !e;
      }, this), true);
      this.dates.replace(n);
      if (this.o.updateViewDate) {
        if (this.dates.length) {
          this.viewDate = new Date(this.dates.get(-1));
        } else if (this.viewDate < this.o.startDate) {
          this.viewDate = new Date(this.o.startDate);
        } else if (this.viewDate > this.o.endDate) {
          this.viewDate = new Date(this.o.endDate);
        } else {
          this.viewDate = this.o.defaultViewDate;
        }
      }
      if (i) {
        this.setValue();
        this.element.change();
      } else if (this.dates.length && String(t) !== String(this.dates) && i) {
        this._trigger("changeDate");
        this.element.change();
      }
      if (!this.dates.length && t.length) {
        this._trigger("clearDate");
        this.element.change();
      }
      this.fill();
      return this;
    },
    fillDow: function () {
      if (this.o.showWeekDays) {
        var t = this.o.weekStart;
        var n = "<tr>";
        for (this.o.calendarWeeks && (n += "<th class=\"cw\">&#160;</th>"); t < this.o.weekStart + 7;) {
          n += "<th class=\"dow";
          if (e.inArray(t, this.o.daysOfWeekDisabled) !== -1) {
            n += " disabled";
          }
          n += "\">" + g[this.o.language].daysMin[t++ % 7] + "</th>";
        }
        n += "</tr>";
        this.picker.find(".datepicker-days thead").append(n);
      }
    },
    fillMonths: function () {
      for (var e = this._utc_to_local(this.viewDate), t = "", n = 0; n < 12; n++) {
        t += "<span class=\"month" + (e && e.getMonth() === n ? " focused" : "") + "\">" + g[this.o.language].monthsShort[n] + "</span>";
      }
      this.picker.find(".datepicker-months td").html(t);
    },
    setRange: function (t) {
      if (t && t.length) {
        this.range = e.map(t, function (e) {
          return e.valueOf();
        });
      } else {
        delete this.range;
      }
      this.fill();
    },
    getClassNames: function (t) {
      var n = [];
      var o = this.viewDate.getUTCFullYear();
      var a = this.viewDate.getUTCMonth();
      var s = i();
      if (t.getUTCFullYear() < o || t.getUTCFullYear() === o && t.getUTCMonth() < a) {
        n.push("old");
      } else if (t.getUTCFullYear() > o || t.getUTCFullYear() === o && t.getUTCMonth() > a) {
        n.push("new");
      }
      if (this.focusDate && t.valueOf() === this.focusDate.valueOf()) {
        n.push("focused");
      }
      if (this.o.todayHighlight && r(t, s)) {
        n.push("today");
      }
      if (this.dates.contains(t) !== -1) {
        n.push("active");
      }
      if (!this.dateWithinRange(t)) {
        n.push("disabled");
      }
      if (this.dateIsDisabled(t)) {
        n.push("disabled", "disabled-date");
      }
      if (e.inArray(t.getUTCDay(), this.o.daysOfWeekHighlighted) !== -1) {
        n.push("highlighted");
      }
      if (this.range) {
        if (t > this.range[0] && t < this.range[this.range.length - 1]) {
          n.push("range");
        }
        if (e.inArray(t.valueOf(), this.range) !== -1) {
          n.push("selected");
        }
        if (t.valueOf() === this.range[0]) {
          n.push("range-start");
        }
        if (t.valueOf() === this.range[this.range.length - 1]) {
          n.push("range-end");
        }
      }
      return n;
    },
    _fill_yearsView: function (n, i, r, o, a, s, l) {
      for (var c, u, d, h = "", f = r / 10, p = this.picker.find(n), g = Math.floor(o / r) * r, m = g + f * 9, v = Math.floor(this.viewDate.getFullYear() / f) * f, y = e.map(this.dates, function (e) {
          return Math.floor(e.getUTCFullYear() / f) * f;
        }), b = g - f; b <= m + f; b += f) {
        c = [i];
        u = null;
        if (b === g - f) {
          c.push("old");
        } else if (b === m + f) {
          c.push("new");
        }
        if (e.inArray(b, y) !== -1) {
          c.push("active");
        }
        if (b < a || b > s) {
          c.push("disabled");
        }
        if (b === v) {
          c.push("focused");
        }
        if (l !== e.noop) {
          if ((d = l(new Date(b, 0, 1))) === t) {
            d = {};
          } else if (typeof d == "boolean") {
            d = {
              enabled: d
            };
          } else if (typeof d == "string") {
            d = {
              classes: d
            };
          }
          if (d.enabled === false) {
            c.push("disabled");
          }
          if (d.classes) {
            c = c.concat(d.classes.split(/\s+/));
          }
          if (d.tooltip) {
            u = d.tooltip;
          }
        }
        h += "<span class=\"" + c.join(" ") + "\"" + (u ? " title=\"" + u + "\"" : "") + ">" + b + "</span>";
      }
      p.find(".datepicker-switch").text(g + "-" + m);
      p.find("td").html(h);
    },
    fill: function () {
      var r;
      var o;
      var a = new Date(this.viewDate);
      var s = a.getUTCFullYear();
      var l = a.getUTCMonth();
      var c = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCFullYear() : -1 / 0;
      var u = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0;
      var d = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCFullYear() : 1 / 0;
      var h = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCMonth() : 1 / 0;
      var f = g[this.o.language].today || g.en.today || "";
      var p = g[this.o.language].clear || g.en.clear || "";
      var v = g[this.o.language].titleFormat || g.en.titleFormat;
      var y = i();
      var b = (this.o.todayBtn === true || this.o.todayBtn === "linked") && y >= this.o.startDate && y <= this.o.endDate && !this.weekOfDateIsDisabled(y);
      if (!isNaN(s) && !isNaN(l)) {
        this.picker.find(".datepicker-days .datepicker-switch").text(m.formatDate(a, v, this.o.language));
        this.picker.find("tfoot .today").text(f).css("display", b ? "table-cell" : "none");
        this.picker.find("tfoot .clear").text(p).css("display", this.o.clearBtn === true ? "table-cell" : "none");
        this.picker.find("thead .datepicker-title").text(this.o.title).css("display", typeof this.o.title == "string" && this.o.title !== "" ? "table-cell" : "none");
        this.updateNavArrows();
        this.fillMonths();
        var w = n(s, l, 0);
        var x = w.getUTCDate();
        w.setUTCDate(x - (w.getUTCDay() - this.o.weekStart + 7) % 7);
        var _ = new Date(w);
        if (w.getUTCFullYear() < 100) {
          _.setUTCFullYear(w.getUTCFullYear());
        }
        _.setUTCDate(_.getUTCDate() + 42);
        _ = _.valueOf();
        for (var C, S, k = []; w.valueOf() < _;) {
          if ((C = w.getUTCDay()) === this.o.weekStart && (k.push("<tr>"), this.o.calendarWeeks)) {
            var T = new Date(+w + (this.o.weekStart - C - 7) % 7 * 86400000);
            var A = new Date(Number(T) + (11 - T.getUTCDay()) % 7 * 86400000);
            var D = new Date(Number(D = n(A.getUTCFullYear(), 0, 1)) + (11 - D.getUTCDay()) % 7 * 86400000);
            var E = (A - D) / 86400000 / 7 + 1;
            k.push("<td class=\"cw\">" + E + "</td>");
          }
          (S = this.getClassNames(w)).push("day");
          var O = w.getUTCDate();
          if (this.o.beforeShowDay !== e.noop) {
            if ((o = this.o.beforeShowDay(this._utc_to_local(w))) === t) {
              o = {};
            } else if (typeof o == "boolean") {
              o = {
                enabled: o
              };
            } else if (typeof o == "string") {
              o = {
                classes: o
              };
            }
            if (o.enabled === false) {
              S.push("disabled");
            }
            if (o.classes) {
              S = S.concat(o.classes.split(/\s+/));
            }
            if (o.tooltip) {
              r = o.tooltip;
            }
            if (o.content) {
              O = o.content;
            }
          }
          S = e.isFunction(e.uniqueSort) ? e.uniqueSort(S) : e.unique(S);
          k.push("<td class=\"" + S.join(" ") + "\"" + (r ? " title=\"" + r + "\"" : "") + " data-date=\"" + w.getTime().toString() + "\">" + O + "</td>");
          r = null;
          if (C === this.o.weekEnd) {
            k.push("</tr>");
          }
          w.setUTCDate(w.getUTCDate() + 1);
        }
        this.picker.find(".datepicker-days tbody").html(k.join(""));
        var M = g[this.o.language].monthsTitle || g.en.monthsTitle || "Months";
        var I = this.picker.find(".datepicker-months").find(".datepicker-switch").text(this.o.maxViewMode < 2 ? M : s).end().find("tbody span").removeClass("active");
        e.each(this.dates, function (e, t) {
          if (t.getUTCFullYear() === s) {
            I.eq(t.getUTCMonth()).addClass("active");
          }
        });
        if (s < c || s > d) {
          I.addClass("disabled");
        }
        if (s === c) {
          I.slice(0, u).addClass("disabled");
        }
        if (s === d) {
          I.slice(h + 1).addClass("disabled");
        }
        if (this.o.beforeShowMonth !== e.noop) {
          var P = this;
          e.each(I, function (n, i) {
            var r = new Date(s, n, 1);
            var o = P.o.beforeShowMonth(r);
            if (o === t) {
              o = {};
            } else if (typeof o == "boolean") {
              o = {
                enabled: o
              };
            } else if (typeof o == "string") {
              o = {
                classes: o
              };
            }
            if (!(o.enabled !== false || e(i).hasClass("disabled"))) {
              e(i).addClass("disabled");
            }
            if (o.classes) {
              e(i).addClass(o.classes);
            }
            if (o.tooltip) {
              e(i).prop("title", o.tooltip);
            }
          });
        }
        this._fill_yearsView(".datepicker-years", "year", 10, s, c, d, this.o.beforeShowYear);
        this._fill_yearsView(".datepicker-decades", "decade", 100, s, c, d, this.o.beforeShowDecade);
        this._fill_yearsView(".datepicker-centuries", "century", 1000, s, c, d, this.o.beforeShowCentury);
      }
    },
    updateNavArrows: function () {
      if (this._allow_update) {
        var e;
        var t;
        var n = new Date(this.viewDate);
        var i = n.getUTCFullYear();
        var r = n.getUTCMonth();
        var o = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCFullYear() : -1 / 0;
        var a = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0;
        var s = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCFullYear() : 1 / 0;
        var l = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCMonth() : 1 / 0;
        var c = 1;
        switch (this.viewMode) {
          case 4:
            c *= 10;
          case 3:
            c *= 10;
          case 2:
            c *= 10;
          case 1:
            e = Math.floor(i / c) * c <= o;
            t = Math.floor(i / c) * c + c > s;
            break;
          case 0:
            e = i <= o && r <= a;
            t = i >= s && r >= l;
        }
        this.picker.find(".prev").toggleClass("disabled", e);
        this.picker.find(".next").toggleClass("disabled", t);
      }
    },
    click: function (t) {
      var r;
      var o;
      var a;
      t.preventDefault();
      t.stopPropagation();
      if ((r = e(t.target)).hasClass("datepicker-switch") && this.viewMode !== this.o.maxViewMode) {
        this.setViewMode(this.viewMode + 1);
      }
      if (r.hasClass("today") && !r.hasClass("day")) {
        this.setViewMode(0);
        this._setDate(i(), this.o.todayBtn === "linked" ? null : "view");
      }
      if (r.hasClass("clear")) {
        this.clearDates();
      }
      if (!r.hasClass("disabled")) {
        if (r.hasClass("month") || r.hasClass("year") || r.hasClass("decade") || r.hasClass("century")) {
          this.viewDate.setUTCDate(1);
          1;
          if (this.viewMode === 1) {
            a = r.parent().find("span").index(r);
            o = this.viewDate.getUTCFullYear();
            this.viewDate.setUTCMonth(a);
          } else {
            a = 0;
            o = Number(r.text());
            this.viewDate.setUTCFullYear(o);
          }
          this._trigger(m.viewModes[this.viewMode - 1].e, this.viewDate);
          if (this.viewMode === this.o.minViewMode) {
            this._setDate(n(o, a, 1));
          } else {
            this.setViewMode(this.viewMode - 1);
            this.fill();
          }
        }
      }
      if (this.picker.is(":visible") && this._focused_from) {
        this._focused_from.focus();
      }
      delete this._focused_from;
    },
    dayCellClick: function (t) {
      var n = e(t.currentTarget).data("date");
      var i = new Date(n);
      if (this.o.updateViewDate) {
        if (i.getUTCFullYear() !== this.viewDate.getUTCFullYear()) {
          this._trigger("changeYear", this.viewDate);
        }
        if (i.getUTCMonth() !== this.viewDate.getUTCMonth()) {
          this._trigger("changeMonth", this.viewDate);
        }
      }
      this._setDate(i);
    },
    navArrowsClick: function (t) {
      var n = e(t.currentTarget).hasClass("prev") ? -1 : 1;
      if (this.viewMode !== 0) {
        n *= m.viewModes[this.viewMode].navStep * 12;
      }
      this.viewDate = this.moveMonth(this.viewDate, n);
      this._trigger(m.viewModes[this.viewMode].e, this.viewDate);
      this.fill();
    },
    _toggle_multidate: function (e) {
      var t = this.dates.contains(e);
      if (!e) {
        this.dates.clear();
      }
      if (t !== -1) {
        if (this.o.multidate === true || this.o.multidate > 1 || this.o.toggleActive) {
          this.dates.remove(t);
        }
      } else if (this.o.multidate === false) {
        this.dates.clear();
        this.dates.push(e);
      } else {
        this.dates.push(e);
      }
      if (typeof this.o.multidate == "number") {
        for (; this.dates.length > this.o.multidate;) {
          this.dates.remove(0);
        }
      }
    },
    _setDate: function (e, t) {
      if (!(t && t !== "date")) {
        this._toggle_multidate(e && new Date(e));
      }
      if (!t && this.o.updateViewDate || t === "view") {
        this.viewDate = e && new Date(e);
      }
      this.fill();
      this.setValue();
      if (!(t && t === "view")) {
        this._trigger("changeDate");
      }
      this.inputField.trigger("change");
      if (!(!this.o.autoclose || t && t !== "date")) {
        this.hide();
      }
    },
    moveDay: function (e, t) {
      var n = new Date(e);
      n.setUTCDate(e.getUTCDate() + t);
      return n;
    },
    moveWeek: function (e, t) {
      return this.moveDay(e, t * 7);
    },
    moveMonth: function (e, t) {
      if (!function (e) {
        return e && !isNaN(e.getTime());
      }(e)) {
        return this.o.defaultViewDate;
      }
      if (!t) {
        return e;
      }
      var n;
      var i;
      var r = new Date(e.valueOf());
      var o = r.getUTCDate();
      var a = r.getUTCMonth();
      var s = Math.abs(t);
      t = t > 0 ? 1 : -1;
      if (s === 1) {
        i = t === -1 ? function () {
          return r.getUTCMonth() === a;
        } : function () {
          return r.getUTCMonth() !== n;
        };
        n = a + t;
        r.setUTCMonth(n);
        n = (n + 12) % 12;
      } else {
        for (var l = 0; l < s; l++) {
          r = this.moveMonth(r, t);
        }
        n = r.getUTCMonth();
        r.setUTCDate(o);
        i = function () {
          return n !== r.getUTCMonth();
        };
      }
      for (; i();) {
        r.setUTCDate(--o);
        r.setUTCMonth(n);
      }
      return r;
    },
    moveYear: function (e, t) {
      return this.moveMonth(e, t * 12);
    },
    moveAvailableDate: function (e, t, n) {
      do {
        e = this[n](e, t);
        if (!this.dateWithinRange(e)) {
          return false;
        }
        n = "moveDay";
      } while (this.dateIsDisabled(e));
      return e;
    },
    weekOfDateIsDisabled: function (t) {
      return e.inArray(t.getUTCDay(), this.o.daysOfWeekDisabled) !== -1;
    },
    dateIsDisabled: function (t) {
      return this.weekOfDateIsDisabled(t) || e.grep(this.o.datesDisabled, function (e) {
        return r(t, e);
      }).length > 0;
    },
    dateWithinRange: function (e) {
      return e >= this.o.startDate && e <= this.o.endDate;
    },
    keydown: function (e) {
      if (this.picker.is(":visible")) {
        var t;
        var n;
        var i = false;
        var r = this.focusDate || this.viewDate;
        switch (e.keyCode) {
          case 27:
            if (this.focusDate) {
              this.focusDate = null;
              this.viewDate = this.dates.get(-1) || this.viewDate;
              this.fill();
            } else {
              this.hide();
            }
            e.preventDefault();
            e.stopPropagation();
            break;
          case 37:
          case 38:
          case 39:
          case 40:
            if (!this.o.keyboardNavigation || this.o.daysOfWeekDisabled.length === 7) {
              break;
            }
            t = e.keyCode === 37 || e.keyCode === 38 ? -1 : 1;
            if (this.viewMode === 0) {
              if (e.ctrlKey) {
                if (n = this.moveAvailableDate(r, t, "moveYear")) {
                  this._trigger("changeYear", this.viewDate);
                }
              } else if (e.shiftKey) {
                if (n = this.moveAvailableDate(r, t, "moveMonth")) {
                  this._trigger("changeMonth", this.viewDate);
                }
              } else if (e.keyCode === 37 || e.keyCode === 39) {
                n = this.moveAvailableDate(r, t, "moveDay");
              } else if (!this.weekOfDateIsDisabled(r)) {
                n = this.moveAvailableDate(r, t, "moveWeek");
              }
            } else if (this.viewMode === 1) {
              if (!(e.keyCode !== 38 && e.keyCode !== 40)) {
                t *= 4;
              }
              n = this.moveAvailableDate(r, t, "moveMonth");
            } else if (this.viewMode === 2) {
              if (!(e.keyCode !== 38 && e.keyCode !== 40)) {
                t *= 4;
              }
              n = this.moveAvailableDate(r, t, "moveYear");
            }
            if (n) {
              this.focusDate = this.viewDate = n;
              this.setValue();
              this.fill();
              e.preventDefault();
            }
            break;
          case 13:
            if (!this.o.forceParse) {
              break;
            }
            r = this.focusDate || this.dates.get(-1) || this.viewDate;
            if (this.o.keyboardNavigation) {
              this._toggle_multidate(r);
              i = true;
            }
            this.focusDate = null;
            this.viewDate = this.dates.get(-1) || this.viewDate;
            this.setValue();
            this.fill();
            if (this.picker.is(":visible")) {
              e.preventDefault();
              e.stopPropagation();
              if (this.o.autoclose) {
                this.hide();
              }
            }
            break;
          case 9:
            this.focusDate = null;
            this.viewDate = this.dates.get(-1) || this.viewDate;
            this.fill();
            this.hide();
        }
        if (i) {
          if (this.dates.length) {
            this._trigger("changeDate");
          } else {
            this._trigger("clearDate");
          }
          this.inputField.trigger("change");
        }
      } else if (!(e.keyCode !== 40 && e.keyCode !== 27)) {
        this.show();
        e.stopPropagation();
      }
    },
    setViewMode: function (e) {
      this.viewMode = e;
      this.picker.children("div").hide().filter(".datepicker-" + m.viewModes[this.viewMode].clsName).show();
      this.updateNavArrows();
      this._trigger("changeViewMode", new Date(this.viewDate));
    }
  };
  var u = function (t, n) {
    e.data(t, "datepicker", this);
    this.element = e(t);
    this.inputs = e.map(n.inputs, function (e) {
      if (e.jquery) {
        return e[0];
      } else {
        return e;
      }
    });
    delete n.inputs;
    this.keepEmptyValues = n.keepEmptyValues;
    delete n.keepEmptyValues;
    h.call(e(this.inputs), n).on("changeDate", e.proxy(this.dateUpdated, this));
    this.pickers = e.map(this.inputs, function (t) {
      return e.data(t, "datepicker");
    });
    this.updateDates();
  };
  u.prototype = {
    updateDates: function () {
      this.dates = e.map(this.pickers, function (e) {
        return e.getUTCDate();
      });
      this.updateRanges();
    },
    updateRanges: function () {
      var t = e.map(this.dates, function (e) {
        return e.valueOf();
      });
      e.each(this.pickers, function (e, n) {
        n.setRange(t);
      });
    },
    clearDates: function () {
      e.each(this.pickers, function (e, t) {
        t.clearDates();
      });
    },
    dateUpdated: function (n) {
      if (!this.updating) {
        this.updating = true;
        var i = e.data(n.target, "datepicker");
        if (i !== t) {
          var r = i.getUTCDate();
          var o = this.keepEmptyValues;
          var a = e.inArray(n.target, this.inputs);
          var s = a - 1;
          var l = a + 1;
          var c = this.inputs.length;
          if (a !== -1) {
            e.each(this.pickers, function (e, t) {
              if (!(t.getUTCDate() || t !== i && o)) {
                t.setUTCDate(r);
              }
            });
            if (r < this.dates[s]) {
              for (; s >= 0 && r < this.dates[s];) {
                this.pickers[s--].setUTCDate(r);
              }
            } else if (r > this.dates[l]) {
              for (; l < c && r > this.dates[l];) {
                this.pickers[l++].setUTCDate(r);
              }
            }
            this.updateDates();
            delete this.updating;
          }
        }
      }
    },
    destroy: function () {
      e.map(this.pickers, function (e) {
        e.destroy();
      });
      e(this.inputs).off("changeDate", this.dateUpdated);
      delete this.element.data().datepicker;
    },
    remove: o("destroy", "Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead")
  };
  var d = e.fn.datepicker;
  var h = function (n) {
    var i;
    var r = Array.apply(null, arguments);
    r.shift();
    this.each(function () {
      var t = e(this);
      var o = t.data("datepicker");
      var l = typeof n == "object" && n;
      if (!o) {
        var d = a(this, "date");
        var h = s(e.extend({}, f, d, l).language);
        var p = e.extend({}, f, h, d, l);
        if (t.hasClass("input-daterange") || p.inputs) {
          e.extend(p, {
            inputs: p.inputs || t.find("input").toArray()
          });
          o = new u(this, p);
        } else {
          o = new c(this, p);
        }
        t.data("datepicker", o);
      }
      if (typeof n == "string" && typeof o[n] == "function") {
        i = o[n].apply(o, r);
      }
    });
    if (i === t || i instanceof c || i instanceof u) {
      return this;
    }
    if (this.length > 1) {
      throw new Error("Using only allowed for the collection of a single element (" + n + " function)");
    }
    return i;
  };
  e.fn.datepicker = h;
  var f = e.fn.datepicker.defaults = {
    assumeNearbyYear: false,
    autoclose: false,
    beforeShowDay: e.noop,
    beforeShowMonth: e.noop,
    beforeShowYear: e.noop,
    beforeShowDecade: e.noop,
    beforeShowCentury: e.noop,
    calendarWeeks: false,
    clearBtn: false,
    toggleActive: false,
    daysOfWeekDisabled: [],
    daysOfWeekHighlighted: [],
    datesDisabled: [],
    endDate: 1 / 0,
    forceParse: true,
    format: "mm/dd/yyyy",
    keepEmptyValues: false,
    keyboardNavigation: true,
    language: "en",
    minViewMode: 0,
    maxViewMode: 4,
    multidate: false,
    multidateSeparator: ",",
    orientation: "auto",
    rtl: false,
    startDate: -1 / 0,
    startView: 0,
    todayBtn: false,
    todayHighlight: false,
    updateViewDate: true,
    weekStart: 0,
    disableTouchKeyboard: false,
    enableOnReadonly: true,
    showOnFocus: true,
    zIndexOffset: 10,
    container: "body",
    immediateUpdates: false,
    title: "",
    templates: {
      leftArrow: "&#x00AB;",
      rightArrow: "&#x00BB;"
    },
    showWeekDays: true
  };
  var p = e.fn.datepicker.locale_opts = ["format", "rtl", "weekStart"];
  e.fn.datepicker.Constructor = c;
  var g = e.fn.datepicker.dates = {
    en: {
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      today: "Today",
      clear: "Clear",
      titleFormat: "MM yyyy"
    }
  };
  var m = {
    viewModes: [{
      names: ["days", "month"],
      clsName: "days",
      e: "changeMonth"
    }, {
      names: ["months", "year"],
      clsName: "months",
      e: "changeYear",
      navStep: 1
    }, {
      names: ["years", "decade"],
      clsName: "years",
      e: "changeDecade",
      navStep: 10
    }, {
      names: ["decades", "century"],
      clsName: "decades",
      e: "changeCentury",
      navStep: 100
    }, {
      names: ["centuries", "millennium"],
      clsName: "centuries",
      e: "changeMillennium",
      navStep: 1000
    }],
    validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
    nonpunctuation: /[^ -\/:-@\u5e74\u6708\u65e5\[-`{-~\t\n\r]+/g,
    parseFormat: function (e) {
      if (typeof e.toValue == "function" && typeof e.toDisplay == "function") {
        return e;
      }
      var t = e.replace(this.validParts, "\0").split("\0");
      var n = e.match(this.validParts);
      if (!t || !t.length || !n || n.length === 0) {
        throw new Error("Invalid date format.");
      }
      return {
        separators: t,
        parts: n
      };
    },
    parseDate: function (n, r, o, a) {
      function s() {
        var e = this.slice(0, l[h].length);
        var t = l[h].slice(0, e.length);
        return e.toLowerCase() === t.toLowerCase();
      }
      if (!n) {
        return t;
      }
      if (n instanceof Date) {
        return n;
      }
      if (typeof r == "string") {
        r = m.parseFormat(r);
      }
      if (r.toValue) {
        return r.toValue(n, r, o);
      }
      var l;
      var u;
      var d;
      var h;
      var f;
      var p = {
        d: "moveDay",
        m: "moveMonth",
        w: "moveWeek",
        y: "moveYear"
      };
      var v = {
        yesterday: "-1d",
        today: "+0d",
        tomorrow: "+1d"
      };
      if (n in v) {
        n = v[n];
      }
      if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/i.test(n)) {
        l = n.match(/([\-+]\d+)([dmwy])/gi);
        n = new Date();
        h = 0;
        for (; h < l.length; h++) {
          u = l[h].match(/([\-+]\d+)([dmwy])/i);
          d = Number(u[1]);
          f = p[u[2].toLowerCase()];
          n = c.prototype[f](n, d);
        }
        return c.prototype._zero_utc_time(n);
      }
      l = n && n.match(this.nonpunctuation) || [];
      var y;
      var b;
      var w = {};
      var x = ["yyyy", "yy", "M", "MM", "m", "mm", "d", "dd"];
      var _ = {
        yyyy: function (e, t) {
          return e.setUTCFullYear(a ? function (e, t) {
            if (t === true) {
              t = 10;
            }
            if (e < 100 && (e += 2000) > new Date().getFullYear() + t) {
              e -= 100;
            }
            return e;
          }(t, a) : t);
        },
        m: function (e, t) {
          if (isNaN(e)) {
            return e;
          }
          for (t -= 1; t < 0;) {
            t += 12;
          }
          t %= 12;
          e.setUTCMonth(t);
          for (; e.getUTCMonth() !== t;) {
            e.setUTCDate(e.getUTCDate() - 1);
          }
          return e;
        },
        d: function (e, t) {
          return e.setUTCDate(t);
        }
      };
      _.yy = _.yyyy;
      _.M = _.MM = _.mm = _.m;
      _.dd = _.d;
      n = i();
      var C = r.parts.slice();
      if (l.length !== C.length) {
        C = e(C).filter(function (t, n) {
          return e.inArray(n, x) !== -1;
        }).toArray();
      }
      if (l.length === C.length) {
        var S;
        var k;
        var T;
        h = 0;
        S = C.length;
        for (; h < S; h++) {
          y = parseInt(l[h], 10);
          u = C[h];
          if (isNaN(y)) {
            switch (u) {
              case "MM":
                b = e(g[o].months).filter(s);
                y = e.inArray(b[0], g[o].months) + 1;
                break;
              case "M":
                b = e(g[o].monthsShort).filter(s);
                y = e.inArray(b[0], g[o].monthsShort) + 1;
            }
          }
          w[u] = y;
        }
        for (h = 0; h < x.length; h++) {
          if ((T = x[h]) in w && !isNaN(w[T])) {
            k = new Date(n);
            _[T](k, w[T]);
            if (!isNaN(k)) {
              n = k;
            }
          }
        }
      }
      return n;
    },
    formatDate: function (t, n, i) {
      if (!t) {
        return "";
      }
      if (typeof n == "string") {
        n = m.parseFormat(n);
      }
      if (n.toDisplay) {
        return n.toDisplay(t, n, i);
      }
      var r = {
        d: t.getUTCDate(),
        D: g[i].daysShort[t.getUTCDay()],
        DD: g[i].days[t.getUTCDay()],
        m: t.getUTCMonth() + 1,
        M: g[i].monthsShort[t.getUTCMonth()],
        MM: g[i].months[t.getUTCMonth()],
        yy: t.getUTCFullYear().toString().substring(2),
        yyyy: t.getUTCFullYear()
      };
      r.dd = (r.d < 10 ? "0" : "") + r.d;
      r.mm = (r.m < 10 ? "0" : "") + r.m;
      t = [];
      for (var o = e.extend([], n.separators), a = 0, s = n.parts.length; a <= s; a++) {
        if (o.length) {
          t.push(o.shift());
        }
        t.push(r[n.parts[a]]);
      }
      return t.join("");
    },
    headTemplate: "<thead><tr><th colspan=\"7\" class=\"datepicker-title\"></th></tr><tr><th class=\"prev\">" + f.templates.leftArrow + "</th><th colspan=\"5\" class=\"datepicker-switch\"></th><th class=\"next\">" + f.templates.rightArrow + "</th></tr></thead>",
    contTemplate: "<tbody><tr><td colspan=\"7\"></td></tr></tbody>",
    footTemplate: "<tfoot><tr><th colspan=\"7\" class=\"today\"></th></tr><tr><th colspan=\"7\" class=\"clear\"></th></tr></tfoot>"
  };
  m.template = "<div class=\"datepicker\"><div class=\"datepicker-days\"><table class=\"table-condensed\">" + m.headTemplate + "<tbody></tbody>" + m.footTemplate + "</table></div><div class=\"datepicker-months\"><table class=\"table-condensed\">" + m.headTemplate + m.contTemplate + m.footTemplate + "</table></div><div class=\"datepicker-years\"><table class=\"table-condensed\">" + m.headTemplate + m.contTemplate + m.footTemplate + "</table></div><div class=\"datepicker-decades\"><table class=\"table-condensed\">" + m.headTemplate + m.contTemplate + m.footTemplate + "</table></div><div class=\"datepicker-centuries\"><table class=\"table-condensed\">" + m.headTemplate + m.contTemplate + m.footTemplate + "</table></div></div>";
  e.fn.datepicker.DPGlobal = m;
  e.fn.datepicker.noConflict = function () {
    e.fn.datepicker = d;
    return this;
  };
  e.fn.datepicker.version = "1.9.0";
  e.fn.datepicker.deprecated = function (e) {
    var t = window.console;
    if (t && t.warn) {
      t.warn("DEPRECATED: " + e);
    }
  };
  e(document).on("focus.datepicker.data-api click.datepicker.data-api", "[data-provide=\"datepicker\"]", function (t) {
    var n = e(this);
    if (!n.data("datepicker")) {
      t.preventDefault();
      h.call(n, "show");
    }
  });
  e(function () {
    h.call(e("[data-provide=\"datepicker-inline\"]"));
  });
});
if (typeof jQuery != "undefined") {
  (function (e, t) {
    function n(e, t, n) {
      return new Array(n + 1 - e.length).join(t) + e;
    }
    function i() {
      if (arguments.length === 1) {
        var t = arguments[0];
        if (typeof t == "string") {
          t = e.fn.timepicker.parseTime(t);
        }
        return new Date(0, 0, 0, t.getHours(), t.getMinutes(), t.getSeconds());
      }
      if (arguments.length === 3) {
        return new Date(0, 0, 0, arguments[0], arguments[1], arguments[2]);
      } else if (arguments.length === 2) {
        return new Date(0, 0, 0, arguments[0], arguments[1], 0);
      } else {
        return new Date(0, 0, 0);
      }
    }
    var r;
    var o;
    e.TimePicker = function () {
      var t = this;
      t.container = e(".ui-timepicker-container");
      t.ui = t.container.find(".ui-timepicker");
      if (t.container.length === 0) {
        t.container = e("<div></div>").addClass("ui-timepicker-container").addClass("ui-timepicker-hidden ui-helper-hidden").appendTo("body").hide();
        t.ui = e("<div></div>").addClass("ui-timepicker").addClass("ui-widget ui-widget-content ui-menu").addClass("ui-corner-all").appendTo(t.container);
        t.viewport = e("<ul></ul>").addClass("ui-timepicker-viewport").appendTo(t.ui);
        if (e.fn.jquery >= "1.4.2") {
          t.ui.delegate("a", "mouseenter.timepicker", function () {
            t.activate(false, e(this).parent());
          }).delegate("a", "mouseleave.timepicker", function () {
            t.deactivate(false);
          }).delegate("a", "click.timepicker", function (n) {
            n.preventDefault();
            t.select(false, e(this).parent());
          });
        }
      }
    };
    e.TimePicker.count = 0;
    e.TimePicker.instance = function () {
      if (!e.TimePicker._instance) {
        e.TimePicker._instance = new e.TimePicker();
      }
      return e.TimePicker._instance;
    };
    e.TimePicker.prototype = {
      keyCode: {
        ALT: 18,
        BLOQ_MAYUS: 20,
        CTRL: 17,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        HOME: 36,
        LEFT: 37,
        NUMPAD_ENTER: 108,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        RIGHT: 39,
        SHIFT: 16,
        TAB: 9,
        UP: 38
      },
      _items: function (t, n) {
        var r;
        var o;
        var a = e("<ul></ul>");
        var s = null;
        if (t.options.timeFormat.indexOf("m") === -1 && t.options.interval % 60 != 0) {
          t.options.interval = Math.max(Math.round(t.options.interval / 60), 1) * 60;
        }
        r = n ? i(n) : t.options.startTime ? i(t.options.startTime) : i(t.options.startHour, t.options.startMinutes);
        o = new Date(r.getTime() + 86400000);
        for (; r < o;) {
          if (this._isValidTime(t, r)) {
            s = e("<li>").addClass("ui-menu-item").appendTo(a);
            e("<a>").addClass("ui-corner-all").text(e.fn.timepicker.formatTime(t.options.timeFormat, r)).appendTo(s);
            s.data("time-value", r);
          }
          r = new Date(r.getTime() + t.options.interval * 60 * 1000);
        }
        return a.children();
      },
      _isValidTime: function (e, t) {
        var n = null;
        var r = null;
        t = i(t);
        if (e.options.minTime !== null) {
          n = i(e.options.minTime);
        } else if (!(e.options.minHour === null && e.options.minMinutes === null)) {
          n = i(e.options.minHour, e.options.minMinutes);
        }
        if (e.options.maxTime !== null) {
          r = i(e.options.maxTime);
        } else if (!(e.options.maxHour === null && e.options.maxMinutes === null)) {
          r = i(e.options.maxHour, e.options.maxMinutes);
        }
        if (n !== null && r !== null) {
          return t >= n && t <= r;
        } else if (n !== null) {
          return t >= n;
        } else {
          return r === null || t <= r;
        }
      },
      _hasScroll: function () {
        var e = this.ui.prop !== undefined ? "prop" : "attr";
        return this.ui.height() < this.ui[e]("scrollHeight");
      },
      _move: function (e, t, n) {
        if (this.closed()) {
          this.open(e);
        }
        if (this.active) {
          var i = this.active[t + "All"](".ui-menu-item").eq(0);
          if (i.length) {
            this.activate(e, i);
          } else {
            this.activate(e, this.viewport.children(n));
          }
        } else {
          this.activate(e, this.viewport.children(n));
        }
      },
      register: function (t, n) {
        var i = this;
        var r = {};
        r.element = e(t);
        if (!r.element.data("TimePicker")) {
          r.options = e.metadata ? e.extend({}, n, r.element.metadata()) : e.extend({}, n);
          r.widget = i;
          e.extend(r, {
            next: function () {
              return i.next(r);
            },
            previous: function () {
              return i.previous(r);
            },
            first: function () {
              return i.first(r);
            },
            last: function () {
              return i.last(r);
            },
            selected: function () {
              return i.selected(r);
            },
            open: function () {
              return i.open(r);
            },
            close: function () {
              return i.close(r);
            },
            closed: function () {
              return i.closed(r);
            },
            destroy: function () {
              return i.destroy(r);
            },
            parse: function (e) {
              return i.parse(r, e);
            },
            format: function (e, t) {
              return i.format(r, e, t);
            },
            getTime: function () {
              return i.getTime(r);
            },
            setTime: function (e, t) {
              return i.setTime(r, e, t);
            },
            option: function (e, t) {
              return i.option(r, e, t);
            }
          });
          i._setDefaultTime(r);
          i._addInputEventsHandlers(r);
          r.element.data("TimePicker", r);
        }
      },
      _setDefaultTime: function (t) {
        if (t.options.defaultTime === "now") {
          t.setTime(i(new Date()));
        } else if (t.options.defaultTime && t.options.defaultTime.getFullYear) {
          t.setTime(i(t.options.defaultTime));
        } else if (t.options.defaultTime) {
          t.setTime(e.fn.timepicker.parseTime(t.options.defaultTime));
        }
      },
      _addInputEventsHandlers: function (t) {
        var n = this;
        t.element.bind("keydown.timepicker", function (e) {
          switch (e.which || e.keyCode) {
            case n.keyCode.ENTER:
            case n.keyCode.NUMPAD_ENTER:
              e.preventDefault();
              if (n.closed()) {
                t.element.trigger("change.timepicker");
              } else {
                n.select(t, n.active);
              }
              break;
            case n.keyCode.UP:
              t.previous();
              break;
            case n.keyCode.DOWN:
              t.next();
              break;
            default:
              if (!n.closed()) {
                t.close(true);
              }
          }
        }).bind("focus.timepicker", function () {
          t.open();
        }).bind("blur.timepicker", function () {
          setTimeout(function () {
            if (t.element.data("timepicker-user-clicked-outside")) {
              t.close();
            }
          });
        }).bind("change.timepicker", function () {
          if (t.closed()) {
            t.setTime(e.fn.timepicker.parseTime(t.element.val()));
          }
        });
      },
      select: function (t, n) {
        var i = t === false ? this.instance : t;
        this.setTime(i, e.fn.timepicker.parseTime(n.children("a").text()));
        this.close(i, true);
      },
      activate: function (e, t) {
        if ((e === false ? this.instance : e) === this.instance) {
          this.deactivate();
          if (this._hasScroll()) {
            var n = t.offset().top - this.ui.offset().top;
            var i = this.ui.scrollTop();
            var r = this.ui.height();
            if (n < 0) {
              this.ui.scrollTop(i + n);
            } else if (n >= r) {
              this.ui.scrollTop(i + n - r + t.height());
            }
          }
          this.active = t.eq(0).children("a").addClass("ui-state-hover").attr("id", "ui-active-item").end();
        }
      },
      deactivate: function () {
        if (this.active) {
          this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
          this.active = null;
        }
      },
      next: function (e) {
        if (this.closed() || this.instance === e) {
          this._move(e, "next", ".ui-menu-item:first");
        }
        return e.element;
      },
      previous: function (e) {
        if (this.closed() || this.instance === e) {
          this._move(e, "prev", ".ui-menu-item:last");
        }
        return e.element;
      },
      first: function (e) {
        return this.instance === e && this.active && this.active.prevAll(".ui-menu-item").length === 0;
      },
      last: function (e) {
        return this.instance === e && this.active && this.active.nextAll(".ui-menu-item").length === 0;
      },
      selected: function (e) {
        if (this.instance === e && this.active) {
          return this.active;
        } else {
          return null;
        }
      },
      open: function (t) {
        var n = this;
        var i = t.getTime();
        var r = t.options.dynamic && i;
        if (!t.options.dropdown) {
          return t.element;
        }
        t.element.data("timepicker-event-namespace", Math.random());
        e(document).bind("click.timepicker-" + t.element.data("timepicker-event-namespace"), function (e) {
          if (t.element.get(0) === e.target) {
            t.element.data("timepicker-user-clicked-outside", false);
          } else {
            t.element.data("timepicker-user-clicked-outside", true).blur();
          }
        });
        if (t.rebuild || !t.items || r) {
          t.items = n._items(t, r ? i : null);
        }
        if (t.rebuild || n.instance !== t || r) {
          if (e.fn.jquery < "1.4.2") {
            n.viewport.children().remove();
            n.viewport.append(t.items);
            n.viewport.find("a").bind("mouseover.timepicker", function () {
              n.activate(t, e(this).parent());
            }).bind("mouseout.timepicker", function () {
              n.deactivate(t);
            }).bind("click.timepicker", function (i) {
              i.preventDefault();
              n.select(t, e(this).parent());
            });
          } else {
            n.viewport.children().detach();
            n.viewport.append(t.items);
          }
        }
        t.rebuild = false;
        n.container.removeClass("ui-helper-hidden ui-timepicker-hidden ui-timepicker-standard ui-timepicker-corners").show();
        switch (t.options.theme) {
          case "standard":
            n.container.addClass("ui-timepicker-standard");
            break;
          case "standard-rounded-corners":
            n.container.addClass("ui-timepicker-standard ui-timepicker-corners");
        }
        if (!(n.container.hasClass("ui-timepicker-no-scrollbar") || t.options.scrollbar)) {
          n.container.addClass("ui-timepicker-no-scrollbar");
          n.viewport.css({
            paddingRight: 40
          });
        }
        var o = n.container.outerHeight() - n.container.height();
        var a = t.options.zindex ? t.options.zindex : t.element.offsetParent().css("z-index");
        var s = t.element.offset();
        n.container.css({
          top: s.top + t.element.outerHeight(),
          left: s.left
        });
        n.container.show();
        n.container.css({
          left: t.element.offset().left,
          height: n.ui.outerHeight() + o,
          width: t.element.outerWidth(),
          zIndex: a,
          cursor: "default"
        });
        var l = n.container.width() - (n.ui.outerWidth() - n.ui.width());
        n.ui.css({
          width: l
        });
        n.viewport.css({
          width: l
        });
        t.items.css({
          width: l
        });
        n.instance = t;
        if (i) {
          t.items.each(function () {
            var r = e(this);
            return (e.fn.jquery < "1.4.2" ? e.fn.timepicker.parseTime(r.find("a").text()) : r.data("time-value")).getTime() !== i.getTime() || (n.activate(t, r), false);
          });
        } else {
          n.deactivate(t);
        }
        return t.element;
      },
      close: function (t) {
        if (this.instance === t) {
          this.container.addClass("ui-helper-hidden ui-timepicker-hidden").hide();
          this.ui.scrollTop(0);
          this.ui.children().removeClass("ui-state-hover");
        }
        e(document).unbind("click.timepicker-" + t.element.data("timepicker-event-namespace"));
        return t.element;
      },
      closed: function () {
        return this.ui.is(":hidden");
      },
      destroy: function (e) {
        this.close(e, true);
        return e.element.unbind(".timepicker").data("TimePicker", null);
      },
      parse: function (t, n) {
        return e.fn.timepicker.parseTime(n);
      },
      format: function (t, n, i) {
        i = i || t.options.timeFormat;
        return e.fn.timepicker.formatTime(i, n);
      },
      getTime: function (t) {
        var n = e.fn.timepicker.parseTime(t.element.val());
        if (n instanceof Date && !this._isValidTime(t, n)) {
          return null;
        } else if (n instanceof Date && t.selectedTime) {
          if (t.format(n) === t.format(t.selectedTime)) {
            return t.selectedTime;
          } else {
            return n;
          }
        } else if (n instanceof Date) {
          return n;
        } else {
          return null;
        }
      },
      setTime: function (t, n, r) {
        var o = t.selectedTime;
        if (typeof n == "string") {
          n = t.parse(n);
        }
        if (n && n.getMinutes && this._isValidTime(t, n)) {
          n = i(n);
          t.selectedTime = n;
          t.element.val(t.format(n, t.options.timeFormat));
          if (r) {
            return t;
          }
        } else {
          t.selectedTime = null;
        }
        if (!(o === null && t.selectedTime === null)) {
          t.element.trigger("time-change", [n]);
          if (e.isFunction(t.options.change)) {
            t.options.change.apply(t.element, [n]);
          }
        }
        return t.element;
      },
      option: function (t, n, i) {
        if (i === undefined) {
          return t.options[n];
        }
        var r;
        var o;
        var a = t.getTime();
        if (typeof n == "string") {
          (r = {})[n] = i;
        } else {
          r = n;
        }
        o = ["minHour", "minMinutes", "minTime", "maxHour", "maxMinutes", "maxTime", "startHour", "startMinutes", "startTime", "timeFormat", "interval", "dropdown"];
        e.each(r, function (n) {
          t.options[n] = r[n];
          t.rebuild = t.rebuild || e.inArray(n, o) > -1;
        });
        if (t.rebuild) {
          t.setTime(a);
        }
      }
    };
    e.TimePicker.defaults = {
      timeFormat: "hh:mm p",
      minHour: null,
      minMinutes: null,
      minTime: null,
      maxHour: null,
      maxMinutes: null,
      maxTime: null,
      startHour: null,
      startMinutes: null,
      startTime: null,
      interval: 30,
      dynamic: true,
      theme: "standard",
      zindex: null,
      dropdown: true,
      scrollbar: false,
      change: function () {}
    };
    e.TimePicker.methods = {
      chainable: ["next", "previous", "open", "close", "destroy", "setTime"]
    };
    e.fn.timepicker = function (t) {
      if (typeof t == "string") {
        var n;
        var i;
        var r = Array.prototype.slice.call(arguments, 1);
        i = this[n = t === "option" && arguments.length > 2 || e.inArray(t, e.TimePicker.methods.chainable) !== -1 ? "each" : "map"](function () {
          var n = e(this).data("TimePicker");
          if (typeof n == "object") {
            return n[t].apply(n, r);
          }
        });
        if (n === "map" && this.length === 1) {
          return e.makeArray(i).shift();
        } else if (n === "map") {
          return e.makeArray(i);
        } else {
          return i;
        }
      }
      if (this.length === 1 && this.data("TimePicker")) {
        return this.data("TimePicker");
      }
      var o = e.extend({}, e.TimePicker.defaults, t);
      return this.each(function () {
        e.TimePicker.instance().register(this, o);
      });
    };
    e.fn.timepicker.formatTime = function (e, t) {
      var i = t.getHours();
      var r = i % 12;
      var o = t.getMinutes();
      var a = t.getSeconds();
      var s = {
        hh: n((r === 0 ? 12 : r).toString(), "0", 2),
        HH: n(i.toString(), "0", 2),
        mm: n(o.toString(), "0", 2),
        ss: n(a.toString(), "0", 2),
        h: r === 0 ? 12 : r,
        H: i,
        m: o,
        s: a,
        p: i > 11 ? "PM" : "AM"
      };
      var l = e;
      var c = "";
      for (c in s) {
        if (s.hasOwnProperty(c)) {
          l = l.replace(new RegExp(c, "g"), s[c]);
        }
      }
      return l = l.replace(new RegExp("a", "g"), i > 11 ? "pm" : "am");
    };
    e.fn.timepicker.parseTime = (o = (r = [[/^(\d+)$/, "$1"], [/^:(\d)$/, "$10"], [/^:(\d+)/, "$1"], [/^(\d):([7-9])$/, "0$10$2"], [/^(\d):(\d\d)$/, "$1$2"], [/^(\d):(\d{1,})$/, "0$1$20"], [/^(\d\d):([7-9])$/, "$10$2"], [/^(\d\d):(\d)$/, "$1$20"], [/^(\d\d):(\d*)$/, "$1$2"], [/^(\d{3,}):(\d)$/, "$10$2"], [/^(\d{3,}):(\d{2,})/, "$1$2"], [/^(\d):(\d):(\d)$/, "0$10$20$3"], [/^(\d{1,2}):(\d):(\d\d)/, "$10$2$3"]]).length, function (t) {
      var n;
      var a;
      var s = i(new Date());
      var l = false;
      var c = false;
      var u = false;
      if (t === undefined || !t.toLowerCase) {
        return null;
      }
      t = t.toLowerCase();
      a = !(n = /a/.test(t)) && /p/.test(t);
      t = t.replace(/[^0-9:]/g, "").replace(/:+/g, ":");
      for (var d = 0; d < o; d += 1) {
        if (r[d][0].test(t)) {
          t = t.replace(r[d][0], r[d][1]);
          break;
        }
      }
      if ((t = t.replace(/:/g, "")).length === 1 || t.length === 2) {
        l = t;
      } else if (t.length === 3 || t.length === 5) {
        l = t.substr(0, 1);
        c = t.substr(1, 2);
        u = t.substr(3, 2);
      } else if (t.length === 4 || t.length > 5) {
        l = t.substr(0, 2);
        c = t.substr(2, 2);
        u = t.substr(4, 2);
      }
      if (t.length > 0 && t.length < 5) {
        if (t.length < 3) {
          c = 0;
        }
        u = 0;
      }
      return l !== false && c !== false && u !== false && (l = parseInt(l, 10), c = parseInt(c, 10), u = parseInt(u, 10), n && l === 12 ? l = 0 : a && l < 12 && (l += 12), l > 24 ? t.length >= 6 ? e.fn.timepicker.parseTime(t.substr(0, 5)) : e.fn.timepicker.parseTime(t + "0" + (n ? "a" : "") + (a ? "p" : "")) : (s.setHours(l, c, u), s));
    });
  })(jQuery);
}
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery"], e);
  } else {
    e(jQuery);
  }
})(function (e) {
  "use strict";

  var t = {};
  var n = Math.max;
  var i = Math.min;
  t.c = {};
  t.c.d = e(document);
  t.c.t = function (e) {
    return e.originalEvent.touches.length - 1;
  };
  t.o = function () {
    var n = this;
    this.o = null;
    this.$ = null;
    this.i = null;
    this.g = null;
    this.v = null;
    this.cv = null;
    this.x = 0;
    this.y = 0;
    this.w = 0;
    this.h = 0;
    this.$c = null;
    this.c = null;
    this.t = 0;
    this.isInit = false;
    this.fgColor = null;
    this.pColor = null;
    this.dH = null;
    this.cH = null;
    this.eH = null;
    this.rH = null;
    this.scale = 1;
    this.relative = false;
    this.relativeWidth = false;
    this.relativeHeight = false;
    this.$div = null;
    this.run = function () {
      var t = function (e, t) {
        var i;
        for (i in t) {
          n.o[i] = t[i];
        }
        n._carve().init();
        n._configure()._draw();
      };
      if (!this.$.data("kontroled")) {
        this.$.data("kontroled", true);
        this.extend();
        this.o = e.extend({
          min: this.$.data("min") !== undefined ? this.$.data("min") : 0,
          max: this.$.data("max") !== undefined ? this.$.data("max") : 100,
          stopper: true,
          readOnly: this.$.data("readonly") || this.$.attr("readonly") === "readonly",
          cursor: (this.$.data("cursor") === true ? 30 : this.$.data("cursor")) || 0,
          thickness: this.$.data("thickness") && Math.max(Math.min(this.$.data("thickness"), 1), 0.01) || 0.35,
          lineCap: this.$.data("linecap") || "butt",
          width: this.$.data("width") || 200,
          height: this.$.data("height") || 200,
          displayInput: this.$.data("displayinput") == null || this.$.data("displayinput"),
          displayPrevious: this.$.data("displayprevious"),
          fgColor: this.$.data("fgcolor") || "#87CEEB",
          inputColor: this.$.data("inputcolor"),
          font: this.$.data("font") || "Arial",
          fontWeight: this.$.data("font-weight") || "bold",
          inline: false,
          step: this.$.data("step") || 1,
          rotation: this.$.data("rotation"),
          draw: null,
          change: null,
          cancel: null,
          release: null,
          format: function (e) {
            return e;
          },
          parse: function (e) {
            return parseFloat(e);
          }
        }, this.o);
        this.o.flip = this.o.rotation === "anticlockwise" || this.o.rotation === "acw";
        if (!this.o.inputColor) {
          this.o.inputColor = this.o.fgColor;
        }
        if (this.$.is("fieldset")) {
          this.v = {};
          this.i = this.$.find("input");
          this.i.each(function (t) {
            var i = e(this);
            n.i[t] = i;
            n.v[t] = n.o.parse(i.val());
            i.bind("change blur", function () {
              var e = {};
              e[t] = i.val();
              n.val(n._validate(e));
            });
          });
          this.$.find("legend").remove();
        } else {
          this.i = this.$;
          this.v = this.o.parse(this.$.val());
          if (this.v === "") {
            this.v = this.o.min;
          }
          this.$.bind("change blur", function () {
            n.val(n._validate(n.o.parse(n.$.val())));
          });
        }
        if (!this.o.displayInput) {
          this.$.hide();
        }
        this.$c = e(document.createElement("canvas")).attr({
          width: this.o.width,
          height: this.o.height
        });
        this.$div = e("<div style=\"" + (this.o.inline ? "display:inline;" : "") + "width:" + this.o.width + "px;height:" + this.o.height + "px;\"></div>");
        this.$.wrap(this.$div).before(this.$c);
        this.$div = this.$.parent();
        if (typeof G_vmlCanvasManager != "undefined") {
          G_vmlCanvasManager.initElement(this.$c[0]);
        }
        this.c = this.$c[0].getContext ? this.$c[0].getContext("2d") : null;
        if (!this.c) {
          throw {
            name: "CanvasNotSupportedException",
            message: "Canvas not supported. Please use excanvas on IE8.0.",
            toString: function () {
              return this.name + ": " + this.message;
            }
          };
        }
        this.scale = (window.devicePixelRatio || 1) / (this.c.webkitBackingStorePixelRatio || this.c.mozBackingStorePixelRatio || this.c.msBackingStorePixelRatio || this.c.oBackingStorePixelRatio || this.c.backingStorePixelRatio || 1);
        this.relativeWidth = this.o.width % 1 != 0 && this.o.width.indexOf("%");
        this.relativeHeight = this.o.height % 1 != 0 && this.o.height.indexOf("%");
        this.relative = this.relativeWidth || this.relativeHeight;
        this._carve();
        if (this.v instanceof Object) {
          this.cv = {};
          this.copy(this.v, this.cv);
        } else {
          this.cv = this.v;
        }
        this.$.bind("configure", t).parent().bind("configure", t);
        this._listen()._configure()._xy().init();
        this.isInit = true;
        this.$.val(this.o.format(this.v));
        this._draw();
        return this;
      }
    };
    this._carve = function () {
      if (this.relative) {
        var e = this.relativeWidth ? this.$div.parent().width() * parseInt(this.o.width) / 100 : this.$div.parent().width();
        var t = this.relativeHeight ? this.$div.parent().height() * parseInt(this.o.height) / 100 : this.$div.parent().height();
        this.w = this.h = Math.min(e, t);
      } else {
        this.w = this.o.width;
        this.h = this.o.height;
      }
      this.$div.css({
        width: this.w + "px",
        height: this.h + "px"
      });
      this.$c.attr({
        width: this.w,
        height: this.h
      });
      if (this.scale !== 1) {
        this.$c[0].width = this.$c[0].width * this.scale;
        this.$c[0].height = this.$c[0].height * this.scale;
        this.$c.width(this.w);
        this.$c.height(this.h);
      }
      return this;
    };
    this._draw = function () {
      var e = true;
      n.g = n.c;
      n.clear();
      if (n.dH) {
        e = n.dH();
      }
      if (e !== false) {
        n.draw();
      }
    };
    this._touch = function (e) {
      var i = function (e) {
        var t = n.xy2val(e.originalEvent.touches[n.t].pageX, e.originalEvent.touches[n.t].pageY);
        if (t != n.cv) {
          if (!(n.cH && n.cH(t) === false)) {
            n.change(n._validate(t));
            n._draw();
          }
        }
      };
      this.t = t.c.t(e);
      i(e);
      t.c.d.bind("touchmove.k", i).bind("touchend.k", function () {
        t.c.d.unbind("touchmove.k touchend.k");
        n.val(n.cv);
      });
      return this;
    };
    this._mouse = function (e) {
      var i = function (e) {
        var t = n.xy2val(e.pageX, e.pageY);
        if (t != n.cv) {
          if (!(n.cH && n.cH(t) === false)) {
            n.change(n._validate(t));
            n._draw();
          }
        }
      };
      i(e);
      t.c.d.bind("mousemove.k", i).bind("keyup.k", function (e) {
        if (e.keyCode === 27) {
          t.c.d.unbind("mouseup.k mousemove.k keyup.k");
          if (n.eH && n.eH() === false) {
            return;
          }
          n.cancel();
        }
      }).bind("mouseup.k", function (e) {
        t.c.d.unbind("mousemove.k mouseup.k keyup.k");
        n.val(n.cv);
      });
      return this;
    };
    this._xy = function () {
      var e = this.$c.offset();
      this.x = e.left;
      this.y = e.top;
      return this;
    };
    this._listen = function () {
      if (this.o.readOnly) {
        this.$.attr("readonly", "readonly");
      } else {
        this.$c.bind("mousedown", function (e) {
          e.preventDefault();
          n._xy()._mouse(e);
        }).bind("touchstart", function (e) {
          e.preventDefault();
          n._xy()._touch(e);
        });
        this.listen();
      }
      if (this.relative) {
        e(window).resize(function () {
          n._carve().init();
          n._draw();
        });
      }
      return this;
    };
    this._configure = function () {
      if (this.o.draw) {
        this.dH = this.o.draw;
      }
      if (this.o.change) {
        this.cH = this.o.change;
      }
      if (this.o.cancel) {
        this.eH = this.o.cancel;
      }
      if (this.o.release) {
        this.rH = this.o.release;
      }
      if (this.o.displayPrevious) {
        this.pColor = this.h2rgba(this.o.fgColor, "0.4");
        this.fgColor = this.h2rgba(this.o.fgColor, "0.6");
      } else {
        this.fgColor = this.o.fgColor;
      }
      return this;
    };
    this._clear = function () {
      this.$c[0].width = this.$c[0].width;
    };
    this._validate = function (e) {
      var t = ~~((e < 0 ? -0.5 : 0.5) + e / this.o.step) * this.o.step;
      return Math.round(t * 100) / 100;
    };
    this.listen = function () {};
    this.extend = function () {};
    this.init = function () {};
    this.change = function (e) {};
    this.val = function (e) {};
    this.xy2val = function (e, t) {};
    this.draw = function () {};
    this.clear = function () {
      this._clear();
    };
    this.h2rgba = function (e, t) {
      var n;
      e = e.substring(1, 7);
      return "rgba(" + (n = [parseInt(e.substring(0, 2), 16), parseInt(e.substring(2, 4), 16), parseInt(e.substring(4, 6), 16)])[0] + "," + n[1] + "," + n[2] + "," + t + ")";
    };
    this.copy = function (e, t) {
      for (var n in e) {
        t[n] = e[n];
      }
    };
  };
  t.Dial = function () {
    t.o.call(this);
    this.startAngle = null;
    this.xy = null;
    this.radius = null;
    this.lineWidth = null;
    this.cursorExt = null;
    this.w2 = null;
    this.PI2 = Math.PI * 2;
    this.extend = function () {
      this.o = e.extend({
        bgColor: this.$.data("bgcolor") || "#EEEEEE",
        angleOffset: this.$.data("angleoffset") || 0,
        angleArc: this.$.data("anglearc") || 360,
        inline: true
      }, this.o);
    };
    this.val = function (e, t) {
      if (e == null) {
        return this.v;
      }
      e = this.o.parse(e);
      if (!(t !== false && e != this.v && this.rH && this.rH(e) === false)) {
        this.cv = this.o.stopper ? n(i(e, this.o.max), this.o.min) : e;
        this.v = this.cv;
        this.$.val(this.o.format(this.v));
        this._draw();
      }
    };
    this.xy2val = function (e, t) {
      var r;
      var o;
      r = Math.atan2(e - (this.x + this.w2), -(t - this.y - this.w2)) - this.angleOffset;
      if (this.o.flip) {
        r = this.angleArc - r - this.PI2;
      }
      if (this.angleArc != this.PI2 && r < 0 && r > -0.5) {
        r = 0;
      } else if (r < 0) {
        r += this.PI2;
      }
      o = r * (this.o.max - this.o.min) / this.angleArc + this.o.min;
      if (this.o.stopper) {
        o = n(i(o, this.o.max), this.o.min);
      }
      return o;
    };
    this.listen = function () {
      var t;
      var r;
      var o;
      var a;
      var s = this;
      var l = function (e) {
        e.preventDefault();
        var o = e.originalEvent;
        var a = o.detail || o.wheelDeltaX;
        var l = o.detail || o.wheelDeltaY;
        var c = s._validate(s.o.parse(s.$.val())) + (a > 0 || l > 0 ? s.o.step : a < 0 || l < 0 ? -s.o.step : 0);
        c = n(i(c, s.o.max), s.o.min);
        s.val(c, false);
        if (s.rH) {
          clearTimeout(t);
          t = setTimeout(function () {
            s.rH(c);
            t = null;
          }, 100);
          if (!r) {
            r = setTimeout(function () {
              if (t) {
                s.rH(c);
              }
              r = null;
            }, 200);
          }
        }
      };
      var c = 1;
      var u = {
        37: -s.o.step,
        38: s.o.step,
        39: s.o.step,
        40: -s.o.step
      };
      this.$.bind("keydown", function (t) {
        var r = t.keyCode;
        if (r >= 96 && r <= 105) {
          r = t.keyCode = r - 48;
        }
        o = parseInt(String.fromCharCode(r));
        if (isNaN(o) && (r !== 13 && r !== 8 && r !== 9 && r !== 189 && (r !== 190 || s.$.val().match(/\./)) && t.preventDefault(), e.inArray(r, [37, 38, 39, 40]) > -1)) {
          t.preventDefault();
          var l = s.o.parse(s.$.val()) + u[r] * c;
          if (s.o.stopper) {
            l = n(i(l, s.o.max), s.o.min);
          }
          s.change(s._validate(l));
          s._draw();
          a = window.setTimeout(function () {
            c *= 2;
          }, 30);
        }
      }).bind("keyup", function (e) {
        if (isNaN(o)) {
          if (a) {
            window.clearTimeout(a);
            a = null;
            c = 1;
            s.val(s.$.val());
          }
        } else if (!(s.$.val() > s.o.max && s.$.val(s.o.max))) {
          if (s.$.val() < s.o.min) {
            s.$.val(s.o.min);
          }
        }
      });
      this.$c.bind("mousewheel DOMMouseScroll", l);
      this.$.bind("mousewheel DOMMouseScroll", l);
    };
    this.init = function () {
      if (this.v < this.o.min || this.v > this.o.max) {
        this.v = this.o.min;
      }
      this.$.val(this.v);
      this.w2 = this.w / 2;
      this.cursorExt = this.o.cursor / 100;
      this.xy = this.w2 * this.scale;
      this.lineWidth = this.xy * this.o.thickness;
      this.lineCap = this.o.lineCap;
      this.radius = this.xy - this.lineWidth / 2;
      if (this.o.angleOffset) {
        this.o.angleOffset = isNaN(this.o.angleOffset) ? 0 : this.o.angleOffset;
      }
      if (this.o.angleArc) {
        this.o.angleArc = isNaN(this.o.angleArc) ? this.PI2 : this.o.angleArc;
      }
      this.angleOffset = this.o.angleOffset * Math.PI / 180;
      this.angleArc = this.o.angleArc * Math.PI / 180;
      this.startAngle = Math.PI * 1.5 + this.angleOffset;
      this.endAngle = Math.PI * 1.5 + this.angleOffset + this.angleArc;
      var e = n(String(Math.abs(this.o.max)).length, String(Math.abs(this.o.min)).length, 2) + 2;
      if (!(this.o.displayInput && this.i.css({
        width: (this.w / 2 + 4 >> 0) + "px",
        height: (this.w / 3 >> 0) + "px",
        position: "absolute",
        "vertical-align": "middle",
        "margin-top": (this.w / 3 >> 0) + "px",
        "margin-left": "-" + (this.w * 3 / 4 + 2 >> 0) + "px",
        border: 0,
        background: "none",
        font: this.o.fontWeight + " " + (this.w / e >> 0) + "px " + this.o.font,
        "text-align": "center",
        color: this.o.inputColor || this.o.fgColor,
        padding: "0px",
        "-webkit-appearance": "none"
      }))) {
        this.i.css({
          width: "0px",
          visibility: "hidden"
        });
      }
    };
    this.change = function (e) {
      this.cv = e;
      this.$.val(this.o.format(e));
    };
    this.angle = function (e) {
      return (e - this.o.min) * this.angleArc / (this.o.max - this.o.min);
    };
    this.arc = function (e) {
      var t;
      var n;
      e = this.angle(e);
      n = this.o.flip ? (t = this.endAngle + 0.00001) - e - 0.00001 : (t = this.startAngle - 0.00001) + e + 0.00001;
      if (this.o.cursor && (t = n - this.cursorExt)) {
        n += this.cursorExt;
      }
      return {
        s: t,
        e: n,
        d: this.o.flip && !this.o.cursor
      };
    };
    this.draw = function () {
      var e;
      var t = this.g;
      var n = this.arc(this.cv);
      var i = 1;
      t.lineWidth = this.lineWidth;
      t.lineCap = this.lineCap;
      if (this.o.bgColor !== "none") {
        t.beginPath();
        t.strokeStyle = this.o.bgColor;
        t.arc(this.xy, this.xy, this.radius, this.endAngle - 0.00001, this.startAngle + 0.00001, true);
        t.stroke();
      }
      if (this.o.displayPrevious) {
        e = this.arc(this.v);
        t.beginPath();
        t.strokeStyle = this.pColor;
        t.arc(this.xy, this.xy, this.radius, e.s, e.e, e.d);
        t.stroke();
        i = this.cv == this.v;
      }
      t.beginPath();
      t.strokeStyle = i ? this.o.fgColor : this.fgColor;
      t.arc(this.xy, this.xy, this.radius, n.s, n.e, n.d);
      t.stroke();
    };
    this.cancel = function () {
      this.val(this.v);
    };
  };
  e.fn.dial = e.fn.knob = function (n) {
    return this.each(function () {
      var i = new t.Dial();
      i.o = n;
      i.$ = e(this);
      i.run();
    }).parent();
  };
});
(function (e, t) {
  function n(n, i, r) {
    var o = n.children(i.headerTag);
    var a = n.children(i.bodyTag);
    if (o.length > a.length) {
      M($, "contents");
    } else if (o.length < a.length) {
      M($, "titles");
    }
    var s = i.startIndex;
    r.stepCount = o.length;
    if (i.saveState && e.cookie) {
      var l = e.cookie(L + d(n));
      var u = parseInt(l, 0);
      if (!isNaN(u) && u < r.stepCount) {
        s = u;
      }
    }
    r.currentIndex = s;
    o.each(function (i) {
      var r = e(this);
      var o = a.eq(i);
      var s = o.data("mode");
      var l = s == null ? z.html : h(z, /^\s*$/.test(s) || isNaN(s) ? s : parseInt(s, 0));
      var u = l === z.html || o.data("url") === t ? "" : o.data("url");
      var d = l !== z.html && o.data("loaded") === "1";
      var f = e.extend({}, q, {
        title: r.html(),
        content: l === z.html ? o.html() : "",
        contentUrl: u,
        contentMode: l,
        contentLoaded: d
      });
      !function (e, t) {
        c(e).push(t);
      }(n, f);
    });
  }
  function i(e, t) {
    var n = e.find(".steps li").eq(t.currentIndex);
    if (e.triggerHandler("finishing", [t.currentIndex])) {
      n.addClass("done").removeClass("error");
      e.triggerHandler("finished", [t.currentIndex]);
    } else {
      n.addClass("error");
    }
  }
  function r(e) {
    var t = e.data("eventNamespace");
    if (t == null) {
      t = "." + d(e);
      e.data("eventNamespace", t);
    }
    return t;
  }
  function o(e, t) {
    var n = d(e);
    return e.find("#" + n + N + t);
  }
  function a(e, t) {
    var n = d(e);
    return e.find("#" + n + F + t);
  }
  function s(e) {
    return e.data("options");
  }
  function l(e) {
    return e.data("state");
  }
  function c(e) {
    return e.data("steps");
  }
  function u(e, t) {
    var n = c(e);
    if (t < 0 || t >= n.length) {
      M(j);
    }
    return n[t];
  }
  function d(e) {
    var t = e.data("uid");
    if (t == null) {
      if ((t = e._id()) == null) {
        t = "steps-uid-".concat(P);
        e._id(t);
      }
      P++;
      e.data("uid", t);
    }
    return t;
  }
  function h(e, n) {
    I("enumType", e);
    I("keyOrValue", n);
    if (typeof n == "string") {
      var i = e[n];
      if (i === t) {
        M("The enum key '{0}' does not exist.", n);
      }
      return i;
    }
    if (typeof n == "number") {
      for (var r in e) {
        if (e[r] === n) {
          return n;
        }
      }
      M("Invalid enum value '{0}'.", n);
    } else {
      M("Invalid key or value type.");
    }
  }
  function f(e, t, n) {
    return b(e, t, n, function (e, t) {
      return e.currentIndex + t;
    }(n, 1));
  }
  function p(e, t, n) {
    return b(e, t, n, function (e, t) {
      return e.currentIndex - t;
    }(n, 1));
  }
  function g(t) {
    var i = e.extend(true, {}, W, t);
    return this.each(function () {
      var t = e(this);
      var a = {
        currentIndex: i.startIndex,
        currentStep: null,
        stepCount: 0,
        transitionElement: null
      };
      t.data("options", i);
      t.data("state", a);
      t.data("steps", []);
      n(t, i, a);
      (function (t, n, i) {
        var r = "<{0} class=\"{1}\">{2}</{0}>";
        var o = h(H, n.stepsOrientation) === H.vertical ? " vertical" : "";
        var a = e(r.format(n.contentContainerTag, "content " + n.clearFixCssClass, t.html()));
        var s = e(r.format(n.stepsContainerTag, "steps " + n.clearFixCssClass, "<ul role=\"tablist\"></ul>"));
        var l = a.children(n.headerTag);
        var c = a.children(n.bodyTag);
        t.attr("role", "application").empty().append(s).append(a).addClass(n.cssClass + " " + n.clearFixCssClass + o);
        c.each(function (n) {
          k(t, i, e(this), n);
        });
        l.each(function (r) {
          A(t, n, i, e(this), r);
        });
        _(t, n, i);
        (function (e, t, n) {
          if (t.enablePagination) {
            var i = "<li><a href=\"#{0}\" role=\"menuitem\">{1}</a></li>";
            var r = "";
            if (!t.forceMoveForward) {
              r += i.format("previous", t.labels.previous);
            }
            r += i.format("next", t.labels.next);
            if (t.enableFinishButton) {
              r += i.format("finish", t.labels.finish);
            }
            if (t.enableCancelButton) {
              r += i.format("cancel", t.labels.cancel);
            }
            e.append("<{0} class=\"actions {1}\"><ul role=\"menu\" aria-label=\"{2}\">{3}</ul></{0}>".format(t.actionContainerTag, t.clearFixCssClass, t.labels.pagination, r));
            x(e, t, n);
            y(e, t, n);
          }
        })(t, n, i);
      })(t, i, a);
      (function (e, t) {
        var n = r(e);
        e.bind("canceled" + n, t.onCanceled);
        e.bind("contentLoaded" + n, t.onContentLoaded);
        e.bind("finishing" + n, t.onFinishing);
        e.bind("finished" + n, t.onFinished);
        e.bind("init" + n, t.onInit);
        e.bind("stepChanging" + n, t.onStepChanging);
        e.bind("stepChanged" + n, t.onStepChanged);
        if (t.enableKeyNavigation) {
          e.bind("keyup" + n, v);
        }
        e.find(".actions a").bind("click" + n, w);
      })(t, i);
      if (i.autoFocus && P === 0) {
        o(t, i.startIndex).focus();
      }
      t.triggerHandler("init", [i.startIndex]);
    });
  }
  function m(t, n, i, r, o) {
    if (r < 0 || r > i.stepCount) {
      M(j);
    }
    (function (e, t, n) {
      c(e).splice(t, 0, n);
    })(t, r, o = e.extend({}, q, o));
    if (i.currentIndex !== i.stepCount && i.currentIndex >= r) {
      i.currentIndex++;
      D(t, n, i);
    }
    i.stepCount++;
    var s = t.find(".content");
    var l = e("<{0}>{1}</{0}>".format(n.headerTag, o.title));
    var u = e("<{0}></{0}>".format(n.bodyTag));
    if (o.contentMode == null || o.contentMode === z.html) {
      u.html(o.content);
    }
    if (r === 0) {
      s.prepend(u).prepend(l);
    } else {
      a(t, r - 1).after(u).after(l);
    }
    k(t, i, u, r);
    A(t, n, i, l, r);
    C(t, n, i, r);
    if (r === i.currentIndex) {
      _(t, n, i);
    }
    x(t, n, i);
    return t;
  }
  function v(t) {
    var n = e(this);
    var i = s(n);
    var r = l(n);
    if (i.suppressPaginationOnFocus && n.find(":focus").is(":input")) {
      t.preventDefault();
      return false;
    }
    var o = 37;
    var a = 39;
    if (t.keyCode === o) {
      t.preventDefault();
      p(n, i, r);
    } else if (t.keyCode === a) {
      t.preventDefault();
      f(n, i, r);
    }
  }
  function y(t, n, i) {
    if (i.stepCount > 0) {
      var r = i.currentIndex;
      var o = u(t, r);
      if (!n.enableContentCache || !o.contentLoaded) {
        switch (h(z, o.contentMode)) {
          case z.iframe:
            t.find(".content > .body").eq(i.currentIndex).empty().html("<iframe src=\"" + o.contentUrl + "\" frameborder=\"0\" scrolling=\"no\" />").data("loaded", "1");
            break;
          case z.async:
            var s = a(t, r)._aria("busy", "true").empty().append(T(n.loadingTemplate, {
              text: n.labels.loading
            }));
            e.ajax({
              url: o.contentUrl,
              cache: false
            }).done(function (e) {
              s.empty().html(e)._aria("busy", "false").data("loaded", "1");
              t.triggerHandler("contentLoaded", [r]);
            });
        }
      }
    }
  }
  function b(e, t, n, i) {
    var r = n.currentIndex;
    if (i >= 0 && i < n.stepCount && !(t.forceMoveForward && i < n.currentIndex)) {
      var a = o(e, i);
      var s = a.parent();
      var l = s.hasClass("disabled");
      s._enableAria();
      a.click();
      return r !== n.currentIndex || !l || (s._enableAria(false), false);
    }
    return false;
  }
  function w(t) {
    t.preventDefault();
    var n = e(this);
    var r = n.parent().parent().parent().parent();
    var o = s(r);
    var a = l(r);
    var c = n.attr("href");
    switch (c.substring(c.lastIndexOf("#") + 1)) {
      case "cancel":
        !function (e) {
          e.triggerHandler("canceled");
        }(r);
        break;
      case "finish":
        i(r, a);
        break;
      case "next":
        f(r, o, a);
        break;
      case "previous":
        p(r, o, a);
    }
  }
  function x(e, t, n) {
    if (t.enablePagination) {
      var i = e.find(".actions a[href$='#finish']").parent();
      var r = e.find(".actions a[href$='#next']").parent();
      if (!t.forceMoveForward) {
        e.find(".actions a[href$='#previous']").parent()._enableAria(n.currentIndex > 0);
      }
      if (t.enableFinishButton && t.showFinishButtonAlways) {
        i._enableAria(n.stepCount > 0);
        r._enableAria(n.stepCount > 1 && n.stepCount > n.currentIndex + 1);
      } else {
        i._showAria(t.enableFinishButton && n.stepCount === n.currentIndex + 1);
        r._showAria(n.stepCount === 0 || n.stepCount > n.currentIndex + 1)._enableAria(n.stepCount > n.currentIndex + 1 || !t.enableFinishButton);
      }
    }
  }
  function _(t, n, i, r) {
    var a = o(t, i.currentIndex);
    var s = e("<span class=\"current-info audible\">" + n.labels.current + " </span>");
    var l = t.find(".content > .title");
    if (r != null) {
      var c = o(t, r);
      c.parent().addClass("done").removeClass("error")._selectAria(false);
      l.eq(r).removeClass("current").next(".body").removeClass("current");
      s = c.find(".current-info");
      a.focus();
    }
    a.prepend(s).parent()._selectAria().removeClass("done")._enableAria();
    l.eq(i.currentIndex).addClass("current").next(".body").addClass("current");
  }
  function C(e, t, n, i) {
    for (var r = d(e), o = i; o < n.stepCount; o++) {
      var a = r + N + o;
      var s = r + F + o;
      var l = r + R + o;
      var c = e.find(".title").eq(o)._id(l);
      e.find(".steps a").eq(o)._id(a)._aria("controls", s).attr("href", "#" + l).html(T(t.titleTemplate, {
        index: o + 1,
        title: c.html()
      }));
      e.find(".body").eq(o)._id(s)._aria("labelledby", l);
    }
  }
  function S(e, t, n, i) {
    return !(i < 0 || i >= n.stepCount || n.currentIndex === i) && (function (e, t) {
      c(e).splice(t, 1);
    }(e, i), n.currentIndex > i && (n.currentIndex--, D(e, t, n)), n.stepCount--, function (e, t) {
      var n = d(e);
      return e.find("#" + n + R + t);
    }(e, i).remove(), a(e, i).remove(), o(e, i).parent().remove(), i === 0 && e.find(".steps li").first().addClass("first"), i === n.stepCount && e.find(".steps li").eq(i).addClass("last"), C(e, t, n, i), x(e, t, n), true);
  }
  function k(e, t, n, i) {
    var r = d(e);
    var o = r + F + i;
    var a = r + R + i;
    n._id(o).attr("role", "tabpanel")._aria("labelledby", a).addClass("body")._showAria(t.currentIndex === i);
  }
  function T(e, n) {
    for (var i = e.match(/#([a-z]*)#/gi), r = 0; r < i.length; r++) {
      var o = i[r];
      var a = o.substring(1, o.length - 1);
      if (n[a] === t) {
        M("The key '{0}' does not exist in the substitute collection!", a);
      }
      e = e.replace(o, n[a]);
    }
    return e;
  }
  function A(t, n, i, o, a) {
    var s = d(t);
    var l = s + N + a;
    var c = s + F + a;
    var u = s + R + a;
    var h = t.find(".steps > ul");
    var f = T(n.titleTemplate, {
      index: a + 1,
      title: o.html()
    });
    var p = e("<li role=\"tab\"><a id=\"" + l + "\" href=\"#" + u + "\" aria-controls=\"" + c + "\">" + f + "</a></li>");
    p._enableAria(n.enableAllSteps || i.currentIndex > a);
    if (i.currentIndex > a) {
      p.addClass("done");
    }
    o._id(u).attr("tabindex", "-1").addClass("title");
    if (a === 0) {
      h.prepend(p);
    } else {
      h.find("li").eq(a - 1).after(p);
    }
    if (a === 0) {
      h.find("li").removeClass("first").eq(a).addClass("first");
    }
    if (a === i.stepCount - 1) {
      h.find("li").removeClass("last").eq(a).addClass("last");
    }
    p.children("a").bind("click" + r(t), O);
  }
  function D(t, n, i) {
    if (n.saveState && e.cookie) {
      e.cookie(L + d(t), i.currentIndex);
    }
  }
  function E(t, n, i, r, o, a) {
    var s = t.find(".content > .body");
    var c = h(B, n.transitionEffect);
    var u = n.transitionEffectSpeed;
    var d = s.eq(r);
    var f = s.eq(o);
    switch (c) {
      case B.fade:
      case B.slide:
        var p = c === B.fade ? "fadeOut" : "slideUp";
        var g = c === B.fade ? "fadeIn" : "slideDown";
        i.transitionElement = d;
        f[p](u, function () {
          var t = l(e(this)._showAria(false).parent().parent());
          if (t.transitionElement) {
            t.transitionElement[g](u, function () {
              e(this)._showAria();
            }).promise().done(a);
            t.transitionElement = null;
          }
        });
        break;
      case B.slideLeft:
        var m = f.outerWidth(true);
        var v = r > o ? -m : m;
        var y = r > o ? m : -m;
        e.when(f.animate({
          left: v
        }, u, function () {
          e(this)._showAria(false);
        }), d.css("left", y + "px")._showAria().animate({
          left: 0
        }, u)).done(a);
        break;
      default:
        e.when(f._showAria(false), d._showAria()).done(a);
    }
  }
  function O(t) {
    t.preventDefault();
    var n = e(this);
    var i = n.parent().parent().parent().parent();
    var r = s(i);
    var a = l(i);
    var c = a.currentIndex;
    if (n.parent().is(":not(.disabled):not(.current)")) {
      var u = n.attr("href");
      !function (e, t, n, i) {
        if (i < 0 || i >= n.stepCount) {
          M(j);
        }
        if (!(t.forceMoveForward && i < n.currentIndex)) {
          var r = n.currentIndex;
          if (e.triggerHandler("stepChanging", [n.currentIndex, i])) {
            n.currentIndex = i;
            D(e, t, n);
            _(e, t, n, r);
            x(e, t, n);
            y(e, t, n);
            E(e, t, n, i, r, function () {
              e.triggerHandler("stepChanged", [i, r]);
            });
          } else {
            e.find(".steps li").eq(r).addClass("error");
          }
        }
      }(i, r, a, parseInt(u.substring(u.lastIndexOf("-") + 1), 0));
    }
    if (c === a.currentIndex) {
      o(i, c).focus();
      return false;
    } else {
      return undefined;
    }
  }
  function M(e) {
    if (arguments.length > 1) {
      e = e.format(Array.prototype.slice.call(arguments, 1));
    }
    throw new Error(e);
  }
  function I(e, t) {
    if (t == null) {
      M("The argument '{0}' is null or undefined.", e);
    }
  }
  e.fn.extend({
    _aria: function (e, t) {
      return this.attr("aria-" + e, t);
    },
    _removeAria: function (e) {
      return this.removeAttr("aria-" + e);
    },
    _enableAria: function (e) {
      if (e == null || e) {
        return this.removeClass("disabled")._aria("disabled", "false");
      } else {
        return this.addClass("disabled")._aria("disabled", "true");
      }
    },
    _showAria: function (e) {
      if (e == null || e) {
        return this.show()._aria("hidden", "false");
      } else {
        return this.hide()._aria("hidden", "true");
      }
    },
    _selectAria: function (e) {
      if (e == null || e) {
        return this.addClass("current")._aria("selected", "true");
      } else {
        return this.removeClass("current")._aria("selected", "false");
      }
    },
    _id: function (e) {
      if (e) {
        return this.attr("id", e);
      } else {
        return this.attr("id");
      }
    }
  });
  if (!String.prototype.format) {
    String.prototype.format = function () {
      for (var t = arguments.length === 1 && e.isArray(arguments[0]) ? arguments[0] : arguments, n = this, i = 0; i < t.length; i++) {
        var r = new RegExp("\\{" + i + "\\}", "gm");
        n = n.replace(r, t[i]);
      }
      return n;
    };
  }
  var P = 0;
  var L = "jQu3ry_5teps_St@te_";
  var N = "-t-";
  var F = "-p-";
  var R = "-h-";
  var j = "Index out of range.";
  var $ = "One or more corresponding step {0} are missing.";
  e.fn.steps = function (t) {
    if (e.fn.steps[t]) {
      return e.fn.steps[t].apply(this, Array.prototype.slice.call(arguments, 1));
    } else if (typeof t != "object" && t) {
      return void e.error("Method " + t + " does not exist on jQuery.steps");
    } else {
      return g.apply(this, arguments);
    }
  };
  e.fn.steps.add = function (e) {
    var t = l(this);
    return m(this, s(this), t, t.stepCount, e);
  };
  e.fn.steps.destroy = function () {
    return function (t, n) {
      var i = r(t);
      t.unbind(i).removeData("uid").removeData("options").removeData("state").removeData("steps").removeData("eventNamespace").find(".actions a").unbind(i);
      t.removeClass(n.clearFixCssClass + " vertical");
      var o = t.find(".content > *");
      o.removeData("loaded").removeData("mode").removeData("url");
      o.removeAttr("id").removeAttr("role").removeAttr("tabindex").removeAttr("class").removeAttr("style")._removeAria("labelledby")._removeAria("hidden");
      t.find(".content > [data-mode='async'],.content > [data-mode='iframe']").empty();
      var a = e("<{0} class=\"{1}\"></{0}>".format(t.get(0).tagName, t.attr("class")));
      var s = t._id();
      if (s != null && s !== "") {
        a._id(s);
      }
      a.html(t.find(".content").html());
      t.after(a);
      t.remove();
      return a;
    }(this, s(this));
  };
  e.fn.steps.finish = function () {
    i(this, l(this));
  };
  e.fn.steps.getCurrentIndex = function () {
    return l(this).currentIndex;
  };
  e.fn.steps.getCurrentStep = function () {
    return u(this, l(this).currentIndex);
  };
  e.fn.steps.getStep = function (e) {
    return u(this, e);
  };
  e.fn.steps.insert = function (e, t) {
    return m(this, s(this), l(this), e, t);
  };
  e.fn.steps.next = function () {
    return f(this, s(this), l(this));
  };
  e.fn.steps.previous = function () {
    return p(this, s(this), l(this));
  };
  e.fn.steps.remove = function (e) {
    return S(this, s(this), l(this), e);
  };
  e.fn.steps.setStep = function () {
    throw new Error("Not yet implemented!");
  };
  e.fn.steps.skip = function () {
    throw new Error("Not yet implemented!");
  };
  var z = e.fn.steps.contentMode = {
    html: 0,
    iframe: 1,
    async: 2
  };
  var H = e.fn.steps.stepsOrientation = {
    horizontal: 0,
    vertical: 1
  };
  var B = e.fn.steps.transitionEffect = {
    none: 0,
    fade: 1,
    slide: 2,
    slideLeft: 3
  };
  var q = e.fn.steps.stepModel = {
    title: "",
    content: "",
    contentUrl: "",
    contentMode: z.html,
    contentLoaded: false
  };
  var W = e.fn.steps.defaults = {
    headerTag: "h1",
    bodyTag: "div",
    contentContainerTag: "div",
    actionContainerTag: "div",
    stepsContainerTag: "div",
    cssClass: "wizard",
    clearFixCssClass: "clearfix",
    stepsOrientation: H.horizontal,
    titleTemplate: "<span class=\"number\">#index#.</span> #title#",
    loadingTemplate: "<span class=\"spinner\"></span> #text#",
    autoFocus: false,
    enableAllSteps: false,
    enableKeyNavigation: true,
    enablePagination: true,
    suppressPaginationOnFocus: true,
    enableContentCache: true,
    enableCancelButton: false,
    enableFinishButton: true,
    preloadContent: false,
    showFinishButtonAlways: false,
    forceMoveForward: false,
    saveState: false,
    startIndex: 0,
    transitionEffect: B.none,
    transitionEffectSpeed: 200,
    onStepChanging: function () {
      return true;
    },
    onStepChanged: function () {},
    onCanceled: function () {},
    onFinishing: function () {
      return true;
    },
    onFinished: function () {},
    onContentLoaded: function () {},
    onInit: function () {},
    labels: {
      cancel: "Cancel",
      current: "current step:",
      pagination: "Pagination",
      finish: "Finish",
      next: "Next",
      previous: "Previous",
      loading: "Loading ..."
    }
  };
})(jQuery);
(function (e) {
  if (typeof define == "function" && define.amd) {
    define(["jquery"], e);
  } else {
    e(typeof exports == "object" ? require("jquery") : window.jQuery || window.Zepto);
  }
})(function (e) {
  var t;
  var n;
  var i;
  var r;
  var o;
  var a;
  var s = "Close";
  var l = "BeforeClose";
  var c = "MarkupParse";
  var u = "Open";
  var d = "Change";
  var h = "mfp";
  var f = ".mfp";
  var p = "mfp-ready";
  var g = "mfp-removing";
  var m = "mfp-prevent-close";
  var v = function () {};
  var y = !!window.jQuery;
  var b = e(window);
  var w = function (e, n) {
    t.ev.on(h + e + f, n);
  };
  var x = function (t, n, i, r) {
    var o = document.createElement("div");
    o.className = "mfp-" + t;
    if (i) {
      o.innerHTML = i;
    }
    if (r) {
      if (n) {
        n.appendChild(o);
      }
    } else {
      o = e(o);
      if (n) {
        o.appendTo(n);
      }
    }
    return o;
  };
  var _ = function (n, i) {
    t.ev.triggerHandler(h + n, i);
    if (t.st.callbacks) {
      n = n.charAt(0).toLowerCase() + n.slice(1);
      if (t.st.callbacks[n]) {
        t.st.callbacks[n].apply(t, e.isArray(i) ? i : [i]);
      }
    }
  };
  var C = function (n) {
    if (!(n === a && t.currTemplate.closeBtn)) {
      t.currTemplate.closeBtn = e(t.st.closeMarkup.replace("%title%", t.st.tClose));
      a = n;
    }
    return t.currTemplate.closeBtn;
  };
  var S = function () {
    if (!e.magnificPopup.instance) {
      (t = new v()).init();
      e.magnificPopup.instance = t;
    }
  };
  v.prototype = {
    constructor: v,
    init: function () {
      var n = navigator.appVersion;
      t.isLowIE = t.isIE8 = document.all && !document.addEventListener;
      t.isAndroid = /android/gi.test(n);
      t.isIOS = /iphone|ipad|ipod/gi.test(n);
      t.supportsTransition = function () {
        var e = document.createElement("p").style;
        var t = ["ms", "O", "Moz", "Webkit"];
        if (e.transition !== undefined) {
          return true;
        }
        for (; t.length;) {
          if (t.pop() + "Transition" in e) {
            return true;
          }
        }
        return false;
      }();
      t.probablyMobile = t.isAndroid || t.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent);
      i = e(document);
      t.popupsCache = {};
    },
    open: function (n) {
      var r;
      if (n.isObj === false) {
        t.items = n.items.toArray();
        t.index = 0;
        var a;
        var s = n.items;
        for (r = 0; r < s.length; r++) {
          if ((a = s[r]).parsed) {
            a = a.el[0];
          }
          if (a === n.el[0]) {
            t.index = r;
            break;
          }
        }
      } else {
        t.items = e.isArray(n.items) ? n.items : [n.items];
        t.index = n.index || 0;
      }
      if (!t.isOpen) {
        t.types = [];
        o = "";
        if (n.mainEl && n.mainEl.length) {
          t.ev = n.mainEl.eq(0);
        } else {
          t.ev = i;
        }
        if (n.key) {
          if (!t.popupsCache[n.key]) {
            t.popupsCache[n.key] = {};
          }
          t.currTemplate = t.popupsCache[n.key];
        } else {
          t.currTemplate = {};
        }
        t.st = e.extend(true, {}, e.magnificPopup.defaults, n);
        t.fixedContentPos = t.st.fixedContentPos === "auto" ? !t.probablyMobile : t.st.fixedContentPos;
        if (t.st.modal) {
          t.st.closeOnContentClick = false;
          t.st.closeOnBgClick = false;
          t.st.showCloseBtn = false;
          t.st.enableEscapeKey = false;
        }
        if (!t.bgOverlay) {
          t.bgOverlay = x("bg").on("click" + f, function () {
            t.close();
          });
          t.wrap = x("wrap").attr("tabindex", -1).on("click" + f, function (e) {
            if (t._checkIfClose(e.target)) {
              t.close();
            }
          });
          t.container = x("container", t.wrap);
        }
        t.contentContainer = x("content");
        if (t.st.preloader) {
          t.preloader = x("preloader", t.container, t.st.tLoading);
        }
        var l = e.magnificPopup.modules;
        for (r = 0; r < l.length; r++) {
          var d = l[r];
          d = d.charAt(0).toUpperCase() + d.slice(1);
          t["init" + d].call(t);
        }
        _("BeforeOpen");
        if (t.st.showCloseBtn) {
          if (t.st.closeBtnInside) {
            w(c, function (e, t, n, i) {
              n.close_replaceWith = C(i.type);
            });
            o += " mfp-close-btn-in";
          } else {
            t.wrap.append(C());
          }
        }
        if (t.st.alignTop) {
          o += " mfp-align-top";
        }
        if (t.fixedContentPos) {
          t.wrap.css({
            overflow: t.st.overflowY,
            overflowX: "hidden",
            overflowY: t.st.overflowY
          });
        } else {
          t.wrap.css({
            top: b.scrollTop(),
            position: "absolute"
          });
        }
        if (t.st.fixedBgPos === false || t.st.fixedBgPos === "auto" && !t.fixedContentPos) {
          t.bgOverlay.css({
            height: i.height(),
            position: "absolute"
          });
        }
        if (t.st.enableEscapeKey) {
          i.on("keyup" + f, function (e) {
            if (e.keyCode === 27) {
              t.close();
            }
          });
        }
        b.on("resize" + f, function () {
          t.updateSize();
        });
        if (!t.st.closeOnContentClick) {
          o += " mfp-auto-cursor";
        }
        if (o) {
          t.wrap.addClass(o);
        }
        var h = t.wH = b.height();
        var g = {};
        if (t.fixedContentPos && t._hasScrollBar(h)) {
          var m = t._getScrollbarSize();
          if (m) {
            g.marginRight = m;
          }
        }
        if (t.fixedContentPos) {
          if (t.isIE7) {
            e("body, html").css("overflow", "hidden");
          } else {
            g.overflow = "hidden";
          }
        }
        var v = t.st.mainClass;
        if (t.isIE7) {
          v += " mfp-ie7";
        }
        if (v) {
          t._addClassToMFP(v);
        }
        t.updateItemHTML();
        _("BuildControls");
        e("html").css(g);
        t.bgOverlay.add(t.wrap).prependTo(t.st.prependTo || e(document.body));
        t._lastFocusedEl = document.activeElement;
        setTimeout(function () {
          if (t.content) {
            t._addClassToMFP(p);
            t._setFocus();
          } else {
            t.bgOverlay.addClass(p);
          }
          i.on("focusin" + f, t._onFocusIn);
        }, 16);
        t.isOpen = true;
        t.updateSize(h);
        _(u);
        return n;
      }
      t.updateItemHTML();
    },
    close: function () {
      if (t.isOpen) {
        _(l);
        t.isOpen = false;
        if (t.st.removalDelay && !t.isLowIE && t.supportsTransition) {
          t._addClassToMFP(g);
          setTimeout(function () {
            t._close();
          }, t.st.removalDelay);
        } else {
          t._close();
        }
      }
    },
    _close: function () {
      _(s);
      var n = g + " " + p + " ";
      t.bgOverlay.detach();
      t.wrap.detach();
      t.container.empty();
      if (t.st.mainClass) {
        n += t.st.mainClass + " ";
      }
      t._removeClassFromMFP(n);
      if (t.fixedContentPos) {
        var r = {
          marginRight: ""
        };
        if (t.isIE7) {
          e("body, html").css("overflow", "");
        } else {
          r.overflow = "";
        }
        e("html").css(r);
      }
      i.off("keyup.mfp focusin" + f);
      t.ev.off(f);
      t.wrap.attr("class", "mfp-wrap").removeAttr("style");
      t.bgOverlay.attr("class", "mfp-bg");
      t.container.attr("class", "mfp-container");
      if (!(!t.st.showCloseBtn || t.st.closeBtnInside && t.currTemplate[t.currItem.type] !== true)) {
        if (t.currTemplate.closeBtn) {
          t.currTemplate.closeBtn.detach();
        }
      }
      if (t.st.autoFocusLast && t._lastFocusedEl) {
        e(t._lastFocusedEl).focus();
      }
      t.currItem = null;
      t.content = null;
      t.currTemplate = null;
      t.prevHeight = 0;
      _("AfterClose");
    },
    updateSize: function (e) {
      if (t.isIOS) {
        var n = document.documentElement.clientWidth / window.innerWidth;
        var i = window.innerHeight * n;
        t.wrap.css("height", i);
        t.wH = i;
      } else {
        t.wH = e || b.height();
      }
      if (!t.fixedContentPos) {
        t.wrap.css("height", t.wH);
      }
      _("Resize");
    },
    updateItemHTML: function () {
      var n = t.items[t.index];
      t.contentContainer.detach();
      if (t.content) {
        t.content.detach();
      }
      if (!n.parsed) {
        n = t.parseEl(t.index);
      }
      var i = n.type;
      _("BeforeChange", [t.currItem ? t.currItem.type : "", i]);
      t.currItem = n;
      if (!t.currTemplate[i]) {
        var o = !!t.st[i] && t.st[i].markup;
        _("FirstMarkupParse", o);
        t.currTemplate[i] = !o || e(o);
      }
      if (r && r !== n.type) {
        t.container.removeClass("mfp-" + r + "-holder");
      }
      var a = t["get" + i.charAt(0).toUpperCase() + i.slice(1)](n, t.currTemplate[i]);
      t.appendContent(a, i);
      n.preloaded = true;
      _(d, n);
      r = n.type;
      t.container.prepend(t.contentContainer);
      _("AfterChange");
    },
    appendContent: function (e, n) {
      t.content = e;
      if (e) {
        if (t.st.showCloseBtn && t.st.closeBtnInside && t.currTemplate[n] === true) {
          if (!t.content.find(".mfp-close").length) {
            t.content.append(C());
          }
        } else {
          t.content = e;
        }
      } else {
        t.content = "";
      }
      _("BeforeAppend");
      t.container.addClass("mfp-" + n + "-holder");
      t.contentContainer.append(t.content);
    },
    parseEl: function (n) {
      var i;
      var r = t.items[n];
      if (r.tagName) {
        r = {
          el: e(r)
        };
      } else {
        i = r.type;
        r = {
          data: r,
          src: r.src
        };
      }
      if (r.el) {
        for (var o = t.types, a = 0; a < o.length; a++) {
          if (r.el.hasClass("mfp-" + o[a])) {
            i = o[a];
            break;
          }
        }
        r.src = r.el.attr("data-mfp-src");
        if (!r.src) {
          r.src = r.el.attr("href");
        }
      }
      r.type = i || t.st.type || "inline";
      r.index = n;
      r.parsed = true;
      t.items[n] = r;
      _("ElementParse", r);
      return t.items[n];
    },
    addGroup: function (e, n) {
      var i = function (i) {
        i.mfpEl = this;
        t._openClick(i, e, n);
      };
      if (!n) {
        n = {};
      }
      var r = "click.magnificPopup";
      n.mainEl = e;
      if (n.items) {
        n.isObj = true;
        e.off(r).on(r, i);
      } else {
        n.isObj = false;
        if (n.delegate) {
          e.off(r).on(r, n.delegate, i);
        } else {
          n.items = e;
          e.off(r).on(r, i);
        }
      }
    },
    _openClick: function (n, i, r) {
      if ((r.midClick !== undefined ? r.midClick : e.magnificPopup.defaults.midClick) || !(n.which === 2 || n.ctrlKey || n.metaKey || n.altKey || n.shiftKey)) {
        var o = r.disableOn !== undefined ? r.disableOn : e.magnificPopup.defaults.disableOn;
        if (o) {
          if (e.isFunction(o)) {
            if (!o.call(t)) {
              return true;
            }
          } else if (b.width() < o) {
            return true;
          }
        }
        if (n.type) {
          n.preventDefault();
          if (t.isOpen) {
            n.stopPropagation();
          }
        }
        r.el = e(n.mfpEl);
        if (r.delegate) {
          r.items = i.find(r.delegate);
        }
        t.open(r);
      }
    },
    updateStatus: function (e, i) {
      if (t.preloader) {
        if (n !== e) {
          t.container.removeClass("mfp-s-" + n);
        }
        if (!(i || e !== "loading")) {
          i = t.st.tLoading;
        }
        var r = {
          status: e,
          text: i
        };
        _("UpdateStatus", r);
        e = r.status;
        i = r.text;
        t.preloader.html(i);
        t.preloader.find("a").on("click", function (e) {
          e.stopImmediatePropagation();
        });
        t.container.addClass("mfp-s-" + e);
        n = e;
      }
    },
    _checkIfClose: function (n) {
      if (!e(n).hasClass(m)) {
        var i = t.st.closeOnContentClick;
        var r = t.st.closeOnBgClick;
        if (i && r) {
          return true;
        }
        if (!t.content || e(n).hasClass("mfp-close") || t.preloader && n === t.preloader[0]) {
          return true;
        }
        if (n === t.content[0] || e.contains(t.content[0], n)) {
          if (i) {
            return true;
          }
        } else if (r && e.contains(document, n)) {
          return true;
        }
        return false;
      }
    },
    _addClassToMFP: function (e) {
      t.bgOverlay.addClass(e);
      t.wrap.addClass(e);
    },
    _removeClassFromMFP: function (e) {
      this.bgOverlay.removeClass(e);
      t.wrap.removeClass(e);
    },
    _hasScrollBar: function (e) {
      return (t.isIE7 ? i.height() : document.body.scrollHeight) > (e || b.height());
    },
    _setFocus: function () {
      (t.st.focus ? t.content.find(t.st.focus).eq(0) : t.wrap).focus();
    },
    _onFocusIn: function (n) {
      if (n.target === t.wrap[0] || e.contains(t.wrap[0], n.target)) {
        return undefined;
      } else {
        t._setFocus();
        return false;
      }
    },
    _parseMarkup: function (t, n, i) {
      var r;
      if (i.data) {
        n = e.extend(i.data, n);
      }
      _(c, [t, n, i]);
      e.each(n, function (n, i) {
        if (i === undefined || i === false) {
          return true;
        }
        if ((r = n.split("_")).length > 1) {
          var o = t.find(f + "-" + r[0]);
          if (o.length > 0) {
            var a = r[1];
            if (a === "replaceWith") {
              if (o[0] !== i[0]) {
                o.replaceWith(i);
              }
            } else if (a === "img") {
              if (o.is("img")) {
                o.attr("src", i);
              } else {
                o.replaceWith(e("<img>").attr("src", i).attr("class", o.attr("class")));
              }
            } else {
              o.attr(r[1], i);
            }
          }
        } else {
          t.find(f + "-" + n).html(i);
        }
      });
    },
    _getScrollbarSize: function () {
      if (t.scrollbarSize === undefined) {
        var e = document.createElement("div");
        e.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;";
        document.body.appendChild(e);
        t.scrollbarSize = e.offsetWidth - e.clientWidth;
        document.body.removeChild(e);
      }
      return t.scrollbarSize;
    }
  };
  e.magnificPopup = {
    instance: null,
    proto: v.prototype,
    modules: [],
    open: function (t, n) {
      S();
      (t = t ? e.extend(true, {}, t) : {}).isObj = true;
      t.index = n || 0;
      return this.instance.open(t);
    },
    close: function () {
      return e.magnificPopup.instance && e.magnificPopup.instance.close();
    },
    registerModule: function (t, n) {
      if (n.options) {
        e.magnificPopup.defaults[t] = n.options;
      }
      e.extend(this.proto, n.proto);
      this.modules.push(t);
    },
    defaults: {
      disableOn: 0,
      key: null,
      midClick: false,
      mainClass: "",
      preloader: true,
      focus: "",
      closeOnContentClick: false,
      closeOnBgClick: true,
      closeBtnInside: true,
      showCloseBtn: true,
      enableEscapeKey: true,
      modal: false,
      alignTop: false,
      removalDelay: 0,
      prependTo: null,
      fixedContentPos: "auto",
      fixedBgPos: "auto",
      overflowY: "auto",
      closeMarkup: "<button title=\"%title%\" type=\"button\" class=\"mfp-close\">&#215;</button>",
      tClose: "Close (Esc)",
      tLoading: "Loading...",
      autoFocusLast: true
    }
  };
  e.fn.magnificPopup = function (n) {
    S();
    var i = e(this);
    if (typeof n == "string") {
      if (n === "open") {
        var r;
        var o = y ? i.data("magnificPopup") : i[0].magnificPopup;
        var a = parseInt(arguments[1], 10) || 0;
        if (o.items) {
          r = o.items[a];
        } else {
          r = i;
          if (o.delegate) {
            r = r.find(o.delegate);
          }
          r = r.eq(a);
        }
        t._openClick({
          mfpEl: r
        }, i, o);
      } else if (t.isOpen) {
        t[n].apply(t, Array.prototype.slice.call(arguments, 1));
      }
    } else {
      n = e.extend(true, {}, n);
      if (y) {
        i.data("magnificPopup", n);
      } else {
        i[0].magnificPopup = n;
      }
      t.addGroup(i, n);
    }
    return i;
  };
  var k;
  var T;
  var A;
  var D = "inline";
  var E = function () {
    if (A) {
      T.after(A.addClass(k)).detach();
      A = null;
    }
  };
  e.magnificPopup.registerModule(D, {
    options: {
      hiddenClass: "hide",
      markup: "",
      tNotFound: "Content not found"
    },
    proto: {
      initInline: function () {
        t.types.push(D);
        w(s + "." + D, function () {
          E();
        });
      },
      getInline: function (n, i) {
        E();
        if (n.src) {
          var r = t.st.inline;
          var o = e(n.src);
          if (o.length) {
            var a = o[0].parentNode;
            if (a && a.tagName) {
              if (!T) {
                k = r.hiddenClass;
                T = x(k);
                k = "mfp-" + k;
              }
              A = o.after(T).detach().removeClass(k);
            }
            t.updateStatus("ready");
          } else {
            t.updateStatus("error", r.tNotFound);
            o = e("<div>");
          }
          n.inlineElement = o;
          return o;
        }
        t.updateStatus("ready");
        t._parseMarkup(i, {}, n);
        return i;
      }
    }
  });
  var O;
  var M = "ajax";
  var I = function () {
    if (O) {
      e(document.body).removeClass(O);
    }
  };
  var P = function () {
    I();
    if (t.req) {
      t.req.abort();
    }
  };
  e.magnificPopup.registerModule(M, {
    options: {
      settings: null,
      cursor: "mfp-ajax-cur",
      tError: "<a href=\"%url%\">The content</a> could not be loaded."
    },
    proto: {
      initAjax: function () {
        t.types.push(M);
        O = t.st.ajax.cursor;
        w(s + "." + M, P);
        w("BeforeChange." + M, P);
      },
      getAjax: function (n) {
        if (O) {
          e(document.body).addClass(O);
        }
        t.updateStatus("loading");
        var i = e.extend({
          url: n.src,
          success: function (i, r, o) {
            var a = {
              data: i,
              xhr: o
            };
            _("ParseAjax", a);
            t.appendContent(e(a.data), M);
            n.finished = true;
            I();
            t._setFocus();
            setTimeout(function () {
              t.wrap.addClass(p);
            }, 16);
            t.updateStatus("ready");
            _("AjaxContentAdded");
          },
          error: function () {
            I();
            n.finished = n.loadError = true;
            t.updateStatus("error", t.st.ajax.tError.replace("%url%", n.src));
          }
        }, t.st.ajax.settings);
        t.req = e.ajax(i);
        return "";
      }
    }
  });
  var L;
  var N = function (n) {
    if (n.data && n.data.title !== undefined) {
      return n.data.title;
    }
    var i = t.st.image.titleSrc;
    if (i) {
      if (e.isFunction(i)) {
        return i.call(t, n);
      }
      if (n.el) {
        return n.el.attr(i) || "";
      }
    }
    return "";
  };
  e.magnificPopup.registerModule("image", {
    options: {
      markup: "<div class=\"mfp-figure\"><div class=\"mfp-close\"></div><figure><div class=\"mfp-img\"></div><figcaption><div class=\"mfp-bottom-bar\"><div class=\"mfp-title\"></div><div class=\"mfp-counter\"></div></div></figcaption></figure></div>",
      cursor: "mfp-zoom-out-cur",
      titleSrc: "title",
      verticalFit: true,
      tError: "<a href=\"%url%\">The image</a> could not be loaded."
    },
    proto: {
      initImage: function () {
        var n = t.st.image;
        var i = ".image";
        t.types.push("image");
        w(u + i, function () {
          if (t.currItem.type === "image" && n.cursor) {
            e(document.body).addClass(n.cursor);
          }
        });
        w(s + i, function () {
          if (n.cursor) {
            e(document.body).removeClass(n.cursor);
          }
          b.off("resize" + f);
        });
        w("Resize" + i, t.resizeImage);
        if (t.isLowIE) {
          w("AfterChange", t.resizeImage);
        }
      },
      resizeImage: function () {
        var e = t.currItem;
        if (e && e.img && t.st.image.verticalFit) {
          var n = 0;
          if (t.isLowIE) {
            n = parseInt(e.img.css("padding-top"), 10) + parseInt(e.img.css("padding-bottom"), 10);
          }
          e.img.css("max-height", t.wH - n);
        }
      },
      _onImageHasSize: function (e) {
        if (e.img) {
          e.hasSize = true;
          if (L) {
            clearInterval(L);
          }
          e.isCheckingImgSize = false;
          _("ImageHasSize", e);
          if (e.imgHidden) {
            if (t.content) {
              t.content.removeClass("mfp-loading");
            }
            e.imgHidden = false;
          }
        }
      },
      findImageSize: function (e) {
        var n = 0;
        var i = e.img[0];
        var r = function (o) {
          if (L) {
            clearInterval(L);
          }
          L = setInterval(function () {
            if (i.naturalWidth > 0) {
              return void t._onImageHasSize(e);
            } else {
              if (n > 200) {
                clearInterval(L);
              }
              return void (++n === 3 ? r(10) : n === 40 ? r(50) : n === 100 && r(500));
            }
          }, o);
        };
        r(1);
      },
      getImage: function (n, i) {
        var r = 0;
        var o = function () {
          if (n) {
            if (n.img[0].complete) {
              n.img.off(".mfploader");
              if (n === t.currItem) {
                t._onImageHasSize(n);
                t.updateStatus("ready");
              }
              n.hasSize = true;
              n.loaded = true;
              _("ImageLoadComplete");
            } else if (++r < 200) {
              setTimeout(o, 100);
            } else {
              a();
            }
          }
        };
        var a = function () {
          if (n) {
            n.img.off(".mfploader");
            if (n === t.currItem) {
              t._onImageHasSize(n);
              t.updateStatus("error", s.tError.replace("%url%", n.src));
            }
            n.hasSize = true;
            n.loaded = true;
            n.loadError = true;
          }
        };
        var s = t.st.image;
        var l = i.find(".mfp-img");
        if (l.length) {
          var c = document.createElement("img");
          c.className = "mfp-img";
          if (n.el && n.el.find("img").length) {
            c.alt = n.el.find("img").attr("alt");
          }
          n.img = e(c).on("load.mfploader", o).on("error.mfploader", a);
          c.src = n.src;
          if (l.is("img")) {
            n.img = n.img.clone();
          }
          if ((c = n.img[0]).naturalWidth > 0) {
            n.hasSize = true;
          } else if (!c.width) {
            n.hasSize = false;
          }
        }
        t._parseMarkup(i, {
          title: N(n),
          img_replaceWith: n.img
        }, n);
        t.resizeImage();
        if (n.hasSize) {
          if (L) {
            clearInterval(L);
          }
          if (n.loadError) {
            i.addClass("mfp-loading");
            t.updateStatus("error", s.tError.replace("%url%", n.src));
          } else {
            i.removeClass("mfp-loading");
            t.updateStatus("ready");
          }
          return i;
        } else {
          t.updateStatus("loading");
          n.loading = true;
          if (!n.hasSize) {
            n.imgHidden = true;
            i.addClass("mfp-loading");
            t.findImageSize(n);
          }
          return i;
        }
      }
    }
  });
  var F;
  e.magnificPopup.registerModule("zoom", {
    options: {
      enabled: false,
      easing: "ease-in-out",
      duration: 300,
      opener: function (e) {
        if (e.is("img")) {
          return e;
        } else {
          return e.find("img");
        }
      }
    },
    proto: {
      initZoom: function () {
        var e;
        var n = t.st.zoom;
        var i = ".zoom";
        if (n.enabled && t.supportsTransition) {
          var r;
          var o;
          var a = n.duration;
          var c = function (e) {
            var t = e.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image");
            var i = "all " + n.duration / 1000 + "s " + n.easing;
            var r = {
              position: "fixed",
              zIndex: 9999,
              left: 0,
              top: 0,
              "-webkit-backface-visibility": "hidden"
            };
            var o = "transition";
            r["-webkit-" + o] = r["-moz-" + o] = r["-o-" + o] = r[o] = i;
            t.css(r);
            return t;
          };
          var u = function () {
            t.content.css("visibility", "visible");
          };
          w("BuildControls" + i, function () {
            if (t._allowZoom()) {
              clearTimeout(r);
              t.content.css("visibility", "hidden");
              if (!(e = t._getItemToZoom())) {
                return void u();
              }
              (o = c(e)).css(t._getOffset());
              t.wrap.append(o);
              r = setTimeout(function () {
                o.css(t._getOffset(true));
                r = setTimeout(function () {
                  u();
                  setTimeout(function () {
                    o.remove();
                    e = o = null;
                    _("ZoomAnimationEnded");
                  }, 16);
                }, a);
              }, 16);
            }
          });
          w(l + i, function () {
            if (t._allowZoom()) {
              clearTimeout(r);
              t.st.removalDelay = a;
              if (!e) {
                if (!(e = t._getItemToZoom())) {
                  return;
                }
                o = c(e);
              }
              o.css(t._getOffset(true));
              t.wrap.append(o);
              t.content.css("visibility", "hidden");
              setTimeout(function () {
                o.css(t._getOffset());
              }, 16);
            }
          });
          w(s + i, function () {
            if (t._allowZoom()) {
              u();
              if (o) {
                o.remove();
              }
              e = null;
            }
          });
        }
      },
      _allowZoom: function () {
        return t.currItem.type === "image";
      },
      _getItemToZoom: function () {
        return !!t.currItem.hasSize && t.currItem.img;
      },
      _getOffset: function (n) {
        var i;
        var r = (i = n ? t.currItem.img : t.st.zoom.opener(t.currItem.el || t.currItem)).offset();
        var o = parseInt(i.css("padding-top"), 10);
        var a = parseInt(i.css("padding-bottom"), 10);
        r.top -= e(window).scrollTop() - o;
        var s = {
          width: i.width(),
          height: (y ? i.innerHeight() : i[0].offsetHeight) - a - o
        };
        if (F === undefined) {
          F = document.createElement("p").style.MozTransform !== undefined;
        }
        if (F) {
          s["-moz-transform"] = s.transform = "translate(" + r.left + "px," + r.top + "px)";
        } else {
          s.left = r.left;
          s.top = r.top;
        }
        return s;
      }
    }
  });
  var R = "iframe";
  var j = function (e) {
    if (t.currTemplate[R]) {
      var n = t.currTemplate[R].find("iframe");
      if (n.length) {
        if (!e) {
          n[0].src = "//about:blank";
        }
        if (t.isIE8) {
          n.css("display", e ? "block" : "none");
        }
      }
    }
  };
  e.magnificPopup.registerModule(R, {
    options: {
      markup: "<div class=\"mfp-iframe-scaler\"><div class=\"mfp-close\"></div><iframe class=\"mfp-iframe\" src=\"//about:blank\" frameborder=\"0\" allowfullscreen></iframe></div>",
      srcAction: "iframe_src",
      patterns: {
        youtube: {
          index: "youtube.com",
          id: "v=",
          src: "//www.youtube.com/embed/%id%?autoplay=1"
        },
        vimeo: {
          index: "vimeo.com/",
          id: "/",
          src: "//player.vimeo.com/video/%id%?autoplay=1"
        },
        gmaps: {
          index: "//maps.google.",
          src: "%id%&output=embed"
        }
      }
    },
    proto: {
      initIframe: function () {
        t.types.push(R);
        w("BeforeChange", function (e, t, n) {
          if (t !== n) {
            if (t === R) {
              j();
            } else if (n === R) {
              j(true);
            }
          }
        });
        w(s + "." + R, function () {
          j();
        });
      },
      getIframe: function (n, i) {
        var r = n.src;
        var o = t.st.iframe;
        e.each(o.patterns, function () {
          if (r.indexOf(this.index) > -1) {
            if (this.id) {
              r = typeof this.id == "string" ? r.substr(r.lastIndexOf(this.id) + this.id.length, r.length) : this.id.call(this, r);
            }
            r = this.src.replace("%id%", r);
            return false;
          } else {
            return undefined;
          }
        });
        var a = {};
        if (o.srcAction) {
          a[o.srcAction] = r;
        }
        t._parseMarkup(i, a, n);
        t.updateStatus("ready");
        return i;
      }
    }
  });
  var $ = function (e) {
    var n = t.items.length;
    if (e > n - 1) {
      return e - n;
    } else if (e < 0) {
      return n + e;
    } else {
      return e;
    }
  };
  var z = function (e, t, n) {
    return e.replace(/%curr%/gi, t + 1).replace(/%total%/gi, n);
  };
  e.magnificPopup.registerModule("gallery", {
    options: {
      enabled: false,
      arrowMarkup: "<button title=\"%title%\" type=\"button\" class=\"mfp-arrow mfp-arrow-%dir%\"></button>",
      preload: [0, 2],
      navigateByImgClick: true,
      arrows: true,
      tPrev: "Previous (Left arrow key)",
      tNext: "Next (Right arrow key)",
      tCounter: "%curr% of %total%"
    },
    proto: {
      initGallery: function () {
        var n = t.st.gallery;
        var r = ".mfp-gallery";
        t.direction = true;
        return !(!n || !n.enabled) && (o += " mfp-gallery", w(u + r, function () {
          if (n.navigateByImgClick) {
            t.wrap.on("click" + r, ".mfp-img", function () {
              if (t.items.length > 1) {
                t.next();
                return false;
              } else {
                return undefined;
              }
            });
          }
          i.on("keydown" + r, function (e) {
            if (e.keyCode === 37) {
              t.prev();
            } else if (e.keyCode === 39) {
              t.next();
            }
          });
        }), w("UpdateStatus" + r, function (e, n) {
          if (n.text) {
            n.text = z(n.text, t.currItem.index, t.items.length);
          }
        }), w(c + r, function (e, i, r, o) {
          var a = t.items.length;
          r.counter = a > 1 ? z(n.tCounter, o.index, a) : "";
        }), w("BuildControls" + r, function () {
          if (t.items.length > 1 && n.arrows && !t.arrowLeft) {
            var i = n.arrowMarkup;
            var r = t.arrowLeft = e(i.replace(/%title%/gi, n.tPrev).replace(/%dir%/gi, "left")).addClass(m);
            var o = t.arrowRight = e(i.replace(/%title%/gi, n.tNext).replace(/%dir%/gi, "right")).addClass(m);
            r.click(function () {
              t.prev();
            });
            o.click(function () {
              t.next();
            });
            t.container.append(r.add(o));
          }
        }), w(d + r, function () {
          if (t._preloadTimeout) {
            clearTimeout(t._preloadTimeout);
          }
          t._preloadTimeout = setTimeout(function () {
            t.preloadNearbyImages();
            t._preloadTimeout = null;
          }, 16);
        }), void w(s + r, function () {
          i.off(r);
          t.wrap.off("click" + r);
          t.arrowRight = t.arrowLeft = null;
        }));
      },
      next: function () {
        t.direction = true;
        t.index = $(t.index + 1);
        t.updateItemHTML();
      },
      prev: function () {
        t.direction = false;
        t.index = $(t.index - 1);
        t.updateItemHTML();
      },
      goTo: function (e) {
        t.direction = e >= t.index;
        t.index = e;
        t.updateItemHTML();
      },
      preloadNearbyImages: function () {
        var e;
        var n = t.st.gallery.preload;
        var i = Math.min(n[0], t.items.length);
        var r = Math.min(n[1], t.items.length);
        for (e = 1; e <= (t.direction ? r : i); e++) {
          t._preloadItem(t.index + e);
        }
        for (e = 1; e <= (t.direction ? i : r); e++) {
          t._preloadItem(t.index - e);
        }
      },
      _preloadItem: function (n) {
        n = $(n);
        if (!t.items[n].preloaded) {
          var i = t.items[n];
          if (!i.parsed) {
            i = t.parseEl(n);
          }
          _("LazyLoad", i);
          if (i.type === "image") {
            i.img = e("<img class=\"mfp-img\" />").on("load.mfploader", function () {
              i.hasSize = true;
            }).on("error.mfploader", function () {
              i.hasSize = true;
              i.loadError = true;
              _("LazyLoadError", i);
            }).attr("src", i.src);
          }
          i.preloaded = true;
        }
      }
    }
  });
  var H = "retina";
  e.magnificPopup.registerModule(H, {
    options: {
      replaceSrc: function (e) {
        return e.src.replace(/\.\w+$/, function (e) {
          return "@2x" + e;
        });
      },
      ratio: 1
    },
    proto: {
      initRetina: function () {
        if (window.devicePixelRatio > 1) {
          var e = t.st.retina;
          var n = e.ratio;
          if ((n = isNaN(n) ? n() : n) > 1) {
            w("ImageHasSize." + H, function (e, t) {
              t.img.css({
                "max-width": t.img[0].naturalWidth / n,
                width: "100%"
              });
            });
            w("ElementParse." + H, function (t, i) {
              i.src = e.replaceSrc(i, n);
            });
          }
        }
      }
    }
  });
  S();
});
var q = null;
window.PR_SHOULD_USE_CONTINUATION = true;
(function () {
  function e(e, t, n, i) {
    if (t) {
      n(e = {
        a: t,
        d: e
      });
      i.push.apply(i, e.e);
    }
  }
  function t(t, n) {
    var i;
    var r = {};
    !function () {
      for (var e = t.concat(n), o = [], a = {}, s = 0, l = e.length; s < l; ++s) {
        var c = e[s];
        var u = c[3];
        if (u) {
          for (var d = u.length; --d >= 0;) {
            r[u.charAt(d)] = c;
          }
        }
        u = "" + (c = c[1]);
        if (!a.hasOwnProperty(u)) {
          o.push(c);
          a[u] = q;
        }
      }
      o.push(/[\S\s]/);
      i = function (e) {
        function t(e) {
          var t = e.charCodeAt(0);
          if (t !== 92) {
            return t;
          }
          var n = e.charAt(1);
          if (t = d[n]) {
            return t;
          } else if (n >= "0" && n <= "7") {
            return parseInt(e.substring(1), 8);
          } else if (n === "u" || n === "x") {
            return parseInt(e.substring(2), 16);
          } else {
            return e.charCodeAt(1);
          }
        }
        function n(e) {
          if (e < 32) {
            return (e < 16 ? "\\x0" : "\\x") + e.toString(16);
          } else {
            if (!((e = String.fromCharCode(e)) !== "\\" && e !== "-" && e !== "[" && e !== "]")) {
              e = "\\" + e;
            }
            return e;
          }
        }
        function i(e) {
          for (var i = e.substring(1, e.length - 1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g), r = (e = [], []), o = i[0] === "^", a = o ? 1 : 0, s = i.length; a < s; ++a) {
            var l = i[a];
            if (/\\[bdsw]/i.test(l)) {
              e.push(l);
            } else {
              var c;
              l = t(l);
              if (a + 2 < s && i[a + 1] === "-") {
                c = t(i[a + 2]);
                a += 2;
              } else {
                c = l;
              }
              r.push([l, c]);
              if (!(c < 65 || l > 122)) {
                if (!(c < 65 || l > 90)) {
                  r.push([Math.max(65, l) | 32, Math.min(c, 90) | 32]);
                }
                if (!(c < 97 || l > 122)) {
                  r.push([Math.max(97, l) & -33, Math.min(c, 122) & -33]);
                }
              }
            }
          }
          r.sort(function (e, t) {
            return e[0] - t[0] || t[1] - e[1];
          });
          i = [];
          l = [NaN, NaN];
          a = 0;
          for (; a < r.length; ++a) {
            if ((s = r[a])[0] <= l[1] + 1) {
              l[1] = Math.max(l[1], s[1]);
            } else {
              i.push(l = s);
            }
          }
          r = ["["];
          if (o) {
            r.push("^");
          }
          r.push.apply(r, e);
          a = 0;
          for (; a < i.length; ++a) {
            s = i[a];
            r.push(n(s[0]));
            if (s[1] > s[0]) {
              if (s[1] + 1 > s[0]) {
                r.push("-");
              }
              r.push(n(s[1]));
            }
          }
          r.push("]");
          return r.join("");
        }
        function r(e) {
          for (var t = e.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g), n = t.length, r = [], s = 0, l = 0; s < n; ++s) {
            var c = t[s];
            if (c === "(") {
              ++l;
            } else if (c.charAt(0) === "\\" && (c = +c.substring(1)) && c <= l) {
              r[c] = -1;
            }
          }
          for (s = 1; s < r.length; ++s) {
            if (r[s] === -1) {
              r[s] = ++o;
            }
          }
          for (l = s = 0; s < n; ++s) {
            if ((c = t[s]) === "(") {
              if (r[++l] === undefined) {
                t[s] = "(?:";
              }
            } else if (c.charAt(0) === "\\" && (c = +c.substring(1)) && c <= l) {
              t[s] = "\\" + r[l];
            }
          }
          for (l = s = 0; s < n; ++s) {
            if (t[s] === "^" && t[s + 1] !== "^") {
              t[s] = "";
            }
          }
          if (e.ignoreCase && a) {
            for (s = 0; s < n; ++s) {
              e = (c = t[s]).charAt(0);
              if (c.length >= 2 && e === "[") {
                t[s] = i(c);
              } else if (e !== "\\") {
                t[s] = c.replace(/[A-Za-z]/g, function (e) {
                  e = e.charCodeAt(0);
                  return "[" + String.fromCharCode(e & -33, e | 32) + "]";
                });
              }
            }
          }
          return t.join("");
        }
        for (var o = 0, a = false, s = false, l = 0, c = e.length; l < c; ++l) {
          var u = e[l];
          if (u.ignoreCase) {
            s = true;
          } else if (/[a-z]/i.test(u.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi, ""))) {
            a = true;
            s = false;
            break;
          }
        }
        var d = {
          b: 8,
          t: 9,
          n: 10,
          v: 11,
          f: 12,
          r: 13
        };
        var h = [];
        l = 0;
        c = e.length;
        for (; l < c; ++l) {
          if ((u = e[l]).global || u.multiline) {
            throw Error("" + u);
          }
          h.push("(?:" + r(u) + ")");
        }
        return RegExp(h.join("|"), s ? "gi" : "g");
      }(o);
    }();
    var a = n.length;
    return function t(s) {
      for (var l = s.d, c = [l, "pln"], u = 0, d = s.a.match(i) || [], h = {}, f = 0, p = d.length; f < p; ++f) {
        var g;
        var m = d[f];
        var v = h[m];
        var y = undefined;
        if (typeof v == "string") {
          g = false;
        } else {
          var b = r[m.charAt(0)];
          if (b) {
            y = m.match(b[1]);
            v = b[0];
          } else {
            for (g = 0; g < a; ++g) {
              b = n[g];
              if (y = m.match(b[1])) {
                v = b[0];
                break;
              }
            }
            if (!y) {
              v = "pln";
            }
          }
          if (!(!(g = v.length >= 5 && v.substring(0, 5) === "lang-") || y && typeof y[1] == "string")) {
            g = false;
            v = "src";
          }
          if (!g) {
            h[m] = v;
          }
        }
        b = u;
        u += m.length;
        if (g) {
          g = y[1];
          var w = m.indexOf(g);
          var x = w + g.length;
          if (y[2]) {
            w = (x = m.length - y[2].length) - g.length;
          }
          v = v.substring(5);
          e(l + b, m.substring(0, w), t, c);
          e(l + b + w, g, o(v, g), c);
          e(l + b + x, m.substring(x), t, c);
        } else {
          c.push(l + b, v);
        }
      }
      s.e = c;
    };
  }
  function n(e) {
    var n = [];
    var i = [];
    if (e.tripleQuotedStrings) {
      n.push(["str", /^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/, q, "'\""]);
    } else if (e.multiLineStrings) {
      n.push(["str", /^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/, q, "'\"`"]);
    } else {
      n.push(["str", /^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/, q, "\"'"]);
    }
    if (e.verbatimStrings) {
      i.push(["str", /^@"(?:[^"]|"")*(?:"|$)/, q]);
    }
    var r = e.hashComments;
    if (r) {
      if (e.cStyleComments) {
        if (r > 1) {
          n.push(["com", /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, q, "#"]);
        } else {
          n.push(["com", /^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\n\r]*)/, q, "#"]);
        }
        i.push(["str", /^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/, q]);
      } else {
        n.push(["com", /^#[^\n\r]*/, q, "#"]);
      }
    }
    if (e.cStyleComments) {
      i.push(["com", /^\/\/[^\n\r]*/, q]);
      i.push(["com", /^\/\*[\S\s]*?(?:\*\/|$)/, q]);
    }
    if (e.regexLiterals) {
      i.push(["lang-regex", /^(?:^^\.?|[!+-]|!=|!==|#|%|%=|&|&&|&&=|&=|\(|\*|\*=|\+=|,|-=|->|\/|\/=|:|::|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|[?@[^]|\^=|\^\^|\^\^=|{|\||\|=|\|\||\|\|=|~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\s*(\/(?=[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/]);
    }
    if (r = e.types) {
      i.push(["typ", r]);
    }
    if ((e = ("" + e.keywords).replace(/^ | $/g, "")).length) {
      i.push(["kwd", RegExp("^(?:" + e.replace(/[\s,]+/g, "|") + ")\\b"), q]);
    }
    n.push(["pln", /^\s+/, q, " \r\n\tÂ "]);
    i.push(["lit", /^@[$_a-z][\w$@]*/i, q], ["typ", /^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/, q], ["pln", /^[$_a-z][\w$@]*/i, q], ["lit", /^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i, q, "0123456789"], ["pln", /^\\[\S\s]?/, q], ["pun", /^.[^\s\w"-$'./@\\`]*/, q]);
    return t(n, i);
  }
  function i(e, t) {
    function n(e) {
      switch (e.nodeType) {
        case 1:
          if (o.test(e.className)) {
            break;
          }
          if (e.nodeName === "BR") {
            i(e);
            if (e.parentNode) {
              e.parentNode.removeChild(e);
            }
          } else {
            for (e = e.firstChild; e; e = e.nextSibling) {
              n(e);
            }
          }
          break;
        case 3:
        case 4:
          if (l) {
            var t = e.nodeValue;
            var r = t.match(a);
            if (r) {
              var c = t.substring(0, r.index);
              e.nodeValue = c;
              if (t = t.substring(r.index + r[0].length)) {
                e.parentNode.insertBefore(s.createTextNode(t), e.nextSibling);
              }
              i(e);
              if (!c) {
                e.parentNode.removeChild(e);
              }
            }
          }
      }
    }
    function i(e) {
      for (; !e.nextSibling;) {
        if (!(e = e.parentNode)) {
          return;
        }
      }
      var t;
      for (e = function e(t, n) {
        var i = n ? t.cloneNode(false) : t;
        if (r = t.parentNode) {
          var r = e(r, 1);
          var o = t.nextSibling;
          r.appendChild(i);
          for (var a = o; a; a = o) {
            o = a.nextSibling;
            r.appendChild(a);
          }
        }
        return i;
      }(e.nextSibling, 0); (t = e.parentNode) && t.nodeType === 1;) {
        e = t;
      }
      c.push(e);
    }
    var r;
    var o = /(?:^|\s)nocode(?:\s|$)/;
    var a = /\r\n?|\n/;
    var s = e.ownerDocument;
    if (e.currentStyle) {
      r = e.currentStyle.whiteSpace;
    } else if (window.getComputedStyle) {
      r = s.defaultView.getComputedStyle(e, q).getPropertyValue("white-space");
    }
    var l = r && r.substring(0, 3) === "pre";
    for (r = s.createElement("LI"); e.firstChild;) {
      r.appendChild(e.firstChild);
    }
    for (var c = [r], u = 0; u < c.length; ++u) {
      n(c[u]);
    }
    if (t === (t | 0)) {
      c[0].setAttribute("value", t);
    }
    var d = s.createElement("OL");
    d.className = "linenums";
    for (var h = Math.max(0, t - 1 | 0) || 0, f = (u = 0, c.length); u < f; ++u) {
      (r = c[u]).className = "L" + (u + h) % 10;
      if (!r.firstChild) {
        r.appendChild(s.createTextNode("Â "));
      }
      d.appendChild(r);
    }
    e.appendChild(d);
  }
  function r(e, t) {
    for (var n = t.length; --n >= 0;) {
      var i = t[n];
      if (v.hasOwnProperty(i)) {
        if (window.console) {
          console.warn("cannot override language handler %s", i);
        }
      } else {
        v[i] = e;
      }
    }
  }
  function o(e, t) {
    if (!(e && v.hasOwnProperty(e))) {
      e = /^\s*</.test(t) ? "default-markup" : "default-code";
    }
    return v[e];
  }
  function a(e) {
    var t = e.g;
    try {
      var n = (c = function (e) {
        var t;
        var n = /(?:^|\s)nocode(?:\s|$)/;
        var i = [];
        var r = 0;
        var o = [];
        var a = 0;
        if (e.currentStyle) {
          t = e.currentStyle.whiteSpace;
        } else if (window.getComputedStyle) {
          t = document.defaultView.getComputedStyle(e, q).getPropertyValue("white-space");
        }
        var s = t && t.substring(0, 3) === "pre";
        (function e(t) {
          switch (t.nodeType) {
            case 1:
              if (n.test(t.className)) {
                break;
              }
              for (var l = t.firstChild; l; l = l.nextSibling) {
                e(l);
              }
              if (!((l = t.nodeName) !== "BR" && l !== "LI")) {
                i[a] = "\n";
                o[a << 1] = r++;
                o[a++ << 1 | 1] = t;
              }
              break;
            case 3:
            case 4:
              if ((l = t.nodeValue).length) {
                l = s ? l.replace(/\r\n?/g, "\n") : l.replace(/[\t\n\r ]+/g, " ");
                i[a] = l;
                o[a << 1] = r;
                r += l.length;
                o[a++ << 1 | 1] = t;
              }
          }
        })(e);
        return {
          a: i.join("").replace(/\n$/, ""),
          c: o
        };
      }(e.h)).a;
      e.a = n;
      e.c = c.c;
      e.d = 0;
      o(t, n)(e);
      var i;
      var r;
      var a = /\bMSIE\b/.test(navigator.userAgent);
      t = /\n/g;
      var s = e.a;
      var l = s.length;
      var c = 0;
      var u = e.c;
      var d = u.length;
      n = 0;
      var h = e.e;
      var f = h.length;
      e = 0;
      h[f] = l;
      r = i = 0;
      for (; r < f;) {
        if (h[r] !== h[r + 2]) {
          h[i++] = h[r++];
          h[i++] = h[r++];
        } else {
          r += 2;
        }
      }
      f = i;
      r = i = 0;
      for (; r < f;) {
        for (var p = h[r], g = h[r + 1], m = r + 2; m + 2 <= f && h[m + 1] === g;) {
          m += 2;
        }
        h[i++] = p;
        h[i++] = g;
        r = m;
      }
      for (h.length = i; n < d;) {
        var v;
        var y = u[n + 2] || l;
        var b = h[e + 2] || l;
        m = Math.min(y, b);
        var w = u[n + 1];
        if (w.nodeType !== 1 && (v = s.substring(c, m))) {
          if (a) {
            v = v.replace(t, "\r");
          }
          w.nodeValue = v;
          var x = w.ownerDocument;
          var _ = x.createElement("SPAN");
          _.className = h[e + 1];
          var C = w.parentNode;
          C.replaceChild(_, w);
          _.appendChild(w);
          if (c < y) {
            u[n + 1] = w = x.createTextNode(s.substring(m, y));
            C.insertBefore(w, _.nextSibling);
          }
        }
        if ((c = m) >= y) {
          n += 2;
        }
        if (c >= b) {
          e += 2;
        }
      }
    } catch (e) {
      if ("console" in window) {
        console.log(e && e.stack ? e.stack : e);
      }
    }
  }
  var s;
  var l;
  var c = [s = [[l = ["break,continue,do,else,for,if,return,while"], "auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"], "catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"], "alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"];
  var u = [s, "abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"];
  var d = [u, "as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"];
  var h = [l, "and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"];
  var f = [l, "alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"];
  var p = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/;
  var g = /\S/;
  var m = n({
    keywords: [c, d, s = [s, "debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"], "caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END" + h, f, l = [l, "case,done,elif,esac,eval,fi,function,in,local,set,then,until"]],
    hashComments: true,
    cStyleComments: true,
    multiLineStrings: true,
    regexLiterals: true
  });
  var v = {};
  r(m, ["default-code"]);
  r(t([], [["pln", /^[^<?]+/], ["dec", /^<!\w[^>]*(?:>|$)/], ["com", /^<\!--[\S\s]*?(?:--\>|$)/], ["lang-", /^<\?([\S\s]+?)(?:\?>|$)/], ["lang-", /^<%([\S\s]+?)(?:%>|$)/], ["pun", /^(?:<[%?]|[%?]>)/], ["lang-", /^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i], ["lang-js", /^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i], ["lang-css", /^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i], ["lang-in.tag", /^(<\/?[a-z][^<>]*>)/i]]), ["default-markup", "htm", "html", "mxml", "xhtml", "xml", "xsl"]);
  r(t([["pln", /^\s+/, q, " \t\r\n"], ["atv", /^(?:"[^"]*"?|'[^']*'?)/, q, "\"'"]], [["tag", /^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i], ["atn", /^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i], ["lang-uq.val", /^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/], ["pun", /^[/<->]+/], ["lang-js", /^on\w+\s*=\s*"([^"]+)"/i], ["lang-js", /^on\w+\s*=\s*'([^']+)'/i], ["lang-js", /^on\w+\s*=\s*([^\s"'>]+)/i], ["lang-css", /^style\s*=\s*"([^"]+)"/i], ["lang-css", /^style\s*=\s*'([^']+)'/i], ["lang-css", /^style\s*=\s*([^\s"'>]+)/i]]), ["in.tag"]);
  r(t([], [["atv", /^[\S\s]+/]]), ["uq.val"]);
  r(n({
    keywords: c,
    hashComments: true,
    cStyleComments: true,
    types: p
  }), ["c", "cc", "cpp", "cxx", "cyc", "m"]);
  r(n({
    keywords: "null,true,false"
  }), ["json"]);
  r(n({
    keywords: d,
    hashComments: true,
    cStyleComments: true,
    verbatimStrings: true,
    types: p
  }), ["cs"]);
  r(n({
    keywords: u,
    cStyleComments: true
  }), ["java"]);
  r(n({
    keywords: l,
    hashComments: true,
    multiLineStrings: true
  }), ["bsh", "csh", "sh"]);
  r(n({
    keywords: h,
    hashComments: true,
    multiLineStrings: true,
    tripleQuotedStrings: true
  }), ["cv", "py"]);
  r(n({
    keywords: "caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",
    hashComments: true,
    multiLineStrings: true,
    regexLiterals: true
  }), ["perl", "pl", "pm"]);
  r(n({
    keywords: f,
    hashComments: true,
    multiLineStrings: true,
    regexLiterals: true
  }), ["rb"]);
  r(n({
    keywords: s,
    cStyleComments: true,
    regexLiterals: true
  }), ["js"]);
  r(n({
    keywords: "all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes",
    hashComments: 3,
    cStyleComments: true,
    multilineStrings: true,
    tripleQuotedStrings: true,
    regexLiterals: true
  }), ["coffee"]);
  r(t([], [["str", /^[\S\s]+/]]), ["regex"]);
  window.prettyPrintOne = function (e, t, n) {
    var r = document.createElement("PRE");
    r.innerHTML = e;
    if (n) {
      i(r, n);
    }
    a({
      g: t,
      i: n,
      h: r
    });
    return r.innerHTML;
  };
  window.prettyPrint = function (e) {
    for (var t = [document.getElementsByTagName("pre"), document.getElementsByTagName("code"), document.getElementsByTagName("xmp")], n = [], r = 0; r < t.length; ++r) {
      for (var o = 0, s = t[r].length; o < s; ++o) {
        n.push(t[r][o]);
      }
    }
    t = q;
    var l = Date;
    if (!l.now) {
      l = {
        now: function () {
          return +new Date();
        }
      };
    }
    var c = 0;
    var u = /\blang(?:uage)?-([\w.]+)(?!\S)/;
    !function t() {
      for (var r = window.PR_SHOULD_USE_CONTINUATION ? l.now() + 250 : 1 / 0; c < n.length && l.now() < r; c++) {
        var o = n[c];
        if ((s = o.className).indexOf("prettyprint") >= 0) {
          var s;
          var d;
          var h;
          if (h = !(s = s.match(u))) {
            for (var f = undefined, p = (h = o).firstChild; p; p = p.nextSibling) {
              var m = p.nodeType;
              f = m === 1 ? f ? h : p : m === 3 && g.test(p.nodeValue) ? h : f;
            }
            h = (d = f === h ? undefined : f) && d.tagName === "CODE";
          }
          if (h) {
            s = d.className.match(u);
          }
          if (s) {
            s = s[1];
          }
          h = false;
          f = o.parentNode;
          for (; f; f = f.parentNode) {
            if ((f.tagName === "pre" || f.tagName === "code" || f.tagName === "xmp") && f.className && f.className.indexOf("prettyprint") >= 0) {
              h = true;
              break;
            }
          }
          if (!h) {
            if (h = !!(h = o.className.match(/\blinenums\b(?::(\d+))?/)) && (!h[1] || !h[1].length || +h[1])) {
              i(o, h);
            }
            a({
              g: s,
              h: o,
              i: h
            });
          }
        }
      }
      if (c < n.length) {
        setTimeout(t, 250);
      } else if (e) {
        e();
      }
    }();
  };
  window.PR = {
    createSimpleLexer: t,
    registerLangHandler: r,
    sourceDecorator: n,
    PR_ATTRIB_NAME: "atn",
    PR_ATTRIB_VALUE: "atv",
    PR_COMMENT: "com",
    PR_DECLARATION: "dec",
    PR_KEYWORD: "kwd",
    PR_LITERAL: "lit",
    PR_NOCODE: "nocode",
    PR_PLAIN: "pln",
    PR_PUNCTUATION: "pun",
    PR_SOURCE: "src",
    PR_STRING: "str",
    PR_TAG: "tag",
    PR_TYPE: "typ"
  };
})();
